/*! For license information please see feature.js.LICENSE.txt */
(() => {
  var t = {
      9669: (t, e, r) => {
        t.exports = r(1609);
      },
      5448: (t, e, r) => {
        "use strict";
        var n = r(4867),
          i = r(6026),
          o = r(4372),
          s = r(5327),
          a = r(4097),
          l = r(4109),
          u = r(7985),
          h = r(5061);
        t.exports = function(t) {
          return new Promise(function(e, r) {
            var c = t.data,
              p = t.headers,
              f = t.responseType;
            n.isFormData(c) && delete p["Content-Type"];
            var d = new XMLHttpRequest();
            if (t.auth) {
              var y = t.auth.username || "",
                g = t.auth.password
                  ? unescape(encodeURIComponent(t.auth.password))
                  : "";
              p.Authorization = "Basic " + btoa(y + ":" + g);
            }
            var m = a(t.baseURL, t.url);
            function v() {
              if (d) {
                var n =
                    "getAllResponseHeaders" in d
                      ? l(d.getAllResponseHeaders())
                      : null,
                  o = {
                    data:
                      f && "text" !== f && "json" !== f
                        ? d.response
                        : d.responseText,
                    status: d.status,
                    statusText: d.statusText,
                    headers: n,
                    config: t,
                    request: d
                  };
                i(e, r, o), (d = null);
              }
            }
            if (
              (d.open(
                t.method.toUpperCase(),
                s(m, t.params, t.paramsSerializer),
                !0
              ),
              (d.timeout = t.timeout),
              "onloadend" in d
                ? (d.onloadend = v)
                : (d.onreadystatechange = function() {
                    d &&
                      4 === d.readyState &&
                      (0 !== d.status ||
                        (d.responseURL &&
                          0 === d.responseURL.indexOf("file:"))) &&
                      setTimeout(v);
                  }),
              (d.onabort = function() {
                d &&
                  (r(h("Request aborted", t, "ECONNABORTED", d)), (d = null));
              }),
              (d.onerror = function() {
                r(h("Network Error", t, null, d)), (d = null);
              }),
              (d.ontimeout = function() {
                var e = "timeout of " + t.timeout + "ms exceeded";
                t.timeoutErrorMessage && (e = t.timeoutErrorMessage),
                  r(
                    h(
                      e,
                      t,
                      t.transitional && t.transitional.clarifyTimeoutError
                        ? "ETIMEDOUT"
                        : "ECONNABORTED",
                      d
                    )
                  ),
                  (d = null);
              }),
              n.isStandardBrowserEnv())
            ) {
              var _ =
                (t.withCredentials || u(m)) && t.xsrfCookieName
                  ? o.read(t.xsrfCookieName)
                  : void 0;
              _ && (p[t.xsrfHeaderName] = _);
            }
            "setRequestHeader" in d &&
              n.forEach(p, function(t, e) {
                void 0 === c && "content-type" === e.toLowerCase()
                  ? delete p[e]
                  : d.setRequestHeader(e, t);
              }),
              n.isUndefined(t.withCredentials) ||
                (d.withCredentials = !!t.withCredentials),
              f && "json" !== f && (d.responseType = t.responseType),
              "function" == typeof t.onDownloadProgress &&
                d.addEventListener("progress", t.onDownloadProgress),
              "function" == typeof t.onUploadProgress &&
                d.upload &&
                d.upload.addEventListener("progress", t.onUploadProgress),
              t.cancelToken &&
                t.cancelToken.promise.then(function(t) {
                  d && (d.abort(), r(t), (d = null));
                }),
              c || (c = null),
              d.send(c);
          });
        };
      },
      1609: (t, e, r) => {
        "use strict";
        var n = r(4867),
          i = r(1849),
          o = r(321),
          s = r(7185);
        function a(t) {
          var e = new o(t),
            r = i(o.prototype.request, e);
          return n.extend(r, o.prototype, e), n.extend(r, e), r;
        }
        var l = a(r(5655));
        (l.Axios = o),
          (l.create = function(t) {
            return a(s(l.defaults, t));
          }),
          (l.Cancel = r(5263)),
          (l.CancelToken = r(4972)),
          (l.isCancel = r(6502)),
          (l.all = function(t) {
            return Promise.all(t);
          }),
          (l.spread = r(8713)),
          (l.isAxiosError = r(6268)),
          (t.exports = l),
          (t.exports.default = l);
      },
      5263: t => {
        "use strict";
        function e(t) {
          this.message = t;
        }
        (e.prototype.toString = function() {
          return "Cancel" + (this.message ? ": " + this.message : "");
        }),
          (e.prototype.__CANCEL__ = !0),
          (t.exports = e);
      },
      4972: (t, e, r) => {
        "use strict";
        var n = r(5263);
        function i(t) {
          if ("function" != typeof t)
            throw new TypeError("executor must be a function.");
          var e;
          this.promise = new Promise(function(t) {
            e = t;
          });
          var r = this;
          t(function(t) {
            r.reason || ((r.reason = new n(t)), e(r.reason));
          });
        }
        (i.prototype.throwIfRequested = function() {
          if (this.reason) throw this.reason;
        }),
          (i.source = function() {
            var t;
            return {
              token: new i(function(e) {
                t = e;
              }),
              cancel: t
            };
          }),
          (t.exports = i);
      },
      6502: t => {
        "use strict";
        t.exports = function(t) {
          return !(!t || !t.__CANCEL__);
        };
      },
      321: (t, e, r) => {
        "use strict";
        var n = r(4867),
          i = r(5327),
          o = r(782),
          s = r(3572),
          a = r(7185),
          l = r(4875),
          u = l.validators;
        function h(t) {
          (this.defaults = t),
            (this.interceptors = { request: new o(), response: new o() });
        }
        (h.prototype.request = function(t) {
          "string" == typeof t
            ? ((t = arguments[1] || {}).url = arguments[0])
            : (t = t || {}),
            (t = a(this.defaults, t)).method
              ? (t.method = t.method.toLowerCase())
              : this.defaults.method
              ? (t.method = this.defaults.method.toLowerCase())
              : (t.method = "get");
          var e = t.transitional;
          void 0 !== e &&
            l.assertOptions(
              e,
              {
                silentJSONParsing: u.transitional(u.boolean, "1.0.0"),
                forcedJSONParsing: u.transitional(u.boolean, "1.0.0"),
                clarifyTimeoutError: u.transitional(u.boolean, "1.0.0")
              },
              !1
            );
          var r = [],
            n = !0;
          this.interceptors.request.forEach(function(e) {
            ("function" == typeof e.runWhen && !1 === e.runWhen(t)) ||
              ((n = n && e.synchronous), r.unshift(e.fulfilled, e.rejected));
          });
          var i,
            o = [];
          if (
            (this.interceptors.response.forEach(function(t) {
              o.push(t.fulfilled, t.rejected);
            }),
            !n)
          ) {
            var h = [s, void 0];
            for (
              Array.prototype.unshift.apply(h, r),
                h = h.concat(o),
                i = Promise.resolve(t);
              h.length;

            )
              i = i.then(h.shift(), h.shift());
            return i;
          }
          for (var c = t; r.length; ) {
            var p = r.shift(),
              f = r.shift();
            try {
              c = p(c);
            } catch (t) {
              f(t);
              break;
            }
          }
          try {
            i = s(c);
          } catch (t) {
            return Promise.reject(t);
          }
          for (; o.length; ) i = i.then(o.shift(), o.shift());
          return i;
        }),
          (h.prototype.getUri = function(t) {
            return (
              (t = a(this.defaults, t)),
              i(t.url, t.params, t.paramsSerializer).replace(/^\?/, "")
            );
          }),
          n.forEach(["delete", "get", "head", "options"], function(t) {
            h.prototype[t] = function(e, r) {
              return this.request(
                a(r || {}, { method: t, url: e, data: (r || {}).data })
              );
            };
          }),
          n.forEach(["post", "put", "patch"], function(t) {
            h.prototype[t] = function(e, r, n) {
              return this.request(a(n || {}, { method: t, url: e, data: r }));
            };
          }),
          (t.exports = h);
      },
      782: (t, e, r) => {
        "use strict";
        var n = r(4867);
        function i() {
          this.handlers = [];
        }
        (i.prototype.use = function(t, e, r) {
          return (
            this.handlers.push({
              fulfilled: t,
              rejected: e,
              synchronous: !!r && r.synchronous,
              runWhen: r ? r.runWhen : null
            }),
            this.handlers.length - 1
          );
        }),
          (i.prototype.eject = function(t) {
            this.handlers[t] && (this.handlers[t] = null);
          }),
          (i.prototype.forEach = function(t) {
            n.forEach(this.handlers, function(e) {
              null !== e && t(e);
            });
          }),
          (t.exports = i);
      },
      4097: (t, e, r) => {
        "use strict";
        var n = r(1793),
          i = r(7303);
        t.exports = function(t, e) {
          return t && !n(e) ? i(t, e) : e;
        };
      },
      5061: (t, e, r) => {
        "use strict";
        var n = r(481);
        t.exports = function(t, e, r, i, o) {
          var s = new Error(t);
          return n(s, e, r, i, o);
        };
      },
      3572: (t, e, r) => {
        "use strict";
        var n = r(4867),
          i = r(8527),
          o = r(6502),
          s = r(5655);
        function a(t) {
          t.cancelToken && t.cancelToken.throwIfRequested();
        }
        t.exports = function(t) {
          return (
            a(t),
            (t.headers = t.headers || {}),
            (t.data = i.call(t, t.data, t.headers, t.transformRequest)),
            (t.headers = n.merge(
              t.headers.common || {},
              t.headers[t.method] || {},
              t.headers
            )),
            n.forEach(
              ["delete", "get", "head", "post", "put", "patch", "common"],
              function(e) {
                delete t.headers[e];
              }
            ),
            (t.adapter || s.adapter)(t).then(
              function(e) {
                return (
                  a(t),
                  (e.data = i.call(t, e.data, e.headers, t.transformResponse)),
                  e
                );
              },
              function(e) {
                return (
                  o(e) ||
                    (a(t),
                    e &&
                      e.response &&
                      (e.response.data = i.call(
                        t,
                        e.response.data,
                        e.response.headers,
                        t.transformResponse
                      ))),
                  Promise.reject(e)
                );
              }
            )
          );
        };
      },
      481: t => {
        "use strict";
        t.exports = function(t, e, r, n, i) {
          return (
            (t.config = e),
            r && (t.code = r),
            (t.request = n),
            (t.response = i),
            (t.isAxiosError = !0),
            (t.toJSON = function() {
              return {
                message: this.message,
                name: this.name,
                description: this.description,
                number: this.number,
                fileName: this.fileName,
                lineNumber: this.lineNumber,
                columnNumber: this.columnNumber,
                stack: this.stack,
                config: this.config,
                code: this.code
              };
            }),
            t
          );
        };
      },
      7185: (t, e, r) => {
        "use strict";
        var n = r(4867);
        t.exports = function(t, e) {
          e = e || {};
          var r = {},
            i = ["url", "method", "data"],
            o = ["headers", "auth", "proxy", "params"],
            s = [
              "baseURL",
              "transformRequest",
              "transformResponse",
              "paramsSerializer",
              "timeout",
              "timeoutMessage",
              "withCredentials",
              "adapter",
              "responseType",
              "xsrfCookieName",
              "xsrfHeaderName",
              "onUploadProgress",
              "onDownloadProgress",
              "decompress",
              "maxContentLength",
              "maxBodyLength",
              "maxRedirects",
              "transport",
              "httpAgent",
              "httpsAgent",
              "cancelToken",
              "socketPath",
              "responseEncoding"
            ],
            a = ["validateStatus"];
          function l(t, e) {
            return n.isPlainObject(t) && n.isPlainObject(e)
              ? n.merge(t, e)
              : n.isPlainObject(e)
              ? n.merge({}, e)
              : n.isArray(e)
              ? e.slice()
              : e;
          }
          function u(i) {
            n.isUndefined(e[i])
              ? n.isUndefined(t[i]) || (r[i] = l(void 0, t[i]))
              : (r[i] = l(t[i], e[i]));
          }
          n.forEach(i, function(t) {
            n.isUndefined(e[t]) || (r[t] = l(void 0, e[t]));
          }),
            n.forEach(o, u),
            n.forEach(s, function(i) {
              n.isUndefined(e[i])
                ? n.isUndefined(t[i]) || (r[i] = l(void 0, t[i]))
                : (r[i] = l(void 0, e[i]));
            }),
            n.forEach(a, function(n) {
              n in e
                ? (r[n] = l(t[n], e[n]))
                : n in t && (r[n] = l(void 0, t[n]));
            });
          var h = i
              .concat(o)
              .concat(s)
              .concat(a),
            c = Object.keys(t)
              .concat(Object.keys(e))
              .filter(function(t) {
                return -1 === h.indexOf(t);
              });
          return n.forEach(c, u), r;
        };
      },
      6026: (t, e, r) => {
        "use strict";
        var n = r(5061);
        t.exports = function(t, e, r) {
          var i = r.config.validateStatus;
          r.status && i && !i(r.status)
            ? e(
                n(
                  "Request failed with status code " + r.status,
                  r.config,
                  null,
                  r.request,
                  r
                )
              )
            : t(r);
        };
      },
      8527: (t, e, r) => {
        "use strict";
        var n = r(4867),
          i = r(5655);
        t.exports = function(t, e, r) {
          var o = this || i;
          return (
            n.forEach(r, function(r) {
              t = r.call(o, t, e);
            }),
            t
          );
        };
      },
      5655: (t, e, r) => {
        "use strict";
        var n = r(4867),
          i = r(6016),
          o = r(481),
          s = { "Content-Type": "application/x-www-form-urlencoded" };
        function a(t, e) {
          !n.isUndefined(t) &&
            n.isUndefined(t["Content-Type"]) &&
            (t["Content-Type"] = e);
        }
        var l,
          u = {
            transitional: {
              silentJSONParsing: !0,
              forcedJSONParsing: !0,
              clarifyTimeoutError: !1
            },
            adapter:
              (("undefined" != typeof XMLHttpRequest ||
                ("undefined" != typeof process &&
                  "[object process]" ===
                    Object.prototype.toString.call(process))) &&
                (l = r(5448)),
              l),
            transformRequest: [
              function(t, e) {
                return (
                  i(e, "Accept"),
                  i(e, "Content-Type"),
                  n.isFormData(t) ||
                  n.isArrayBuffer(t) ||
                  n.isBuffer(t) ||
                  n.isStream(t) ||
                  n.isFile(t) ||
                  n.isBlob(t)
                    ? t
                    : n.isArrayBufferView(t)
                    ? t.buffer
                    : n.isURLSearchParams(t)
                    ? (a(e, "application/x-www-form-urlencoded;charset=utf-8"),
                      t.toString())
                    : n.isObject(t) ||
                      (e && "application/json" === e["Content-Type"])
                    ? (a(e, "application/json"),
                      (function(t, e, r) {
                        if (n.isString(t))
                          try {
                            return (0, JSON.parse)(t), n.trim(t);
                          } catch (t) {
                            if ("SyntaxError" !== t.name) throw t;
                          }
                        return (0, JSON.stringify)(t);
                      })(t))
                    : t
                );
              }
            ],
            transformResponse: [
              function(t) {
                var e = this.transitional,
                  r = e && e.silentJSONParsing,
                  i = e && e.forcedJSONParsing,
                  s = !r && "json" === this.responseType;
                if (s || (i && n.isString(t) && t.length))
                  try {
                    return JSON.parse(t);
                  } catch (t) {
                    if (s) {
                      if ("SyntaxError" === t.name)
                        throw o(t, this, "E_JSON_PARSE");
                      throw t;
                    }
                  }
                return t;
              }
            ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            validateStatus: function(t) {
              return t >= 200 && t < 300;
            },
            headers: { common: { Accept: "application/json, text/plain, */*" } }
          };
        n.forEach(["delete", "get", "head"], function(t) {
          u.headers[t] = {};
        }),
          n.forEach(["post", "put", "patch"], function(t) {
            u.headers[t] = n.merge(s);
          }),
          (t.exports = u);
      },
      1849: t => {
        "use strict";
        t.exports = function(t, e) {
          return function() {
            for (var r = new Array(arguments.length), n = 0; n < r.length; n++)
              r[n] = arguments[n];
            return t.apply(e, r);
          };
        };
      },
      5327: (t, e, r) => {
        "use strict";
        var n = r(4867);
        function i(t) {
          return encodeURIComponent(t)
            .replace(/%3A/gi, ":")
            .replace(/%24/g, "$")
            .replace(/%2C/gi, ",")
            .replace(/%20/g, "+")
            .replace(/%5B/gi, "[")
            .replace(/%5D/gi, "]");
        }
        t.exports = function(t, e, r) {
          if (!e) return t;
          var o;
          if (r) o = r(e);
          else if (n.isURLSearchParams(e)) o = e.toString();
          else {
            var s = [];
            n.forEach(e, function(t, e) {
              null != t &&
                (n.isArray(t) ? (e += "[]") : (t = [t]),
                n.forEach(t, function(t) {
                  n.isDate(t)
                    ? (t = t.toISOString())
                    : n.isObject(t) && (t = JSON.stringify(t)),
                    s.push(i(e) + "=" + i(t));
                }));
            }),
              (o = s.join("&"));
          }
          if (o) {
            var a = t.indexOf("#");
            -1 !== a && (t = t.slice(0, a)),
              (t += (-1 === t.indexOf("?") ? "?" : "&") + o);
          }
          return t;
        };
      },
      7303: t => {
        "use strict";
        t.exports = function(t, e) {
          return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t;
        };
      },
      4372: (t, e, r) => {
        "use strict";
        var n = r(4867);
        t.exports = n.isStandardBrowserEnv()
          ? {
              write: function(t, e, r, i, o, s) {
                var a = [];
                a.push(t + "=" + encodeURIComponent(e)),
                  n.isNumber(r) &&
                    a.push("expires=" + new Date(r).toGMTString()),
                  n.isString(i) && a.push("path=" + i),
                  n.isString(o) && a.push("domain=" + o),
                  !0 === s && a.push("secure"),
                  (document.cookie = a.join("; "));
              },
              read: function(t) {
                var e = document.cookie.match(
                  new RegExp("(^|;\\s*)(" + t + ")=([^;]*)")
                );
                return e ? decodeURIComponent(e[3]) : null;
              },
              remove: function(t) {
                this.write(t, "", Date.now() - 864e5);
              }
            }
          : {
              write: function() {},
              read: function() {
                return null;
              },
              remove: function() {}
            };
      },
      1793: t => {
        "use strict";
        t.exports = function(t) {
          return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t);
        };
      },
      6268: t => {
        "use strict";
        t.exports = function(t) {
          return "object" == typeof t && !0 === t.isAxiosError;
        };
      },
      7985: (t, e, r) => {
        "use strict";
        var n = r(4867);
        t.exports = n.isStandardBrowserEnv()
          ? (function() {
              var t,
                e = /(msie|trident)/i.test(navigator.userAgent),
                r = document.createElement("a");
              function i(t) {
                var n = t;
                return (
                  e && (r.setAttribute("href", n), (n = r.href)),
                  r.setAttribute("href", n),
                  {
                    href: r.href,
                    protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                    host: r.host,
                    search: r.search ? r.search.replace(/^\?/, "") : "",
                    hash: r.hash ? r.hash.replace(/^#/, "") : "",
                    hostname: r.hostname,
                    port: r.port,
                    pathname:
                      "/" === r.pathname.charAt(0)
                        ? r.pathname
                        : "/" + r.pathname
                  }
                );
              }
              return (
                (t = i(window.location.href)),
                function(e) {
                  var r = n.isString(e) ? i(e) : e;
                  return r.protocol === t.protocol && r.host === t.host;
                }
              );
            })()
          : function() {
              return !0;
            };
      },
      6016: (t, e, r) => {
        "use strict";
        var n = r(4867);
        t.exports = function(t, e) {
          n.forEach(t, function(r, n) {
            n !== e &&
              n.toUpperCase() === e.toUpperCase() &&
              ((t[e] = r), delete t[n]);
          });
        };
      },
      4109: (t, e, r) => {
        "use strict";
        var n = r(4867),
          i = [
            "age",
            "authorization",
            "content-length",
            "content-type",
            "etag",
            "expires",
            "from",
            "host",
            "if-modified-since",
            "if-unmodified-since",
            "last-modified",
            "location",
            "max-forwards",
            "proxy-authorization",
            "referer",
            "retry-after",
            "user-agent"
          ];
        t.exports = function(t) {
          var e,
            r,
            o,
            s = {};
          return t
            ? (n.forEach(t.split("\n"), function(t) {
                if (
                  ((o = t.indexOf(":")),
                  (e = n.trim(t.substr(0, o)).toLowerCase()),
                  (r = n.trim(t.substr(o + 1))),
                  e)
                ) {
                  if (s[e] && i.indexOf(e) >= 0) return;
                  s[e] =
                    "set-cookie" === e
                      ? (s[e] ? s[e] : []).concat([r])
                      : s[e]
                      ? s[e] + ", " + r
                      : r;
                }
              }),
              s)
            : s;
        };
      },
      8713: t => {
        "use strict";
        t.exports = function(t) {
          return function(e) {
            return t.apply(null, e);
          };
        };
      },
      4875: (t, e, r) => {
        "use strict";
        var n = r(8593),
          i = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach(
          function(t, e) {
            i[t] = function(r) {
              return typeof r === t || "a" + (e < 1 ? "n " : " ") + t;
            };
          }
        );
        var o = {},
          s = n.version.split(".");
        function a(t, e) {
          for (
            var r = e ? e.split(".") : s, n = t.split("."), i = 0;
            i < 3;
            i++
          ) {
            if (r[i] > n[i]) return !0;
            if (r[i] < n[i]) return !1;
          }
          return !1;
        }
        (i.transitional = function(t, e, r) {
          var i = e && a(e);
          function s(t, e) {
            return (
              "[Axios v" +
              n.version +
              "] Transitional option '" +
              t +
              "'" +
              e +
              (r ? ". " + r : "")
            );
          }
          return function(r, n, a) {
            if (!1 === t) throw new Error(s(n, " has been removed in " + e));
            return (
              i &&
                !o[n] &&
                ((o[n] = !0),
                console.warn(
                  s(
                    n,
                    " has been deprecated since v" +
                      e +
                      " and will be removed in the near future"
                  )
                )),
              !t || t(r, n, a)
            );
          };
        }),
          (t.exports = {
            isOlderVersion: a,
            assertOptions: function(t, e, r) {
              if ("object" != typeof t)
                throw new TypeError("options must be an object");
              for (var n = Object.keys(t), i = n.length; i-- > 0; ) {
                var o = n[i],
                  s = e[o];
                if (s) {
                  var a = t[o],
                    l = void 0 === a || s(a, o, t);
                  if (!0 !== l)
                    throw new TypeError("option " + o + " must be " + l);
                } else if (!0 !== r) throw Error("Unknown option " + o);
              }
            },
            validators: i
          });
      },
      4867: (t, e, r) => {
        "use strict";
        var n = r(1849),
          i = Object.prototype.toString;
        function o(t) {
          return "[object Array]" === i.call(t);
        }
        function s(t) {
          return void 0 === t;
        }
        function a(t) {
          return null !== t && "object" == typeof t;
        }
        function l(t) {
          if ("[object Object]" !== i.call(t)) return !1;
          var e = Object.getPrototypeOf(t);
          return null === e || e === Object.prototype;
        }
        function u(t) {
          return "[object Function]" === i.call(t);
        }
        function h(t, e) {
          if (null != t)
            if (("object" != typeof t && (t = [t]), o(t)))
              for (var r = 0, n = t.length; r < n; r++)
                e.call(null, t[r], r, t);
            else
              for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) &&
                  e.call(null, t[i], i, t);
        }
        t.exports = {
          isArray: o,
          isArrayBuffer: function(t) {
            return "[object ArrayBuffer]" === i.call(t);
          },
          isBuffer: function(t) {
            return (
              null !== t &&
              !s(t) &&
              null !== t.constructor &&
              !s(t.constructor) &&
              "function" == typeof t.constructor.isBuffer &&
              t.constructor.isBuffer(t)
            );
          },
          isFormData: function(t) {
            return "undefined" != typeof FormData && t instanceof FormData;
          },
          isArrayBufferView: function(t) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
              ? ArrayBuffer.isView(t)
              : t && t.buffer && t.buffer instanceof ArrayBuffer;
          },
          isString: function(t) {
            return "string" == typeof t;
          },
          isNumber: function(t) {
            return "number" == typeof t;
          },
          isObject: a,
          isPlainObject: l,
          isUndefined: s,
          isDate: function(t) {
            return "[object Date]" === i.call(t);
          },
          isFile: function(t) {
            return "[object File]" === i.call(t);
          },
          isBlob: function(t) {
            return "[object Blob]" === i.call(t);
          },
          isFunction: u,
          isStream: function(t) {
            return a(t) && u(t.pipe);
          },
          isURLSearchParams: function(t) {
            return (
              "undefined" != typeof URLSearchParams &&
              t instanceof URLSearchParams
            );
          },
          isStandardBrowserEnv: function() {
            return (
              ("undefined" == typeof navigator ||
                ("ReactNative" !== navigator.product &&
                  "NativeScript" !== navigator.product &&
                  "NS" !== navigator.product)) &&
              "undefined" != typeof window &&
              "undefined" != typeof document
            );
          },
          forEach: h,
          merge: function t() {
            var e = {};
            function r(r, n) {
              l(e[n]) && l(r)
                ? (e[n] = t(e[n], r))
                : l(r)
                ? (e[n] = t({}, r))
                : o(r)
                ? (e[n] = r.slice())
                : (e[n] = r);
            }
            for (var n = 0, i = arguments.length; n < i; n++)
              h(arguments[n], r);
            return e;
          },
          extend: function(t, e, r) {
            return (
              h(e, function(e, i) {
                t[i] = r && "function" == typeof e ? n(e, r) : e;
              }),
              t
            );
          },
          trim: function(t) {
            return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "");
          },
          stripBOM: function(t) {
            return 65279 === t.charCodeAt(0) && (t = t.slice(1)), t;
          }
        };
      },
      1924: (t, e, r) => {
        "use strict";
        var n = r(210),
          i = r(5559),
          o = i(n("String.prototype.indexOf"));
        t.exports = function(t, e) {
          var r = n(t, !!e);
          return "function" == typeof r && o(t, ".prototype.") > -1 ? i(r) : r;
        };
      },
      5559: (t, e, r) => {
        "use strict";
        var n = r(8612),
          i = r(210),
          o = i("%Function.prototype.apply%"),
          s = i("%Function.prototype.call%"),
          a = i("%Reflect.apply%", !0) || n.call(s, o),
          l = i("%Object.getOwnPropertyDescriptor%", !0),
          u = i("%Object.defineProperty%", !0),
          h = i("%Math.max%");
        if (u)
          try {
            u({}, "a", { value: 1 });
          } catch (t) {
            u = null;
          }
        t.exports = function(t) {
          var e = a(n, s, arguments);
          if (l && u) {
            var r = l(e, "length");
            r.configurable &&
              u(e, "length", {
                value: 1 + h(0, t.length - (arguments.length - 1))
              });
          }
          return e;
        };
        var c = function() {
          return a(n, o, arguments);
        };
        u ? u(t.exports, "apply", { value: c }) : (t.exports.apply = c);
      },
      7648: t => {
        "use strict";
        var e = "Function.prototype.bind called on incompatible ",
          r = Array.prototype.slice,
          n = Object.prototype.toString,
          i = "[object Function]";
        t.exports = function(t) {
          var o = this;
          if ("function" != typeof o || n.call(o) !== i)
            throw new TypeError(e + o);
          for (
            var s,
              a = r.call(arguments, 1),
              l = function() {
                if (this instanceof s) {
                  var e = o.apply(this, a.concat(r.call(arguments)));
                  return Object(e) === e ? e : this;
                }
                return o.apply(t, a.concat(r.call(arguments)));
              },
              u = Math.max(0, o.length - a.length),
              h = [],
              c = 0;
            c < u;
            c++
          )
            h.push("$" + c);
          if (
            ((s = Function(
              "binder",
              "return function (" +
                h.join(",") +
                "){ return binder.apply(this,arguments); }"
            )(l)),
            o.prototype)
          ) {
            var p = function() {};
            (p.prototype = o.prototype),
              (s.prototype = new p()),
              (p.prototype = null);
          }
          return s;
        };
      },
      8612: (t, e, r) => {
        "use strict";
        var n = r(7648);
        t.exports = Function.prototype.bind || n;
      },
      210: (t, e, r) => {
        "use strict";
        var n,
          i = SyntaxError,
          o = Function,
          s = TypeError,
          a = function(t) {
            try {
              return o('"use strict"; return (' + t + ").constructor;")();
            } catch (t) {}
          },
          l = Object.getOwnPropertyDescriptor;
        if (l)
          try {
            l({}, "");
          } catch (t) {
            l = null;
          }
        var u = function() {
            throw new s();
          },
          h = l
            ? (function() {
                try {
                  return u;
                } catch (t) {
                  try {
                    return l(arguments, "callee").get;
                  } catch (t) {
                    return u;
                  }
                }
              })()
            : u,
          c = r(1405)(),
          p =
            Object.getPrototypeOf ||
            function(t) {
              return t.__proto__;
            },
          f = {},
          d = "undefined" == typeof Uint8Array ? n : p(Uint8Array),
          y = {
            "%AggregateError%":
              "undefined" == typeof AggregateError ? n : AggregateError,
            "%Array%": Array,
            "%ArrayBuffer%":
              "undefined" == typeof ArrayBuffer ? n : ArrayBuffer,
            "%ArrayIteratorPrototype%": c ? p([][Symbol.iterator]()) : n,
            "%AsyncFromSyncIteratorPrototype%": n,
            "%AsyncFunction%": f,
            "%AsyncGenerator%": f,
            "%AsyncGeneratorFunction%": f,
            "%AsyncIteratorPrototype%": f,
            "%Atomics%": "undefined" == typeof Atomics ? n : Atomics,
            "%BigInt%": "undefined" == typeof BigInt ? n : BigInt,
            "%Boolean%": Boolean,
            "%DataView%": "undefined" == typeof DataView ? n : DataView,
            "%Date%": Date,
            "%decodeURI%": decodeURI,
            "%decodeURIComponent%": decodeURIComponent,
            "%encodeURI%": encodeURI,
            "%encodeURIComponent%": encodeURIComponent,
            "%Error%": Error,
            "%eval%": eval,
            "%EvalError%": EvalError,
            "%Float32Array%":
              "undefined" == typeof Float32Array ? n : Float32Array,
            "%Float64Array%":
              "undefined" == typeof Float64Array ? n : Float64Array,
            "%FinalizationRegistry%":
              "undefined" == typeof FinalizationRegistry
                ? n
                : FinalizationRegistry,
            "%Function%": o,
            "%GeneratorFunction%": f,
            "%Int8Array%": "undefined" == typeof Int8Array ? n : Int8Array,
            "%Int16Array%": "undefined" == typeof Int16Array ? n : Int16Array,
            "%Int32Array%": "undefined" == typeof Int32Array ? n : Int32Array,
            "%isFinite%": isFinite,
            "%isNaN%": isNaN,
            "%IteratorPrototype%": c ? p(p([][Symbol.iterator]())) : n,
            "%JSON%": "object" == typeof JSON ? JSON : n,
            "%Map%": "undefined" == typeof Map ? n : Map,
            "%MapIteratorPrototype%":
              "undefined" != typeof Map && c
                ? p(new Map()[Symbol.iterator]())
                : n,
            "%Math%": Math,
            "%Number%": Number,
            "%Object%": Object,
            "%parseFloat%": parseFloat,
            "%parseInt%": parseInt,
            "%Promise%": "undefined" == typeof Promise ? n : Promise,
            "%Proxy%": "undefined" == typeof Proxy ? n : Proxy,
            "%RangeError%": RangeError,
            "%ReferenceError%": ReferenceError,
            "%Reflect%": "undefined" == typeof Reflect ? n : Reflect,
            "%RegExp%": RegExp,
            "%Set%": "undefined" == typeof Set ? n : Set,
            "%SetIteratorPrototype%":
              "undefined" != typeof Set && c
                ? p(new Set()[Symbol.iterator]())
                : n,
            "%SharedArrayBuffer%":
              "undefined" == typeof SharedArrayBuffer ? n : SharedArrayBuffer,
            "%String%": String,
            "%StringIteratorPrototype%": c ? p(""[Symbol.iterator]()) : n,
            "%Symbol%": c ? Symbol : n,
            "%SyntaxError%": i,
            "%ThrowTypeError%": h,
            "%TypedArray%": d,
            "%TypeError%": s,
            "%Uint8Array%": "undefined" == typeof Uint8Array ? n : Uint8Array,
            "%Uint8ClampedArray%":
              "undefined" == typeof Uint8ClampedArray ? n : Uint8ClampedArray,
            "%Uint16Array%":
              "undefined" == typeof Uint16Array ? n : Uint16Array,
            "%Uint32Array%":
              "undefined" == typeof Uint32Array ? n : Uint32Array,
            "%URIError%": URIError,
            "%WeakMap%": "undefined" == typeof WeakMap ? n : WeakMap,
            "%WeakRef%": "undefined" == typeof WeakRef ? n : WeakRef,
            "%WeakSet%": "undefined" == typeof WeakSet ? n : WeakSet
          },
          g = function t(e) {
            var r;
            if ("%AsyncFunction%" === e) r = a("async function () {}");
            else if ("%GeneratorFunction%" === e) r = a("function* () {}");
            else if ("%AsyncGeneratorFunction%" === e)
              r = a("async function* () {}");
            else if ("%AsyncGenerator%" === e) {
              var n = t("%AsyncGeneratorFunction%");
              n && (r = n.prototype);
            } else if ("%AsyncIteratorPrototype%" === e) {
              var i = t("%AsyncGenerator%");
              i && (r = p(i.prototype));
            }
            return (y[e] = r), r;
          },
          m = {
            "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
            "%ArrayPrototype%": ["Array", "prototype"],
            "%ArrayProto_entries%": ["Array", "prototype", "entries"],
            "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
            "%ArrayProto_keys%": ["Array", "prototype", "keys"],
            "%ArrayProto_values%": ["Array", "prototype", "values"],
            "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
            "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
            "%AsyncGeneratorPrototype%": [
              "AsyncGeneratorFunction",
              "prototype",
              "prototype"
            ],
            "%BooleanPrototype%": ["Boolean", "prototype"],
            "%DataViewPrototype%": ["DataView", "prototype"],
            "%DatePrototype%": ["Date", "prototype"],
            "%ErrorPrototype%": ["Error", "prototype"],
            "%EvalErrorPrototype%": ["EvalError", "prototype"],
            "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
            "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
            "%FunctionPrototype%": ["Function", "prototype"],
            "%Generator%": ["GeneratorFunction", "prototype"],
            "%GeneratorPrototype%": [
              "GeneratorFunction",
              "prototype",
              "prototype"
            ],
            "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
            "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
            "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
            "%JSONParse%": ["JSON", "parse"],
            "%JSONStringify%": ["JSON", "stringify"],
            "%MapPrototype%": ["Map", "prototype"],
            "%NumberPrototype%": ["Number", "prototype"],
            "%ObjectPrototype%": ["Object", "prototype"],
            "%ObjProto_toString%": ["Object", "prototype", "toString"],
            "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
            "%PromisePrototype%": ["Promise", "prototype"],
            "%PromiseProto_then%": ["Promise", "prototype", "then"],
            "%Promise_all%": ["Promise", "all"],
            "%Promise_reject%": ["Promise", "reject"],
            "%Promise_resolve%": ["Promise", "resolve"],
            "%RangeErrorPrototype%": ["RangeError", "prototype"],
            "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
            "%RegExpPrototype%": ["RegExp", "prototype"],
            "%SetPrototype%": ["Set", "prototype"],
            "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
            "%StringPrototype%": ["String", "prototype"],
            "%SymbolPrototype%": ["Symbol", "prototype"],
            "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
            "%TypedArrayPrototype%": ["TypedArray", "prototype"],
            "%TypeErrorPrototype%": ["TypeError", "prototype"],
            "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
            "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
            "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
            "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
            "%URIErrorPrototype%": ["URIError", "prototype"],
            "%WeakMapPrototype%": ["WeakMap", "prototype"],
            "%WeakSetPrototype%": ["WeakSet", "prototype"]
          },
          v = r(8612),
          _ = r(7642),
          x = v.call(Function.call, Array.prototype.concat),
          b = v.call(Function.apply, Array.prototype.splice),
          S = v.call(Function.call, String.prototype.replace),
          I = v.call(Function.call, String.prototype.slice),
          w = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
          N = /\\(\\)?/g,
          C = function(t) {
            var e = I(t, 0, 1),
              r = I(t, -1);
            if ("%" === e && "%" !== r)
              throw new i("invalid intrinsic syntax, expected closing `%`");
            if ("%" === r && "%" !== e)
              throw new i("invalid intrinsic syntax, expected opening `%`");
            var n = [];
            return (
              S(t, w, function(t, e, r, i) {
                n[n.length] = r ? S(i, N, "$1") : e || t;
              }),
              n
            );
          },
          E = function(t, e) {
            var r,
              n = t;
            if ((_(m, n) && (n = "%" + (r = m[n])[0] + "%"), _(y, n))) {
              var o = y[n];
              if ((o === f && (o = g(n)), void 0 === o && !e))
                throw new s(
                  "intrinsic " +
                    t +
                    " exists, but is not available. Please file an issue!"
                );
              return { alias: r, name: n, value: o };
            }
            throw new i("intrinsic " + t + " does not exist!");
          };
        t.exports = function(t, e) {
          if ("string" != typeof t || 0 === t.length)
            throw new s("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && "boolean" != typeof e)
            throw new s('"allowMissing" argument must be a boolean');
          var r = C(t),
            n = r.length > 0 ? r[0] : "",
            o = E("%" + n + "%", e),
            a = o.name,
            u = o.value,
            h = !1,
            c = o.alias;
          c && ((n = c[0]), b(r, x([0, 1], c)));
          for (var p = 1, f = !0; p < r.length; p += 1) {
            var d = r[p],
              g = I(d, 0, 1),
              m = I(d, -1);
            if (
              ('"' === g ||
                "'" === g ||
                "`" === g ||
                '"' === m ||
                "'" === m ||
                "`" === m) &&
              g !== m
            )
              throw new i(
                "property names with quotes must have matching quotes"
              );
            if (
              (("constructor" !== d && f) || (h = !0),
              _(y, (a = "%" + (n += "." + d) + "%")))
            )
              u = y[a];
            else if (null != u) {
              if (!(d in u)) {
                if (!e)
                  throw new s(
                    "base intrinsic for " +
                      t +
                      " exists, but the property is not available."
                  );
                return;
              }
              if (l && p + 1 >= r.length) {
                var v = l(u, d);
                u =
                  (f = !!v) && "get" in v && !("originalValue" in v.get)
                    ? v.get
                    : u[d];
              } else (f = _(u, d)), (u = u[d]);
              f && !h && (y[a] = u);
            }
          }
          return u;
        };
      },
      1405: (t, e, r) => {
        "use strict";
        var n = "undefined" != typeof Symbol && Symbol,
          i = r(5419);
        t.exports = function() {
          return (
            "function" == typeof n &&
            "function" == typeof Symbol &&
            "symbol" == typeof n("foo") &&
            "symbol" == typeof Symbol("bar") &&
            i()
          );
        };
      },
      5419: t => {
        "use strict";
        t.exports = function() {
          if (
            "function" != typeof Symbol ||
            "function" != typeof Object.getOwnPropertySymbols
          )
            return !1;
          if ("symbol" == typeof Symbol.iterator) return !0;
          var t = {},
            e = Symbol("test"),
            r = Object(e);
          if ("string" == typeof e) return !1;
          if ("[object Symbol]" !== Object.prototype.toString.call(e))
            return !1;
          if ("[object Symbol]" !== Object.prototype.toString.call(r))
            return !1;
          for (e in ((t[e] = 42), t)) return !1;
          if ("function" == typeof Object.keys && 0 !== Object.keys(t).length)
            return !1;
          if (
            "function" == typeof Object.getOwnPropertyNames &&
            0 !== Object.getOwnPropertyNames(t).length
          )
            return !1;
          var n = Object.getOwnPropertySymbols(t);
          if (1 !== n.length || n[0] !== e) return !1;
          if (!Object.prototype.propertyIsEnumerable.call(t, e)) return !1;
          if ("function" == typeof Object.getOwnPropertyDescriptor) {
            var i = Object.getOwnPropertyDescriptor(t, e);
            if (42 !== i.value || !0 !== i.enumerable) return !1;
          }
          return !0;
        };
      },
      7642: (t, e, r) => {
        "use strict";
        var n = r(8612);
        t.exports = n.call(Function.call, Object.prototype.hasOwnProperty);
      },
      631: (t, e, r) => {
        var n = "function" == typeof Map && Map.prototype,
          i =
            Object.getOwnPropertyDescriptor && n
              ? Object.getOwnPropertyDescriptor(Map.prototype, "size")
              : null,
          o = n && i && "function" == typeof i.get ? i.get : null,
          s = n && Map.prototype.forEach,
          a = "function" == typeof Set && Set.prototype,
          l =
            Object.getOwnPropertyDescriptor && a
              ? Object.getOwnPropertyDescriptor(Set.prototype, "size")
              : null,
          u = a && l && "function" == typeof l.get ? l.get : null,
          h = a && Set.prototype.forEach,
          c =
            "function" == typeof WeakMap && WeakMap.prototype
              ? WeakMap.prototype.has
              : null,
          p =
            "function" == typeof WeakSet && WeakSet.prototype
              ? WeakSet.prototype.has
              : null,
          f =
            "function" == typeof WeakRef && WeakRef.prototype
              ? WeakRef.prototype.deref
              : null,
          d = Boolean.prototype.valueOf,
          y = Object.prototype.toString,
          g = Function.prototype.toString,
          m = String.prototype.match,
          v = "function" == typeof BigInt ? BigInt.prototype.valueOf : null,
          _ = Object.getOwnPropertySymbols,
          x =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? Symbol.prototype.toString
              : null,
          b = "function" == typeof Symbol && "object" == typeof Symbol.iterator,
          S = Object.prototype.propertyIsEnumerable,
          I =
            ("function" == typeof Reflect
              ? Reflect.getPrototypeOf
              : Object.getPrototypeOf) ||
            ([].__proto__ === Array.prototype
              ? function(t) {
                  return t.__proto__;
                }
              : null),
          w = r(4654).custom,
          N = w && O(w) ? w : null,
          C =
            "function" == typeof Symbol && void 0 !== Symbol.toStringTag
              ? Symbol.toStringTag
              : null;
        function E(t, e, r) {
          var n = "double" === (r.quoteStyle || e) ? '"' : "'";
          return n + t + n;
        }
        function M(t) {
          return String(t).replace(/"/g, "&quot;");
        }
        function P(t) {
          return !(
            "[object Array]" !== A(t) ||
            (C && "object" == typeof t && C in t)
          );
        }
        function O(t) {
          if (b) return t && "object" == typeof t && t instanceof Symbol;
          if ("symbol" == typeof t) return !0;
          if (!t || "object" != typeof t || !x) return !1;
          try {
            return x.call(t), !0;
          } catch (t) {}
          return !1;
        }
        t.exports = function t(e, r, n, i) {
          var a = r || {};
          if (
            T(a, "quoteStyle") &&
            "single" !== a.quoteStyle &&
            "double" !== a.quoteStyle
          )
            throw new TypeError(
              'option "quoteStyle" must be "single" or "double"'
            );
          if (
            T(a, "maxStringLength") &&
            ("number" == typeof a.maxStringLength
              ? a.maxStringLength < 0 && a.maxStringLength !== 1 / 0
              : null !== a.maxStringLength)
          )
            throw new TypeError(
              'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`'
            );
          var l = !T(a, "customInspect") || a.customInspect;
          if ("boolean" != typeof l && "symbol" !== l)
            throw new TypeError(
              "option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`"
            );
          if (
            T(a, "indent") &&
            null !== a.indent &&
            "\t" !== a.indent &&
            !(parseInt(a.indent, 10) === a.indent && a.indent > 0)
          )
            throw new TypeError(
              'options "indent" must be "\\t", an integer > 0, or `null`'
            );
          if (void 0 === e) return "undefined";
          if (null === e) return "null";
          if ("boolean" == typeof e) return e ? "true" : "false";
          if ("string" == typeof e) return F(e, a);
          if ("number" == typeof e)
            return 0 === e ? (1 / 0 / e > 0 ? "0" : "-0") : String(e);
          if ("bigint" == typeof e) return String(e) + "n";
          var y = void 0 === a.depth ? 5 : a.depth;
          if (
            (void 0 === n && (n = 0), n >= y && y > 0 && "object" == typeof e)
          )
            return P(e) ? "[Array]" : "[Object]";
          var _,
            S = (function(t, e) {
              var r;
              if ("\t" === t.indent) r = "\t";
              else {
                if (!("number" == typeof t.indent && t.indent > 0)) return null;
                r = Array(t.indent + 1).join(" ");
              }
              return { base: r, prev: Array(e + 1).join(r) };
            })(a, n);
          if (void 0 === i) i = [];
          else if (R(i, e) >= 0) return "[Circular]";
          function w(e, r, o) {
            if ((r && (i = i.slice()).push(r), o)) {
              var s = { depth: a.depth };
              return (
                T(a, "quoteStyle") && (s.quoteStyle = a.quoteStyle),
                t(e, s, n + 1, i)
              );
            }
            return t(e, a, n + 1, i);
          }
          if ("function" == typeof e) {
            var L = (function(t) {
                if (t.name) return t.name;
                var e = m.call(g.call(t), /^function\s*([\w$]+)/);
                return e ? e[1] : null;
              })(e),
              D = k(e, w);
            return (
              "[Function" +
              (L ? ": " + L : " (anonymous)") +
              "]" +
              (D.length > 0 ? " { " + D.join(", ") + " }" : "")
            );
          }
          if (O(e)) {
            var q = b
              ? String(e).replace(/^(Symbol\(.*\))_[^)]*$/, "$1")
              : x.call(e);
            return "object" != typeof e || b ? q : j(q);
          }
          if (
            (_ = e) &&
            "object" == typeof _ &&
            (("undefined" != typeof HTMLElement && _ instanceof HTMLElement) ||
              ("string" == typeof _.nodeName &&
                "function" == typeof _.getAttribute))
          ) {
            for (
              var z = "<" + String(e.nodeName).toLowerCase(),
                V = e.attributes || [],
                W = 0;
              W < V.length;
              W++
            )
              z += " " + V[W].name + "=" + E(M(V[W].value), "double", a);
            return (
              (z += ">"),
              e.childNodes && e.childNodes.length && (z += "..."),
              z + "</" + String(e.nodeName).toLowerCase() + ">"
            );
          }
          if (P(e)) {
            if (0 === e.length) return "[]";
            var X = k(e, w);
            return S &&
              !(function(t) {
                for (var e = 0; e < t.length; e++)
                  if (R(t[e], "\n") >= 0) return !1;
                return !0;
              })(X)
              ? "[" + B(X, S) + "]"
              : "[ " + X.join(", ") + " ]";
          }
          if (
            (function(t) {
              return !(
                "[object Error]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          ) {
            var Y = k(e, w);
            return 0 === Y.length
              ? "[" + String(e) + "]"
              : "{ [" + String(e) + "] " + Y.join(", ") + " }";
          }
          if ("object" == typeof e && l) {
            if (N && "function" == typeof e[N]) return e[N]();
            if ("symbol" !== l && "function" == typeof e.inspect)
              return e.inspect();
          }
          if (
            (function(t) {
              if (!o || !t || "object" != typeof t) return !1;
              try {
                o.call(t);
                try {
                  u.call(t);
                } catch (t) {
                  return !0;
                }
                return t instanceof Map;
              } catch (t) {}
              return !1;
            })(e)
          ) {
            var H = [];
            return (
              s.call(e, function(t, r) {
                H.push(w(r, e, !0) + " => " + w(t, e));
              }),
              G("Map", o.call(e), H, S)
            );
          }
          if (
            (function(t) {
              if (!u || !t || "object" != typeof t) return !1;
              try {
                u.call(t);
                try {
                  o.call(t);
                } catch (t) {
                  return !0;
                }
                return t instanceof Set;
              } catch (t) {}
              return !1;
            })(e)
          ) {
            var J = [];
            return (
              h.call(e, function(t) {
                J.push(w(t, e));
              }),
              G("Set", u.call(e), J, S)
            );
          }
          if (
            (function(t) {
              if (!c || !t || "object" != typeof t) return !1;
              try {
                c.call(t, c);
                try {
                  p.call(t, p);
                } catch (t) {
                  return !0;
                }
                return t instanceof WeakMap;
              } catch (t) {}
              return !1;
            })(e)
          )
            return U("WeakMap");
          if (
            (function(t) {
              if (!p || !t || "object" != typeof t) return !1;
              try {
                p.call(t, p);
                try {
                  c.call(t, c);
                } catch (t) {
                  return !0;
                }
                return t instanceof WeakSet;
              } catch (t) {}
              return !1;
            })(e)
          )
            return U("WeakSet");
          if (
            (function(t) {
              if (!f || !t || "object" != typeof t) return !1;
              try {
                return f.call(t), !0;
              } catch (t) {}
              return !1;
            })(e)
          )
            return U("WeakRef");
          if (
            (function(t) {
              return !(
                "[object Number]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          )
            return j(w(Number(e)));
          if (
            (function(t) {
              if (!t || "object" != typeof t || !v) return !1;
              try {
                return v.call(t), !0;
              } catch (t) {}
              return !1;
            })(e)
          )
            return j(w(v.call(e)));
          if (
            (function(t) {
              return !(
                "[object Boolean]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          )
            return j(d.call(e));
          if (
            (function(t) {
              return !(
                "[object String]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          )
            return j(w(String(e)));
          if (
            !(function(t) {
              return !(
                "[object Date]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e) &&
            !(function(t) {
              return !(
                "[object RegExp]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          ) {
            var $ = k(e, w),
              Q = I
                ? I(e) === Object.prototype
                : e instanceof Object || e.constructor === Object,
              Z = e instanceof Object ? "" : "null prototype",
              K =
                !Q && C && Object(e) === e && C in e
                  ? A(e).slice(8, -1)
                  : Z
                  ? "Object"
                  : "",
              tt =
                (Q || "function" != typeof e.constructor
                  ? ""
                  : e.constructor.name
                  ? e.constructor.name + " "
                  : "") +
                (K || Z
                  ? "[" + [].concat(K || [], Z || []).join(": ") + "] "
                  : "");
            return 0 === $.length
              ? tt + "{}"
              : S
              ? tt + "{" + B($, S) + "}"
              : tt + "{ " + $.join(", ") + " }";
          }
          return String(e);
        };
        var L =
          Object.prototype.hasOwnProperty ||
          function(t) {
            return t in this;
          };
        function T(t, e) {
          return L.call(t, e);
        }
        function A(t) {
          return y.call(t);
        }
        function R(t, e) {
          if (t.indexOf) return t.indexOf(e);
          for (var r = 0, n = t.length; r < n; r++) if (t[r] === e) return r;
          return -1;
        }
        function F(t, e) {
          if (t.length > e.maxStringLength) {
            var r = t.length - e.maxStringLength,
              n = "... " + r + " more character" + (r > 1 ? "s" : "");
            return F(t.slice(0, e.maxStringLength), e) + n;
          }
          return E(
            t.replace(/(['\\])/g, "\\$1").replace(/[\x00-\x1f]/g, D),
            "single",
            e
          );
        }
        function D(t) {
          var e = t.charCodeAt(0),
            r = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[e];
          return r
            ? "\\" + r
            : "\\x" + (e < 16 ? "0" : "") + e.toString(16).toUpperCase();
        }
        function j(t) {
          return "Object(" + t + ")";
        }
        function U(t) {
          return t + " { ? }";
        }
        function G(t, e, r, n) {
          return t + " (" + e + ") {" + (n ? B(r, n) : r.join(", ")) + "}";
        }
        function B(t, e) {
          if (0 === t.length) return "";
          var r = "\n" + e.prev + e.base;
          return r + t.join("," + r) + "\n" + e.prev;
        }
        function k(t, e) {
          var r = P(t),
            n = [];
          if (r) {
            n.length = t.length;
            for (var i = 0; i < t.length; i++) n[i] = T(t, i) ? e(t[i], t) : "";
          }
          var o,
            s = "function" == typeof _ ? _(t) : [];
          if (b) {
            o = {};
            for (var a = 0; a < s.length; a++) o["$" + s[a]] = s[a];
          }
          for (var l in t)
            T(t, l) &&
              ((r && String(Number(l)) === l && l < t.length) ||
                (b && o["$" + l] instanceof Symbol) ||
                (/[^\w$]/.test(l)
                  ? n.push(e(l, t) + ": " + e(t[l], t))
                  : n.push(l + ": " + e(t[l], t))));
          if ("function" == typeof _)
            for (var u = 0; u < s.length; u++)
              S.call(t, s[u]) && n.push("[" + e(s[u]) + "]: " + e(t[s[u]], t));
          return n;
        }
      },
      5798: t => {
        "use strict";
        var e = String.prototype.replace,
          r = /%20/g,
          n = "RFC3986";
        t.exports = {
          default: n,
          formatters: {
            RFC1738: function(t) {
              return e.call(t, r, "+");
            },
            RFC3986: function(t) {
              return String(t);
            }
          },
          RFC1738: "RFC1738",
          RFC3986: n
        };
      },
      129: (t, e, r) => {
        "use strict";
        var n = r(8261),
          i = r(5235),
          o = r(5798);
        t.exports = { formats: o, parse: i, stringify: n };
      },
      5235: (t, e, r) => {
        "use strict";
        var n = r(2769),
          i = Object.prototype.hasOwnProperty,
          o = Array.isArray,
          s = {
            allowDots: !1,
            allowPrototypes: !1,
            allowSparse: !1,
            arrayLimit: 20,
            charset: "utf-8",
            charsetSentinel: !1,
            comma: !1,
            decoder: n.decode,
            delimiter: "&",
            depth: 5,
            ignoreQueryPrefix: !1,
            interpretNumericEntities: !1,
            parameterLimit: 1e3,
            parseArrays: !0,
            plainObjects: !1,
            strictNullHandling: !1
          },
          a = function(t) {
            return t.replace(/&#(\d+);/g, function(t, e) {
              return String.fromCharCode(parseInt(e, 10));
            });
          },
          l = function(t, e) {
            return t && "string" == typeof t && e.comma && t.indexOf(",") > -1
              ? t.split(",")
              : t;
          },
          u = function(t, e, r, n) {
            if (t) {
              var o = r.allowDots ? t.replace(/\.([^.[]+)/g, "[$1]") : t,
                s = /(\[[^[\]]*])/g,
                a = r.depth > 0 && /(\[[^[\]]*])/.exec(o),
                u = a ? o.slice(0, a.index) : o,
                h = [];
              if (u) {
                if (
                  !r.plainObjects &&
                  i.call(Object.prototype, u) &&
                  !r.allowPrototypes
                )
                  return;
                h.push(u);
              }
              for (
                var c = 0;
                r.depth > 0 && null !== (a = s.exec(o)) && c < r.depth;

              ) {
                if (
                  ((c += 1),
                  !r.plainObjects &&
                    i.call(Object.prototype, a[1].slice(1, -1)) &&
                    !r.allowPrototypes)
                )
                  return;
                h.push(a[1]);
              }
              return (
                a && h.push("[" + o.slice(a.index) + "]"),
                (function(t, e, r, n) {
                  for (var i = n ? e : l(e, r), o = t.length - 1; o >= 0; --o) {
                    var s,
                      a = t[o];
                    if ("[]" === a && r.parseArrays) s = [].concat(i);
                    else {
                      s = r.plainObjects ? Object.create(null) : {};
                      var u =
                          "[" === a.charAt(0) && "]" === a.charAt(a.length - 1)
                            ? a.slice(1, -1)
                            : a,
                        h = parseInt(u, 10);
                      r.parseArrays || "" !== u
                        ? !isNaN(h) &&
                          a !== u &&
                          String(h) === u &&
                          h >= 0 &&
                          r.parseArrays &&
                          h <= r.arrayLimit
                          ? ((s = [])[h] = i)
                          : (s[u] = i)
                        : (s = { 0: i });
                    }
                    i = s;
                  }
                  return i;
                })(h, e, r, n)
              );
            }
          };
        t.exports = function(t, e) {
          var r = (function(t) {
            if (!t) return s;
            if (
              null !== t.decoder &&
              void 0 !== t.decoder &&
              "function" != typeof t.decoder
            )
              throw new TypeError("Decoder has to be a function.");
            if (
              void 0 !== t.charset &&
              "utf-8" !== t.charset &&
              "iso-8859-1" !== t.charset
            )
              throw new TypeError(
                "The charset option must be either utf-8, iso-8859-1, or undefined"
              );
            var e = void 0 === t.charset ? s.charset : t.charset;
            return {
              allowDots: void 0 === t.allowDots ? s.allowDots : !!t.allowDots,
              allowPrototypes:
                "boolean" == typeof t.allowPrototypes
                  ? t.allowPrototypes
                  : s.allowPrototypes,
              allowSparse:
                "boolean" == typeof t.allowSparse
                  ? t.allowSparse
                  : s.allowSparse,
              arrayLimit:
                "number" == typeof t.arrayLimit ? t.arrayLimit : s.arrayLimit,
              charset: e,
              charsetSentinel:
                "boolean" == typeof t.charsetSentinel
                  ? t.charsetSentinel
                  : s.charsetSentinel,
              comma: "boolean" == typeof t.comma ? t.comma : s.comma,
              decoder: "function" == typeof t.decoder ? t.decoder : s.decoder,
              delimiter:
                "string" == typeof t.delimiter || n.isRegExp(t.delimiter)
                  ? t.delimiter
                  : s.delimiter,
              depth:
                "number" == typeof t.depth || !1 === t.depth
                  ? +t.depth
                  : s.depth,
              ignoreQueryPrefix: !0 === t.ignoreQueryPrefix,
              interpretNumericEntities:
                "boolean" == typeof t.interpretNumericEntities
                  ? t.interpretNumericEntities
                  : s.interpretNumericEntities,
              parameterLimit:
                "number" == typeof t.parameterLimit
                  ? t.parameterLimit
                  : s.parameterLimit,
              parseArrays: !1 !== t.parseArrays,
              plainObjects:
                "boolean" == typeof t.plainObjects
                  ? t.plainObjects
                  : s.plainObjects,
              strictNullHandling:
                "boolean" == typeof t.strictNullHandling
                  ? t.strictNullHandling
                  : s.strictNullHandling
            };
          })(e);
          if ("" === t || null == t)
            return r.plainObjects ? Object.create(null) : {};
          for (
            var h =
                "string" == typeof t
                  ? (function(t, e) {
                      var r,
                        u = {},
                        h = e.ignoreQueryPrefix ? t.replace(/^\?/, "") : t,
                        c =
                          e.parameterLimit === 1 / 0
                            ? void 0
                            : e.parameterLimit,
                        p = h.split(e.delimiter, c),
                        f = -1,
                        d = e.charset;
                      if (e.charsetSentinel)
                        for (r = 0; r < p.length; ++r)
                          0 === p[r].indexOf("utf8=") &&
                            ("utf8=%E2%9C%93" === p[r]
                              ? (d = "utf-8")
                              : "utf8=%26%2310003%3B" === p[r] &&
                                (d = "iso-8859-1"),
                            (f = r),
                            (r = p.length));
                      for (r = 0; r < p.length; ++r)
                        if (r !== f) {
                          var y,
                            g,
                            m = p[r],
                            v = m.indexOf("]="),
                            _ = -1 === v ? m.indexOf("=") : v + 1;
                          -1 === _
                            ? ((y = e.decoder(m, s.decoder, d, "key")),
                              (g = e.strictNullHandling ? null : ""))
                            : ((y = e.decoder(
                                m.slice(0, _),
                                s.decoder,
                                d,
                                "key"
                              )),
                              (g = n.maybeMap(l(m.slice(_ + 1), e), function(
                                t
                              ) {
                                return e.decoder(t, s.decoder, d, "value");
                              }))),
                            g &&
                              e.interpretNumericEntities &&
                              "iso-8859-1" === d &&
                              (g = a(g)),
                            m.indexOf("[]=") > -1 && (g = o(g) ? [g] : g),
                            i.call(u, y)
                              ? (u[y] = n.combine(u[y], g))
                              : (u[y] = g);
                        }
                      return u;
                    })(t, r)
                  : t,
              c = r.plainObjects ? Object.create(null) : {},
              p = Object.keys(h),
              f = 0;
            f < p.length;
            ++f
          ) {
            var d = p[f],
              y = u(d, h[d], r, "string" == typeof t);
            c = n.merge(c, y, r);
          }
          return !0 === r.allowSparse ? c : n.compact(c);
        };
      },
      8261: (t, e, r) => {
        "use strict";
        var n = r(7478),
          i = r(2769),
          o = r(5798),
          s = Object.prototype.hasOwnProperty,
          a = {
            brackets: function(t) {
              return t + "[]";
            },
            comma: "comma",
            indices: function(t, e) {
              return t + "[" + e + "]";
            },
            repeat: function(t) {
              return t;
            }
          },
          l = Array.isArray,
          u = Array.prototype.push,
          h = function(t, e) {
            u.apply(t, l(e) ? e : [e]);
          },
          c = Date.prototype.toISOString,
          p = o.default,
          f = {
            addQueryPrefix: !1,
            allowDots: !1,
            charset: "utf-8",
            charsetSentinel: !1,
            delimiter: "&",
            encode: !0,
            encoder: i.encode,
            encodeValuesOnly: !1,
            format: p,
            formatter: o.formatters[p],
            indices: !1,
            serializeDate: function(t) {
              return c.call(t);
            },
            skipNulls: !1,
            strictNullHandling: !1
          },
          d = function t(e, r, o, s, a, u, c, p, d, y, g, m, v, _, x) {
            var b,
              S = e;
            if (x.has(e)) throw new RangeError("Cyclic object value");
            if (
              ("function" == typeof c
                ? (S = c(r, S))
                : S instanceof Date
                ? (S = y(S))
                : "comma" === o &&
                  l(S) &&
                  (S = i.maybeMap(S, function(t) {
                    return t instanceof Date ? y(t) : t;
                  })),
              null === S)
            ) {
              if (s) return u && !v ? u(r, f.encoder, _, "key", g) : r;
              S = "";
            }
            if (
              "string" == typeof (b = S) ||
              "number" == typeof b ||
              "boolean" == typeof b ||
              "symbol" == typeof b ||
              "bigint" == typeof b ||
              i.isBuffer(S)
            )
              return u
                ? [
                    m(v ? r : u(r, f.encoder, _, "key", g)) +
                      "=" +
                      m(u(S, f.encoder, _, "value", g))
                  ]
                : [m(r) + "=" + m(String(S))];
            var I,
              w = [];
            if (void 0 === S) return w;
            if ("comma" === o && l(S))
              I = [{ value: S.length > 0 ? S.join(",") || null : void 0 }];
            else if (l(c)) I = c;
            else {
              var N = Object.keys(S);
              I = p ? N.sort(p) : N;
            }
            for (var C = 0; C < I.length; ++C) {
              var E = I[C],
                M = "object" == typeof E && void 0 !== E.value ? E.value : S[E];
              if (!a || null !== M) {
                var P = l(S)
                  ? "function" == typeof o
                    ? o(r, E)
                    : r
                  : r + (d ? "." + E : "[" + E + "]");
                x.set(e, !0);
                var O = n();
                h(w, t(M, P, o, s, a, u, c, p, d, y, g, m, v, _, O));
              }
            }
            return w;
          };
        t.exports = function(t, e) {
          var r,
            i = t,
            u = (function(t) {
              if (!t) return f;
              if (
                null !== t.encoder &&
                void 0 !== t.encoder &&
                "function" != typeof t.encoder
              )
                throw new TypeError("Encoder has to be a function.");
              var e = t.charset || f.charset;
              if (
                void 0 !== t.charset &&
                "utf-8" !== t.charset &&
                "iso-8859-1" !== t.charset
              )
                throw new TypeError(
                  "The charset option must be either utf-8, iso-8859-1, or undefined"
                );
              var r = o.default;
              if (void 0 !== t.format) {
                if (!s.call(o.formatters, t.format))
                  throw new TypeError("Unknown format option provided.");
                r = t.format;
              }
              var n = o.formatters[r],
                i = f.filter;
              return (
                ("function" == typeof t.filter || l(t.filter)) &&
                  (i = t.filter),
                {
                  addQueryPrefix:
                    "boolean" == typeof t.addQueryPrefix
                      ? t.addQueryPrefix
                      : f.addQueryPrefix,
                  allowDots:
                    void 0 === t.allowDots ? f.allowDots : !!t.allowDots,
                  charset: e,
                  charsetSentinel:
                    "boolean" == typeof t.charsetSentinel
                      ? t.charsetSentinel
                      : f.charsetSentinel,
                  delimiter: void 0 === t.delimiter ? f.delimiter : t.delimiter,
                  encode: "boolean" == typeof t.encode ? t.encode : f.encode,
                  encoder:
                    "function" == typeof t.encoder ? t.encoder : f.encoder,
                  encodeValuesOnly:
                    "boolean" == typeof t.encodeValuesOnly
                      ? t.encodeValuesOnly
                      : f.encodeValuesOnly,
                  filter: i,
                  format: r,
                  formatter: n,
                  serializeDate:
                    "function" == typeof t.serializeDate
                      ? t.serializeDate
                      : f.serializeDate,
                  skipNulls:
                    "boolean" == typeof t.skipNulls ? t.skipNulls : f.skipNulls,
                  sort: "function" == typeof t.sort ? t.sort : null,
                  strictNullHandling:
                    "boolean" == typeof t.strictNullHandling
                      ? t.strictNullHandling
                      : f.strictNullHandling
                }
              );
            })(e);
          "function" == typeof u.filter
            ? (i = (0, u.filter)("", i))
            : l(u.filter) && (r = u.filter);
          var c,
            p = [];
          if ("object" != typeof i || null === i) return "";
          c =
            e && e.arrayFormat in a
              ? e.arrayFormat
              : e && "indices" in e
              ? e.indices
                ? "indices"
                : "repeat"
              : "indices";
          var y = a[c];
          r || (r = Object.keys(i)), u.sort && r.sort(u.sort);
          for (var g = n(), m = 0; m < r.length; ++m) {
            var v = r[m];
            (u.skipNulls && null === i[v]) ||
              h(
                p,
                d(
                  i[v],
                  v,
                  y,
                  u.strictNullHandling,
                  u.skipNulls,
                  u.encode ? u.encoder : null,
                  u.filter,
                  u.sort,
                  u.allowDots,
                  u.serializeDate,
                  u.format,
                  u.formatter,
                  u.encodeValuesOnly,
                  u.charset,
                  g
                )
              );
          }
          var _ = p.join(u.delimiter),
            x = !0 === u.addQueryPrefix ? "?" : "";
          return (
            u.charsetSentinel &&
              ("iso-8859-1" === u.charset
                ? (x += "utf8=%26%2310003%3B&")
                : (x += "utf8=%E2%9C%93&")),
            _.length > 0 ? x + _ : ""
          );
        };
      },
      2769: (t, e, r) => {
        "use strict";
        var n = r(5798),
          i = Object.prototype.hasOwnProperty,
          o = Array.isArray,
          s = (function() {
            for (var t = [], e = 0; e < 256; ++e)
              t.push(
                "%" + ((e < 16 ? "0" : "") + e.toString(16)).toUpperCase()
              );
            return t;
          })(),
          a = function(t, e) {
            for (
              var r = e && e.plainObjects ? Object.create(null) : {}, n = 0;
              n < t.length;
              ++n
            )
              void 0 !== t[n] && (r[n] = t[n]);
            return r;
          };
        t.exports = {
          arrayToObject: a,
          assign: function(t, e) {
            return Object.keys(e).reduce(function(t, r) {
              return (t[r] = e[r]), t;
            }, t);
          },
          combine: function(t, e) {
            return [].concat(t, e);
          },
          compact: function(t) {
            for (
              var e = [{ obj: { o: t }, prop: "o" }], r = [], n = 0;
              n < e.length;
              ++n
            )
              for (
                var i = e[n], s = i.obj[i.prop], a = Object.keys(s), l = 0;
                l < a.length;
                ++l
              ) {
                var u = a[l],
                  h = s[u];
                "object" == typeof h &&
                  null !== h &&
                  -1 === r.indexOf(h) &&
                  (e.push({ obj: s, prop: u }), r.push(h));
              }
            return (
              (function(t) {
                for (; t.length > 1; ) {
                  var e = t.pop(),
                    r = e.obj[e.prop];
                  if (o(r)) {
                    for (var n = [], i = 0; i < r.length; ++i)
                      void 0 !== r[i] && n.push(r[i]);
                    e.obj[e.prop] = n;
                  }
                }
              })(e),
              t
            );
          },
          decode: function(t, e, r) {
            var n = t.replace(/\+/g, " ");
            if ("iso-8859-1" === r)
              return n.replace(/%[0-9a-f]{2}/gi, unescape);
            try {
              return decodeURIComponent(n);
            } catch (t) {
              return n;
            }
          },
          encode: function(t, e, r, i, o) {
            if (0 === t.length) return t;
            var a = t;
            if (
              ("symbol" == typeof t
                ? (a = Symbol.prototype.toString.call(t))
                : "string" != typeof t && (a = String(t)),
              "iso-8859-1" === r)
            )
              return escape(a).replace(/%u[0-9a-f]{4}/gi, function(t) {
                return "%26%23" + parseInt(t.slice(2), 16) + "%3B";
              });
            for (var l = "", u = 0; u < a.length; ++u) {
              var h = a.charCodeAt(u);
              45 === h ||
              46 === h ||
              95 === h ||
              126 === h ||
              (h >= 48 && h <= 57) ||
              (h >= 65 && h <= 90) ||
              (h >= 97 && h <= 122) ||
              (o === n.RFC1738 && (40 === h || 41 === h))
                ? (l += a.charAt(u))
                : h < 128
                ? (l += s[h])
                : h < 2048
                ? (l += s[192 | (h >> 6)] + s[128 | (63 & h)])
                : h < 55296 || h >= 57344
                ? (l +=
                    s[224 | (h >> 12)] +
                    s[128 | ((h >> 6) & 63)] +
                    s[128 | (63 & h)])
                : ((u += 1),
                  (h = 65536 + (((1023 & h) << 10) | (1023 & a.charCodeAt(u)))),
                  (l +=
                    s[240 | (h >> 18)] +
                    s[128 | ((h >> 12) & 63)] +
                    s[128 | ((h >> 6) & 63)] +
                    s[128 | (63 & h)]));
            }
            return l;
          },
          isBuffer: function(t) {
            return !(
              !t ||
              "object" != typeof t ||
              !(
                t.constructor &&
                t.constructor.isBuffer &&
                t.constructor.isBuffer(t)
              )
            );
          },
          isRegExp: function(t) {
            return "[object RegExp]" === Object.prototype.toString.call(t);
          },
          maybeMap: function(t, e) {
            if (o(t)) {
              for (var r = [], n = 0; n < t.length; n += 1) r.push(e(t[n]));
              return r;
            }
            return e(t);
          },
          merge: function t(e, r, n) {
            if (!r) return e;
            if ("object" != typeof r) {
              if (o(e)) e.push(r);
              else {
                if (!e || "object" != typeof e) return [e, r];
                ((n && (n.plainObjects || n.allowPrototypes)) ||
                  !i.call(Object.prototype, r)) &&
                  (e[r] = !0);
              }
              return e;
            }
            if (!e || "object" != typeof e) return [e].concat(r);
            var s = e;
            return (
              o(e) && !o(r) && (s = a(e, n)),
              o(e) && o(r)
                ? (r.forEach(function(r, o) {
                    if (i.call(e, o)) {
                      var s = e[o];
                      s && "object" == typeof s && r && "object" == typeof r
                        ? (e[o] = t(s, r, n))
                        : e.push(r);
                    } else e[o] = r;
                  }),
                  e)
                : Object.keys(r).reduce(function(e, o) {
                    var s = r[o];
                    return (
                      i.call(e, o) ? (e[o] = t(e[o], s, n)) : (e[o] = s), e
                    );
                  }, s)
            );
          }
        };
      },
      7478: (t, e, r) => {
        "use strict";
        var n = r(210),
          i = r(1924),
          o = r(631),
          s = n("%TypeError%"),
          a = n("%WeakMap%", !0),
          l = n("%Map%", !0),
          u = i("WeakMap.prototype.get", !0),
          h = i("WeakMap.prototype.set", !0),
          c = i("WeakMap.prototype.has", !0),
          p = i("Map.prototype.get", !0),
          f = i("Map.prototype.set", !0),
          d = i("Map.prototype.has", !0),
          y = function(t, e) {
            for (var r, n = t; null !== (r = n.next); n = r)
              if (r.key === e)
                return (n.next = r.next), (r.next = t.next), (t.next = r), r;
          };
        t.exports = function() {
          var t,
            e,
            r,
            n = {
              assert: function(t) {
                if (!n.has(t))
                  throw new s("Side channel does not contain " + o(t));
              },
              get: function(n) {
                if (
                  a &&
                  n &&
                  ("object" == typeof n || "function" == typeof n)
                ) {
                  if (t) return u(t, n);
                } else if (l) {
                  if (e) return p(e, n);
                } else if (r)
                  return (function(t, e) {
                    var r = y(t, e);
                    return r && r.value;
                  })(r, n);
              },
              has: function(n) {
                if (
                  a &&
                  n &&
                  ("object" == typeof n || "function" == typeof n)
                ) {
                  if (t) return c(t, n);
                } else if (l) {
                  if (e) return d(e, n);
                } else if (r)
                  return (function(t, e) {
                    return !!y(t, e);
                  })(r, n);
                return !1;
              },
              set: function(n, i) {
                a && n && ("object" == typeof n || "function" == typeof n)
                  ? (t || (t = new a()), h(t, n, i))
                  : l
                  ? (e || (e = new l()), f(e, n, i))
                  : (r || (r = { key: {}, next: null }),
                    (function(t, e, r) {
                      var n = y(t, e);
                      n
                        ? (n.value = r)
                        : (t.next = { key: e, next: t.next, value: r });
                    })(r, n, i));
              }
            };
          return n;
        };
      },
      3997: (t, e, r) => {
        t.exports = r(7596);
      },
      7230: (t, e, r) => {
        "use strict";
        var n = r(9055),
          i = r(849),
          o = r(9161),
          s = r(7631),
          a = r(3329),
          l = r(7552);
        t.exports = function(t) {
          return new Promise(function(e, u) {
            var h = t.data,
              c = t.headers;
            n.isFormData(h) && delete c["Content-Type"];
            var p = new XMLHttpRequest();
            if (t.auth) {
              var f = t.auth.username || "",
                d = t.auth.password || "";
              c.Authorization = "Basic " + btoa(f + ":" + d);
            }
            if (
              (p.open(
                t.method.toUpperCase(),
                o(t.url, t.params, t.paramsSerializer),
                !0
              ),
              (p.timeout = t.timeout),
              (p.onreadystatechange = function() {
                if (
                  p &&
                  4 === p.readyState &&
                  (0 !== p.status ||
                    (p.responseURL && 0 === p.responseURL.indexOf("file:")))
                ) {
                  var r =
                      "getAllResponseHeaders" in p
                        ? s(p.getAllResponseHeaders())
                        : null,
                    n = {
                      data:
                        t.responseType && "text" !== t.responseType
                          ? p.response
                          : p.responseText,
                      status: p.status,
                      statusText: p.statusText,
                      headers: r,
                      config: t,
                      request: p
                    };
                  i(e, u, n), (p = null);
                }
              }),
              (p.onerror = function() {
                u(l("Network Error", t, null, p)), (p = null);
              }),
              (p.ontimeout = function() {
                u(
                  l(
                    "timeout of " + t.timeout + "ms exceeded",
                    t,
                    "ECONNABORTED",
                    p
                  )
                ),
                  (p = null);
              }),
              n.isStandardBrowserEnv())
            ) {
              var y = r(649),
                g =
                  (t.withCredentials || a(t.url)) && t.xsrfCookieName
                    ? y.read(t.xsrfCookieName)
                    : void 0;
              g && (c[t.xsrfHeaderName] = g);
            }
            if (
              ("setRequestHeader" in p &&
                n.forEach(c, function(t, e) {
                  void 0 === h && "content-type" === e.toLowerCase()
                    ? delete c[e]
                    : p.setRequestHeader(e, t);
                }),
              t.withCredentials && (p.withCredentials = !0),
              t.responseType)
            )
              try {
                p.responseType = t.responseType;
              } catch (e) {
                if ("json" !== t.responseType) throw e;
              }
            "function" == typeof t.onDownloadProgress &&
              p.addEventListener("progress", t.onDownloadProgress),
              "function" == typeof t.onUploadProgress &&
                p.upload &&
                p.upload.addEventListener("progress", t.onUploadProgress),
              t.cancelToken &&
                t.cancelToken.promise.then(function(t) {
                  p && (p.abort(), u(t), (p = null));
                }),
              void 0 === h && (h = null),
              p.send(h);
          });
        };
      },
      7596: (t, e, r) => {
        "use strict";
        var n = r(9055),
          i = r(5035),
          o = r(1540),
          s = r(1318);
        function a(t) {
          var e = new o(t),
            r = i(o.prototype.request, e);
          return n.extend(r, o.prototype, e), n.extend(r, e), r;
        }
        var l = a(s);
        (l.Axios = o),
          (l.create = function(t) {
            return a(n.merge(s, t));
          }),
          (l.Cancel = r(6402)),
          (l.CancelToken = r(655)),
          (l.isCancel = r(5643)),
          (l.all = function(t) {
            return Promise.all(t);
          }),
          (l.spread = r(9534)),
          (t.exports = l),
          (t.exports.default = l);
      },
      6402: t => {
        "use strict";
        function e(t) {
          this.message = t;
        }
        (e.prototype.toString = function() {
          return "Cancel" + (this.message ? ": " + this.message : "");
        }),
          (e.prototype.__CANCEL__ = !0),
          (t.exports = e);
      },
      655: (t, e, r) => {
        "use strict";
        var n = r(6402);
        function i(t) {
          if ("function" != typeof t)
            throw new TypeError("executor must be a function.");
          var e;
          this.promise = new Promise(function(t) {
            e = t;
          });
          var r = this;
          t(function(t) {
            r.reason || ((r.reason = new n(t)), e(r.reason));
          });
        }
        (i.prototype.throwIfRequested = function() {
          if (this.reason) throw this.reason;
        }),
          (i.source = function() {
            var t;
            return {
              token: new i(function(e) {
                t = e;
              }),
              cancel: t
            };
          }),
          (t.exports = i);
      },
      5643: t => {
        "use strict";
        t.exports = function(t) {
          return !(!t || !t.__CANCEL__);
        };
      },
      1540: (t, e, r) => {
        "use strict";
        var n = r(1318),
          i = r(9055),
          o = r(8354),
          s = r(4621);
        function a(t) {
          (this.defaults = t),
            (this.interceptors = { request: new o(), response: new o() });
        }
        (a.prototype.request = function(t) {
          "string" == typeof t &&
            (t = i.merge({ url: arguments[0] }, arguments[1])),
            ((t = i.merge(
              n,
              { method: "get" },
              this.defaults,
              t
            )).method = t.method.toLowerCase());
          var e = [s, void 0],
            r = Promise.resolve(t);
          for (
            this.interceptors.request.forEach(function(t) {
              e.unshift(t.fulfilled, t.rejected);
            }),
              this.interceptors.response.forEach(function(t) {
                e.push(t.fulfilled, t.rejected);
              });
            e.length;

          )
            r = r.then(e.shift(), e.shift());
          return r;
        }),
          i.forEach(["delete", "get", "head", "options"], function(t) {
            a.prototype[t] = function(e, r) {
              return this.request(i.merge(r || {}, { method: t, url: e }));
            };
          }),
          i.forEach(["post", "put", "patch"], function(t) {
            a.prototype[t] = function(e, r, n) {
              return this.request(
                i.merge(n || {}, { method: t, url: e, data: r })
              );
            };
          }),
          (t.exports = a);
      },
      8354: (t, e, r) => {
        "use strict";
        var n = r(9055);
        function i() {
          this.handlers = [];
        }
        (i.prototype.use = function(t, e) {
          return (
            this.handlers.push({ fulfilled: t, rejected: e }),
            this.handlers.length - 1
          );
        }),
          (i.prototype.eject = function(t) {
            this.handlers[t] && (this.handlers[t] = null);
          }),
          (i.prototype.forEach = function(t) {
            n.forEach(this.handlers, function(e) {
              null !== e && t(e);
            });
          }),
          (t.exports = i);
      },
      7552: (t, e, r) => {
        "use strict";
        var n = r(3115);
        t.exports = function(t, e, r, i, o) {
          var s = new Error(t);
          return n(s, e, r, i, o);
        };
      },
      4621: (t, e, r) => {
        "use strict";
        var n = r(9055),
          i = r(6269),
          o = r(5643),
          s = r(1318),
          a = r(4287),
          l = r(6422);
        function u(t) {
          t.cancelToken && t.cancelToken.throwIfRequested();
        }
        t.exports = function(t) {
          return (
            u(t),
            t.baseURL && !a(t.url) && (t.url = l(t.baseURL, t.url)),
            (t.headers = t.headers || {}),
            (t.data = i(t.data, t.headers, t.transformRequest)),
            (t.headers = n.merge(
              t.headers.common || {},
              t.headers[t.method] || {},
              t.headers || {}
            )),
            n.forEach(
              ["delete", "get", "head", "post", "put", "patch", "common"],
              function(e) {
                delete t.headers[e];
              }
            ),
            (t.adapter || s.adapter)(t).then(
              function(e) {
                return (
                  u(t), (e.data = i(e.data, e.headers, t.transformResponse)), e
                );
              },
              function(e) {
                return (
                  o(e) ||
                    (u(t),
                    e &&
                      e.response &&
                      (e.response.data = i(
                        e.response.data,
                        e.response.headers,
                        t.transformResponse
                      ))),
                  Promise.reject(e)
                );
              }
            )
          );
        };
      },
      3115: t => {
        "use strict";
        t.exports = function(t, e, r, n, i) {
          return (
            (t.config = e),
            r && (t.code = r),
            (t.request = n),
            (t.response = i),
            t
          );
        };
      },
      849: (t, e, r) => {
        "use strict";
        var n = r(7552);
        t.exports = function(t, e, r) {
          var i = r.config.validateStatus;
          r.status && i && !i(r.status)
            ? e(
                n(
                  "Request failed with status code " + r.status,
                  r.config,
                  null,
                  r.request,
                  r
                )
              )
            : t(r);
        };
      },
      6269: (t, e, r) => {
        "use strict";
        var n = r(9055);
        t.exports = function(t, e, r) {
          return (
            n.forEach(r, function(r) {
              t = r(t, e);
            }),
            t
          );
        };
      },
      1318: (t, e, r) => {
        "use strict";
        var n = r(9055),
          i = r(5052),
          o = { "Content-Type": "application/x-www-form-urlencoded" };
        function s(t, e) {
          !n.isUndefined(t) &&
            n.isUndefined(t["Content-Type"]) &&
            (t["Content-Type"] = e);
        }
        var a,
          l = {
            adapter:
              (("undefined" != typeof XMLHttpRequest ||
                "undefined" != typeof process) &&
                (a = r(7230)),
              a),
            transformRequest: [
              function(t, e) {
                return (
                  i(e, "Content-Type"),
                  n.isFormData(t) ||
                  n.isArrayBuffer(t) ||
                  n.isBuffer(t) ||
                  n.isStream(t) ||
                  n.isFile(t) ||
                  n.isBlob(t)
                    ? t
                    : n.isArrayBufferView(t)
                    ? t.buffer
                    : n.isURLSearchParams(t)
                    ? (s(e, "application/x-www-form-urlencoded;charset=utf-8"),
                      t.toString())
                    : n.isObject(t)
                    ? (s(e, "application/json;charset=utf-8"),
                      JSON.stringify(t))
                    : t
                );
              }
            ],
            transformResponse: [
              function(t) {
                if ("string" == typeof t)
                  try {
                    t = JSON.parse(t);
                  } catch (t) {}
                return t;
              }
            ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            validateStatus: function(t) {
              return t >= 200 && t < 300;
            },
            headers: { common: { Accept: "application/json, text/plain, */*" } }
          };
        n.forEach(["delete", "get", "head"], function(t) {
          l.headers[t] = {};
        }),
          n.forEach(["post", "put", "patch"], function(t) {
            l.headers[t] = n.merge(o);
          }),
          (t.exports = l);
      },
      5035: t => {
        "use strict";
        t.exports = function(t, e) {
          return function() {
            for (var r = new Array(arguments.length), n = 0; n < r.length; n++)
              r[n] = arguments[n];
            return t.apply(e, r);
          };
        };
      },
      9161: (t, e, r) => {
        "use strict";
        var n = r(9055);
        function i(t) {
          return encodeURIComponent(t)
            .replace(/%40/gi, "@")
            .replace(/%3A/gi, ":")
            .replace(/%24/g, "$")
            .replace(/%2C/gi, ",")
            .replace(/%20/g, "+")
            .replace(/%5B/gi, "[")
            .replace(/%5D/gi, "]");
        }
        t.exports = function(t, e, r) {
          if (!e) return t;
          var o;
          if (r) o = r(e);
          else if (n.isURLSearchParams(e)) o = e.toString();
          else {
            var s = [];
            n.forEach(e, function(t, e) {
              null != t &&
                (n.isArray(t) ? (e += "[]") : (t = [t]),
                n.forEach(t, function(t) {
                  n.isDate(t)
                    ? (t = t.toISOString())
                    : n.isObject(t) && (t = JSON.stringify(t)),
                    s.push(i(e) + "=" + i(t));
                }));
            }),
              (o = s.join("&"));
          }
          return o && (t += (-1 === t.indexOf("?") ? "?" : "&") + o), t;
        };
      },
      6422: t => {
        "use strict";
        t.exports = function(t, e) {
          return e ? t.replace(/\/+$/, "") + "/" + e.replace(/^\/+/, "") : t;
        };
      },
      649: (t, e, r) => {
        "use strict";
        var n = r(9055);
        t.exports = n.isStandardBrowserEnv()
          ? {
              write: function(t, e, r, i, o, s) {
                var a = [];
                a.push(t + "=" + encodeURIComponent(e)),
                  n.isNumber(r) &&
                    a.push("expires=" + new Date(r).toGMTString()),
                  n.isString(i) && a.push("path=" + i),
                  n.isString(o) && a.push("domain=" + o),
                  !0 === s && a.push("secure"),
                  (document.cookie = a.join("; "));
              },
              read: function(t) {
                var e = document.cookie.match(
                  new RegExp("(^|;\\s*)(" + t + ")=([^;]*)")
                );
                return e ? decodeURIComponent(e[3]) : null;
              },
              remove: function(t) {
                this.write(t, "", Date.now() - 864e5);
              }
            }
          : {
              write: function() {},
              read: function() {
                return null;
              },
              remove: function() {}
            };
      },
      4287: t => {
        "use strict";
        t.exports = function(t) {
          return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(t);
        };
      },
      3329: (t, e, r) => {
        "use strict";
        var n = r(9055);
        t.exports = n.isStandardBrowserEnv()
          ? (function() {
              var t,
                e = /(msie|trident)/i.test(navigator.userAgent),
                r = document.createElement("a");
              function i(t) {
                var n = t;
                return (
                  e && (r.setAttribute("href", n), (n = r.href)),
                  r.setAttribute("href", n),
                  {
                    href: r.href,
                    protocol: r.protocol ? r.protocol.replace(/:$/, "") : "",
                    host: r.host,
                    search: r.search ? r.search.replace(/^\?/, "") : "",
                    hash: r.hash ? r.hash.replace(/^#/, "") : "",
                    hostname: r.hostname,
                    port: r.port,
                    pathname:
                      "/" === r.pathname.charAt(0)
                        ? r.pathname
                        : "/" + r.pathname
                  }
                );
              }
              return (
                (t = i(window.location.href)),
                function(e) {
                  var r = n.isString(e) ? i(e) : e;
                  return r.protocol === t.protocol && r.host === t.host;
                }
              );
            })()
          : function() {
              return !0;
            };
      },
      5052: (t, e, r) => {
        "use strict";
        var n = r(9055);
        t.exports = function(t, e) {
          n.forEach(t, function(r, n) {
            n !== e &&
              n.toUpperCase() === e.toUpperCase() &&
              ((t[e] = r), delete t[n]);
          });
        };
      },
      7631: (t, e, r) => {
        "use strict";
        var n = r(9055),
          i = [
            "age",
            "authorization",
            "content-length",
            "content-type",
            "etag",
            "expires",
            "from",
            "host",
            "if-modified-since",
            "if-unmodified-since",
            "last-modified",
            "location",
            "max-forwards",
            "proxy-authorization",
            "referer",
            "retry-after",
            "user-agent"
          ];
        t.exports = function(t) {
          var e,
            r,
            o,
            s = {};
          return t
            ? (n.forEach(t.split("\n"), function(t) {
                if (
                  ((o = t.indexOf(":")),
                  (e = n.trim(t.substr(0, o)).toLowerCase()),
                  (r = n.trim(t.substr(o + 1))),
                  e)
                ) {
                  if (s[e] && i.indexOf(e) >= 0) return;
                  s[e] =
                    "set-cookie" === e
                      ? (s[e] ? s[e] : []).concat([r])
                      : s[e]
                      ? s[e] + ", " + r
                      : r;
                }
              }),
              s)
            : s;
        };
      },
      9534: t => {
        "use strict";
        t.exports = function(t) {
          return function(e) {
            return t.apply(null, e);
          };
        };
      },
      9055: (t, e, r) => {
        "use strict";
        var n = r(5035),
          i = r(7518),
          o = Object.prototype.toString;
        function s(t) {
          return "[object Array]" === o.call(t);
        }
        function a(t) {
          return null !== t && "object" == typeof t;
        }
        function l(t) {
          return "[object Function]" === o.call(t);
        }
        function u(t, e) {
          if (null != t)
            if (("object" != typeof t && (t = [t]), s(t)))
              for (var r = 0, n = t.length; r < n; r++)
                e.call(null, t[r], r, t);
            else
              for (var i in t)
                Object.prototype.hasOwnProperty.call(t, i) &&
                  e.call(null, t[i], i, t);
        }
        t.exports = {
          isArray: s,
          isArrayBuffer: function(t) {
            return "[object ArrayBuffer]" === o.call(t);
          },
          isBuffer: i,
          isFormData: function(t) {
            return "undefined" != typeof FormData && t instanceof FormData;
          },
          isArrayBufferView: function(t) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
              ? ArrayBuffer.isView(t)
              : t && t.buffer && t.buffer instanceof ArrayBuffer;
          },
          isString: function(t) {
            return "string" == typeof t;
          },
          isNumber: function(t) {
            return "number" == typeof t;
          },
          isObject: a,
          isUndefined: function(t) {
            return void 0 === t;
          },
          isDate: function(t) {
            return "[object Date]" === o.call(t);
          },
          isFile: function(t) {
            return "[object File]" === o.call(t);
          },
          isBlob: function(t) {
            return "[object Blob]" === o.call(t);
          },
          isFunction: l,
          isStream: function(t) {
            return a(t) && l(t.pipe);
          },
          isURLSearchParams: function(t) {
            return (
              "undefined" != typeof URLSearchParams &&
              t instanceof URLSearchParams
            );
          },
          isStandardBrowserEnv: function() {
            return (
              ("undefined" == typeof navigator ||
                "ReactNative" !== navigator.product) &&
              "undefined" != typeof window &&
              "undefined" != typeof document
            );
          },
          forEach: u,
          merge: function t() {
            var e = {};
            function r(r, n) {
              "object" == typeof e[n] && "object" == typeof r
                ? (e[n] = t(e[n], r))
                : (e[n] = r);
            }
            for (var n = 0, i = arguments.length; n < i; n++)
              u(arguments[n], r);
            return e;
          },
          extend: function(t, e, r) {
            return (
              u(e, function(e, i) {
                t[i] = r && "function" == typeof e ? n(e, r) : e;
              }),
              t
            );
          },
          trim: function(t) {
            return t.replace(/^\s*/, "").replace(/\s*$/, "");
          }
        };
      },
      7518: t => {
        t.exports = function(t) {
          return (
            null != t &&
            null != t.constructor &&
            "function" == typeof t.constructor.isBuffer &&
            t.constructor.isBuffer(t)
          );
        };
      },
      4866: (t, e) => {
        var r = "AJSAJS",
          n = "AFAFAF",
          i = 65,
          o = 73,
          s = 79;
        function a(t) {
          return t * (Math.PI / 180);
        }
        function l(t) {
          return (t / Math.PI) * 180;
        }
        function u(t) {
          var e = t.northing,
            r = t.easting,
            n = t.zoneLetter,
            i = t.zoneNumber;
          if (i < 0 || i > 60) return null;
          var o,
            s,
            a,
            h,
            c,
            p,
            f,
            d,
            y,
            g = 0.9996,
            m = 6378137,
            v = 0.00669438,
            _ = (1 - Math.sqrt(0.99330562)) / (1 + Math.sqrt(0.99330562)),
            x = r - 5e5,
            b = e;
          n < "N" && (b -= 1e7),
            (f = 6 * (i - 1) - 180 + 3),
            (o = 0.006739496752268451),
            (y =
              (d = b / g / 6367449.145945056) +
              ((3 * _) / 2 - (27 * _ * _ * _) / 32) * Math.sin(2 * d) +
              ((21 * _ * _) / 16 - (55 * _ * _ * _ * _) / 32) *
                Math.sin(4 * d) +
              ((151 * _ * _ * _) / 96) * Math.sin(6 * d)),
            (s = m / Math.sqrt(1 - v * Math.sin(y) * Math.sin(y))),
            (a = Math.tan(y) * Math.tan(y)),
            (h = o * Math.cos(y) * Math.cos(y)),
            (c =
              (0.99330562 * m) /
              Math.pow(1 - v * Math.sin(y) * Math.sin(y), 1.5)),
            (p = x / (s * g));
          var S =
            y -
            ((s * Math.tan(y)) / c) *
              ((p * p) / 2 -
                ((5 + 3 * a + 10 * h - 4 * h * h - 9 * o) * p * p * p * p) /
                  24 +
                ((61 +
                  90 * a +
                  298 * h +
                  45 * a * a -
                  1.6983531815716497 -
                  3 * h * h) *
                  p *
                  p *
                  p *
                  p *
                  p *
                  p) /
                  720);
          S = l(S);
          var I,
            w =
              (p -
                ((1 + 2 * a + h) * p * p * p) / 6 +
                ((5 - 2 * h + 28 * a - 3 * h * h + 8 * o + 24 * a * a) *
                  p *
                  p *
                  p *
                  p *
                  p) /
                  120) /
              Math.cos(y);
          if (((w = f + l(w)), t.accuracy)) {
            var N = u({
              northing: t.northing + t.accuracy,
              easting: t.easting + t.accuracy,
              zoneLetter: t.zoneLetter,
              zoneNumber: t.zoneNumber
            });
            I = { top: N.lat, right: N.lon, bottom: S, left: w };
          } else I = { lat: S, lon: w };
          return I;
        }
        function h(t) {
          var e = t % 6;
          return 0 === e && (e = 6), e;
        }
        function c(t) {
          if (t && 0 === t.length) throw "MGRSPoint coverting from nothing";
          for (
            var e, a = t.length, l = null, u = "", c = 0;
            !/[A-Z]/.test((e = t.charAt(c)));

          ) {
            if (c >= 2) throw "MGRSPoint bad conversion from: " + t;
            (u += e), c++;
          }
          var f = parseInt(u, 10);
          if (0 === c || c + 3 > a) throw "MGRSPoint bad conversion from: " + t;
          var d = t.charAt(c++);
          if (
            d <= "A" ||
            "B" === d ||
            "Y" === d ||
            d >= "Z" ||
            "I" === d ||
            "O" === d
          )
            throw "MGRSPoint zone letter " + d + " not handled: " + t;
          l = t.substring(c, (c += 2));
          for (
            var y = h(f),
              g = (function(t, e) {
                for (
                  var n = r.charCodeAt(e - 1), a = 1e5, l = !1;
                  n !== t.charCodeAt(0);

                ) {
                  if ((++n === o && n++, n === s && n++, n > 90)) {
                    if (l) throw "Bad character: " + t;
                    (n = i), (l = !0);
                  }
                  a += 1e5;
                }
                return a;
              })(l.charAt(0), y),
              m = (function(t, e) {
                if (t > "V") throw "MGRSPoint given invalid Northing " + t;
                for (
                  var r = n.charCodeAt(e - 1), a = 0, l = !1;
                  r !== t.charCodeAt(0);

                ) {
                  if ((++r === o && r++, r === s && r++, r > 86)) {
                    if (l) throw "Bad character: " + t;
                    (r = i), (l = !0);
                  }
                  a += 1e5;
                }
                return a;
              })(l.charAt(1), y);
            m < p(d);

          )
            m += 2e6;
          var v = a - c;
          if (v % 2 != 0)
            throw "MGRSPoint has to have an even number \nof digits after the zone letter and two 100km letters - front \nhalf for easting meters, second half for \nnorthing meters" +
              t;
          var _,
            x,
            b,
            S = v / 2,
            I = 0,
            w = 0;
          return (
            S > 0 &&
              ((_ = 1e5 / Math.pow(10, S)),
              (x = t.substring(c, c + S)),
              (I = parseFloat(x) * _),
              (b = t.substring(c + S)),
              (w = parseFloat(b) * _)),
            {
              easting: I + g,
              northing: w + m,
              zoneLetter: d,
              zoneNumber: f,
              accuracy: _
            }
          );
        }
        function p(t) {
          var e;
          switch (t) {
            case "C":
              e = 11e5;
              break;
            case "D":
              e = 2e6;
              break;
            case "E":
              e = 28e5;
              break;
            case "F":
              e = 37e5;
              break;
            case "G":
              e = 46e5;
              break;
            case "H":
              e = 55e5;
              break;
            case "J":
              e = 64e5;
              break;
            case "K":
              e = 73e5;
              break;
            case "L":
              e = 82e5;
              break;
            case "M":
              e = 91e5;
              break;
            case "N":
              e = 0;
              break;
            case "P":
              e = 8e5;
              break;
            case "Q":
              e = 17e5;
              break;
            case "R":
              e = 26e5;
              break;
            case "S":
              e = 35e5;
              break;
            case "T":
              e = 44e5;
              break;
            case "U":
              e = 53e5;
              break;
            case "V":
              e = 62e5;
              break;
            case "W":
              e = 7e6;
              break;
            case "X":
              e = 79e5;
              break;
            default:
              e = -1;
          }
          if (e >= 0) return e;
          throw "Invalid zone letter: " + t;
        }
        (e.forward = function(t, e) {
          return (
            (e = e || 5),
            (function(t, e) {
              var a,
                l,
                u,
                c,
                p,
                f,
                d,
                y,
                g,
                m,
                v,
                _ = "00000" + t.easting,
                x = "00000" + t.northing;
              return (
                t.zoneNumber +
                t.zoneLetter +
                ((g = t.easting),
                (m = t.northing),
                (v = h(t.zoneNumber)),
                (a = Math.floor(g / 1e5)),
                (l = Math.floor(m / 1e5) % 20),
                (c = r.charCodeAt((u = v - 1))),
                (p = n.charCodeAt(u)),
                (y = !1),
                (f = c + a - 1) > 90 && ((f = f - 90 + i - 1), (y = !0)),
                (f === o || (c < o && f > o) || ((f > o || c < o) && y)) && f++,
                (f === s || (c < s && f > s) || ((f > s || c < s) && y)) &&
                  ++f === o &&
                  f++,
                f > 90 && (f = f - 90 + i - 1),
                (d = p + l) > 86 ? ((d = d - 86 + i - 1), (y = !0)) : (y = !1),
                (d === o || (p < o && d > o) || ((d > o || p < o) && y)) && d++,
                (d === s || (p < s && d > s) || ((d > s || p < s) && y)) &&
                  ++d === o &&
                  d++,
                d > 86 && (d = d - 86 + i - 1),
                String.fromCharCode(f) + String.fromCharCode(d)) +
                _.substr(_.length - 5, e) +
                x.substr(x.length - 5, e)
              );
            })(
              (function(t) {
                var e,
                  r,
                  n,
                  i,
                  o,
                  s,
                  l,
                  u = t.lat,
                  h = t.lon,
                  c = 6378137,
                  p = 0.00669438,
                  f = 0.9996,
                  d = a(u),
                  y = a(h);
                (l = Math.floor((h + 180) / 6) + 1),
                  180 === h && (l = 60),
                  u >= 56 && u < 64 && h >= 3 && h < 12 && (l = 32),
                  u >= 72 &&
                    u < 84 &&
                    (h >= 0 && h < 9
                      ? (l = 31)
                      : h >= 9 && h < 21
                      ? (l = 33)
                      : h >= 21 && h < 33
                      ? (l = 35)
                      : h >= 33 && h < 42 && (l = 37)),
                  (s = a(6 * (l - 1) - 180 + 3)),
                  (e = 0.006739496752268451),
                  (r = c / Math.sqrt(1 - p * Math.sin(d) * Math.sin(d))),
                  (n = Math.tan(d) * Math.tan(d)),
                  (i = e * Math.cos(d) * Math.cos(d));
                var g,
                  m,
                  v =
                    f *
                      r *
                      ((o = Math.cos(d) * (y - s)) +
                        ((1 - n + i) * o * o * o) / 6 +
                        ((5 - 18 * n + n * n + 72 * i - 58 * e) *
                          o *
                          o *
                          o *
                          o *
                          o) /
                          120) +
                    5e5,
                  _ =
                    f *
                    (c *
                      (0.9983242984503243 * d -
                        0.002514607064228144 * Math.sin(2 * d) +
                        2639046602129982e-21 * Math.sin(4 * d) -
                        3.418046101696858e-9 * Math.sin(6 * d)) +
                      r *
                        Math.tan(d) *
                        ((o * o) / 2 +
                          ((5 - n + 9 * i + 4 * i * i) * o * o * o * o) / 24 +
                          ((61 -
                            58 * n +
                            n * n +
                            600 * i -
                            2.2240339282485886) *
                            o *
                            o *
                            o *
                            o *
                            o *
                            o) /
                            720));
                return (
                  u < 0 && (_ += 1e7),
                  {
                    northing: Math.round(_),
                    easting: Math.round(v),
                    zoneNumber: l,
                    zoneLetter:
                      ((g = u),
                      (m = "Z"),
                      84 >= g && g >= 72
                        ? (m = "X")
                        : 72 > g && g >= 64
                        ? (m = "W")
                        : 64 > g && g >= 56
                        ? (m = "V")
                        : 56 > g && g >= 48
                        ? (m = "U")
                        : 48 > g && g >= 40
                        ? (m = "T")
                        : 40 > g && g >= 32
                        ? (m = "S")
                        : 32 > g && g >= 24
                        ? (m = "R")
                        : 24 > g && g >= 16
                        ? (m = "Q")
                        : 16 > g && g >= 8
                        ? (m = "P")
                        : 8 > g && g >= 0
                        ? (m = "N")
                        : 0 > g && g >= -8
                        ? (m = "M")
                        : -8 > g && g >= -16
                        ? (m = "L")
                        : -16 > g && g >= -24
                        ? (m = "K")
                        : -24 > g && g >= -32
                        ? (m = "J")
                        : -32 > g && g >= -40
                        ? (m = "H")
                        : -40 > g && g >= -48
                        ? (m = "G")
                        : -48 > g && g >= -56
                        ? (m = "F")
                        : -56 > g && g >= -64
                        ? (m = "E")
                        : -64 > g && g >= -72
                        ? (m = "D")
                        : -72 > g && g >= -80 && (m = "C"),
                      m)
                  }
                );
              })({ lat: t[1], lon: t[0] }),
              e
            )
          );
        }),
          (e.inverse = function(t) {
            var e = u(c(t.toUpperCase()));
            return e.lat && e.lon
              ? [e.lon, e.lat, e.lon, e.lat]
              : [e.left, e.bottom, e.right, e.top];
          }),
          (e.toPoint = function(t) {
            var e = u(c(t.toUpperCase()));
            return e.lat && e.lon
              ? [e.lon, e.lat]
              : [(e.left + e.right) / 2, (e.top + e.bottom) / 2];
          });
      },
      3909: (t, e, r) => {
        var n = r(4866);
        function i(t, e, r) {
          if (!(this instanceof i)) return new i(t, e, r);
          if (Array.isArray(t))
            (this.x = t[0]), (this.y = t[1]), (this.z = t[2] || 0);
          else if ("object" == typeof t)
            (this.x = t.x), (this.y = t.y), (this.z = t.z || 0);
          else if ("string" == typeof t && void 0 === e) {
            var n = t.split(",");
            (this.x = parseFloat(n[0], 10)),
              (this.y = parseFloat(n[1], 10)),
              (this.z = parseFloat(n[2], 10) || 0);
          } else (this.x = t), (this.y = e), (this.z = r || 0);
          console.warn(
            "proj4.Point will be removed in version 3, use proj4.toPoint"
          );
        }
        (i.fromMGRS = function(t) {
          return new i(n.toPoint(t));
        }),
          (i.prototype.toMGRS = function(t) {
            return n.forward([this.x, this.y], t);
          }),
          (t.exports = i);
      },
      9059: (t, e, r) => {
        var n = r(7630),
          i = r(1352),
          o = r(4378),
          s = r(4827);
        function a(t, e) {
          if (!(this instanceof a)) return new a(t);
          e =
            e ||
            function(t) {
              if (t) throw t;
            };
          var r = n(t);
          if ("object" == typeof r) {
            var o = s(r),
              l = a.projections.get(o.projName);
            l ? (i(this, o), i(this, l), this.init(), e(null, this)) : e(t);
          } else e(t);
        }
        (a.projections = o), a.projections.start(), (t.exports = a);
      },
      7114: t => {
        t.exports = function(t, e, r) {
          var n,
            i,
            o,
            s = r.x,
            a = r.y,
            l = r.z || 0;
          for (o = 0; o < 3; o++)
            if (!e || 2 !== o || void 0 !== r.z)
              switch (
                (0 === o
                  ? ((n = s), (i = "x"))
                  : 1 === o
                  ? ((n = a), (i = "y"))
                  : ((n = l), (i = "z")),
                t.axis[o])
              ) {
                case "e":
                case "n":
                  r[i] = n;
                  break;
                case "w":
                case "s":
                  r[i] = -n;
                  break;
                case "u":
                  void 0 !== r[i] && (r.z = n);
                  break;
                case "d":
                  void 0 !== r[i] && (r.z = -n);
                  break;
                default:
                  return null;
              }
          return r;
        };
      },
      172: (t, e, r) => {
        var n = Math.PI / 2,
          i = r(7489);
        t.exports = function(t) {
          return Math.abs(t) < n ? t : t - i(t) * Math.PI;
        };
      },
      7674: (t, e, r) => {
        var n = 2 * Math.PI,
          i = r(7489);
        t.exports = function(t) {
          return Math.abs(t) <= 3.14159265359 ? t : t - i(t) * n;
        };
      },
      4041: t => {
        t.exports = function(t) {
          return Math.abs(t) > 1 && (t = t > 1 ? 1 : -1), Math.asin(t);
        };
      },
      7354: t => {
        t.exports = function(t) {
          return 1 - 0.25 * t * (1 + (t / 16) * (3 + 1.25 * t));
        };
      },
      6172: t => {
        t.exports = function(t) {
          return 0.375 * t * (1 + 0.25 * t * (1 + 0.46875 * t));
        };
      },
      3008: t => {
        t.exports = function(t) {
          return 0.05859375 * t * t * (1 + 0.75 * t);
        };
      },
      1715: t => {
        t.exports = function(t) {
          return t * t * t * (35 / 3072);
        };
      },
      2781: t => {
        t.exports = function(t, e, r) {
          var n = e * r;
          return t / Math.sqrt(1 - n * n);
        };
      },
      3249: t => {
        t.exports = function(t, e, r, n, i) {
          var o, s;
          o = t / e;
          for (var a = 0; a < 15; a++)
            if (
              ((o += s =
                (t -
                  (e * o -
                    r * Math.sin(2 * o) +
                    n * Math.sin(4 * o) -
                    i * Math.sin(6 * o))) /
                (e -
                  2 * r * Math.cos(2 * o) +
                  4 * n * Math.cos(4 * o) -
                  6 * i * Math.cos(6 * o))),
              Math.abs(s) <= 1e-10)
            )
              return o;
          return NaN;
        };
      },
      1716: t => {
        var e = Math.PI / 2;
        t.exports = function(t, r) {
          var n = 1 - ((1 - t * t) / (2 * t)) * Math.log((1 - t) / (1 + t));
          if (Math.abs(Math.abs(r) - n) < 1e-6) return r < 0 ? -1 * e : e;
          for (var i, o, s, a, l = Math.asin(0.5 * r), u = 0; u < 30; u++)
            if (
              ((o = Math.sin(l)),
              (s = Math.cos(l)),
              (a = t * o),
              (l += i =
                (Math.pow(1 - a * a, 2) / (2 * s)) *
                (r / (1 - t * t) -
                  o / (1 - a * a) +
                  (0.5 / t) * Math.log((1 - a) / (1 + a)))),
              Math.abs(i) <= 1e-10)
            )
              return l;
          return NaN;
        };
      },
      9137: t => {
        t.exports = function(t, e, r, n, i) {
          return (
            t * i -
            e * Math.sin(2 * i) +
            r * Math.sin(4 * i) -
            n * Math.sin(6 * i)
          );
        };
      },
      1566: t => {
        t.exports = function(t, e, r) {
          var n = t * e;
          return r / Math.sqrt(1 - n * n);
        };
      },
      3420: t => {
        var e = Math.PI / 2;
        t.exports = function(t, r) {
          for (
            var n, i, o = 0.5 * t, s = e - 2 * Math.atan(r), a = 0;
            a <= 15;
            a++
          )
            if (
              ((n = t * Math.sin(s)),
              (s += i =
                e - 2 * Math.atan(r * Math.pow((1 - n) / (1 + n), o)) - s),
              Math.abs(i) <= 1e-10)
            )
              return s;
          return -9999;
        };
      },
      4607: t => {
        var e = 0.046875,
          r = 0.01953125,
          n = 0.01068115234375;
        t.exports = function(t) {
          var i = [];
          (i[0] = 1 - t * (0.25 + t * (e + t * (r + t * n)))),
            (i[1] = t * (0.75 - t * (e + t * (r + t * n))));
          var o = t * t;
          return (
            (i[2] =
              o *
              (0.46875 -
                t * (0.013020833333333334 + 0.007120768229166667 * t))),
            (o *= t),
            (i[3] = o * (0.3645833333333333 - 0.005696614583333333 * t)),
            (i[4] = o * t * 0.3076171875),
            i
          );
        };
      },
      5733: (t, e, r) => {
        var n = r(8219);
        t.exports = function(t, e, r) {
          for (var i = 1 / (1 - e), o = t, s = 20; s; --s) {
            var a = Math.sin(o),
              l = 1 - e * a * a;
            if (
              ((o -= l =
                (n(o, a, Math.cos(o), r) - t) * (l * Math.sqrt(l)) * i),
              Math.abs(l) < 1e-10)
            )
              return o;
          }
          return o;
        };
      },
      8219: t => {
        t.exports = function(t, e, r, n) {
          return (
            (r *= e),
            (e *= e),
            n[0] * t - r * (n[1] + e * (n[2] + e * (n[3] + e * n[4])))
          );
        };
      },
      5867: t => {
        t.exports = function(t, e) {
          var r;
          return t > 1e-7
            ? (1 - t * t) *
                (e / (1 - (r = t * e) * r) -
                  (0.5 / t) * Math.log((1 - r) / (1 + r)))
            : 2 * e;
        };
      },
      7489: t => {
        t.exports = function(t) {
          return t < 0 ? -1 : 1;
        };
      },
      9903: t => {
        t.exports = function(t, e) {
          return Math.pow((1 - t) / (1 + t), e);
        };
      },
      5325: t => {
        t.exports = function(t) {
          var e = { x: t[0], y: t[1] };
          return t.length > 2 && (e.z = t[2]), t.length > 3 && (e.m = t[3]), e;
        };
      },
      7877: t => {
        var e = Math.PI / 2;
        t.exports = function(t, r, n) {
          var i = t * n,
            o = 0.5 * t;
          return (
            (i = Math.pow((1 - i) / (1 + i), o)), Math.tan(0.5 * (e - r)) / i
          );
        };
      },
      133: (t, e) => {
        (e.wgs84 = { towgs84: "0,0,0", ellipse: "WGS84", datumName: "WGS84" }),
          (e.ch1903 = {
            towgs84: "674.374,15.056,405.346",
            ellipse: "bessel",
            datumName: "swiss"
          }),
          (e.ggrs87 = {
            towgs84: "-199.87,74.79,246.62",
            ellipse: "GRS80",
            datumName: "Greek_Geodetic_Reference_System_1987"
          }),
          (e.nad83 = {
            towgs84: "0,0,0",
            ellipse: "GRS80",
            datumName: "North_American_Datum_1983"
          }),
          (e.nad27 = {
            nadgrids: "@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat",
            ellipse: "clrk66",
            datumName: "North_American_Datum_1927"
          }),
          (e.potsdam = {
            towgs84: "606.0,23.0,413.0",
            ellipse: "bessel",
            datumName: "Potsdam Rauenberg 1950 DHDN"
          }),
          (e.carthage = {
            towgs84: "-263.0,6.0,431.0",
            ellipse: "clark80",
            datumName: "Carthage 1934 Tunisia"
          }),
          (e.hermannskogel = {
            towgs84: "653.0,-212.0,449.0",
            ellipse: "bessel",
            datumName: "Hermannskogel"
          }),
          (e.ire65 = {
            towgs84: "482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15",
            ellipse: "mod_airy",
            datumName: "Ireland 1965"
          }),
          (e.rassadiran = {
            towgs84: "-133.63,-157.5,-158.62",
            ellipse: "intl",
            datumName: "Rassadiran"
          }),
          (e.nzgd49 = {
            towgs84: "59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993",
            ellipse: "intl",
            datumName: "New Zealand Geodetic Datum 1949"
          }),
          (e.osgb36 = {
            towgs84: "446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894",
            ellipse: "airy",
            datumName: "Airy 1830"
          }),
          (e.s_jtsk = {
            towgs84: "589,76,480",
            ellipse: "bessel",
            datumName: "S-JTSK (Ferro)"
          }),
          (e.beduaram = {
            towgs84: "-106,-87,188",
            ellipse: "clrk80",
            datumName: "Beduaram"
          }),
          (e.gunung_segara = {
            towgs84: "-403,684,41",
            ellipse: "bessel",
            datumName: "Gunung Segara Jakarta"
          }),
          (e.rnb72 = {
            towgs84: "106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1",
            ellipse: "intl",
            datumName: "Reseau National Belge 1972"
          });
      },
      5823: (t, e) => {
        (e.MERIT = { a: 6378137, rf: 298.257, ellipseName: "MERIT 1983" }),
          (e.SGS85 = {
            a: 6378136,
            rf: 298.257,
            ellipseName: "Soviet Geodetic System 85"
          }),
          (e.GRS80 = {
            a: 6378137,
            rf: 298.257222101,
            ellipseName: "GRS 1980(IUGG, 1980)"
          }),
          (e.IAU76 = { a: 6378140, rf: 298.257, ellipseName: "IAU 1976" }),
          (e.airy = {
            a: 6377563.396,
            b: 6356256.91,
            ellipseName: "Airy 1830"
          }),
          (e.APL4 = {
            a: 6378137,
            rf: 298.25,
            ellipseName: "Appl. Physics. 1965"
          }),
          (e.NWL9D = {
            a: 6378145,
            rf: 298.25,
            ellipseName: "Naval Weapons Lab., 1965"
          }),
          (e.mod_airy = {
            a: 6377340.189,
            b: 6356034.446,
            ellipseName: "Modified Airy"
          }),
          (e.andrae = {
            a: 6377104.43,
            rf: 300,
            ellipseName: "Andrae 1876 (Den., Iclnd.)"
          }),
          (e.aust_SA = {
            a: 6378160,
            rf: 298.25,
            ellipseName: "Australian Natl & S. Amer. 1969"
          }),
          (e.GRS67 = {
            a: 6378160,
            rf: 298.247167427,
            ellipseName: "GRS 67(IUGG 1967)"
          }),
          (e.bessel = {
            a: 6377397.155,
            rf: 299.1528128,
            ellipseName: "Bessel 1841"
          }),
          (e.bess_nam = {
            a: 6377483.865,
            rf: 299.1528128,
            ellipseName: "Bessel 1841 (Namibia)"
          }),
          (e.clrk66 = {
            a: 6378206.4,
            b: 6356583.8,
            ellipseName: "Clarke 1866"
          }),
          (e.clrk80 = {
            a: 6378249.145,
            rf: 293.4663,
            ellipseName: "Clarke 1880 mod."
          }),
          (e.clrk58 = {
            a: 6378293.645208759,
            rf: 294.2606763692654,
            ellipseName: "Clarke 1858"
          }),
          (e.CPM = {
            a: 6375738.7,
            rf: 334.29,
            ellipseName: "Comm. des Poids et Mesures 1799"
          }),
          (e.delmbr = {
            a: 6376428,
            rf: 311.5,
            ellipseName: "Delambre 1810 (Belgium)"
          }),
          (e.engelis = {
            a: 6378136.05,
            rf: 298.2566,
            ellipseName: "Engelis 1985"
          }),
          (e.evrst30 = {
            a: 6377276.345,
            rf: 300.8017,
            ellipseName: "Everest 1830"
          }),
          (e.evrst48 = {
            a: 6377304.063,
            rf: 300.8017,
            ellipseName: "Everest 1948"
          }),
          (e.evrst56 = {
            a: 6377301.243,
            rf: 300.8017,
            ellipseName: "Everest 1956"
          }),
          (e.evrst69 = {
            a: 6377295.664,
            rf: 300.8017,
            ellipseName: "Everest 1969"
          }),
          (e.evrstSS = {
            a: 6377298.556,
            rf: 300.8017,
            ellipseName: "Everest (Sabah & Sarawak)"
          }),
          (e.fschr60 = {
            a: 6378166,
            rf: 298.3,
            ellipseName: "Fischer (Mercury Datum) 1960"
          }),
          (e.fschr60m = { a: 6378155, rf: 298.3, ellipseName: "Fischer 1960" }),
          (e.fschr68 = { a: 6378150, rf: 298.3, ellipseName: "Fischer 1968" }),
          (e.helmert = { a: 6378200, rf: 298.3, ellipseName: "Helmert 1906" }),
          (e.hough = { a: 6378270, rf: 297, ellipseName: "Hough" }),
          (e.intl = {
            a: 6378388,
            rf: 297,
            ellipseName: "International 1909 (Hayford)"
          }),
          (e.kaula = { a: 6378163, rf: 298.24, ellipseName: "Kaula 1961" }),
          (e.lerch = { a: 6378139, rf: 298.257, ellipseName: "Lerch 1979" }),
          (e.mprts = { a: 6397300, rf: 191, ellipseName: "Maupertius 1738" }),
          (e.new_intl = {
            a: 6378157.5,
            b: 6356772.2,
            ellipseName: "New International 1967"
          }),
          (e.plessis = {
            a: 6376523,
            rf: 6355863,
            ellipseName: "Plessis 1817 (France)"
          }),
          (e.krass = {
            a: 6378245,
            rf: 298.3,
            ellipseName: "Krassovsky, 1942"
          }),
          (e.SEasia = {
            a: 6378155,
            b: 6356773.3205,
            ellipseName: "Southeast Asia"
          }),
          (e.walbeck = { a: 6376896, b: 6355834.8467, ellipseName: "Walbeck" }),
          (e.WGS60 = { a: 6378165, rf: 298.3, ellipseName: "WGS 60" }),
          (e.WGS66 = { a: 6378145, rf: 298.25, ellipseName: "WGS 66" }),
          (e.WGS7 = { a: 6378135, rf: 298.26, ellipseName: "WGS 72" }),
          (e.WGS84 = { a: 6378137, rf: 298.257223563, ellipseName: "WGS 84" }),
          (e.sphere = {
            a: 6370997,
            b: 6370997,
            ellipseName: "Normal Sphere (r=6370997)"
          });
      },
      1119: (t, e) => {
        (e.greenwich = 0),
          (e.lisbon = -9.131906111111),
          (e.paris = 2.337229166667),
          (e.bogota = -74.080916666667),
          (e.madrid = -3.687938888889),
          (e.rome = 12.452333333333),
          (e.bern = 7.439583333333),
          (e.jakarta = 106.807719444444),
          (e.ferro = -17.666666666667),
          (e.brussels = 4.367975),
          (e.stockholm = 18.058277777778),
          (e.athens = 23.7163375),
          (e.oslo = 10.722916666667);
      },
      4306: (t, e) => {
        (e.ft = { to_meter: 0.3048 }), (e["us-ft"] = { to_meter: 1200 / 3937 });
      },
      4567: (t, e, r) => {
        var n = r(9059),
          i = r(4200),
          o = n("WGS84");
        function s(t, e, r) {
          var n;
          return Array.isArray(r)
            ? ((n = i(t, e, r)), 3 === r.length ? [n.x, n.y, n.z] : [n.x, n.y])
            : i(t, e, r);
        }
        function a(t) {
          return t instanceof n ? t : t.oProj ? t.oProj : n(t);
        }
        t.exports = function(t, e, r) {
          t = a(t);
          var n,
            i = !1;
          return (
            void 0 === e
              ? ((e = t), (t = o), (i = !0))
              : (void 0 !== e.x || Array.isArray(e)) &&
                ((r = e), (e = t), (t = o), (i = !0)),
            (e = a(e)),
            r
              ? s(t, e, r)
              : ((n = {
                  forward: function(r) {
                    return s(t, e, r);
                  },
                  inverse: function(r) {
                    return s(e, t, r);
                  }
                }),
                i && (n.oProj = e),
                n)
          );
        };
      },
      1803: t => {
        var e = Math.PI / 2,
          r = 484813681109536e-20,
          n = 0.3826834323650898,
          i = function(t) {
            if (!(this instanceof i)) return new i(t);
            (this.datum_type = 4),
              t &&
                (t.datumCode && "none" === t.datumCode && (this.datum_type = 5),
                t.datum_params &&
                  ((this.datum_params = t.datum_params.map(parseFloat)),
                  (0 === this.datum_params[0] &&
                    0 === this.datum_params[1] &&
                    0 === this.datum_params[2]) ||
                    (this.datum_type = 1),
                  this.datum_params.length > 3 &&
                    ((0 === this.datum_params[3] &&
                      0 === this.datum_params[4] &&
                      0 === this.datum_params[5] &&
                      0 === this.datum_params[6]) ||
                      ((this.datum_type = 2),
                      (this.datum_params[3] *= r),
                      (this.datum_params[4] *= r),
                      (this.datum_params[5] *= r),
                      (this.datum_params[6] =
                        this.datum_params[6] / 1e6 + 1)))),
                (this.datum_type = t.grids ? 3 : this.datum_type),
                (this.a = t.a),
                (this.b = t.b),
                (this.es = t.es),
                (this.ep2 = t.ep2),
                3 === this.datum_type && (this.grids = t.grids));
          };
        (i.prototype = {
          compare_datums: function(t) {
            return (
              this.datum_type === t.datum_type &&
              !(this.a !== t.a || Math.abs(this.es - t.es) > 5e-11) &&
              (1 === this.datum_type
                ? this.datum_params[0] === t.datum_params[0] &&
                  this.datum_params[1] === t.datum_params[1] &&
                  this.datum_params[2] === t.datum_params[2]
                : 2 === this.datum_type
                ? this.datum_params[0] === t.datum_params[0] &&
                  this.datum_params[1] === t.datum_params[1] &&
                  this.datum_params[2] === t.datum_params[2] &&
                  this.datum_params[3] === t.datum_params[3] &&
                  this.datum_params[4] === t.datum_params[4] &&
                  this.datum_params[5] === t.datum_params[5] &&
                  this.datum_params[6] === t.datum_params[6]
                : (3 !== this.datum_type && 3 !== t.datum_type) ||
                  this.nadgrids === t.nadgrids)
            );
          },
          geodetic_to_geocentric: function(t) {
            var r,
              n,
              i,
              o,
              s,
              a,
              l,
              u = t.x,
              h = t.y,
              c = t.z ? t.z : 0;
            if (h < -e && h > -1.001 * e) h = -e;
            else if (h > e && h < 1.001 * e) h = e;
            else if (h < -e || h > e) return null;
            return (
              u > Math.PI && (u -= 2 * Math.PI),
              (s = Math.sin(h)),
              (l = Math.cos(h)),
              (a = s * s),
              (r =
                ((o = this.a / Math.sqrt(1 - this.es * a)) + c) *
                l *
                Math.cos(u)),
              (n = (o + c) * l * Math.sin(u)),
              (i = (o * (1 - this.es) + c) * s),
              (t.x = r),
              (t.y = n),
              (t.z = i),
              0
            );
          },
          geocentric_to_geodetic: function(t) {
            var r,
              n,
              i,
              o,
              s,
              a,
              l,
              u,
              h,
              c,
              p,
              f,
              d,
              y,
              g,
              m,
              v = t.x,
              _ = t.y,
              x = t.z ? t.z : 0;
            if (
              ((r = Math.sqrt(v * v + _ * _)),
              (n = Math.sqrt(v * v + _ * _ + x * x)),
              r / this.a < 1e-12)
            ) {
              if (((y = 0), n / this.a < 1e-12))
                return (g = e), void (m = -this.b);
            } else y = Math.atan2(_, v);
            (i = x / n),
              (o = r / n),
              (s = 1 / Math.sqrt(1 - this.es * (2 - this.es) * o * o)),
              (u = o * (1 - this.es) * s),
              (h = i * s),
              (d = 0);
            do {
              d++,
                (m =
                  r * u +
                  x * h -
                  (l = this.a / Math.sqrt(1 - this.es * h * h)) *
                    (1 - this.es * h * h)),
                (a = (this.es * l) / (l + m)),
                (f =
                  (p = i * (s = 1 / Math.sqrt(1 - a * (2 - a) * o * o))) * u -
                  (c = o * (1 - a) * s) * h),
                (u = c),
                (h = p);
            } while (f * f > 1e-24 && d < 30);
            return (
              (g = Math.atan(p / Math.abs(c))),
              (t.x = y),
              (t.y = g),
              (t.z = m),
              t
            );
          },
          geocentric_to_geodetic_noniter: function(t) {
            var r,
              i,
              o,
              s,
              a,
              l,
              u,
              h,
              c,
              p,
              f,
              d,
              y,
              g,
              m,
              v,
              _,
              x = t.x,
              b = t.y,
              S = t.z ? t.z : 0;
            if (
              ((x = parseFloat(x)),
              (b = parseFloat(b)),
              (S = parseFloat(S)),
              (_ = !1),
              0 !== x)
            )
              r = Math.atan2(b, x);
            else if (b > 0) r = e;
            else if (b < 0) r = -e;
            else if (((_ = !0), (r = 0), S > 0)) i = e;
            else {
              if (!(S < 0)) return (i = e), void (o = -this.b);
              i = -e;
            }
            return (
              (a = x * x + b * b),
              (l = 1.0026 * S),
              (d = (s = Math.sqrt(a)) / (h = Math.sqrt(l * l + a))),
              (f = (p = l / h) * p * p),
              (u = S + this.b * this.ep2 * f),
              (v = s - this.a * this.es * d * d * d),
              (y = u / (c = Math.sqrt(u * u + v * v))),
              (g = v / c),
              (m = this.a / Math.sqrt(1 - this.es * y * y)),
              (o =
                g >= n
                  ? s / g - m
                  : g <= -n
                  ? s / -g - m
                  : S / y + m * (this.es - 1)),
              !1 === _ && (i = Math.atan(y / g)),
              (t.x = r),
              (t.y = i),
              (t.z = o),
              t
            );
          },
          geocentric_to_wgs84: function(t) {
            if (1 === this.datum_type)
              (t.x += this.datum_params[0]),
                (t.y += this.datum_params[1]),
                (t.z += this.datum_params[2]);
            else if (2 === this.datum_type) {
              var e = this.datum_params[0],
                r = this.datum_params[1],
                n = this.datum_params[2],
                i = this.datum_params[3],
                o = this.datum_params[4],
                s = this.datum_params[5],
                a = this.datum_params[6],
                l = a * (t.x - s * t.y + o * t.z) + e,
                u = a * (s * t.x + t.y - i * t.z) + r,
                h = a * (-o * t.x + i * t.y + t.z) + n;
              (t.x = l), (t.y = u), (t.z = h);
            }
          },
          geocentric_from_wgs84: function(t) {
            if (1 === this.datum_type)
              (t.x -= this.datum_params[0]),
                (t.y -= this.datum_params[1]),
                (t.z -= this.datum_params[2]);
            else if (2 === this.datum_type) {
              var e = this.datum_params[0],
                r = this.datum_params[1],
                n = this.datum_params[2],
                i = this.datum_params[3],
                o = this.datum_params[4],
                s = this.datum_params[5],
                a = this.datum_params[6],
                l = (t.x - e) / a,
                u = (t.y - r) / a,
                h = (t.z - n) / a;
              (t.x = l + s * u - o * h),
                (t.y = -s * l + u + i * h),
                (t.z = o * l - i * u + h);
            }
          }
        }),
          (t.exports = i);
      },
      6742: t => {
        var e = 6378137,
          r = 0.006694379990141316;
        t.exports = function(t, n, i) {
          var o, s, a;
          function l(t) {
            return 1 === t || 2 === t;
          }
          if (t.compare_datums(n)) return i;
          if (5 === t.datum_type || 5 === n.datum_type) return i;
          var u = t.a,
            h = t.es,
            c = n.a,
            p = n.es,
            f = t.datum_type;
          if (3 === f)
            if (0 === this.apply_gridshift(t, 0, i)) (t.a = e), (t.es = r);
            else {
              if (!t.datum_params) return (t.a = u), (t.es = t.es), i;
              for (o = 1, s = 0, a = t.datum_params.length; s < a; s++)
                o *= t.datum_params[s];
              if (0 === o) return (t.a = u), (t.es = t.es), i;
              f = t.datum_params.length > 3 ? 2 : 1;
            }
          return (
            3 === n.datum_type && ((n.a = e), (n.es = r)),
            (t.es !== n.es || t.a !== n.a || l(f) || l(n.datum_type)) &&
              (t.geodetic_to_geocentric(i),
              l(t.datum_type) && t.geocentric_to_wgs84(i),
              l(n.datum_type) && n.geocentric_from_wgs84(i),
              n.geocentric_to_geodetic(i)),
            3 === n.datum_type && this.apply_gridshift(n, 1, i),
            (t.a = u),
            (t.es = h),
            (n.a = c),
            (n.es = p),
            i
          );
        };
      },
      1174: (t, e, r) => {
        var n = r(8217),
          i = r(3852),
          o = r(7101);
        function s(t) {
          var e = this;
          if (2 === arguments.length) {
            var r = arguments[1];
            "string" == typeof r
              ? "+" === r.charAt(0)
                ? (s[t] = i(arguments[1]))
                : (s[t] = o(arguments[1]))
              : (s[t] = r);
          } else if (1 === arguments.length) {
            if (Array.isArray(t))
              return t.map(function(t) {
                Array.isArray(t) ? s.apply(e, t) : s(t);
              });
            if ("string" == typeof t) {
              if (t in s) return s[t];
            } else
              "EPSG" in t
                ? (s["EPSG:" + t.EPSG] = t)
                : "ESRI" in t
                ? (s["ESRI:" + t.ESRI] = t)
                : "IAU2000" in t
                ? (s["IAU2000:" + t.IAU2000] = t)
                : console.log(t);
            return;
          }
        }
        n(s), (t.exports = s);
      },
      4827: (t, e, r) => {
        var n = r(133),
          i = r(5823),
          o = r(1352),
          s = r(1803);
        t.exports = function(t) {
          if (t.datumCode && "none" !== t.datumCode) {
            var e = n[t.datumCode];
            e &&
              ((t.datum_params = e.towgs84 ? e.towgs84.split(",") : null),
              (t.ellps = e.ellipse),
              (t.datumName = e.datumName ? e.datumName : t.datumCode));
          }
          if (!t.a) {
            var r = i[t.ellps] ? i[t.ellps] : i.WGS84;
            o(t, r);
          }
          return (
            t.rf && !t.b && (t.b = (1 - 1 / t.rf) * t.a),
            (0 === t.rf || Math.abs(t.a - t.b) < 1e-10) &&
              ((t.sphere = !0), (t.b = t.a)),
            (t.a2 = t.a * t.a),
            (t.b2 = t.b * t.b),
            (t.es = (t.a2 - t.b2) / t.a2),
            (t.e = Math.sqrt(t.es)),
            t.R_A &&
              ((t.a *=
                1 -
                t.es *
                  (0.16666666666666666 +
                    t.es *
                      (0.04722222222222222 + 0.022156084656084655 * t.es))),
              (t.a2 = t.a * t.a),
              (t.b2 = t.b * t.b),
              (t.es = 0)),
            (t.ep2 = (t.a2 - t.b2) / t.b2),
            t.k0 || (t.k0 = 1),
            t.axis || (t.axis = "enu"),
            t.datum || (t.datum = s(t)),
            t
          );
        };
      },
      1352: t => {
        t.exports = function(t, e) {
          var r, n;
          if (((t = t || {}), !e)) return t;
          for (n in e) void 0 !== (r = e[n]) && (t[n] = r);
          return t;
        };
      },
      8217: t => {
        t.exports = function(t) {
          t(
            "EPSG:4326",
            "+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees"
          ),
            t(
              "EPSG:4269",
              "+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees"
            ),
            t(
              "EPSG:3857",
              "+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs"
            ),
            (t.WGS84 = t["EPSG:4326"]),
            (t["EPSG:3785"] = t["EPSG:3857"]),
            (t.GOOGLE = t["EPSG:3857"]),
            (t["EPSG:900913"] = t["EPSG:3857"]),
            (t["EPSG:102113"] = t["EPSG:3857"]);
        };
      },
      7207: (t, e, r) => {
        var n = [
          r(7885),
          r(7343),
          r(1949),
          r(9329),
          r(2757),
          r(3825),
          r(2442),
          r(6776),
          r(826),
          r(9219),
          r(7122),
          r(5228),
          r(8804),
          r(899),
          r(1338),
          r(9629),
          r(8678),
          r(4082),
          r(7976),
          r(6626),
          r(1474),
          r(3337)
        ];
        t.exports = function(t) {
          n.forEach(function(e) {
            t.Proj.projections.add(e);
          });
        };
      },
      9551: (t, e, r) => {
        var n = r(4567);
        (n.defaultDatum = "WGS84"),
          (n.Proj = r(9059)),
          (n.WGS84 = new n.Proj("WGS84")),
          (n.Point = r(3909)),
          (n.toPoint = r(5325)),
          (n.defs = r(1174)),
          (n.transform = r(4200)),
          (n.mgrs = r(4866)),
          (n.version = r(9411).i8),
          r(7207)(n),
          (t.exports = n);
      },
      7630: (t, e, r) => {
        var n = r(1174),
          i = r(7101),
          o = r(3852);
        t.exports = function(t) {
          return (function(t) {
            return "string" == typeof t;
          })(t)
            ? (function(t) {
                return t in n;
              })(t)
              ? n[t]
              : (function(t) {
                  return ["GEOGCS", "GEOCCS", "PROJCS", "LOCAL_CS"].reduce(
                    function(e, r) {
                      return e + 1 + t.indexOf(r);
                    },
                    0
                  );
                })(t)
              ? i(t)
              : (function(t) {
                  return "+" === t[0];
                })(t)
              ? o(t)
              : void 0
            : t;
        };
      },
      3852: (t, e, r) => {
        var n = 0.017453292519943295,
          i = r(1119),
          o = r(4306);
        t.exports = function(t) {
          var e,
            r,
            s,
            a = {},
            l = {};
          t.split("+")
            .map(function(t) {
              return t.trim();
            })
            .filter(function(t) {
              return t;
            })
            .forEach(function(t) {
              var e = t.split("=");
              e.push(!0), (l[e[0].toLowerCase()] = e[1]);
            });
          var u = {
            proj: "projName",
            datum: "datumCode",
            rf: function(t) {
              a.rf = parseFloat(t);
            },
            lat_0: function(t) {
              a.lat0 = t * n;
            },
            lat_1: function(t) {
              a.lat1 = t * n;
            },
            lat_2: function(t) {
              a.lat2 = t * n;
            },
            lat_ts: function(t) {
              a.lat_ts = t * n;
            },
            lon_0: function(t) {
              a.long0 = t * n;
            },
            lon_1: function(t) {
              a.long1 = t * n;
            },
            lon_2: function(t) {
              a.long2 = t * n;
            },
            alpha: function(t) {
              a.alpha = parseFloat(t) * n;
            },
            lonc: function(t) {
              a.longc = t * n;
            },
            x_0: function(t) {
              a.x0 = parseFloat(t);
            },
            y_0: function(t) {
              a.y0 = parseFloat(t);
            },
            k_0: function(t) {
              a.k0 = parseFloat(t);
            },
            k: function(t) {
              a.k0 = parseFloat(t);
            },
            a: function(t) {
              a.a = parseFloat(t);
            },
            b: function(t) {
              a.b = parseFloat(t);
            },
            r_a: function() {
              a.R_A = !0;
            },
            zone: function(t) {
              a.zone = parseInt(t, 10);
            },
            south: function() {
              a.utmSouth = !0;
            },
            towgs84: function(t) {
              a.datum_params = t.split(",").map(function(t) {
                return parseFloat(t);
              });
            },
            to_meter: function(t) {
              a.to_meter = parseFloat(t);
            },
            units: function(t) {
              (a.units = t), o[t] && (a.to_meter = o[t].to_meter);
            },
            from_greenwich: function(t) {
              a.from_greenwich = t * n;
            },
            pm: function(t) {
              a.from_greenwich = (i[t] ? i[t] : parseFloat(t)) * n;
            },
            nadgrids: function(t) {
              "@null" === t ? (a.datumCode = "none") : (a.nadgrids = t);
            },
            axis: function(t) {
              var e = "ewnsud";
              3 === t.length &&
                -1 !== e.indexOf(t.substr(0, 1)) &&
                -1 !== e.indexOf(t.substr(1, 1)) &&
                -1 !== e.indexOf(t.substr(2, 1)) &&
                (a.axis = t);
            }
          };
          for (e in l)
            (r = l[e]),
              e in u
                ? "function" == typeof (s = u[e])
                  ? s(r)
                  : (a[s] = r)
                : (a[e] = r);
          return (
            "string" == typeof a.datumCode &&
              "WGS84" !== a.datumCode &&
              (a.datumCode = a.datumCode.toLowerCase()),
            a
          );
        };
      },
      4378: (t, e, r) => {
        var n = [r(2951), r(473)],
          i = {},
          o = [];
        function s(t, e) {
          var r = o.length;
          return t.names
            ? ((o[r] = t),
              t.names.forEach(function(t) {
                i[t.toLowerCase()] = r;
              }),
              this)
            : (console.log(e), !0);
        }
        (e.add = s),
          (e.get = function(t) {
            if (!t) return !1;
            var e = t.toLowerCase();
            return void 0 !== i[e] && o[i[e]] ? o[i[e]] : void 0;
          }),
          (e.start = function() {
            n.forEach(s);
          });
      },
      7122: (t, e, r) => {
        var n = 1e-10,
          i = r(1566),
          o = r(5867),
          s = r(7674),
          a = r(4041);
        (e.init = function() {
          Math.abs(this.lat1 + this.lat2) < n ||
            ((this.temp = this.b / this.a),
            (this.es = 1 - Math.pow(this.temp, 2)),
            (this.e3 = Math.sqrt(this.es)),
            (this.sin_po = Math.sin(this.lat1)),
            (this.cos_po = Math.cos(this.lat1)),
            (this.t1 = this.sin_po),
            (this.con = this.sin_po),
            (this.ms1 = i(this.e3, this.sin_po, this.cos_po)),
            (this.qs1 = o(this.e3, this.sin_po, this.cos_po)),
            (this.sin_po = Math.sin(this.lat2)),
            (this.cos_po = Math.cos(this.lat2)),
            (this.t2 = this.sin_po),
            (this.ms2 = i(this.e3, this.sin_po, this.cos_po)),
            (this.qs2 = o(this.e3, this.sin_po, this.cos_po)),
            (this.sin_po = Math.sin(this.lat0)),
            (this.cos_po = Math.cos(this.lat0)),
            (this.t3 = this.sin_po),
            (this.qs0 = o(this.e3, this.sin_po, this.cos_po)),
            Math.abs(this.lat1 - this.lat2) > n
              ? (this.ns0 =
                  (this.ms1 * this.ms1 - this.ms2 * this.ms2) /
                  (this.qs2 - this.qs1))
              : (this.ns0 = this.con),
            (this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1),
            (this.rh =
              (this.a * Math.sqrt(this.c - this.ns0 * this.qs0)) / this.ns0));
        }),
          (e.forward = function(t) {
            var e = t.x,
              r = t.y;
            (this.sin_phi = Math.sin(r)), (this.cos_phi = Math.cos(r));
            var n = o(this.e3, this.sin_phi, this.cos_phi),
              i = (this.a * Math.sqrt(this.c - this.ns0 * n)) / this.ns0,
              a = this.ns0 * s(e - this.long0),
              l = i * Math.sin(a) + this.x0,
              u = this.rh - i * Math.cos(a) + this.y0;
            return (t.x = l), (t.y = u), t;
          }),
          (e.inverse = function(t) {
            var e, r, n, i, o, a;
            return (
              (t.x -= this.x0),
              (t.y = this.rh - t.y + this.y0),
              this.ns0 >= 0
                ? ((e = Math.sqrt(t.x * t.x + t.y * t.y)), (n = 1))
                : ((e = -Math.sqrt(t.x * t.x + t.y * t.y)), (n = -1)),
              (i = 0),
              0 !== e && (i = Math.atan2(n * t.x, n * t.y)),
              (n = (e * this.ns0) / this.a),
              this.sphere
                ? (a = Math.asin((this.c - n * n) / (2 * this.ns0)))
                : ((r = (this.c - n * n) / this.ns0),
                  (a = this.phi1z(this.e3, r))),
              (o = s(i / this.ns0 + this.long0)),
              (t.x = o),
              (t.y = a),
              t
            );
          }),
          (e.phi1z = function(t, e) {
            var r,
              i,
              o,
              s,
              l = a(0.5 * e);
            if (t < n) return l;
            for (var u = t * t, h = 1; h <= 25; h++)
              if (
                ((l += s =
                  ((0.5 * (o = 1 - (i = t * (r = Math.sin(l))) * i) * o) /
                    Math.cos(l)) *
                  (e / (1 - u) -
                    r / o +
                    (0.5 / t) * Math.log((1 - i) / (1 + i)))),
                Math.abs(s) <= 1e-7)
              )
                return l;
            return null;
          }),
          (e.names = ["Albers_Conic_Equal_Area", "Albers", "aea"]);
      },
      3337: (t, e, r) => {
        var n = r(7674),
          i = Math.PI / 2,
          o = 1e-10,
          s = r(9137),
          a = r(7354),
          l = r(6172),
          u = r(3008),
          h = r(1715),
          c = r(2781),
          p = r(4041),
          f = r(3249);
        (e.init = function() {
          (this.sin_p12 = Math.sin(this.lat0)),
            (this.cos_p12 = Math.cos(this.lat0));
        }),
          (e.forward = function(t) {
            var e,
              r,
              p,
              f,
              d,
              y,
              g,
              m,
              v,
              _,
              x,
              b,
              S,
              I,
              w,
              N,
              C,
              E,
              M,
              P,
              O,
              L,
              T = t.x,
              A = t.y,
              R = Math.sin(t.y),
              F = Math.cos(t.y),
              D = n(T - this.long0);
            return this.sphere
              ? Math.abs(this.sin_p12 - 1) <= o
                ? ((t.x = this.x0 + this.a * (i - A) * Math.sin(D)),
                  (t.y = this.y0 - this.a * (i - A) * Math.cos(D)),
                  t)
                : Math.abs(this.sin_p12 + 1) <= o
                ? ((t.x = this.x0 + this.a * (i + A) * Math.sin(D)),
                  (t.y = this.y0 + this.a * (i + A) * Math.cos(D)),
                  t)
                : ((E = this.sin_p12 * R + this.cos_p12 * F * Math.cos(D)),
                  (C = (N = Math.acos(E)) / Math.sin(N)),
                  (t.x = this.x0 + this.a * C * F * Math.sin(D)),
                  (t.y =
                    this.y0 +
                    this.a *
                      C *
                      (this.cos_p12 * R - this.sin_p12 * F * Math.cos(D))),
                  t)
              : ((e = a(this.es)),
                (r = l(this.es)),
                (p = u(this.es)),
                (f = h(this.es)),
                Math.abs(this.sin_p12 - 1) <= o
                  ? ((d = this.a * s(e, r, p, f, i)),
                    (y = this.a * s(e, r, p, f, A)),
                    (t.x = this.x0 + (d - y) * Math.sin(D)),
                    (t.y = this.y0 - (d - y) * Math.cos(D)),
                    t)
                  : Math.abs(this.sin_p12 + 1) <= o
                  ? ((d = this.a * s(e, r, p, f, i)),
                    (y = this.a * s(e, r, p, f, A)),
                    (t.x = this.x0 + (d + y) * Math.sin(D)),
                    (t.y = this.y0 + (d + y) * Math.cos(D)),
                    t)
                  : ((g = R / F),
                    (m = c(this.a, this.e, this.sin_p12)),
                    (v = c(this.a, this.e, R)),
                    (_ = Math.atan(
                      (1 - this.es) * g + (this.es * m * this.sin_p12) / (v * F)
                    )),
                    (M =
                      0 ===
                      (x = Math.atan2(
                        Math.sin(D),
                        this.cos_p12 * Math.tan(_) - this.sin_p12 * Math.cos(D)
                      ))
                        ? Math.asin(
                            this.cos_p12 * Math.sin(_) -
                              this.sin_p12 * Math.cos(_)
                          )
                        : Math.abs(Math.abs(x) - Math.PI) <= o
                        ? -Math.asin(
                            this.cos_p12 * Math.sin(_) -
                              this.sin_p12 * Math.cos(_)
                          )
                        : Math.asin((Math.sin(D) * Math.cos(_)) / Math.sin(x))),
                    (b = (this.e * this.sin_p12) / Math.sqrt(1 - this.es)),
                    (N =
                      m *
                      M *
                      (1 -
                        ((P = M * M) *
                          (w =
                            (S =
                              (this.e * this.cos_p12 * Math.cos(x)) /
                              Math.sqrt(1 - this.es)) * S) *
                          (1 - w)) /
                          6 +
                        ((O = P * M) / 8) * (I = b * S) * (1 - 2 * w) +
                        ((L = O * M) / 120) *
                          (w * (4 - 7 * w) - 3 * b * b * (1 - 7 * w)) -
                        ((L * M) / 48) * I)),
                    (t.x = this.x0 + N * Math.sin(x)),
                    (t.y = this.y0 + N * Math.cos(x)),
                    t));
          }),
          (e.inverse = function(t) {
            var e,
              r,
              d,
              y,
              g,
              m,
              v,
              _,
              x,
              b,
              S,
              I,
              w,
              N,
              C,
              E,
              M,
              P,
              O,
              L,
              T,
              A;
            if (((t.x -= this.x0), (t.y -= this.y0), this.sphere)) {
              if ((e = Math.sqrt(t.x * t.x + t.y * t.y)) > 2 * i * this.a)
                return;
              return (
                (r = e / this.a),
                (d = Math.sin(r)),
                (y = Math.cos(r)),
                (g = this.long0),
                Math.abs(e) <= o
                  ? (m = this.lat0)
                  : ((m = p(y * this.sin_p12 + (t.y * d * this.cos_p12) / e)),
                    (v = Math.abs(this.lat0) - i),
                    (g =
                      Math.abs(v) <= o
                        ? this.lat0 >= 0
                          ? n(this.long0 + Math.atan2(t.x, -t.y))
                          : n(this.long0 - Math.atan2(-t.x, t.y))
                        : n(
                            this.long0 +
                              Math.atan2(
                                t.x * d,
                                e * this.cos_p12 * y - t.y * this.sin_p12 * d
                              )
                          ))),
                (t.x = g),
                (t.y = m),
                t
              );
            }
            return (
              (_ = a(this.es)),
              (x = l(this.es)),
              (b = u(this.es)),
              (S = h(this.es)),
              Math.abs(this.sin_p12 - 1) <= o
                ? ((I = this.a * s(_, x, b, S, i)),
                  (e = Math.sqrt(t.x * t.x + t.y * t.y)),
                  (m = f((I - e) / this.a, _, x, b, S)),
                  (g = n(this.long0 + Math.atan2(t.x, -1 * t.y))),
                  (t.x = g),
                  (t.y = m),
                  t)
                : Math.abs(this.sin_p12 + 1) <= o
                ? ((I = this.a * s(_, x, b, S, i)),
                  (e = Math.sqrt(t.x * t.x + t.y * t.y)),
                  (m = f((e - I) / this.a, _, x, b, S)),
                  (g = n(this.long0 + Math.atan2(t.x, t.y))),
                  (t.x = g),
                  (t.y = m),
                  t)
                : ((e = Math.sqrt(t.x * t.x + t.y * t.y)),
                  (C = Math.atan2(t.x, t.y)),
                  (w = c(this.a, this.e, this.sin_p12)),
                  (E = Math.cos(C)),
                  (P = (-(M = this.e * this.cos_p12 * E) * M) / (1 - this.es)),
                  (O =
                    (3 * this.es * (1 - P) * this.sin_p12 * this.cos_p12 * E) /
                    (1 - this.es)),
                  (A =
                    1 -
                    (P *
                      (T =
                        (L = e / w) -
                        (P * (1 + P) * Math.pow(L, 3)) / 6 -
                        (O * (1 + 3 * P) * Math.pow(L, 4)) / 24) *
                      T) /
                      2 -
                    (L * T * T * T) / 6),
                  (N = Math.asin(
                    this.sin_p12 * Math.cos(T) + this.cos_p12 * Math.sin(T) * E
                  )),
                  (g = n(
                    this.long0 +
                      Math.asin((Math.sin(C) * Math.sin(T)) / Math.cos(N))
                  )),
                  (m = Math.atan(
                    ((1 - (this.es * A * this.sin_p12) / Math.sin(N)) *
                      Math.tan(N)) /
                      (1 - this.es)
                  )),
                  (t.x = g),
                  (t.y = m),
                  t)
            );
          }),
          (e.names = ["Azimuthal_Equidistant", "aeqd"]);
      },
      826: (t, e, r) => {
        var n = r(9137),
          i = r(7354),
          o = r(6172),
          s = r(3008),
          a = r(1715),
          l = r(2781),
          u = r(7674),
          h = r(172),
          c = r(3249),
          p = Math.PI / 2;
        (e.init = function() {
          this.sphere ||
            ((this.e0 = i(this.es)),
            (this.e1 = o(this.es)),
            (this.e2 = s(this.es)),
            (this.e3 = a(this.es)),
            (this.ml0 =
              this.a * n(this.e0, this.e1, this.e2, this.e3, this.lat0)));
        }),
          (e.forward = function(t) {
            var e,
              r,
              i = t.x,
              o = t.y;
            if (((i = u(i - this.long0)), this.sphere))
              (e = this.a * Math.asin(Math.cos(o) * Math.sin(i))),
                (r =
                  this.a * (Math.atan2(Math.tan(o), Math.cos(i)) - this.lat0));
            else {
              var s = Math.sin(o),
                a = Math.cos(o),
                h = l(this.a, this.e, s),
                c = Math.tan(o) * Math.tan(o),
                p = i * Math.cos(o),
                f = p * p,
                d = (this.es * a * a) / (1 - this.es);
              (e = h * p * (1 - f * c * (1 / 6 - ((8 - c + 8 * d) * f) / 120))),
                (r =
                  this.a * n(this.e0, this.e1, this.e2, this.e3, o) -
                  this.ml0 +
                  ((h * s) / a) * f * (0.5 + ((5 - c + 6 * d) * f) / 24));
            }
            return (t.x = e + this.x0), (t.y = r + this.y0), t;
          }),
          (e.inverse = function(t) {
            (t.x -= this.x0), (t.y -= this.y0);
            var e,
              r,
              n = t.x / this.a,
              i = t.y / this.a;
            if (this.sphere) {
              var o = i + this.lat0;
              (e = Math.asin(Math.sin(o) * Math.cos(n))),
                (r = Math.atan2(Math.tan(n), Math.cos(o)));
            } else {
              var s = this.ml0 / this.a + i,
                a = c(s, this.e0, this.e1, this.e2, this.e3);
              if (Math.abs(Math.abs(a) - p) <= 1e-10)
                return (t.x = this.long0), (t.y = p), i < 0 && (t.y *= -1), t;
              var f = l(this.a, this.e, Math.sin(a)),
                d = ((f * f * f) / this.a / this.a) * (1 - this.es),
                y = Math.pow(Math.tan(a), 2),
                g = (n * this.a) / f,
                m = g * g;
              (e =
                a -
                ((f * Math.tan(a)) / d) *
                  g *
                  g *
                  (0.5 - ((1 + 3 * y) * g * g) / 24)),
                (r =
                  (g * (1 - m * (y / 3 + ((1 + 3 * y) * y * m) / 15))) /
                  Math.cos(a));
            }
            return (t.x = u(r + this.long0)), (t.y = h(e)), t;
          }),
          (e.names = ["Cassini", "Cassini_Soldner", "cass"]);
      },
      8804: (t, e, r) => {
        var n = r(7674),
          i = r(5867),
          o = r(1566),
          s = r(1716);
        (e.init = function() {
          this.sphere ||
            (this.k0 = o(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)));
        }),
          (e.forward = function(t) {
            var e,
              r,
              o = t.x,
              s = t.y,
              a = n(o - this.long0);
            if (this.sphere)
              (e = this.x0 + this.a * a * Math.cos(this.lat_ts)),
                (r = this.y0 + (this.a * Math.sin(s)) / Math.cos(this.lat_ts));
            else {
              var l = i(this.e, Math.sin(s));
              (e = this.x0 + this.a * this.k0 * a),
                (r = this.y0 + (this.a * l * 0.5) / this.k0);
            }
            return (t.x = e), (t.y = r), t;
          }),
          (e.inverse = function(t) {
            var e, r;
            return (
              (t.x -= this.x0),
              (t.y -= this.y0),
              this.sphere
                ? ((e = n(this.long0 + t.x / this.a / Math.cos(this.lat_ts))),
                  (r = Math.asin((t.y / this.a) * Math.cos(this.lat_ts))))
                : ((r = s(this.e, (2 * t.y * this.k0) / this.a)),
                  (e = n(this.long0 + t.x / (this.a * this.k0)))),
              (t.x = e),
              (t.y = r),
              t
            );
          }),
          (e.names = ["cea"]);
      },
      899: (t, e, r) => {
        var n = r(7674),
          i = r(172);
        (e.init = function() {
          (this.x0 = this.x0 || 0),
            (this.y0 = this.y0 || 0),
            (this.lat0 = this.lat0 || 0),
            (this.long0 = this.long0 || 0),
            (this.lat_ts = this.lat_ts || 0),
            (this.title =
              this.title || "Equidistant Cylindrical (Plate Carre)"),
            (this.rc = Math.cos(this.lat_ts));
        }),
          (e.forward = function(t) {
            var e = t.x,
              r = t.y,
              o = n(e - this.long0),
              s = i(r - this.lat0);
            return (
              (t.x = this.x0 + this.a * o * this.rc),
              (t.y = this.y0 + this.a * s),
              t
            );
          }),
          (e.inverse = function(t) {
            var e = t.x,
              r = t.y;
            return (
              (t.x = n(this.long0 + (e - this.x0) / (this.a * this.rc))),
              (t.y = i(this.lat0 + (r - this.y0) / this.a)),
              t
            );
          }),
          (e.names = ["Equirectangular", "Equidistant_Cylindrical", "eqc"]);
      },
      6626: (t, e, r) => {
        var n = r(7354),
          i = r(6172),
          o = r(3008),
          s = r(1715),
          a = r(1566),
          l = r(9137),
          u = r(7674),
          h = r(172),
          c = r(3249);
        (e.init = function() {
          Math.abs(this.lat1 + this.lat2) < 1e-10 ||
            ((this.lat2 = this.lat2 || this.lat1),
            (this.temp = this.b / this.a),
            (this.es = 1 - Math.pow(this.temp, 2)),
            (this.e = Math.sqrt(this.es)),
            (this.e0 = n(this.es)),
            (this.e1 = i(this.es)),
            (this.e2 = o(this.es)),
            (this.e3 = s(this.es)),
            (this.sinphi = Math.sin(this.lat1)),
            (this.cosphi = Math.cos(this.lat1)),
            (this.ms1 = a(this.e, this.sinphi, this.cosphi)),
            (this.ml1 = l(this.e0, this.e1, this.e2, this.e3, this.lat1)),
            Math.abs(this.lat1 - this.lat2) < 1e-10
              ? (this.ns = this.sinphi)
              : ((this.sinphi = Math.sin(this.lat2)),
                (this.cosphi = Math.cos(this.lat2)),
                (this.ms2 = a(this.e, this.sinphi, this.cosphi)),
                (this.ml2 = l(this.e0, this.e1, this.e2, this.e3, this.lat2)),
                (this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1))),
            (this.g = this.ml1 + this.ms1 / this.ns),
            (this.ml0 = l(this.e0, this.e1, this.e2, this.e3, this.lat0)),
            (this.rh = this.a * (this.g - this.ml0)));
        }),
          (e.forward = function(t) {
            var e,
              r = t.x,
              n = t.y;
            if (this.sphere) e = this.a * (this.g - n);
            else {
              var i = l(this.e0, this.e1, this.e2, this.e3, n);
              e = this.a * (this.g - i);
            }
            var o = this.ns * u(r - this.long0),
              s = this.x0 + e * Math.sin(o),
              a = this.y0 + this.rh - e * Math.cos(o);
            return (t.x = s), (t.y = a), t;
          }),
          (e.inverse = function(t) {
            var e, r, n, i;
            (t.x -= this.x0),
              (t.y = this.rh - t.y + this.y0),
              this.ns >= 0
                ? ((r = Math.sqrt(t.x * t.x + t.y * t.y)), (e = 1))
                : ((r = -Math.sqrt(t.x * t.x + t.y * t.y)), (e = -1));
            var o = 0;
            if ((0 !== r && (o = Math.atan2(e * t.x, e * t.y)), this.sphere))
              return (
                (i = u(this.long0 + o / this.ns)),
                (n = h(this.g - r / this.a)),
                (t.x = i),
                (t.y = n),
                t
              );
            var s = this.g - r / this.a;
            return (
              (n = c(s, this.e0, this.e1, this.e2, this.e3)),
              (i = u(this.long0 + o / this.ns)),
              (t.x = i),
              (t.y = n),
              t
            );
          }),
          (e.names = ["Equidistant_Conic", "eqdc"]);
      },
      2453: (t, e, r) => {
        var n = Math.PI / 4,
          i = r(9903),
          o = Math.PI / 2;
        (e.init = function() {
          var t = Math.sin(this.lat0),
            e = Math.cos(this.lat0);
          (e *= e),
            (this.rc = Math.sqrt(1 - this.es) / (1 - this.es * t * t)),
            (this.C = Math.sqrt(1 + (this.es * e * e) / (1 - this.es))),
            (this.phic0 = Math.asin(t / this.C)),
            (this.ratexp = 0.5 * this.C * this.e),
            (this.K =
              Math.tan(0.5 * this.phic0 + n) /
              (Math.pow(Math.tan(0.5 * this.lat0 + n), this.C) *
                i(this.e * t, this.ratexp)));
        }),
          (e.forward = function(t) {
            var e = t.x,
              r = t.y;
            return (
              (t.y =
                2 *
                  Math.atan(
                    this.K *
                      Math.pow(Math.tan(0.5 * r + n), this.C) *
                      i(this.e * Math.sin(r), this.ratexp)
                  ) -
                o),
              (t.x = this.C * e),
              t
            );
          }),
          (e.inverse = function(t) {
            for (
              var e = t.x / this.C,
                r = t.y,
                s = Math.pow(Math.tan(0.5 * r + n) / this.K, 1 / this.C),
                a = 20;
              a > 0 &&
              ((r =
                2 * Math.atan(s * i(this.e * Math.sin(t.y), -0.5 * this.e)) -
                o),
              !(Math.abs(r - t.y) < 1e-14));
              --a
            )
              t.y = r;
            return a ? ((t.x = e), (t.y = r), t) : null;
          }),
          (e.names = ["gauss"]);
      },
      5228: (t, e, r) => {
        var n = r(7674),
          i = r(4041);
        (e.init = function() {
          (this.sin_p14 = Math.sin(this.lat0)),
            (this.cos_p14 = Math.cos(this.lat0)),
            (this.infinity_dist = 1e3 * this.a),
            (this.rc = 1);
        }),
          (e.forward = function(t) {
            var e,
              r,
              i,
              o,
              s,
              a,
              l,
              u = t.x,
              h = t.y;
            return (
              (i = n(u - this.long0)),
              (e = Math.sin(h)),
              (r = Math.cos(h)),
              (o = Math.cos(i)),
              (s = this.sin_p14 * e + this.cos_p14 * r * o) > 0 ||
              Math.abs(s) <= 1e-10
                ? ((a = this.x0 + (1 * this.a * r * Math.sin(i)) / s),
                  (l =
                    this.y0 +
                    (1 * this.a * (this.cos_p14 * e - this.sin_p14 * r * o)) /
                      s))
                : ((a = this.x0 + this.infinity_dist * r * Math.sin(i)),
                  (l =
                    this.y0 +
                    this.infinity_dist *
                      (this.cos_p14 * e - this.sin_p14 * r * o))),
              (t.x = a),
              (t.y = l),
              t
            );
          }),
          (e.inverse = function(t) {
            var e, r, o, s, a, l;
            return (
              (t.x = (t.x - this.x0) / this.a),
              (t.y = (t.y - this.y0) / this.a),
              (t.x /= this.k0),
              (t.y /= this.k0),
              (e = Math.sqrt(t.x * t.x + t.y * t.y))
                ? ((s = Math.atan2(e, this.rc)),
                  (r = Math.sin(s)),
                  (o = Math.cos(s)),
                  (l = i(o * this.sin_p14 + (t.y * r * this.cos_p14) / e)),
                  (a = Math.atan2(
                    t.x * r,
                    e * this.cos_p14 * o - t.y * this.sin_p14 * r
                  )),
                  (a = n(this.long0 + a)))
                : ((l = this.phic0), (a = 0)),
              (t.x = a),
              (t.y = l),
              t
            );
          }),
          (e.names = ["gnom"]);
      },
      6776: (t, e, r) => {
        var n = r(7674);
        (e.init = function() {
          (this.a = 6377397.155),
            (this.es = 0.006674372230614),
            (this.e = Math.sqrt(this.es)),
            this.lat0 || (this.lat0 = 0.863937979737193),
            this.long0 || (this.long0 = 0.4334234309119251),
            this.k0 || (this.k0 = 0.9999),
            (this.s45 = 0.785398163397448),
            (this.s90 = 2 * this.s45),
            (this.fi0 = this.lat0),
            (this.e2 = this.es),
            (this.e = Math.sqrt(this.e2)),
            (this.alfa = Math.sqrt(
              1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2)
            )),
            (this.uq = 1.04216856380474),
            (this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa)),
            (this.g = Math.pow(
              (1 + this.e * Math.sin(this.fi0)) /
                (1 - this.e * Math.sin(this.fi0)),
              (this.alfa * this.e) / 2
            )),
            (this.k =
              (Math.tan(this.u0 / 2 + this.s45) /
                Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa)) *
              this.g),
            (this.k1 = this.k0),
            (this.n0 =
              (this.a * Math.sqrt(1 - this.e2)) /
              (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2))),
            (this.s0 = 1.37008346281555),
            (this.n = Math.sin(this.s0)),
            (this.ro0 = (this.k1 * this.n0) / Math.tan(this.s0)),
            (this.ad = this.s90 - this.uq);
        }),
          (e.forward = function(t) {
            var e,
              r,
              i,
              o,
              s,
              a,
              l,
              u = t.x,
              h = t.y,
              c = n(u - this.long0);
            return (
              (e = Math.pow(
                (1 + this.e * Math.sin(h)) / (1 - this.e * Math.sin(h)),
                (this.alfa * this.e) / 2
              )),
              (r =
                2 *
                (Math.atan(
                  (this.k * Math.pow(Math.tan(h / 2 + this.s45), this.alfa)) / e
                ) -
                  this.s45)),
              (i = -c * this.alfa),
              (o = Math.asin(
                Math.cos(this.ad) * Math.sin(r) +
                  Math.sin(this.ad) * Math.cos(r) * Math.cos(i)
              )),
              (s = Math.asin((Math.cos(r) * Math.sin(i)) / Math.cos(o))),
              (a = this.n * s),
              (l =
                (this.ro0 *
                  Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n)) /
                Math.pow(Math.tan(o / 2 + this.s45), this.n)),
              (t.y = (l * Math.cos(a)) / 1),
              (t.x = (l * Math.sin(a)) / 1),
              this.czech || ((t.y *= -1), (t.x *= -1)),
              t
            );
          }),
          (e.inverse = function(t) {
            var e,
              r,
              n,
              i,
              o,
              s,
              a,
              l = t.x;
            (t.x = t.y),
              (t.y = l),
              this.czech || ((t.y *= -1), (t.x *= -1)),
              (o = Math.sqrt(t.x * t.x + t.y * t.y)),
              (i = Math.atan2(t.y, t.x) / Math.sin(this.s0)),
              (n =
                2 *
                (Math.atan(
                  Math.pow(this.ro0 / o, 1 / this.n) *
                    Math.tan(this.s0 / 2 + this.s45)
                ) -
                  this.s45)),
              (e = Math.asin(
                Math.cos(this.ad) * Math.sin(n) -
                  Math.sin(this.ad) * Math.cos(n) * Math.cos(i)
              )),
              (r = Math.asin((Math.cos(n) * Math.sin(i)) / Math.cos(e))),
              (t.x = this.long0 - r / this.alfa),
              (s = e),
              (a = 0);
            var u = 0;
            do {
              (t.y =
                2 *
                (Math.atan(
                  Math.pow(this.k, -1 / this.alfa) *
                    Math.pow(Math.tan(e / 2 + this.s45), 1 / this.alfa) *
                    Math.pow(
                      (1 + this.e * Math.sin(s)) / (1 - this.e * Math.sin(s)),
                      this.e / 2
                    )
                ) -
                  this.s45)),
                Math.abs(s - t.y) < 1e-10 && (a = 1),
                (s = t.y),
                (u += 1);
            } while (0 === a && u < 15);
            return u >= 15 ? null : t;
          }),
          (e.names = ["Krovak", "krovak"]);
      },
      9219: (t, e, r) => {
        var n = Math.PI / 2,
          i = Math.PI / 4,
          o = 1e-10,
          s = r(5867),
          a = r(7674);
        (e.S_POLE = 1),
          (e.N_POLE = 2),
          (e.EQUIT = 3),
          (e.OBLIQ = 4),
          (e.init = function() {
            var t,
              e = Math.abs(this.lat0);
            if (
              (Math.abs(e - n) < o
                ? (this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE)
                : Math.abs(e) < o
                ? (this.mode = this.EQUIT)
                : (this.mode = this.OBLIQ),
              this.es > 0)
            )
              switch (
                ((this.qp = s(this.e, 1)),
                (this.mmf = 0.5 / (1 - this.es)),
                (this.apa = this.authset(this.es)),
                this.mode)
              ) {
                case this.N_POLE:
                case this.S_POLE:
                  this.dd = 1;
                  break;
                case this.EQUIT:
                  (this.rq = Math.sqrt(0.5 * this.qp)),
                    (this.dd = 1 / this.rq),
                    (this.xmf = 1),
                    (this.ymf = 0.5 * this.qp);
                  break;
                case this.OBLIQ:
                  (this.rq = Math.sqrt(0.5 * this.qp)),
                    (t = Math.sin(this.lat0)),
                    (this.sinb1 = s(this.e, t) / this.qp),
                    (this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1)),
                    (this.dd =
                      Math.cos(this.lat0) /
                      (Math.sqrt(1 - this.es * t * t) * this.rq * this.cosb1)),
                    (this.ymf = (this.xmf = this.rq) / this.dd),
                    (this.xmf *= this.dd);
              }
            else
              this.mode === this.OBLIQ &&
                ((this.sinph0 = Math.sin(this.lat0)),
                (this.cosph0 = Math.cos(this.lat0)));
          }),
          (e.forward = function(t) {
            var e,
              r,
              l,
              u,
              h,
              c,
              p,
              f,
              d,
              y,
              g = t.x,
              m = t.y;
            if (((g = a(g - this.long0)), this.sphere)) {
              if (
                ((h = Math.sin(m)),
                (y = Math.cos(m)),
                (l = Math.cos(g)),
                this.mode === this.OBLIQ || this.mode === this.EQUIT)
              ) {
                if (
                  (r =
                    this.mode === this.EQUIT
                      ? 1 + y * l
                      : 1 + this.sinph0 * h + this.cosph0 * y * l) <= o
                )
                  return null;
                (e = (r = Math.sqrt(2 / r)) * y * Math.sin(g)),
                  (r *=
                    this.mode === this.EQUIT
                      ? h
                      : this.cosph0 * h - this.sinph0 * y * l);
              } else if (
                this.mode === this.N_POLE ||
                this.mode === this.S_POLE
              ) {
                if (
                  (this.mode === this.N_POLE && (l = -l),
                  Math.abs(m + this.phi0) < o)
                )
                  return null;
                (r = i - 0.5 * m),
                  (e =
                    (r =
                      2 *
                      (this.mode === this.S_POLE ? Math.cos(r) : Math.sin(r))) *
                    Math.sin(g)),
                  (r *= l);
              }
            } else {
              switch (
                ((p = 0),
                (f = 0),
                (d = 0),
                (l = Math.cos(g)),
                (u = Math.sin(g)),
                (h = Math.sin(m)),
                (c = s(this.e, h)),
                (this.mode !== this.OBLIQ && this.mode !== this.EQUIT) ||
                  ((p = c / this.qp), (f = Math.sqrt(1 - p * p))),
                this.mode)
              ) {
                case this.OBLIQ:
                  d = 1 + this.sinb1 * p + this.cosb1 * f * l;
                  break;
                case this.EQUIT:
                  d = 1 + f * l;
                  break;
                case this.N_POLE:
                  (d = n + m), (c = this.qp - c);
                  break;
                case this.S_POLE:
                  (d = m - n), (c = this.qp + c);
              }
              if (Math.abs(d) < o) return null;
              switch (this.mode) {
                case this.OBLIQ:
                case this.EQUIT:
                  (d = Math.sqrt(2 / d)),
                    (r =
                      this.mode === this.OBLIQ
                        ? this.ymf * d * (this.cosb1 * p - this.sinb1 * f * l)
                        : (d = Math.sqrt(2 / (1 + f * l))) * p * this.ymf),
                    (e = this.xmf * d * f * u);
                  break;
                case this.N_POLE:
                case this.S_POLE:
                  c >= 0
                    ? ((e = (d = Math.sqrt(c)) * u),
                      (r = l * (this.mode === this.S_POLE ? d : -d)))
                    : (e = r = 0);
              }
            }
            return (
              (t.x = this.a * e + this.x0), (t.y = this.a * r + this.y0), t
            );
          }),
          (e.inverse = function(t) {
            (t.x -= this.x0), (t.y -= this.y0);
            var e,
              r,
              i,
              s,
              l,
              u,
              h,
              c = t.x / this.a,
              p = t.y / this.a;
            if (this.sphere) {
              var f,
                d = 0,
                y = 0;
              if ((r = 0.5 * (f = Math.sqrt(c * c + p * p))) > 1) return null;
              switch (
                ((r = 2 * Math.asin(r)),
                (this.mode !== this.OBLIQ && this.mode !== this.EQUIT) ||
                  ((y = Math.sin(r)), (d = Math.cos(r))),
                this.mode)
              ) {
                case this.EQUIT:
                  (r = Math.abs(f) <= o ? 0 : Math.asin((p * y) / f)),
                    (c *= y),
                    (p = d * f);
                  break;
                case this.OBLIQ:
                  (r =
                    Math.abs(f) <= o
                      ? this.phi0
                      : Math.asin(d * this.sinph0 + (p * y * this.cosph0) / f)),
                    (c *= y * this.cosph0),
                    (p = (d - Math.sin(r) * this.sinph0) * f);
                  break;
                case this.N_POLE:
                  (p = -p), (r = n - r);
                  break;
                case this.S_POLE:
                  r -= n;
              }
              e =
                0 !== p ||
                (this.mode !== this.EQUIT && this.mode !== this.OBLIQ)
                  ? Math.atan2(c, p)
                  : 0;
            } else {
              if (
                ((h = 0), this.mode === this.OBLIQ || this.mode === this.EQUIT)
              ) {
                if (
                  ((c /= this.dd),
                  (p *= this.dd),
                  (u = Math.sqrt(c * c + p * p)) < o)
                )
                  return (t.x = 0), (t.y = this.phi0), t;
                (s = 2 * Math.asin((0.5 * u) / this.rq)),
                  (i = Math.cos(s)),
                  (c *= s = Math.sin(s)),
                  this.mode === this.OBLIQ
                    ? ((h = i * this.sinb1 + (p * s * this.cosb1) / u),
                      (l = this.qp * h),
                      (p = u * this.cosb1 * i - p * this.sinb1 * s))
                    : ((h = (p * s) / u), (l = this.qp * h), (p = u * i));
              } else if (
                this.mode === this.N_POLE ||
                this.mode === this.S_POLE
              ) {
                if (
                  (this.mode === this.N_POLE && (p = -p), !(l = c * c + p * p))
                )
                  return (t.x = 0), (t.y = this.phi0), t;
                (h = 1 - l / this.qp), this.mode === this.S_POLE && (h = -h);
              }
              (e = Math.atan2(c, p)),
                (r = this.authlat(Math.asin(h), this.apa));
            }
            return (t.x = a(this.long0 + e)), (t.y = r), t;
          }),
          (e.P00 = 0.3333333333333333),
          (e.P01 = 0.17222222222222222),
          (e.P02 = 0.10257936507936508),
          (e.P10 = 0.06388888888888888),
          (e.P11 = 0.0664021164021164),
          (e.P20 = 0.016415012942191543),
          (e.authset = function(t) {
            var e,
              r = [];
            return (
              (r[0] = t * this.P00),
              (e = t * t),
              (r[0] += e * this.P01),
              (r[1] = e * this.P10),
              (e *= t),
              (r[0] += e * this.P02),
              (r[1] += e * this.P11),
              (r[2] = e * this.P20),
              r
            );
          }),
          (e.authlat = function(t, e) {
            var r = t + t;
            return (
              t +
              e[0] * Math.sin(r) +
              e[1] * Math.sin(r + r) +
              e[2] * Math.sin(r + r + r)
            );
          }),
          (e.names = [
            "Lambert Azimuthal Equal Area",
            "Lambert_Azimuthal_Equal_Area",
            "laea"
          ]);
      },
      2442: (t, e, r) => {
        var n = 1e-10,
          i = r(1566),
          o = r(7877),
          s = Math.PI / 2,
          a = r(7489),
          l = r(7674),
          u = r(3420);
        (e.init = function() {
          if (
            (this.lat2 || (this.lat2 = this.lat1),
            this.k0 || (this.k0 = 1),
            (this.x0 = this.x0 || 0),
            (this.y0 = this.y0 || 0),
            !(Math.abs(this.lat1 + this.lat2) < n))
          ) {
            var t = this.b / this.a;
            this.e = Math.sqrt(1 - t * t);
            var e = Math.sin(this.lat1),
              r = Math.cos(this.lat1),
              s = i(this.e, e, r),
              a = o(this.e, this.lat1, e),
              l = Math.sin(this.lat2),
              u = Math.cos(this.lat2),
              h = i(this.e, l, u),
              c = o(this.e, this.lat2, l),
              p = o(this.e, this.lat0, Math.sin(this.lat0));
            Math.abs(this.lat1 - this.lat2) > n
              ? (this.ns = Math.log(s / h) / Math.log(a / c))
              : (this.ns = e),
              isNaN(this.ns) && (this.ns = e),
              (this.f0 = s / (this.ns * Math.pow(a, this.ns))),
              (this.rh = this.a * this.f0 * Math.pow(p, this.ns)),
              this.title || (this.title = "Lambert Conformal Conic");
          }
        }),
          (e.forward = function(t) {
            var e = t.x,
              r = t.y;
            Math.abs(2 * Math.abs(r) - Math.PI) <= n &&
              (r = a(r) * (s - 2e-10));
            var i,
              u,
              h = Math.abs(Math.abs(r) - s);
            if (h > n)
              (i = o(this.e, r, Math.sin(r))),
                (u = this.a * this.f0 * Math.pow(i, this.ns));
            else {
              if ((h = r * this.ns) <= 0) return null;
              u = 0;
            }
            var c = this.ns * l(e - this.long0);
            return (
              (t.x = this.k0 * (u * Math.sin(c)) + this.x0),
              (t.y = this.k0 * (this.rh - u * Math.cos(c)) + this.y0),
              t
            );
          }),
          (e.inverse = function(t) {
            var e,
              r,
              n,
              i,
              o,
              a = (t.x - this.x0) / this.k0,
              h = this.rh - (t.y - this.y0) / this.k0;
            this.ns > 0
              ? ((e = Math.sqrt(a * a + h * h)), (r = 1))
              : ((e = -Math.sqrt(a * a + h * h)), (r = -1));
            var c = 0;
            if (
              (0 !== e && (c = Math.atan2(r * a, r * h)),
              0 !== e || this.ns > 0)
            ) {
              if (
                ((r = 1 / this.ns),
                (n = Math.pow(e / (this.a * this.f0), r)),
                -9999 === (i = u(this.e, n)))
              )
                return null;
            } else i = -s;
            return (o = l(c / this.ns + this.long0)), (t.x = o), (t.y = i), t;
          }),
          (e.names = [
            "Lambert Tangential Conformal Conic Projection",
            "Lambert_Conformal_Conic",
            "Lambert_Conformal_Conic_2SP",
            "lcc"
          ]);
      },
      473: (t, e) => {
        function r(t) {
          return t;
        }
        (e.init = function() {}),
          (e.forward = r),
          (e.inverse = r),
          (e.names = ["longlat", "identity"]);
      },
      2951: (t, e, r) => {
        var n = r(1566),
          i = Math.PI / 2,
          o = 57.29577951308232,
          s = r(7674),
          a = Math.PI / 4,
          l = r(7877),
          u = r(3420);
        (e.init = function() {
          var t = this.b / this.a;
          (this.es = 1 - t * t),
            "x0" in this || (this.x0 = 0),
            "y0" in this || (this.y0 = 0),
            (this.e = Math.sqrt(this.es)),
            this.lat_ts
              ? this.sphere
                ? (this.k0 = Math.cos(this.lat_ts))
                : (this.k0 = n(
                    this.e,
                    Math.sin(this.lat_ts),
                    Math.cos(this.lat_ts)
                  ))
              : this.k0 || (this.k ? (this.k0 = this.k) : (this.k0 = 1));
        }),
          (e.forward = function(t) {
            var e,
              r,
              n = t.x,
              u = t.y;
            if (u * o > 90 && u * o < -90 && n * o > 180 && n * o < -180)
              return null;
            if (Math.abs(Math.abs(u) - i) <= 1e-10) return null;
            if (this.sphere)
              (e = this.x0 + this.a * this.k0 * s(n - this.long0)),
                (r =
                  this.y0 + this.a * this.k0 * Math.log(Math.tan(a + 0.5 * u)));
            else {
              var h = Math.sin(u),
                c = l(this.e, u, h);
              (e = this.x0 + this.a * this.k0 * s(n - this.long0)),
                (r = this.y0 - this.a * this.k0 * Math.log(c));
            }
            return (t.x = e), (t.y = r), t;
          }),
          (e.inverse = function(t) {
            var e,
              r,
              n = t.x - this.x0,
              o = t.y - this.y0;
            if (this.sphere)
              r = i - 2 * Math.atan(Math.exp(-o / (this.a * this.k0)));
            else {
              var a = Math.exp(-o / (this.a * this.k0));
              if (-9999 === (r = u(this.e, a))) return null;
            }
            return (
              (e = s(this.long0 + n / (this.a * this.k0))),
              (t.x = e),
              (t.y = r),
              t
            );
          }),
          (e.names = [
            "Mercator",
            "Popular Visualisation Pseudo Mercator",
            "Mercator_1SP",
            "Mercator_Auxiliary_Sphere",
            "merc"
          ]);
      },
      8678: (t, e, r) => {
        var n = r(7674);
        (e.init = function() {}),
          (e.forward = function(t) {
            var e = t.x,
              r = t.y,
              i = n(e - this.long0),
              o = this.x0 + this.a * i,
              s =
                this.y0 +
                this.a * Math.log(Math.tan(Math.PI / 4 + r / 2.5)) * 1.25;
            return (t.x = o), (t.y = s), t;
          }),
          (e.inverse = function(t) {
            (t.x -= this.x0), (t.y -= this.y0);
            var e = n(this.long0 + t.x / this.a),
              r =
                2.5 * (Math.atan(Math.exp((0.8 * t.y) / this.a)) - Math.PI / 4);
            return (t.x = e), (t.y = r), t;
          }),
          (e.names = ["Miller_Cylindrical", "mill"]);
      },
      7976: (t, e, r) => {
        var n = r(7674);
        (e.init = function() {}),
          (e.forward = function(t) {
            for (
              var e = t.x,
                r = t.y,
                i = n(e - this.long0),
                o = r,
                s = Math.PI * Math.sin(r),
                a = 0;
              ;
              a++
            ) {
              var l = -(o + Math.sin(o) - s) / (1 + Math.cos(o));
              if (((o += l), Math.abs(l) < 1e-10)) break;
            }
            (o /= 2), Math.PI / 2 - Math.abs(r) < 1e-10 && (i = 0);
            var u = 0.900316316158 * this.a * i * Math.cos(o) + this.x0,
              h = 1.4142135623731 * this.a * Math.sin(o) + this.y0;
            return (t.x = u), (t.y = h), t;
          }),
          (e.inverse = function(t) {
            var e, r;
            (t.x -= this.x0),
              (t.y -= this.y0),
              (r = t.y / (1.4142135623731 * this.a)),
              Math.abs(r) > 0.999999999999 && (r = 0.999999999999),
              (e = Math.asin(r));
            var i = n(
              this.long0 + t.x / (0.900316316158 * this.a * Math.cos(e))
            );
            i < -Math.PI && (i = -Math.PI),
              i > Math.PI && (i = Math.PI),
              (r = (2 * e + Math.sin(2 * e)) / Math.PI),
              Math.abs(r) > 1 && (r = 1);
            var o = Math.asin(r);
            return (t.x = i), (t.y = o), t;
          }),
          (e.names = ["Mollweide", "moll"]);
      },
      9629: (t, e) => {
        var r = 484813681109536e-20;
        (e.iterations = 1),
          (e.init = function() {
            (this.A = []),
              (this.A[1] = 0.6399175073),
              (this.A[2] = -0.1358797613),
              (this.A[3] = 0.063294409),
              (this.A[4] = -0.02526853),
              (this.A[5] = 0.0117879),
              (this.A[6] = -0.0055161),
              (this.A[7] = 0.0026906),
              (this.A[8] = -0.001333),
              (this.A[9] = 67e-5),
              (this.A[10] = -34e-5),
              (this.B_re = []),
              (this.B_im = []),
              (this.B_re[1] = 0.7557853228),
              (this.B_im[1] = 0),
              (this.B_re[2] = 0.249204646),
              (this.B_im[2] = 0.003371507),
              (this.B_re[3] = -0.001541739),
              (this.B_im[3] = 0.04105856),
              (this.B_re[4] = -0.10162907),
              (this.B_im[4] = 0.01727609),
              (this.B_re[5] = -0.26623489),
              (this.B_im[5] = -0.36249218),
              (this.B_re[6] = -0.6870983),
              (this.B_im[6] = -1.1651967),
              (this.C_re = []),
              (this.C_im = []),
              (this.C_re[1] = 1.3231270439),
              (this.C_im[1] = 0),
              (this.C_re[2] = -0.577245789),
              (this.C_im[2] = -0.007809598),
              (this.C_re[3] = 0.508307513),
              (this.C_im[3] = -0.112208952),
              (this.C_re[4] = -0.15094762),
              (this.C_im[4] = 0.18200602),
              (this.C_re[5] = 1.01418179),
              (this.C_im[5] = 1.64497696),
              (this.C_re[6] = 1.9660549),
              (this.C_im[6] = 2.5127645),
              (this.D = []),
              (this.D[1] = 1.5627014243),
              (this.D[2] = 0.5185406398),
              (this.D[3] = -0.03333098),
              (this.D[4] = -0.1052906),
              (this.D[5] = -0.0368594),
              (this.D[6] = 0.007317),
              (this.D[7] = 0.0122),
              (this.D[8] = 0.00394),
              (this.D[9] = -0.0013);
          }),
          (e.forward = function(t) {
            var e,
              n = t.x,
              i = t.y - this.lat0,
              o = n - this.long0,
              s = (i / r) * 1e-5,
              a = o,
              l = 1,
              u = 0;
            for (e = 1; e <= 10; e++) (l *= s), (u += this.A[e] * l);
            var h,
              c = u,
              p = a,
              f = 1,
              d = 0,
              y = 0,
              g = 0;
            for (e = 1; e <= 6; e++)
              (h = d * c + f * p),
                (f = f * c - d * p),
                (d = h),
                (y = y + this.B_re[e] * f - this.B_im[e] * d),
                (g = g + this.B_im[e] * f + this.B_re[e] * d);
            return (
              (t.x = g * this.a + this.x0), (t.y = y * this.a + this.y0), t
            );
          }),
          (e.inverse = function(t) {
            var e,
              n,
              i = t.x,
              o = t.y,
              s = i - this.x0,
              a = (o - this.y0) / this.a,
              l = s / this.a,
              u = 1,
              h = 0,
              c = 0,
              p = 0;
            for (e = 1; e <= 6; e++)
              (n = h * a + u * l),
                (u = u * a - h * l),
                (h = n),
                (c = c + this.C_re[e] * u - this.C_im[e] * h),
                (p = p + this.C_im[e] * u + this.C_re[e] * h);
            for (var f = 0; f < this.iterations; f++) {
              var d,
                y = c,
                g = p,
                m = a,
                v = l;
              for (e = 2; e <= 6; e++)
                (d = g * c + y * p),
                  (y = y * c - g * p),
                  (g = d),
                  (m += (e - 1) * (this.B_re[e] * y - this.B_im[e] * g)),
                  (v += (e - 1) * (this.B_im[e] * y + this.B_re[e] * g));
              (y = 1), (g = 0);
              var _ = this.B_re[1],
                x = this.B_im[1];
              for (e = 2; e <= 6; e++)
                (d = g * c + y * p),
                  (y = y * c - g * p),
                  (g = d),
                  (_ += e * (this.B_re[e] * y - this.B_im[e] * g)),
                  (x += e * (this.B_im[e] * y + this.B_re[e] * g));
              var b = _ * _ + x * x;
              (c = (m * _ + v * x) / b), (p = (v * _ - m * x) / b);
            }
            var S = c,
              I = p,
              w = 1,
              N = 0;
            for (e = 1; e <= 9; e++) (w *= S), (N += this.D[e] * w);
            var C = this.lat0 + N * r * 1e5,
              E = this.long0 + I;
            return (t.x = E), (t.y = C), t;
          }),
          (e.names = ["New_Zealand_Map_Grid", "nzmg"]);
      },
      3825: (t, e, r) => {
        var n = r(7877),
          i = r(7674),
          o = r(3420),
          s = Math.PI / 2,
          a = Math.PI / 4,
          l = 1e-10;
        (e.init = function() {
          (this.no_off = this.no_off || !1),
            (this.no_rot = this.no_rot || !1),
            isNaN(this.k0) && (this.k0 = 1);
          var t = Math.sin(this.lat0),
            e = Math.cos(this.lat0),
            r = this.e * t;
          (this.bl = Math.sqrt(1 + (this.es / (1 - this.es)) * Math.pow(e, 4))),
            (this.al =
              (this.a * this.bl * this.k0 * Math.sqrt(1 - this.es)) /
              (1 - r * r));
          var o,
            s,
            a = n(this.e, this.lat0, t),
            l = (this.bl / e) * Math.sqrt((1 - this.es) / (1 - r * r));
          if ((l * l < 1 && (l = 1), isNaN(this.longc))) {
            var u = n(this.e, this.lat1, Math.sin(this.lat1)),
              h = n(this.e, this.lat2, Math.sin(this.lat2));
            this.lat0 >= 0
              ? (this.el = (l + Math.sqrt(l * l - 1)) * Math.pow(a, this.bl))
              : (this.el = (l - Math.sqrt(l * l - 1)) * Math.pow(a, this.bl));
            var c = Math.pow(u, this.bl),
              p = Math.pow(h, this.bl);
            s = 0.5 * ((o = this.el / c) - 1 / o);
            var f = (this.el * this.el - p * c) / (this.el * this.el + p * c),
              d = (p - c) / (p + c),
              y = i(this.long1 - this.long2);
            (this.long0 =
              0.5 * (this.long1 + this.long2) -
              Math.atan((f * Math.tan(0.5 * this.bl * y)) / d) / this.bl),
              (this.long0 = i(this.long0));
            var g = i(this.long1 - this.long0);
            (this.gamma0 = Math.atan(Math.sin(this.bl * g) / s)),
              (this.alpha = Math.asin(l * Math.sin(this.gamma0)));
          } else
            (o =
              this.lat0 >= 0
                ? l + Math.sqrt(l * l - 1)
                : l - Math.sqrt(l * l - 1)),
              (this.el = o * Math.pow(a, this.bl)),
              (s = 0.5 * (o - 1 / o)),
              (this.gamma0 = Math.asin(Math.sin(this.alpha) / l)),
              (this.long0 =
                this.longc - Math.asin(s * Math.tan(this.gamma0)) / this.bl);
          this.no_off
            ? (this.uc = 0)
            : this.lat0 >= 0
            ? (this.uc =
                (this.al / this.bl) *
                Math.atan2(Math.sqrt(l * l - 1), Math.cos(this.alpha)))
            : (this.uc =
                ((-1 * this.al) / this.bl) *
                Math.atan2(Math.sqrt(l * l - 1), Math.cos(this.alpha)));
        }),
          (e.forward = function(t) {
            var e,
              r,
              o,
              u = t.x,
              h = t.y,
              c = i(u - this.long0);
            if (Math.abs(Math.abs(h) - s) <= l)
              (o = h > 0 ? -1 : 1),
                (r =
                  (this.al / this.bl) *
                  Math.log(Math.tan(a + o * this.gamma0 * 0.5))),
                (e = (-1 * o * s * this.al) / this.bl);
            else {
              var p = n(this.e, h, Math.sin(h)),
                f = this.el / Math.pow(p, this.bl),
                d = 0.5 * (f - 1 / f),
                y = 0.5 * (f + 1 / f),
                g = Math.sin(this.bl * c),
                m = (d * Math.sin(this.gamma0) - g * Math.cos(this.gamma0)) / y;
              (r =
                Math.abs(Math.abs(m) - 1) <= l
                  ? Number.POSITIVE_INFINITY
                  : (0.5 * this.al * Math.log((1 - m) / (1 + m))) / this.bl),
                (e =
                  Math.abs(Math.cos(this.bl * c)) <= l
                    ? this.al * this.bl * c
                    : (this.al *
                        Math.atan2(
                          d * Math.cos(this.gamma0) + g * Math.sin(this.gamma0),
                          Math.cos(this.bl * c)
                        )) /
                      this.bl);
            }
            return (
              this.no_rot
                ? ((t.x = this.x0 + e), (t.y = this.y0 + r))
                : ((e -= this.uc),
                  (t.x =
                    this.x0 +
                    r * Math.cos(this.alpha) +
                    e * Math.sin(this.alpha)),
                  (t.y =
                    this.y0 +
                    e * Math.cos(this.alpha) -
                    r * Math.sin(this.alpha))),
              t
            );
          }),
          (e.inverse = function(t) {
            var e, r;
            this.no_rot
              ? ((r = t.y - this.y0), (e = t.x - this.x0))
              : ((r =
                  (t.x - this.x0) * Math.cos(this.alpha) -
                  (t.y - this.y0) * Math.sin(this.alpha)),
                (e =
                  (t.y - this.y0) * Math.cos(this.alpha) +
                  (t.x - this.x0) * Math.sin(this.alpha)),
                (e += this.uc));
            var n = Math.exp((-1 * this.bl * r) / this.al),
              a = 0.5 * (n - 1 / n),
              u = 0.5 * (n + 1 / n),
              h = Math.sin((this.bl * e) / this.al),
              c = (h * Math.cos(this.gamma0) + a * Math.sin(this.gamma0)) / u,
              p = Math.pow(this.el / Math.sqrt((1 + c) / (1 - c)), 1 / this.bl);
            return (
              Math.abs(c - 1) < l
                ? ((t.x = this.long0), (t.y = s))
                : Math.abs(c + 1) < l
                ? ((t.x = this.long0), (t.y = -1 * s))
                : ((t.y = o(this.e, p)),
                  (t.x = i(
                    this.long0 -
                      Math.atan2(
                        a * Math.cos(this.gamma0) - h * Math.sin(this.gamma0),
                        Math.cos((this.bl * e) / this.al)
                      ) /
                        this.bl
                  ))),
              t
            );
          }),
          (e.names = [
            "Hotine_Oblique_Mercator",
            "Hotine Oblique Mercator",
            "Hotine_Oblique_Mercator_Azimuth_Natural_Origin",
            "Hotine_Oblique_Mercator_Azimuth_Center",
            "omerc"
          ]);
      },
      1338: (t, e, r) => {
        var n = r(7354),
          i = r(6172),
          o = r(3008),
          s = r(1715),
          a = r(7674),
          l = r(172),
          u = r(9137),
          h = 1e-10,
          c = r(2781);
        (e.init = function() {
          (this.temp = this.b / this.a),
            (this.es = 1 - Math.pow(this.temp, 2)),
            (this.e = Math.sqrt(this.es)),
            (this.e0 = n(this.es)),
            (this.e1 = i(this.es)),
            (this.e2 = o(this.es)),
            (this.e3 = s(this.es)),
            (this.ml0 =
              this.a * u(this.e0, this.e1, this.e2, this.e3, this.lat0));
        }),
          (e.forward = function(t) {
            var e,
              r,
              n,
              i = t.x,
              o = t.y,
              s = a(i - this.long0);
            if (((n = s * Math.sin(o)), this.sphere))
              Math.abs(o) <= h
                ? ((e = this.a * s), (r = -1 * this.a * this.lat0))
                : ((e = (this.a * Math.sin(n)) / Math.tan(o)),
                  (r =
                    this.a *
                    (l(o - this.lat0) + (1 - Math.cos(n)) / Math.tan(o))));
            else if (Math.abs(o) <= h) (e = this.a * s), (r = -1 * this.ml0);
            else {
              var p = c(this.a, this.e, Math.sin(o)) / Math.tan(o);
              (e = p * Math.sin(n)),
                (r =
                  this.a * u(this.e0, this.e1, this.e2, this.e3, o) -
                  this.ml0 +
                  p * (1 - Math.cos(n)));
            }
            return (t.x = e + this.x0), (t.y = r + this.y0), t;
          }),
          (e.inverse = function(t) {
            var e, r, n, i, o, s, l, c, p;
            if (((n = t.x - this.x0), (i = t.y - this.y0), this.sphere))
              if (Math.abs(i + this.a * this.lat0) <= h)
                (e = a(n / this.a + this.long0)), (r = 0);
              else {
                var f;
                for (
                  s = this.lat0 + i / this.a,
                    l = (n * n) / this.a / this.a + s * s,
                    c = s,
                    o = 20;
                  o;
                  --o
                )
                  if (
                    ((c += p =
                      (-1 *
                        (s * (c * (f = Math.tan(c)) + 1) -
                          c -
                          0.5 * (c * c + l) * f)) /
                      ((c - s) / f - 1)),
                    Math.abs(p) <= h)
                  ) {
                    r = c;
                    break;
                  }
                e = a(
                  this.long0 +
                    Math.asin((n * Math.tan(c)) / this.a) / Math.sin(r)
                );
              }
            else if (Math.abs(i + this.ml0) <= h)
              (r = 0), (e = a(this.long0 + n / this.a));
            else {
              var d, y, g, m, v;
              for (
                s = (this.ml0 + i) / this.a,
                  l = (n * n) / this.a / this.a + s * s,
                  c = s,
                  o = 20;
                o;
                --o
              )
                if (
                  ((v = this.e * Math.sin(c)),
                  (d = Math.sqrt(1 - v * v) * Math.tan(c)),
                  (y = this.a * u(this.e0, this.e1, this.e2, this.e3, c)),
                  (g =
                    this.e0 -
                    2 * this.e1 * Math.cos(2 * c) +
                    4 * this.e2 * Math.cos(4 * c) -
                    6 * this.e3 * Math.cos(6 * c)),
                  (c -= p =
                    (s * (d * (m = y / this.a) + 1) -
                      m -
                      0.5 * d * (m * m + l)) /
                    ((this.es * Math.sin(2 * c) * (m * m + l - 2 * s * m)) /
                      (4 * d) +
                      (s - m) * (d * g - 2 / Math.sin(2 * c)) -
                      g)),
                  Math.abs(p) <= h)
                ) {
                  r = c;
                  break;
                }
              (d =
                Math.sqrt(1 - this.es * Math.pow(Math.sin(r), 2)) *
                Math.tan(r)),
                (e = a(this.long0 + Math.asin((n * d) / this.a) / Math.sin(r)));
            }
            return (t.x = e), (t.y = r), t;
          }),
          (e.names = ["Polyconic", "poly"]);
      },
      4082: (t, e, r) => {
        var n = r(7674),
          i = r(172),
          o = r(4607),
          s = r(8219),
          a = r(5733),
          l = Math.PI / 2,
          u = r(4041);
        (e.init = function() {
          this.sphere
            ? ((this.n = 1),
              (this.m = 0),
              (this.es = 0),
              (this.C_y = Math.sqrt((this.m + 1) / this.n)),
              (this.C_x = this.C_y / (this.m + 1)))
            : (this.en = o(this.es));
        }),
          (e.forward = function(t) {
            var e,
              r,
              i = t.x,
              o = t.y;
            if (((i = n(i - this.long0)), this.sphere)) {
              if (this.m)
                for (var a = this.n * Math.sin(o), l = 20; l; --l) {
                  var u =
                    (this.m * o + Math.sin(o) - a) / (this.m + Math.cos(o));
                  if (((o -= u), Math.abs(u) < 1e-10)) break;
                }
              else o = 1 !== this.n ? Math.asin(this.n * Math.sin(o)) : o;
              (e = this.a * this.C_x * i * (this.m + Math.cos(o))),
                (r = this.a * this.C_y * o);
            } else {
              var h = Math.sin(o),
                c = Math.cos(o);
              (r = this.a * s(o, h, c, this.en)),
                (e = (this.a * i * c) / Math.sqrt(1 - this.es * h * h));
            }
            return (t.x = e), (t.y = r), t;
          }),
          (e.inverse = function(t) {
            var e, r, o, s;
            return (
              (t.x -= this.x0),
              (o = t.x / this.a),
              (t.y -= this.y0),
              (e = t.y / this.a),
              this.sphere
                ? ((e /= this.C_y),
                  (o /= this.C_x * (this.m + Math.cos(e))),
                  this.m
                    ? (e = u((this.m * e + Math.sin(e)) / this.n))
                    : 1 !== this.n && (e = u(Math.sin(e) / this.n)),
                  (o = n(o + this.long0)),
                  (e = i(e)))
                : ((e = a(t.y / this.a, this.es, this.en)),
                  (s = Math.abs(e)) < l
                    ? ((s = Math.sin(e)),
                      (r =
                        this.long0 +
                        (t.x * Math.sqrt(1 - this.es * s * s)) /
                          (this.a * Math.cos(e))),
                      (o = n(r)))
                    : s - 1e-10 < l && (o = this.long0)),
              (t.x = o),
              (t.y = e),
              t
            );
          }),
          (e.names = ["Sinusoidal", "sinu"]);
      },
      2757: (t, e) => {
        (e.init = function() {
          var t = this.lat0;
          this.lambda0 = this.long0;
          var e = Math.sin(t),
            r = this.a,
            n = 1 / this.rf,
            i = 2 * n - Math.pow(n, 2),
            o = (this.e = Math.sqrt(i));
          (this.R =
            (this.k0 * r * Math.sqrt(1 - i)) / (1 - i * Math.pow(e, 2))),
            (this.alpha = Math.sqrt(
              1 + (i / (1 - i)) * Math.pow(Math.cos(t), 4)
            )),
            (this.b0 = Math.asin(e / this.alpha));
          var s = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2)),
            a = Math.log(Math.tan(Math.PI / 4 + t / 2)),
            l = Math.log((1 + o * e) / (1 - o * e));
          this.K = s - this.alpha * a + ((this.alpha * o) / 2) * l;
        }),
          (e.forward = function(t) {
            var e = Math.log(Math.tan(Math.PI / 4 - t.y / 2)),
              r =
                (this.e / 2) *
                Math.log(
                  (1 + this.e * Math.sin(t.y)) / (1 - this.e * Math.sin(t.y))
                ),
              n = -this.alpha * (e + r) + this.K,
              i = 2 * (Math.atan(Math.exp(n)) - Math.PI / 4),
              o = this.alpha * (t.x - this.lambda0),
              s = Math.atan(
                Math.sin(o) /
                  (Math.sin(this.b0) * Math.tan(i) +
                    Math.cos(this.b0) * Math.cos(o))
              ),
              a = Math.asin(
                Math.cos(this.b0) * Math.sin(i) -
                  Math.sin(this.b0) * Math.cos(i) * Math.cos(o)
              );
            return (
              (t.y =
                (this.R / 2) * Math.log((1 + Math.sin(a)) / (1 - Math.sin(a))) +
                this.y0),
              (t.x = this.R * s + this.x0),
              t
            );
          }),
          (e.inverse = function(t) {
            for (
              var e = t.x - this.x0,
                r = t.y - this.y0,
                n = e / this.R,
                i = 2 * (Math.atan(Math.exp(r / this.R)) - Math.PI / 4),
                o = Math.asin(
                  Math.cos(this.b0) * Math.sin(i) +
                    Math.sin(this.b0) * Math.cos(i) * Math.cos(n)
                ),
                s = Math.atan(
                  Math.sin(n) /
                    (Math.cos(this.b0) * Math.cos(n) -
                      Math.sin(this.b0) * Math.tan(i))
                ),
                a = this.lambda0 + s / this.alpha,
                l = 0,
                u = o,
                h = -1e3,
                c = 0;
              Math.abs(u - h) > 1e-7;

            ) {
              if (++c > 20) return;
              (l =
                (1 / this.alpha) *
                  (Math.log(Math.tan(Math.PI / 4 + o / 2)) - this.K) +
                this.e *
                  Math.log(
                    Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(u)) / 2)
                  )),
                (h = u),
                (u = 2 * Math.atan(Math.exp(l)) - Math.PI / 2);
            }
            return (t.x = a), (t.y = u), t;
          }),
          (e.names = ["somerc"]);
      },
      9329: (t, e, r) => {
        var n = Math.PI / 2,
          i = 1e-10,
          o = r(7489),
          s = r(1566),
          a = r(7877),
          l = r(3420),
          u = r(7674);
        (e.ssfn_ = function(t, e, r) {
          return (
            (e *= r),
            Math.tan(0.5 * (n + t)) * Math.pow((1 - e) / (1 + e), 0.5 * r)
          );
        }),
          (e.init = function() {
            (this.coslat0 = Math.cos(this.lat0)),
              (this.sinlat0 = Math.sin(this.lat0)),
              this.sphere
                ? 1 === this.k0 &&
                  !isNaN(this.lat_ts) &&
                  Math.abs(this.coslat0) <= i &&
                  (this.k0 = 0.5 * (1 + o(this.lat0) * Math.sin(this.lat_ts)))
                : (Math.abs(this.coslat0) <= i &&
                    (this.lat0 > 0 ? (this.con = 1) : (this.con = -1)),
                  (this.cons = Math.sqrt(
                    Math.pow(1 + this.e, 1 + this.e) *
                      Math.pow(1 - this.e, 1 - this.e)
                  )),
                  1 === this.k0 &&
                    !isNaN(this.lat_ts) &&
                    Math.abs(this.coslat0) <= i &&
                    (this.k0 =
                      (0.5 *
                        this.cons *
                        s(
                          this.e,
                          Math.sin(this.lat_ts),
                          Math.cos(this.lat_ts)
                        )) /
                      a(
                        this.e,
                        this.con * this.lat_ts,
                        this.con * Math.sin(this.lat_ts)
                      )),
                  (this.ms1 = s(this.e, this.sinlat0, this.coslat0)),
                  (this.X0 =
                    2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) -
                    n),
                  (this.cosX0 = Math.cos(this.X0)),
                  (this.sinX0 = Math.sin(this.X0)));
          }),
          (e.forward = function(t) {
            var e,
              r,
              o,
              s,
              l,
              h,
              c = t.x,
              p = t.y,
              f = Math.sin(p),
              d = Math.cos(p),
              y = u(c - this.long0);
            return Math.abs(Math.abs(c - this.long0) - Math.PI) <= i &&
              Math.abs(p + this.lat0) <= i
              ? ((t.x = NaN), (t.y = NaN), t)
              : this.sphere
              ? ((e =
                  (2 * this.k0) /
                  (1 + this.sinlat0 * f + this.coslat0 * d * Math.cos(y))),
                (t.x = this.a * e * d * Math.sin(y) + this.x0),
                (t.y =
                  this.a *
                    e *
                    (this.coslat0 * f - this.sinlat0 * d * Math.cos(y)) +
                  this.y0),
                t)
              : ((r = 2 * Math.atan(this.ssfn_(p, f, this.e)) - n),
                (s = Math.cos(r)),
                (o = Math.sin(r)),
                Math.abs(this.coslat0) <= i
                  ? ((l = a(this.e, p * this.con, this.con * f)),
                    (h = (2 * this.a * this.k0 * l) / this.cons),
                    (t.x = this.x0 + h * Math.sin(c - this.long0)),
                    (t.y = this.y0 - this.con * h * Math.cos(c - this.long0)),
                    t)
                  : (Math.abs(this.sinlat0) < i
                      ? ((e = (2 * this.a * this.k0) / (1 + s * Math.cos(y))),
                        (t.y = e * o))
                      : ((e =
                          (2 * this.a * this.k0 * this.ms1) /
                          (this.cosX0 *
                            (1 +
                              this.sinX0 * o +
                              this.cosX0 * s * Math.cos(y)))),
                        (t.y =
                          e * (this.cosX0 * o - this.sinX0 * s * Math.cos(y)) +
                          this.y0)),
                    (t.x = e * s * Math.sin(y) + this.x0),
                    t));
          }),
          (e.inverse = function(t) {
            var e, r, o, s, a;
            (t.x -= this.x0), (t.y -= this.y0);
            var h = Math.sqrt(t.x * t.x + t.y * t.y);
            if (this.sphere) {
              var c = 2 * Math.atan(h / (0.5 * this.a * this.k0));
              return (
                (e = this.long0),
                (r = this.lat0),
                h <= i
                  ? ((t.x = e), (t.y = r), t)
                  : ((r = Math.asin(
                      Math.cos(c) * this.sinlat0 +
                        (t.y * Math.sin(c) * this.coslat0) / h
                    )),
                    (e =
                      Math.abs(this.coslat0) < i
                        ? this.lat0 > 0
                          ? u(this.long0 + Math.atan2(t.x, -1 * t.y))
                          : u(this.long0 + Math.atan2(t.x, t.y))
                        : u(
                            this.long0 +
                              Math.atan2(
                                t.x * Math.sin(c),
                                h * this.coslat0 * Math.cos(c) -
                                  t.y * this.sinlat0 * Math.sin(c)
                              )
                          )),
                    (t.x = e),
                    (t.y = r),
                    t)
              );
            }
            if (Math.abs(this.coslat0) <= i) {
              if (h <= i)
                return (
                  (r = this.lat0), (e = this.long0), (t.x = e), (t.y = r), t
                );
              (t.x *= this.con),
                (t.y *= this.con),
                (o = (h * this.cons) / (2 * this.a * this.k0)),
                (r = this.con * l(this.e, o)),
                (e =
                  this.con *
                  u(this.con * this.long0 + Math.atan2(t.x, -1 * t.y)));
            } else
              (s =
                2 *
                Math.atan(
                  (h * this.cosX0) / (2 * this.a * this.k0 * this.ms1)
                )),
                (e = this.long0),
                h <= i
                  ? (a = this.X0)
                  : ((a = Math.asin(
                      Math.cos(s) * this.sinX0 +
                        (t.y * Math.sin(s) * this.cosX0) / h
                    )),
                    (e = u(
                      this.long0 +
                        Math.atan2(
                          t.x * Math.sin(s),
                          h * this.cosX0 * Math.cos(s) -
                            t.y * this.sinX0 * Math.sin(s)
                        )
                    ))),
                (r = -1 * l(this.e, Math.tan(0.5 * (n + a))));
            return (t.x = e), (t.y = r), t;
          }),
          (e.names = [
            "stere",
            "Stereographic_South_Pole",
            "Polar Stereographic (variant B)"
          ]);
      },
      1949: (t, e, r) => {
        var n = r(2453),
          i = r(7674);
        (e.init = function() {
          n.init.apply(this),
            this.rc &&
              ((this.sinc0 = Math.sin(this.phic0)),
              (this.cosc0 = Math.cos(this.phic0)),
              (this.R2 = 2 * this.rc),
              this.title || (this.title = "Oblique Stereographic Alternative"));
        }),
          (e.forward = function(t) {
            var e, r, o, s;
            return (
              (t.x = i(t.x - this.long0)),
              n.forward.apply(this, [t]),
              (e = Math.sin(t.y)),
              (r = Math.cos(t.y)),
              (o = Math.cos(t.x)),
              (s =
                (this.k0 * this.R2) /
                (1 + this.sinc0 * e + this.cosc0 * r * o)),
              (t.x = s * r * Math.sin(t.x)),
              (t.y = s * (this.cosc0 * e - this.sinc0 * r * o)),
              (t.x = this.a * t.x + this.x0),
              (t.y = this.a * t.y + this.y0),
              t
            );
          }),
          (e.inverse = function(t) {
            var e, r, o, s, a;
            if (
              ((t.x = (t.x - this.x0) / this.a),
              (t.y = (t.y - this.y0) / this.a),
              (t.x /= this.k0),
              (t.y /= this.k0),
              (a = Math.sqrt(t.x * t.x + t.y * t.y)))
            ) {
              var l = 2 * Math.atan2(a, this.R2);
              (e = Math.sin(l)),
                (r = Math.cos(l)),
                (s = Math.asin(r * this.sinc0 + (t.y * e * this.cosc0) / a)),
                (o = Math.atan2(
                  t.x * e,
                  a * this.cosc0 * r - t.y * this.sinc0 * e
                ));
            } else (s = this.phic0), (o = 0);
            return (
              (t.x = o),
              (t.y = s),
              n.inverse.apply(this, [t]),
              (t.x = i(t.x + this.long0)),
              t
            );
          }),
          (e.names = [
            "Stereographic_North_Pole",
            "Oblique_Stereographic",
            "Polar_Stereographic",
            "sterea",
            "Oblique Stereographic Alternative"
          ]);
      },
      7885: (t, e, r) => {
        var n = r(7354),
          i = r(6172),
          o = r(3008),
          s = r(1715),
          a = r(9137),
          l = r(7674),
          u = Math.PI / 2,
          h = r(7489),
          c = r(4041);
        (e.init = function() {
          (this.e0 = n(this.es)),
            (this.e1 = i(this.es)),
            (this.e2 = o(this.es)),
            (this.e3 = s(this.es)),
            (this.ml0 =
              this.a * a(this.e0, this.e1, this.e2, this.e3, this.lat0));
        }),
          (e.forward = function(t) {
            var e,
              r,
              n,
              i = t.x,
              o = t.y,
              s = l(i - this.long0),
              u = Math.sin(o),
              h = Math.cos(o);
            if (this.sphere) {
              var c = h * Math.sin(s);
              if (Math.abs(Math.abs(c) - 1) < 1e-10) return 93;
              (r = 0.5 * this.a * this.k0 * Math.log((1 + c) / (1 - c))),
                (e = Math.acos((h * Math.cos(s)) / Math.sqrt(1 - c * c))),
                o < 0 && (e = -e),
                (n = this.a * this.k0 * (e - this.lat0));
            } else {
              var p = h * s,
                f = Math.pow(p, 2),
                d = this.ep2 * Math.pow(h, 2),
                y = Math.tan(o),
                g = Math.pow(y, 2);
              e = 1 - this.es * Math.pow(u, 2);
              var m = this.a / Math.sqrt(e),
                v = this.a * a(this.e0, this.e1, this.e2, this.e3, o);
              (r =
                this.k0 *
                  m *
                  p *
                  (1 +
                    (f / 6) *
                      (1 -
                        g +
                        d +
                        (f / 20) *
                          (5 -
                            18 * g +
                            Math.pow(g, 2) +
                            72 * d -
                            58 * this.ep2))) +
                this.x0),
                (n =
                  this.k0 *
                    (v -
                      this.ml0 +
                      m *
                        y *
                        (f *
                          (0.5 +
                            (f / 24) *
                              (5 -
                                g +
                                9 * d +
                                4 * Math.pow(d, 2) +
                                (f / 30) *
                                  (61 -
                                    58 * g +
                                    Math.pow(g, 2) +
                                    600 * d -
                                    330 * this.ep2))))) +
                  this.y0);
            }
            return (t.x = r), (t.y = n), t;
          }),
          (e.inverse = function(t) {
            var e, r, n, i, o, s;
            if (this.sphere) {
              var a = Math.exp(t.x / (this.a * this.k0)),
                p = 0.5 * (a - 1 / a),
                f = this.lat0 + t.y / (this.a * this.k0),
                d = Math.cos(f);
              (e = Math.sqrt((1 - d * d) / (1 + p * p))),
                (o = c(e)),
                f < 0 && (o = -o),
                (s =
                  0 === p && 0 === d
                    ? this.long0
                    : l(Math.atan2(p, d) + this.long0));
            } else {
              var y = t.x - this.x0,
                g = t.y - this.y0;
              for (
                r = e = (this.ml0 + g / this.k0) / this.a, i = 0;
                (r += n =
                  (e +
                    this.e1 * Math.sin(2 * r) -
                    this.e2 * Math.sin(4 * r) +
                    this.e3 * Math.sin(6 * r)) /
                    this.e0 -
                  r),
                  !(Math.abs(n) <= 1e-10);
                i++
              )
                if (i >= 6) return 95;
              if (Math.abs(r) < u) {
                var m = Math.sin(r),
                  v = Math.cos(r),
                  _ = Math.tan(r),
                  x = this.ep2 * Math.pow(v, 2),
                  b = Math.pow(x, 2),
                  S = Math.pow(_, 2),
                  I = Math.pow(S, 2);
                e = 1 - this.es * Math.pow(m, 2);
                var w = this.a / Math.sqrt(e),
                  N = (w * (1 - this.es)) / e,
                  C = y / (w * this.k0),
                  E = Math.pow(C, 2);
                (o =
                  r -
                  ((w * _ * E) / N) *
                    (0.5 -
                      (E / 24) *
                        (5 +
                          3 * S +
                          10 * x -
                          4 * b -
                          9 * this.ep2 -
                          (E / 30) *
                            (61 +
                              90 * S +
                              298 * x +
                              45 * I -
                              252 * this.ep2 -
                              3 * b)))),
                  (s = l(
                    this.long0 +
                      (C *
                        (1 -
                          (E / 6) *
                            (1 +
                              2 * S +
                              x -
                              (E / 20) *
                                (5 -
                                  2 * x +
                                  28 * S -
                                  3 * b +
                                  8 * this.ep2 +
                                  24 * I)))) /
                        v
                  ));
              } else (o = u * h(g)), (s = this.long0);
            }
            return (t.x = s), (t.y = o), t;
          }),
          (e.names = ["Transverse_Mercator", "Transverse Mercator", "tmerc"]);
      },
      7343: (t, e, r) => {
        var n = r(7885);
        (e.dependsOn = "tmerc"),
          (e.init = function() {
            this.zone &&
              ((this.lat0 = 0),
              (this.long0 =
                0.017453292519943295 * (6 * Math.abs(this.zone) - 183)),
              (this.x0 = 5e5),
              (this.y0 = this.utmSouth ? 1e7 : 0),
              (this.k0 = 0.9996),
              n.init.apply(this),
              (this.forward = n.forward),
              (this.inverse = n.inverse));
          }),
          (e.names = ["Universal Transverse Mercator System", "utm"]);
      },
      1474: (t, e, r) => {
        var n = r(7674),
          i = Math.PI / 2,
          o = 1e-10,
          s = r(4041);
        (e.init = function() {
          this.R = this.a;
        }),
          (e.forward = function(t) {
            var e,
              r,
              a = t.x,
              l = t.y,
              u = n(a - this.long0);
            Math.abs(l) <= o && ((e = this.x0 + this.R * u), (r = this.y0));
            var h = s(2 * Math.abs(l / Math.PI));
            (Math.abs(u) <= o || Math.abs(Math.abs(l) - i) <= o) &&
              ((e = this.x0),
              (r =
                l >= 0
                  ? this.y0 + Math.PI * this.R * Math.tan(0.5 * h)
                  : this.y0 + Math.PI * this.R * -Math.tan(0.5 * h)));
            var c = 0.5 * Math.abs(Math.PI / u - u / Math.PI),
              p = c * c,
              f = Math.sin(h),
              d = Math.cos(h),
              y = d / (f + d - 1),
              g = y * y,
              m = y * (2 / f - 1),
              v = m * m,
              _ =
                (Math.PI *
                  this.R *
                  (c * (y - v) +
                    Math.sqrt(p * (y - v) * (y - v) - (v + p) * (g - v)))) /
                (v + p);
            u < 0 && (_ = -_), (e = this.x0 + _);
            var x = p + y;
            return (
              (_ =
                (Math.PI *
                  this.R *
                  (m * x - c * Math.sqrt((v + p) * (p + 1) - x * x))) /
                (v + p)),
              (r = l >= 0 ? this.y0 + _ : this.y0 - _),
              (t.x = e),
              (t.y = r),
              t
            );
          }),
          (e.inverse = function(t) {
            var e, r, i, s, a, l, u, h, c, p, f, d;
            return (
              (t.x -= this.x0),
              (t.y -= this.y0),
              (f = Math.PI * this.R),
              (a = (i = t.x / f) * i + (s = t.y / f) * s),
              (f =
                (3 *
                  ((s * s) /
                    (h =
                      -2 * (l = -Math.abs(s) * (1 + a)) +
                      1 +
                      2 * s * s +
                      a * a) +
                    ((2 * (u = l - 2 * s * s + i * i) * u * u) / h / h / h -
                      (9 * l * u) / h / h) /
                      27)) /
                (c = (l - (u * u) / 3 / h) / h) /
                (p = 2 * Math.sqrt(-c / 3))),
              Math.abs(f) > 1 && (f = f >= 0 ? 1 : -1),
              (d = Math.acos(f) / 3),
              (r =
                t.y >= 0
                  ? (-p * Math.cos(d + Math.PI / 3) - u / 3 / h) * Math.PI
                  : -(-p * Math.cos(d + Math.PI / 3) - u / 3 / h) * Math.PI),
              (e =
                Math.abs(i) < o
                  ? this.long0
                  : n(
                      this.long0 +
                        (Math.PI *
                          (a -
                            1 +
                            Math.sqrt(1 + 2 * (i * i - s * s) + a * a))) /
                          2 /
                          i
                    )),
              (t.x = e),
              (t.y = r),
              t
            );
          }),
          (e.names = ["Van_der_Grinten_I", "VanDerGrinten", "vandg"]);
      },
      4200: (t, e, r) => {
        var n = 0.017453292519943295,
          i = 57.29577951308232,
          o = r(6742),
          s = r(7114),
          a = r(9059),
          l = r(5325);
        t.exports = function t(e, r, u) {
          var h;
          function c(t, e) {
            return (
              (1 === t.datum.datum_type || 2 === t.datum.datum_type) &&
              "WGS84" !== e.datumCode
            );
          }
          return (
            Array.isArray(u) && (u = l(u)),
            e.datum &&
              r.datum &&
              (c(e, r) || c(r, e)) &&
              (t(e, (h = new a("WGS84")), u), (e = h)),
            "enu" !== e.axis && s(e, !1, u),
            "longlat" === e.projName
              ? ((u.x *= n), (u.y *= n))
              : (e.to_meter && ((u.x *= e.to_meter), (u.y *= e.to_meter)),
                e.inverse(u)),
            e.from_greenwich && (u.x += e.from_greenwich),
            (u = o(e.datum, r.datum, u)),
            r.from_greenwich && (u.x -= r.from_greenwich),
            "longlat" === r.projName
              ? ((u.x *= i), (u.y *= i))
              : (r.forward(u),
                r.to_meter && ((u.x /= r.to_meter), (u.y /= r.to_meter))),
            "enu" !== r.axis && s(r, !0, u),
            u
          );
        };
      },
      7101: (t, e, r) => {
        var n = r(1352);
        function i(t, e, r) {
          t[e] = r
            .map(function(t) {
              var e = {};
              return o(t, e), e;
            })
            .reduce(function(t, e) {
              return n(t, e);
            }, {});
        }
        function o(t, e) {
          var r;
          Array.isArray(t)
            ? ("PARAMETER" === (r = t.shift()) && (r = t.shift()),
              1 === t.length
                ? Array.isArray(t[0])
                  ? ((e[r] = {}), o(t[0], e[r]))
                  : (e[r] = t[0])
                : t.length
                ? "TOWGS84" === r
                  ? (e[r] = t)
                  : ((e[r] = {}),
                    ["UNIT", "PRIMEM", "VERT_DATUM"].indexOf(r) > -1
                      ? ((e[r] = { name: t[0].toLowerCase(), convert: t[1] }),
                        3 === t.length && (e[r].auth = t[2]))
                      : "SPHEROID" === r
                      ? ((e[r] = { name: t[0], a: t[1], rf: t[2] }),
                        4 === t.length && (e[r].auth = t[3]))
                      : [
                          "GEOGCS",
                          "GEOCCS",
                          "DATUM",
                          "VERT_CS",
                          "COMPD_CS",
                          "LOCAL_CS",
                          "FITTED_CS",
                          "LOCAL_DATUM"
                        ].indexOf(r) > -1
                      ? ((t[0] = ["name", t[0]]), i(e, r, t))
                      : t.every(function(t) {
                          return Array.isArray(t);
                        })
                      ? i(e, r, t)
                      : o(t, e[r]))
                : (e[r] = !0))
            : (e[t] = !0);
        }
        function s(t) {
          return 0.017453292519943295 * t;
        }
        t.exports = function(t, e) {
          var r = JSON.parse(
              ("," + t)
                .replace(/\s*\,\s*([A-Z_0-9]+?)(\[)/g, ',["$1",')
                .slice(1)
                .replace(/\s*\,\s*([A-Z_0-9]+?)\]/g, ',"$1"]')
                .replace(/,\["VERTCS".+/, "")
            ),
            i = r.shift(),
            a = r.shift();
          r.unshift(["name", a]), r.unshift(["type", i]), r.unshift("output");
          var l = {};
          return (
            o(r, l),
            (function(t) {
              function e(e) {
                var r = t.to_meter || 1;
                return parseFloat(e, 10) * r;
              }
              "GEOGCS" === t.type
                ? (t.projName = "longlat")
                : "LOCAL_CS" === t.type
                ? ((t.projName = "identity"), (t.local = !0))
                : "object" == typeof t.PROJECTION
                ? (t.projName = Object.keys(t.PROJECTION)[0])
                : (t.projName = t.PROJECTION),
                t.UNIT &&
                  ((t.units = t.UNIT.name.toLowerCase()),
                  "metre" === t.units && (t.units = "meter"),
                  t.UNIT.convert &&
                    ("GEOGCS" === t.type
                      ? t.DATUM &&
                        t.DATUM.SPHEROID &&
                        (t.to_meter =
                          parseFloat(t.UNIT.convert, 10) * t.DATUM.SPHEROID.a)
                      : (t.to_meter = parseFloat(t.UNIT.convert, 10)))),
                t.GEOGCS &&
                  (t.GEOGCS.DATUM
                    ? (t.datumCode = t.GEOGCS.DATUM.name.toLowerCase())
                    : (t.datumCode = t.GEOGCS.name.toLowerCase()),
                  "d_" === t.datumCode.slice(0, 2) &&
                    (t.datumCode = t.datumCode.slice(2)),
                  ("new_zealand_geodetic_datum_1949" !== t.datumCode &&
                    "new_zealand_1949" !== t.datumCode) ||
                    (t.datumCode = "nzgd49"),
                  "wgs_1984" === t.datumCode &&
                    ("Mercator_Auxiliary_Sphere" === t.PROJECTION &&
                      (t.sphere = !0),
                    (t.datumCode = "wgs84")),
                  "_ferro" === t.datumCode.slice(-6) &&
                    (t.datumCode = t.datumCode.slice(0, -6)),
                  "_jakarta" === t.datumCode.slice(-8) &&
                    (t.datumCode = t.datumCode.slice(0, -8)),
                  ~t.datumCode.indexOf("belge") && (t.datumCode = "rnb72"),
                  t.GEOGCS.DATUM &&
                    t.GEOGCS.DATUM.SPHEROID &&
                    ((t.ellps = t.GEOGCS.DATUM.SPHEROID.name
                      .replace("_19", "")
                      .replace(/[Cc]larke\_18/, "clrk")),
                    "international" === t.ellps.toLowerCase().slice(0, 13) &&
                      (t.ellps = "intl"),
                    (t.a = t.GEOGCS.DATUM.SPHEROID.a),
                    (t.rf = parseFloat(t.GEOGCS.DATUM.SPHEROID.rf, 10))),
                  ~t.datumCode.indexOf("osgb_1936") &&
                    (t.datumCode = "osgb36")),
                t.b && !isFinite(t.b) && (t.b = t.a),
                [
                  ["standard_parallel_1", "Standard_Parallel_1"],
                  ["standard_parallel_2", "Standard_Parallel_2"],
                  ["false_easting", "False_Easting"],
                  ["false_northing", "False_Northing"],
                  ["central_meridian", "Central_Meridian"],
                  ["latitude_of_origin", "Latitude_Of_Origin"],
                  ["latitude_of_origin", "Central_Parallel"],
                  ["scale_factor", "Scale_Factor"],
                  ["k0", "scale_factor"],
                  ["latitude_of_center", "Latitude_of_center"],
                  ["lat0", "latitude_of_center", s],
                  ["longitude_of_center", "Longitude_Of_Center"],
                  ["longc", "longitude_of_center", s],
                  ["x0", "false_easting", e],
                  ["y0", "false_northing", e],
                  ["long0", "central_meridian", s],
                  ["lat0", "latitude_of_origin", s],
                  ["lat0", "standard_parallel_1", s],
                  ["lat1", "standard_parallel_1", s],
                  ["lat2", "standard_parallel_2", s],
                  ["alpha", "azimuth", s],
                  ["srsCode", "name"]
                ].forEach(function(e) {
                  return (
                    (r = t),
                    (i = (n = e)[0]),
                    (o = n[1]),
                    void (
                      !(i in r) &&
                      o in r &&
                      ((r[i] = r[o]), 3 === n.length && (r[i] = n[2](r[i])))
                    )
                  );
                  var r, n, i, o;
                }),
                t.long0 ||
                  !t.longc ||
                  ("Albers_Conic_Equal_Area" !== t.projName &&
                    "Lambert_Azimuthal_Equal_Area" !== t.projName) ||
                  (t.long0 = t.longc),
                t.lat_ts ||
                  !t.lat1 ||
                  ("Stereographic_South_Pole" !== t.projName &&
                    "Polar Stereographic (variant B)" !== t.projName) ||
                  ((t.lat0 = s(t.lat1 > 0 ? 90 : -90)), (t.lat_ts = t.lat1));
            })(l.output),
            n(e, l.output)
          );
        };
      },
      5133: function(t) {
        !(function(e) {
          "use strict";
          if (e.__disableNativeFetch || !e.fetch) {
            (u.prototype.append = function(t, e) {
              (t = a(t)), (e = l(e));
              var r = this.map[t];
              r || ((r = []), (this.map[t] = r)), r.push(e);
            }),
              (u.prototype.delete = function(t) {
                delete this.map[a(t)];
              }),
              (u.prototype.get = function(t) {
                var e = this.map[a(t)];
                return e ? e[0] : null;
              }),
              (u.prototype.getAll = function(t) {
                return this.map[a(t)] || [];
              }),
              (u.prototype.has = function(t) {
                return this.map.hasOwnProperty(a(t));
              }),
              (u.prototype.set = function(t, e) {
                this.map[a(t)] = [l(e)];
              }),
              (u.prototype.forEach = function(t, e) {
                Object.getOwnPropertyNames(this.map).forEach(function(r) {
                  this.map[r].forEach(function(n) {
                    t.call(e, n, r, this);
                  }, this);
                }, this);
              });
            var r =
                "FileReader" in e &&
                "Blob" in e &&
                (function() {
                  try {
                    return new Blob(), !0;
                  } catch (t) {
                    return !1;
                  }
                })(),
              n = "FormData" in e,
              i = "ArrayBuffer" in e,
              o = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
            (d.prototype.clone = function() {
              return new d(this);
            }),
              f.call(d.prototype),
              f.call(m.prototype),
              (m.prototype.clone = function() {
                return new m(this._bodyInit, {
                  status: this.status,
                  statusText: this.statusText,
                  headers: new u(this.headers),
                  url: this.url
                });
              }),
              (m.error = function() {
                var t = new m(null, { status: 0, statusText: "" });
                return (t.type = "error"), t;
              });
            var s = [301, 302, 303, 307, 308];
            (m.redirect = function(t, e) {
              if (-1 === s.indexOf(e))
                throw new RangeError("Invalid status code");
              return new m(null, { status: e, headers: { location: t } });
            }),
              (e.Headers = u),
              (e.Request = d),
              (e.Response = m),
              (e.fetch = function(t, e) {
                return new Promise(function(n, i) {
                  var o;
                  o = d.prototype.isPrototypeOf(t) && !e ? t : new d(t, e);
                  var s = new XMLHttpRequest(),
                    a = !1;
                  function l() {
                    if (4 === s.readyState) {
                      var t = 1223 === s.status ? 204 : s.status;
                      if (t < 100 || t > 599) {
                        if (a) return;
                        return (
                          (a = !0),
                          void i(new TypeError("Network request failed"))
                        );
                      }
                      var e = {
                          status: t,
                          statusText: s.statusText,
                          headers: g(s),
                          url:
                            "responseURL" in s
                              ? s.responseURL
                              : /^X-Request-URL:/m.test(
                                  s.getAllResponseHeaders()
                                )
                              ? s.getResponseHeader("X-Request-URL")
                              : void 0
                        },
                        r = "response" in s ? s.response : s.responseText;
                      a || ((a = !0), n(new m(r, e)));
                    }
                  }
                  (s.onreadystatechange = l),
                    (s.onload = l),
                    (s.onerror = function() {
                      a ||
                        ((a = !0), i(new TypeError("Network request failed")));
                    }),
                    s.open(o.method, o.url, !0);
                  try {
                    "include" === o.credentials &&
                      ("withCredentials" in s
                        ? (s.withCredentials = !0)
                        : console &&
                          console.warn &&
                          console.warn(
                            "withCredentials is not supported, you can ignore this warning"
                          ));
                  } catch (t) {
                    console &&
                      console.warn &&
                      console.warn("set withCredentials error:" + t);
                  }
                  "responseType" in s && r && (s.responseType = "blob"),
                    o.headers.forEach(function(t, e) {
                      s.setRequestHeader(e, t);
                    }),
                    s.send(void 0 === o._bodyInit ? null : o._bodyInit);
                });
              }),
              (e.fetch.polyfill = !0),
              t.exports && (t.exports = e.fetch);
          }
          function a(t) {
            if (
              ("string" != typeof t && (t = String(t)),
              /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(t))
            )
              throw new TypeError("Invalid character in header field name");
            return t.toLowerCase();
          }
          function l(t) {
            return "string" != typeof t && (t = String(t)), t;
          }
          function u(t) {
            (this.map = {}),
              t instanceof u
                ? t.forEach(function(t, e) {
                    this.append(e, t);
                  }, this)
                : t &&
                  Object.getOwnPropertyNames(t).forEach(function(e) {
                    this.append(e, t[e]);
                  }, this);
          }
          function h(t) {
            if (t.bodyUsed)
              return Promise.reject(new TypeError("Already read"));
            t.bodyUsed = !0;
          }
          function c(t) {
            return new Promise(function(e, r) {
              (t.onload = function() {
                e(t.result);
              }),
                (t.onerror = function() {
                  r(t.error);
                });
            });
          }
          function p(t) {
            var e = new FileReader();
            return e.readAsArrayBuffer(t), c(e);
          }
          function f() {
            return (
              (this.bodyUsed = !1),
              (this._initBody = function(t, e) {
                if (((this._bodyInit = t), "string" == typeof t))
                  this._bodyText = t;
                else if (r && Blob.prototype.isPrototypeOf(t))
                  (this._bodyBlob = t), (this._options = e);
                else if (n && FormData.prototype.isPrototypeOf(t))
                  this._bodyFormData = t;
                else if (t) {
                  if (!i || !ArrayBuffer.prototype.isPrototypeOf(t))
                    throw new Error("unsupported BodyInit type");
                } else this._bodyText = "";
              }),
              r
                ? ((this.blob = function() {
                    var t = h(this);
                    if (t) return t;
                    if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                    if (this._bodyFormData)
                      throw new Error("could not read FormData body as blob");
                    return Promise.resolve(new Blob([this._bodyText]));
                  }),
                  (this.arrayBuffer = function() {
                    return this.blob().then(p);
                  }),
                  (this.text = function() {
                    var t,
                      e,
                      r,
                      n,
                      i,
                      o,
                      s,
                      a = h(this);
                    if (a) return a;
                    if (this._bodyBlob)
                      return (
                        (t = this._bodyBlob),
                        (e = this._options),
                        (r = new FileReader()),
                        (n = e.headers.map["content-type"]
                          ? e.headers.map["content-type"].toString()
                          : ""),
                        (i = /charset\=[0-9a-zA-Z\-\_]*;?/),
                        (o = t.type.match(i) || n.match(i)),
                        (s = [t]),
                        o &&
                          s.push(
                            o[0].replace(/^charset\=/, "").replace(/;$/, "")
                          ),
                        r.readAsText.apply(r, s),
                        c(r)
                      );
                    if (this._bodyFormData)
                      throw new Error("could not read FormData body as text");
                    return Promise.resolve(this._bodyText);
                  }))
                : (this.text = function() {
                    return h(this) || Promise.resolve(this._bodyText);
                  }),
              n &&
                (this.formData = function() {
                  return this.text().then(y);
                }),
              (this.json = function() {
                return this.text().then(JSON.parse);
              }),
              this
            );
          }
          function d(t, e) {
            var r,
              n,
              i = (e = e || {}).body;
            if (d.prototype.isPrototypeOf(t)) {
              if (t.bodyUsed) throw new TypeError("Already read");
              (this.url = t.url),
                (this.credentials = t.credentials),
                e.headers || (this.headers = new u(t.headers)),
                (this.method = t.method),
                (this.mode = t.mode),
                i || ((i = t._bodyInit), (t.bodyUsed = !0));
            } else this.url = t;
            if (
              ((this.credentials = e.credentials || this.credentials || "omit"),
              (!e.headers && this.headers) || (this.headers = new u(e.headers)),
              (this.method =
                ((n = (r = e.method || this.method || "GET").toUpperCase()),
                o.indexOf(n) > -1 ? n : r)),
              (this.mode = e.mode || this.mode || null),
              (this.referrer = null),
              ("GET" === this.method || "HEAD" === this.method) && i)
            )
              throw new TypeError("Body not allowed for GET or HEAD requests");
            this._initBody(i, e);
          }
          function y(t) {
            var e = new FormData();
            return (
              t
                .trim()
                .split("&")
                .forEach(function(t) {
                  if (t) {
                    var r = t.split("="),
                      n = r.shift().replace(/\+/g, " "),
                      i = r.join("=").replace(/\+/g, " ");
                    e.append(decodeURIComponent(n), decodeURIComponent(i));
                  }
                }),
              e
            );
          }
          function g(t) {
            var e = new u();
            return (
              t
                .getAllResponseHeaders()
                .trim()
                .split("\n")
                .forEach(function(t) {
                  var r = t.trim().split(":"),
                    n = r.shift().trim(),
                    i = r.join(":").trim();
                  e.append(n, i);
                }),
              e
            );
          }
          function m(t, e) {
            e || (e = {}),
              this._initBody(t, e),
              (this.type = "default"),
              (this.status = e.status),
              (this.ok = this.status >= 200 && this.status < 300),
              (this.statusText = e.statusText),
              (this.headers =
                e.headers instanceof u ? e.headers : new u(e.headers)),
              (this.url = e.url || "");
          }
        })("undefined" != typeof self ? self : this);
      },
      6754: function(t) {
        t.exports = (function() {
          "use strict";
          var t = setTimeout;
          function e() {}
          function r(t, e) {
            for (; 3 === t._state; ) t = t._value;
            0 !== t._state
              ? ((t._handled = !0),
                l._immediateFn(function() {
                  var r = 1 === t._state ? e.onFulfilled : e.onRejected;
                  if (null !== r) {
                    var o;
                    try {
                      o = r(t._value);
                    } catch (t) {
                      return void i(e.promise, t);
                    }
                    n(e.promise, o);
                  } else (1 === t._state ? n : i)(e.promise, t._value);
                }))
              : t._deferreds.push(e);
          }
          function n(t, e) {
            try {
              if (e === t)
                throw new TypeError(
                  "A promise cannot be resolved with itself."
                );
              if (e && ("object" == typeof e || "function" == typeof e)) {
                var r = e.then;
                if (e instanceof l)
                  return (t._state = 3), (t._value = e), void o(t);
                if ("function" == typeof r)
                  return void a(
                    ((n = r),
                    (s = e),
                    function() {
                      n.apply(s, arguments);
                    }),
                    t
                  );
              }
              (t._state = 1), (t._value = e), o(t);
            } catch (e) {
              i(t, e);
            }
            var n, s;
          }
          function i(t, e) {
            (t._state = 2), (t._value = e), o(t);
          }
          function o(t) {
            2 === t._state &&
              0 === t._deferreds.length &&
              l._immediateFn(function() {
                t._handled || l._unhandledRejectionFn(t._value);
              });
            for (var e = 0, n = t._deferreds.length; e < n; e++)
              r(t, t._deferreds[e]);
            t._deferreds = null;
          }
          function s(t, e, r) {
            (this.onFulfilled = "function" == typeof t ? t : null),
              (this.onRejected = "function" == typeof e ? e : null),
              (this.promise = r);
          }
          function a(t, e) {
            var r = !1;
            try {
              t(
                function(t) {
                  r || ((r = !0), n(e, t));
                },
                function(t) {
                  r || ((r = !0), i(e, t));
                }
              );
            } catch (t) {
              if (r) return;
              (r = !0), i(e, t);
            }
          }
          function l(t) {
            if (!(this instanceof l))
              throw new TypeError("Promises must be constructed via new");
            if ("function" != typeof t) throw new TypeError("not a function");
            (this._state = 0),
              (this._handled = !1),
              (this._value = void 0),
              (this._deferreds = []),
              a(t, this);
          }
          var u = l.prototype;
          return (
            (u.catch = function(t) {
              return this.then(null, t);
            }),
            (u.then = function(t, n) {
              var i = new this.constructor(e);
              return r(this, new s(t, n, i)), i;
            }),
            (l.all = function(t) {
              return new l(function(e, r) {
                if (!t || void 0 === t.length)
                  throw new TypeError("Promise.all accepts an array");
                var n = Array.prototype.slice.call(t);
                if (0 === n.length) return e([]);
                var i = n.length;
                function o(t, s) {
                  try {
                    if (s && ("object" == typeof s || "function" == typeof s)) {
                      var a = s.then;
                      if ("function" == typeof a)
                        return void a.call(
                          s,
                          function(e) {
                            o(t, e);
                          },
                          r
                        );
                    }
                    (n[t] = s), 0 == --i && e(n);
                  } catch (t) {
                    r(t);
                  }
                }
                for (var s = 0; s < n.length; s++) o(s, n[s]);
              });
            }),
            (l.resolve = function(t) {
              return t && "object" == typeof t && t.constructor === l
                ? t
                : new l(function(e) {
                    e(t);
                  });
            }),
            (l.reject = function(t) {
              return new l(function(e, r) {
                r(t);
              });
            }),
            (l.race = function(t) {
              return new l(function(e, r) {
                for (var n = 0, i = t.length; n < i; n++) t[n].then(e, r);
              });
            }),
            (l._immediateFn =
              ("function" == typeof setImmediate &&
                function(t) {
                  setImmediate(t);
                }) ||
              function(e) {
                t(e, 0);
              }),
            (l._unhandledRejectionFn = function(t) {
              "undefined" != typeof console &&
                console &&
                console.warn("Possible Unhandled Promise Rejection:", t);
            }),
            l
          );
        })();
      },
      6653: (t, e, r) => {
        "use strict";
        var n = r(1031);
        function i(t) {
          var e = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
          return (
            n.coordEach(t, function(t) {
              e[0] > t[0] && (e[0] = t[0]),
                e[1] > t[1] && (e[1] = t[1]),
                e[2] < t[0] && (e[2] = t[0]),
                e[3] < t[1] && (e[3] = t[1]);
            }),
            e
          );
        }
        (i.default = i), (e.Z = i);
      },
      4953: (t, e) => {
        "use strict";
        function r(t, e, r) {
          void 0 === r && (r = {});
          var n = { type: "Feature" };
          return (
            (0 === r.id || r.id) && (n.id = r.id),
            r.bbox && (n.bbox = r.bbox),
            (n.properties = e || {}),
            (n.geometry = t),
            n
          );
        }
        function n(t, e, n) {
          if ((void 0 === n && (n = {}), !t))
            throw new Error("coordinates is required");
          if (!Array.isArray(t))
            throw new Error("coordinates must be an Array");
          if (t.length < 2)
            throw new Error("coordinates must be at least 2 numbers long");
          if (!f(t[0]) || !f(t[1]))
            throw new Error("coordinates must contain numbers");
          return r({ type: "Point", coordinates: t }, e, n);
        }
        function i(t, e, n) {
          void 0 === n && (n = {});
          for (var i = 0, o = t; i < o.length; i++) {
            var s = o[i];
            if (s.length < 4)
              throw new Error(
                "Each LinearRing of a Polygon must have 4 or more Positions."
              );
            for (var a = 0; a < s[s.length - 1].length; a++)
              if (s[s.length - 1][a] !== s[0][a])
                throw new Error("First and last Position are not equivalent.");
          }
          return r({ type: "Polygon", coordinates: t }, e, n);
        }
        function o(t, e, n) {
          if ((void 0 === n && (n = {}), t.length < 2))
            throw new Error(
              "coordinates must be an array of two or more positions"
            );
          return r({ type: "LineString", coordinates: t }, e, n);
        }
        function s(t, e) {
          void 0 === e && (e = {});
          var r = { type: "FeatureCollection" };
          return (
            e.id && (r.id = e.id),
            e.bbox && (r.bbox = e.bbox),
            (r.features = t),
            r
          );
        }
        function a(t, e, n) {
          return (
            void 0 === n && (n = {}),
            r({ type: "MultiLineString", coordinates: t }, e, n)
          );
        }
        function l(t, e, n) {
          return (
            void 0 === n && (n = {}),
            r({ type: "MultiPoint", coordinates: t }, e, n)
          );
        }
        function u(t, e, n) {
          return (
            void 0 === n && (n = {}),
            r({ type: "MultiPolygon", coordinates: t }, e, n)
          );
        }
        function h(t, r) {
          void 0 === r && (r = "kilometers");
          var n = e.factors[r];
          if (!n) throw new Error(r + " units is invalid");
          return t * n;
        }
        function c(t, r) {
          void 0 === r && (r = "kilometers");
          var n = e.factors[r];
          if (!n) throw new Error(r + " units is invalid");
          return t / n;
        }
        function p(t) {
          return ((t % (2 * Math.PI)) * 180) / Math.PI;
        }
        function f(t) {
          return !isNaN(t) && null !== t && !Array.isArray(t);
        }
        Object.defineProperty(e, "__esModule", { value: !0 }),
          (e.earthRadius = 6371008.8),
          (e.factors = {
            centimeters: 100 * e.earthRadius,
            centimetres: 100 * e.earthRadius,
            degrees: e.earthRadius / 111325,
            feet: 3.28084 * e.earthRadius,
            inches: 39.37 * e.earthRadius,
            kilometers: e.earthRadius / 1e3,
            kilometres: e.earthRadius / 1e3,
            meters: e.earthRadius,
            metres: e.earthRadius,
            miles: e.earthRadius / 1609.344,
            millimeters: 1e3 * e.earthRadius,
            millimetres: 1e3 * e.earthRadius,
            nauticalmiles: e.earthRadius / 1852,
            radians: 1,
            yards: 1.0936 * e.earthRadius
          }),
          (e.unitsFactors = {
            centimeters: 100,
            centimetres: 100,
            degrees: 1 / 111325,
            feet: 3.28084,
            inches: 39.37,
            kilometers: 0.001,
            kilometres: 0.001,
            meters: 1,
            metres: 1,
            miles: 1 / 1609.344,
            millimeters: 1e3,
            millimetres: 1e3,
            nauticalmiles: 1 / 1852,
            radians: 1 / e.earthRadius,
            yards: 1.0936133
          }),
          (e.areaFactors = {
            acres: 247105e-9,
            centimeters: 1e4,
            centimetres: 1e4,
            feet: 10.763910417,
            hectares: 1e-4,
            inches: 1550.003100006,
            kilometers: 1e-6,
            kilometres: 1e-6,
            meters: 1,
            metres: 1,
            miles: 386e-9,
            millimeters: 1e6,
            millimetres: 1e6,
            yards: 1.195990046
          }),
          (e.feature = r),
          (e.geometry = function(t, e, r) {
            switch ((void 0 === r && (r = {}), t)) {
              case "Point":
                return n(e).geometry;
              case "LineString":
                return o(e).geometry;
              case "Polygon":
                return i(e).geometry;
              case "MultiPoint":
                return l(e).geometry;
              case "MultiLineString":
                return a(e).geometry;
              case "MultiPolygon":
                return u(e).geometry;
              default:
                throw new Error(t + " is invalid");
            }
          }),
          (e.point = n),
          (e.points = function(t, e, r) {
            return (
              void 0 === r && (r = {}),
              s(
                t.map(function(t) {
                  return n(t, e);
                }),
                r
              )
            );
          }),
          (e.polygon = i),
          (e.polygons = function(t, e, r) {
            return (
              void 0 === r && (r = {}),
              s(
                t.map(function(t) {
                  return i(t, e);
                }),
                r
              )
            );
          }),
          (e.lineString = o),
          (e.lineStrings = function(t, e, r) {
            return (
              void 0 === r && (r = {}),
              s(
                t.map(function(t) {
                  return o(t, e);
                }),
                r
              )
            );
          }),
          (e.featureCollection = s),
          (e.multiLineString = a),
          (e.multiPoint = l),
          (e.multiPolygon = u),
          (e.geometryCollection = function(t, e, n) {
            return (
              void 0 === n && (n = {}),
              r({ type: "GeometryCollection", geometries: t }, e, n)
            );
          }),
          (e.round = function(t, e) {
            if ((void 0 === e && (e = 0), e && !(e >= 0)))
              throw new Error("precision must be a positive number");
            var r = Math.pow(10, e || 0);
            return Math.round(t * r) / r;
          }),
          (e.radiansToLength = h),
          (e.lengthToRadians = c),
          (e.lengthToDegrees = function(t, e) {
            return p(c(t, e));
          }),
          (e.bearingToAzimuth = function(t) {
            var e = t % 360;
            return e < 0 && (e += 360), e;
          }),
          (e.radiansToDegrees = p),
          (e.degreesToRadians = function(t) {
            return ((t % 360) * Math.PI) / 180;
          }),
          (e.convertLength = function(t, e, r) {
            if (
              (void 0 === e && (e = "kilometers"),
              void 0 === r && (r = "kilometers"),
              !(t >= 0))
            )
              throw new Error("length must be a positive number");
            return h(c(t, e), r);
          }),
          (e.convertArea = function(t, r, n) {
            if (
              (void 0 === r && (r = "meters"),
              void 0 === n && (n = "kilometers"),
              !(t >= 0))
            )
              throw new Error("area must be a positive number");
            var i = e.areaFactors[r];
            if (!i) throw new Error("invalid original units");
            var o = e.areaFactors[n];
            if (!o) throw new Error("invalid final units");
            return (t / i) * o;
          }),
          (e.isNumber = f),
          (e.isObject = function(t) {
            return !!t && t.constructor === Object;
          }),
          (e.validateBBox = function(t) {
            if (!t) throw new Error("bbox is required");
            if (!Array.isArray(t)) throw new Error("bbox must be an Array");
            if (4 !== t.length && 6 !== t.length)
              throw new Error("bbox must be an Array of 4 or 6 numbers");
            t.forEach(function(t) {
              if (!f(t)) throw new Error("bbox must only contain numbers");
            });
          }),
          (e.validateId = function(t) {
            if (!t) throw new Error("id is required");
            if (-1 === ["string", "number"].indexOf(typeof t))
              throw new Error("id must be a number or a string");
          });
      },
      1031: (t, e, r) => {
        "use strict";
        Object.defineProperty(e, "__esModule", { value: !0 });
        var n = r(4953);
        function i(t, e, r) {
          if (null !== t)
            for (
              var n,
                o,
                s,
                a,
                l,
                u,
                h,
                c,
                p = 0,
                f = 0,
                d = t.type,
                y = "FeatureCollection" === d,
                g = "Feature" === d,
                m = y ? t.features.length : 1,
                v = 0;
              v < m;
              v++
            ) {
              l = (c =
                !!(h = y ? t.features[v].geometry : g ? t.geometry : t) &&
                "GeometryCollection" === h.type)
                ? h.geometries.length
                : 1;
              for (var _ = 0; _ < l; _++) {
                var x = 0,
                  b = 0;
                if (null !== (a = c ? h.geometries[_] : h)) {
                  u = a.coordinates;
                  var S = a.type;
                  switch (
                    ((p =
                      !r || ("Polygon" !== S && "MultiPolygon" !== S) ? 0 : 1),
                    S)
                  ) {
                    case null:
                      break;
                    case "Point":
                      if (!1 === e(u, f, v, x, b)) return !1;
                      f++, x++;
                      break;
                    case "LineString":
                    case "MultiPoint":
                      for (n = 0; n < u.length; n++) {
                        if (!1 === e(u[n], f, v, x, b)) return !1;
                        f++, "MultiPoint" === S && x++;
                      }
                      "LineString" === S && x++;
                      break;
                    case "Polygon":
                    case "MultiLineString":
                      for (n = 0; n < u.length; n++) {
                        for (o = 0; o < u[n].length - p; o++) {
                          if (!1 === e(u[n][o], f, v, x, b)) return !1;
                          f++;
                        }
                        "MultiLineString" === S && x++, "Polygon" === S && b++;
                      }
                      "Polygon" === S && x++;
                      break;
                    case "MultiPolygon":
                      for (n = 0; n < u.length; n++) {
                        for (b = 0, o = 0; o < u[n].length; o++) {
                          for (s = 0; s < u[n][o].length - p; s++) {
                            if (!1 === e(u[n][o][s], f, v, x, b)) return !1;
                            f++;
                          }
                          b++;
                        }
                        x++;
                      }
                      break;
                    case "GeometryCollection":
                      for (n = 0; n < a.geometries.length; n++)
                        if (!1 === i(a.geometries[n], e, r)) return !1;
                      break;
                    default:
                      throw new Error("Unknown Geometry Type");
                  }
                }
              }
            }
        }
        function o(t, e) {
          var r;
          switch (t.type) {
            case "FeatureCollection":
              for (
                r = 0;
                r < t.features.length && !1 !== e(t.features[r].properties, r);
                r++
              );
              break;
            case "Feature":
              e(t.properties, 0);
          }
        }
        function s(t, e) {
          if ("Feature" === t.type) e(t, 0);
          else if ("FeatureCollection" === t.type)
            for (
              var r = 0;
              r < t.features.length && !1 !== e(t.features[r], r);
              r++
            );
        }
        function a(t, e) {
          var r,
            n,
            i,
            o,
            s,
            a,
            l,
            u,
            h,
            c,
            p = 0,
            f = "FeatureCollection" === t.type,
            d = "Feature" === t.type,
            y = f ? t.features.length : 1;
          for (r = 0; r < y; r++) {
            for (
              a = f ? t.features[r].geometry : d ? t.geometry : t,
                u = f ? t.features[r].properties : d ? t.properties : {},
                h = f ? t.features[r].bbox : d ? t.bbox : void 0,
                c = f ? t.features[r].id : d ? t.id : void 0,
                s = (l = !!a && "GeometryCollection" === a.type)
                  ? a.geometries.length
                  : 1,
                i = 0;
              i < s;
              i++
            )
              if (null !== (o = l ? a.geometries[i] : a))
                switch (o.type) {
                  case "Point":
                  case "LineString":
                  case "MultiPoint":
                  case "Polygon":
                  case "MultiLineString":
                  case "MultiPolygon":
                    if (!1 === e(o, p, u, h, c)) return !1;
                    break;
                  case "GeometryCollection":
                    for (n = 0; n < o.geometries.length; n++)
                      if (!1 === e(o.geometries[n], p, u, h, c)) return !1;
                    break;
                  default:
                    throw new Error("Unknown Geometry Type");
                }
              else if (!1 === e(null, p, u, h, c)) return !1;
            p++;
          }
        }
        function l(t, e) {
          a(t, function(t, r, i, o, s) {
            var a,
              l = null === t ? null : t.type;
            switch (l) {
              case null:
              case "Point":
              case "LineString":
              case "Polygon":
                return (
                  !1 !== e(n.feature(t, i, { bbox: o, id: s }), r, 0) && void 0
                );
            }
            switch (l) {
              case "MultiPoint":
                a = "Point";
                break;
              case "MultiLineString":
                a = "LineString";
                break;
              case "MultiPolygon":
                a = "Polygon";
            }
            for (var u = 0; u < t.coordinates.length; u++) {
              var h = { type: a, coordinates: t.coordinates[u] };
              if (!1 === e(n.feature(h, i), r, u)) return !1;
            }
          });
        }
        function u(t, e) {
          l(t, function(t, r, o) {
            var s = 0;
            if (t.geometry) {
              var a = t.geometry.type;
              if ("Point" !== a && "MultiPoint" !== a) {
                var l,
                  u = 0,
                  h = 0,
                  c = 0;
                return (
                  !1 !==
                    i(t, function(i, a, p, f, d) {
                      if (void 0 === l || r > u || f > h || d > c)
                        return (l = i), (u = r), (h = f), (c = d), void (s = 0);
                      var y = n.lineString([l, i], t.properties);
                      if (!1 === e(y, r, o, d, s)) return !1;
                      s++, (l = i);
                    }) && void 0
                );
              }
            }
          });
        }
        function h(t, e) {
          if (!t) throw new Error("geojson is required");
          l(t, function(t, r, i) {
            if (null !== t.geometry) {
              var o = t.geometry.type,
                s = t.geometry.coordinates;
              switch (o) {
                case "LineString":
                  if (!1 === e(t, r, i, 0, 0)) return !1;
                  break;
                case "Polygon":
                  for (var a = 0; a < s.length; a++)
                    if (!1 === e(n.lineString(s[a], t.properties), r, i, a))
                      return !1;
              }
            }
          });
        }
        (e.coordEach = i),
          (e.coordReduce = function(t, e, r, n) {
            var o = r;
            return (
              i(
                t,
                function(t, n, i, s, a) {
                  o = 0 === n && void 0 === r ? t : e(o, t, n, i, s, a);
                },
                n
              ),
              o
            );
          }),
          (e.propEach = o),
          (e.propReduce = function(t, e, r) {
            var n = r;
            return (
              o(t, function(t, i) {
                n = 0 === i && void 0 === r ? t : e(n, t, i);
              }),
              n
            );
          }),
          (e.featureEach = s),
          (e.featureReduce = function(t, e, r) {
            var n = r;
            return (
              s(t, function(t, i) {
                n = 0 === i && void 0 === r ? t : e(n, t, i);
              }),
              n
            );
          }),
          (e.coordAll = function(t) {
            var e = [];
            return (
              i(t, function(t) {
                e.push(t);
              }),
              e
            );
          }),
          (e.geomEach = a),
          (e.geomReduce = function(t, e, r) {
            var n = r;
            return (
              a(t, function(t, i, o, s, a) {
                n = 0 === i && void 0 === r ? t : e(n, t, i, o, s, a);
              }),
              n
            );
          }),
          (e.flattenEach = l),
          (e.flattenReduce = function(t, e, r) {
            var n = r;
            return (
              l(t, function(t, i, o) {
                n = 0 === i && 0 === o && void 0 === r ? t : e(n, t, i, o);
              }),
              n
            );
          }),
          (e.segmentEach = u),
          (e.segmentReduce = function(t, e, r) {
            var n = r,
              i = !1;
            return (
              u(t, function(t, o, s, a, l) {
                (n = !1 === i && void 0 === r ? t : e(n, t, o, s, a, l)),
                  (i = !0);
              }),
              n
            );
          }),
          (e.lineEach = h),
          (e.lineReduce = function(t, e, r) {
            var n = r;
            return (
              h(t, function(t, i, o, s) {
                n = 0 === i && void 0 === r ? t : e(n, t, i, o, s);
              }),
              n
            );
          }),
          (e.findSegment = function(t, e) {
            if (((e = e || {}), !n.isObject(e)))
              throw new Error("options is invalid");
            var r,
              i = e.featureIndex || 0,
              o = e.multiFeatureIndex || 0,
              s = e.geometryIndex || 0,
              a = e.segmentIndex || 0,
              l = e.properties;
            switch (t.type) {
              case "FeatureCollection":
                i < 0 && (i = t.features.length + i),
                  (l = l || t.features[i].properties),
                  (r = t.features[i].geometry);
                break;
              case "Feature":
                (l = l || t.properties), (r = t.geometry);
                break;
              case "Point":
              case "MultiPoint":
                return null;
              case "LineString":
              case "Polygon":
              case "MultiLineString":
              case "MultiPolygon":
                r = t;
                break;
              default:
                throw new Error("geojson is invalid");
            }
            if (null === r) return null;
            var u = r.coordinates;
            switch (r.type) {
              case "Point":
              case "MultiPoint":
                return null;
              case "LineString":
                return (
                  a < 0 && (a = u.length + a - 1),
                  n.lineString([u[a], u[a + 1]], l, e)
                );
              case "Polygon":
                return (
                  s < 0 && (s = u.length + s),
                  a < 0 && (a = u[s].length + a - 1),
                  n.lineString([u[s][a], u[s][a + 1]], l, e)
                );
              case "MultiLineString":
                return (
                  o < 0 && (o = u.length + o),
                  a < 0 && (a = u[o].length + a - 1),
                  n.lineString([u[o][a], u[o][a + 1]], l, e)
                );
              case "MultiPolygon":
                return (
                  o < 0 && (o = u.length + o),
                  s < 0 && (s = u[o].length + s),
                  a < 0 && (a = u[o][s].length - a - 1),
                  n.lineString([u[o][s][a], u[o][s][a + 1]], l, e)
                );
            }
            throw new Error("geojson is invalid");
          }),
          (e.findPoint = function(t, e) {
            if (((e = e || {}), !n.isObject(e)))
              throw new Error("options is invalid");
            var r,
              i = e.featureIndex || 0,
              o = e.multiFeatureIndex || 0,
              s = e.geometryIndex || 0,
              a = e.coordIndex || 0,
              l = e.properties;
            switch (t.type) {
              case "FeatureCollection":
                i < 0 && (i = t.features.length + i),
                  (l = l || t.features[i].properties),
                  (r = t.features[i].geometry);
                break;
              case "Feature":
                (l = l || t.properties), (r = t.geometry);
                break;
              case "Point":
              case "MultiPoint":
                return null;
              case "LineString":
              case "Polygon":
              case "MultiLineString":
              case "MultiPolygon":
                r = t;
                break;
              default:
                throw new Error("geojson is invalid");
            }
            if (null === r) return null;
            var u = r.coordinates;
            switch (r.type) {
              case "Point":
                return n.point(u, l, e);
              case "MultiPoint":
                return o < 0 && (o = u.length + o), n.point(u[o], l, e);
              case "LineString":
                return a < 0 && (a = u.length + a), n.point(u[a], l, e);
              case "Polygon":
                return (
                  s < 0 && (s = u.length + s),
                  a < 0 && (a = u[s].length + a),
                  n.point(u[s][a], l, e)
                );
              case "MultiLineString":
                return (
                  o < 0 && (o = u.length + o),
                  a < 0 && (a = u[o].length + a),
                  n.point(u[o][a], l, e)
                );
              case "MultiPolygon":
                return (
                  o < 0 && (o = u.length + o),
                  s < 0 && (s = u[o].length + s),
                  a < 0 && (a = u[o][s].length - a),
                  n.point(u[o][s][a], l, e)
                );
            }
            throw new Error("geojson is invalid");
          });
      },
      6489: (t, e, r) => {
        "use strict";
        var n = r(9427),
          i = r(6516),
          o = i(n("String.prototype.indexOf"));
        t.exports = function(t, e) {
          var r = n(t, !!e);
          return "function" == typeof r && o(t, ".prototype.") > -1 ? i(r) : r;
        };
      },
      6516: (t, e, r) => {
        "use strict";
        var n = r(6558),
          i = r(9427),
          o = i("%Function.prototype.apply%"),
          s = i("%Function.prototype.call%"),
          a = i("%Reflect.apply%", !0) || n.call(s, o),
          l = i("%Object.getOwnPropertyDescriptor%", !0),
          u = i("%Object.defineProperty%", !0),
          h = i("%Math.max%");
        if (u)
          try {
            u({}, "a", { value: 1 });
          } catch (t) {
            u = null;
          }
        t.exports = function(t) {
          var e = a(n, s, arguments);
          if (l && u) {
            var r = l(e, "length");
            r.configurable &&
              u(e, "length", {
                value: 1 + h(0, t.length - (arguments.length - 1))
              });
          }
          return e;
        };
        var c = function() {
          return a(n, o, arguments);
        };
        u ? u(t.exports, "apply", { value: c }) : (t.exports.apply = c);
      },
      5592: (t, e, r) => {
        "use strict";
        var n = r(7163),
          i = r(1266),
          o = r(1947);
        const s = r(3797).orient2d;
        function a(t, e, r) {
          (e = Math.max(0, void 0 === e ? 2 : e)), (r = r || 0);
          var i = (function(t) {
              for (
                var e = t[0], r = t[0], n = t[0], i = t[0], s = 0;
                s < t.length;
                s++
              ) {
                var a = t[s];
                a[0] < e[0] && (e = a),
                  a[0] > n[0] && (n = a),
                  a[1] < r[1] && (r = a),
                  a[1] > i[1] && (i = a);
              }
              var l = [e, r, n, i],
                u = l.slice();
              for (s = 0; s < t.length; s++) o(t[s], l) || u.push(t[s]);
              return (function(t) {
                t.sort(_);
                for (var e = [], r = 0; r < t.length; r++) {
                  for (
                    ;
                    e.length >= 2 &&
                    f(e[e.length - 2], e[e.length - 1], t[r]) <= 0;

                  )
                    e.pop();
                  e.push(t[r]);
                }
                for (var n = [], i = t.length - 1; i >= 0; i--) {
                  for (
                    ;
                    n.length >= 2 &&
                    f(n[n.length - 2], n[n.length - 1], t[i]) <= 0;

                  )
                    n.pop();
                  n.push(t[i]);
                }
                return n.pop(), e.pop(), e.concat(n);
              })(u);
            })(t),
            s = new n(16);
          (s.toBBox = function(t) {
            return { minX: t[0], minY: t[1], maxX: t[0], maxY: t[1] };
          }),
            (s.compareMinX = function(t, e) {
              return t[0] - e[0];
            }),
            (s.compareMinY = function(t, e) {
              return t[1] - e[1];
            }),
            s.load(t);
          for (var a, u = [], h = 0; h < i.length; h++) {
            var c = i[h];
            s.remove(c), (a = y(c, a)), u.push(a);
          }
          var p = new n(16);
          for (h = 0; h < u.length; h++) p.insert(d(u[h]));
          for (var m = e * e, v = r * r; u.length; ) {
            var x = u.shift(),
              b = x.p,
              S = x.next.p,
              I = g(b, S);
            if (!(I < v)) {
              var w = I / m;
              (c = l(s, x.prev.p, b, S, x.next.next.p, w, p)) &&
                Math.min(g(c, b), g(c, S)) <= w &&
                (u.push(x),
                u.push(y(c, x)),
                s.remove(c),
                p.remove(x),
                p.insert(d(x)),
                p.insert(d(x.next)));
            }
          }
          x = a;
          var N = [];
          do {
            N.push(x.p), (x = x.next);
          } while (x !== a);
          return N.push(x.p), N;
        }
        function l(t, e, r, n, o, s, a) {
          for (var l = new i([], u), c = t.data; c; ) {
            for (var f = 0; f < c.children.length; f++) {
              var d = c.children[f],
                y = c.leaf ? m(d, r, n) : h(r, n, d);
              y > s || l.push({ node: d, dist: y });
            }
            for (; l.length && !l.peek().node.children; ) {
              var g = l.pop(),
                v = g.node,
                _ = m(v, e, r),
                x = m(v, n, o);
              if (g.dist < _ && g.dist < x && p(r, v, a) && p(n, v, a))
                return v;
            }
            (c = l.pop()) && (c = c.node);
          }
          return null;
        }
        function u(t, e) {
          return t.dist - e.dist;
        }
        function h(t, e, r) {
          if (c(t, r) || c(e, r)) return 0;
          var n = v(t[0], t[1], e[0], e[1], r.minX, r.minY, r.maxX, r.minY);
          if (0 === n) return 0;
          var i = v(t[0], t[1], e[0], e[1], r.minX, r.minY, r.minX, r.maxY);
          if (0 === i) return 0;
          var o = v(t[0], t[1], e[0], e[1], r.maxX, r.minY, r.maxX, r.maxY);
          if (0 === o) return 0;
          var s = v(t[0], t[1], e[0], e[1], r.minX, r.maxY, r.maxX, r.maxY);
          return 0 === s ? 0 : Math.min(n, i, o, s);
        }
        function c(t, e) {
          return (
            t[0] >= e.minX && t[0] <= e.maxX && t[1] >= e.minY && t[1] <= e.maxY
          );
        }
        function p(t, e, r) {
          for (
            var n,
              i,
              o,
              s,
              a = Math.min(t[0], e[0]),
              l = Math.min(t[1], e[1]),
              u = Math.max(t[0], e[0]),
              h = Math.max(t[1], e[1]),
              c = r.search({ minX: a, minY: l, maxX: u, maxY: h }),
              p = 0;
            p < c.length;
            p++
          )
            if (
              ((n = c[p].p),
              (i = c[p].next.p),
              (o = t),
              n !== (s = e) &&
                i !== o &&
                f(n, i, o) > 0 != f(n, i, s) > 0 &&
                f(o, s, n) > 0 != f(o, s, i) > 0)
            )
              return !1;
          return !0;
        }
        function f(t, e, r) {
          return s(t[0], t[1], e[0], e[1], r[0], r[1]);
        }
        function d(t) {
          var e = t.p,
            r = t.next.p;
          return (
            (t.minX = Math.min(e[0], r[0])),
            (t.minY = Math.min(e[1], r[1])),
            (t.maxX = Math.max(e[0], r[0])),
            (t.maxY = Math.max(e[1], r[1])),
            t
          );
        }
        function y(t, e) {
          var r = {
            p: t,
            prev: null,
            next: null,
            minX: 0,
            minY: 0,
            maxX: 0,
            maxY: 0
          };
          return (
            e
              ? ((r.next = e.next),
                (r.prev = e),
                (e.next.prev = r),
                (e.next = r))
              : ((r.prev = r), (r.next = r)),
            r
          );
        }
        function g(t, e) {
          var r = t[0] - e[0],
            n = t[1] - e[1];
          return r * r + n * n;
        }
        function m(t, e, r) {
          var n = e[0],
            i = e[1],
            o = r[0] - n,
            s = r[1] - i;
          if (0 !== o || 0 !== s) {
            var a = ((t[0] - n) * o + (t[1] - i) * s) / (o * o + s * s);
            a > 1
              ? ((n = r[0]), (i = r[1]))
              : a > 0 && ((n += o * a), (i += s * a));
          }
          return (o = t[0] - n) * o + (s = t[1] - i) * s;
        }
        function v(t, e, r, n, i, o, s, a) {
          var l,
            u,
            h,
            c,
            p = r - t,
            f = n - e,
            d = s - i,
            y = a - o,
            g = t - i,
            m = e - o,
            v = p * p + f * f,
            _ = p * d + f * y,
            x = d * d + y * y,
            b = p * g + f * m,
            S = d * g + y * m,
            I = v * x - _ * _,
            w = I,
            N = I;
          0 === I
            ? ((u = 0), (w = 1), (c = S), (N = x))
            : ((c = v * S - _ * b),
              (u = _ * S - x * b) < 0
                ? ((u = 0), (c = S), (N = x))
                : u > w && ((u = w), (c = S + _), (N = x))),
            c < 0
              ? ((c = 0),
                -b < 0 ? (u = 0) : -b > v ? (u = w) : ((u = -b), (w = v)))
              : c > N &&
                ((c = N),
                -b + _ < 0
                  ? (u = 0)
                  : -b + _ > v
                  ? (u = w)
                  : ((u = -b + _), (w = v)));
          var C =
              (1 - (h = 0 === c ? 0 : c / N)) * i +
              h * s -
              ((1 - (l = 0 === u ? 0 : u / w)) * t + l * r),
            E = (1 - h) * o + h * a - ((1 - l) * e + l * n);
          return C * C + E * E;
        }
        function _(t, e) {
          return t[0] === e[0] ? t[1] - e[1] : t[0] - e[0];
        }
        (t.exports = a), (t.exports.default = a);
      },
      7163: function(t) {
        t.exports = (function() {
          "use strict";
          function t(t, n, i, o, s) {
            !(function t(r, n, i, o, s) {
              for (; o > i; ) {
                if (o - i > 600) {
                  var a = o - i + 1,
                    l = n - i + 1,
                    u = Math.log(a),
                    h = 0.5 * Math.exp((2 * u) / 3),
                    c =
                      0.5 *
                      Math.sqrt((u * h * (a - h)) / a) *
                      (l - a / 2 < 0 ? -1 : 1);
                  t(
                    r,
                    n,
                    Math.max(i, Math.floor(n - (l * h) / a + c)),
                    Math.min(o, Math.floor(n + ((a - l) * h) / a + c)),
                    s
                  );
                }
                var p = r[n],
                  f = i,
                  d = o;
                for (e(r, i, n), s(r[o], p) > 0 && e(r, i, o); f < d; ) {
                  for (e(r, f, d), f++, d--; s(r[f], p) < 0; ) f++;
                  for (; s(r[d], p) > 0; ) d--;
                }
                0 === s(r[i], p) ? e(r, i, d) : e(r, ++d, o),
                  d <= n && (i = d + 1),
                  n <= d && (o = d - 1);
              }
            })(t, n, i || 0, o || t.length - 1, s || r);
          }
          function e(t, e, r) {
            var n = t[e];
            (t[e] = t[r]), (t[r] = n);
          }
          function r(t, e) {
            return t < e ? -1 : t > e ? 1 : 0;
          }
          var n = function(t) {
            void 0 === t && (t = 9),
              (this._maxEntries = Math.max(4, t)),
              (this._minEntries = Math.max(
                2,
                Math.ceil(0.4 * this._maxEntries)
              )),
              this.clear();
          };
          function i(t, e, r) {
            if (!r) return e.indexOf(t);
            for (var n = 0; n < e.length; n++) if (r(t, e[n])) return n;
            return -1;
          }
          function o(t, e) {
            s(t, 0, t.children.length, e, t);
          }
          function s(t, e, r, n, i) {
            i || (i = d(null)),
              (i.minX = 1 / 0),
              (i.minY = 1 / 0),
              (i.maxX = -1 / 0),
              (i.maxY = -1 / 0);
            for (var o = e; o < r; o++) {
              var s = t.children[o];
              a(i, t.leaf ? n(s) : s);
            }
            return i;
          }
          function a(t, e) {
            return (
              (t.minX = Math.min(t.minX, e.minX)),
              (t.minY = Math.min(t.minY, e.minY)),
              (t.maxX = Math.max(t.maxX, e.maxX)),
              (t.maxY = Math.max(t.maxY, e.maxY)),
              t
            );
          }
          function l(t, e) {
            return t.minX - e.minX;
          }
          function u(t, e) {
            return t.minY - e.minY;
          }
          function h(t) {
            return (t.maxX - t.minX) * (t.maxY - t.minY);
          }
          function c(t) {
            return t.maxX - t.minX + (t.maxY - t.minY);
          }
          function p(t, e) {
            return (
              t.minX <= e.minX &&
              t.minY <= e.minY &&
              e.maxX <= t.maxX &&
              e.maxY <= t.maxY
            );
          }
          function f(t, e) {
            return (
              e.minX <= t.maxX &&
              e.minY <= t.maxY &&
              e.maxX >= t.minX &&
              e.maxY >= t.minY
            );
          }
          function d(t) {
            return {
              children: t,
              height: 1,
              leaf: !0,
              minX: 1 / 0,
              minY: 1 / 0,
              maxX: -1 / 0,
              maxY: -1 / 0
            };
          }
          function y(e, r, n, i, o) {
            for (var s = [r, n]; s.length; )
              if (!((n = s.pop()) - (r = s.pop()) <= i)) {
                var a = r + Math.ceil((n - r) / i / 2) * i;
                t(e, a, r, n, o), s.push(r, a, a, n);
              }
          }
          return (
            (n.prototype.all = function() {
              return this._all(this.data, []);
            }),
            (n.prototype.search = function(t) {
              var e = this.data,
                r = [];
              if (!f(t, e)) return r;
              for (var n = this.toBBox, i = []; e; ) {
                for (var o = 0; o < e.children.length; o++) {
                  var s = e.children[o],
                    a = e.leaf ? n(s) : s;
                  f(t, a) &&
                    (e.leaf
                      ? r.push(s)
                      : p(t, a)
                      ? this._all(s, r)
                      : i.push(s));
                }
                e = i.pop();
              }
              return r;
            }),
            (n.prototype.collides = function(t) {
              var e = this.data;
              if (!f(t, e)) return !1;
              for (var r = []; e; ) {
                for (var n = 0; n < e.children.length; n++) {
                  var i = e.children[n],
                    o = e.leaf ? this.toBBox(i) : i;
                  if (f(t, o)) {
                    if (e.leaf || p(t, o)) return !0;
                    r.push(i);
                  }
                }
                e = r.pop();
              }
              return !1;
            }),
            (n.prototype.load = function(t) {
              if (!t || !t.length) return this;
              if (t.length < this._minEntries) {
                for (var e = 0; e < t.length; e++) this.insert(t[e]);
                return this;
              }
              var r = this._build(t.slice(), 0, t.length - 1, 0);
              if (this.data.children.length)
                if (this.data.height === r.height)
                  this._splitRoot(this.data, r);
                else {
                  if (this.data.height < r.height) {
                    var n = this.data;
                    (this.data = r), (r = n);
                  }
                  this._insert(r, this.data.height - r.height - 1, !0);
                }
              else this.data = r;
              return this;
            }),
            (n.prototype.insert = function(t) {
              return t && this._insert(t, this.data.height - 1), this;
            }),
            (n.prototype.clear = function() {
              return (this.data = d([])), this;
            }),
            (n.prototype.remove = function(t, e) {
              if (!t) return this;
              for (
                var r, n, o, s = this.data, a = this.toBBox(t), l = [], u = [];
                s || l.length;

              ) {
                if (
                  (s ||
                    ((s = l.pop()),
                    (n = l[l.length - 1]),
                    (r = u.pop()),
                    (o = !0)),
                  s.leaf)
                ) {
                  var h = i(t, s.children, e);
                  if (-1 !== h)
                    return (
                      s.children.splice(h, 1),
                      l.push(s),
                      this._condense(l),
                      this
                    );
                }
                o || s.leaf || !p(s, a)
                  ? n
                    ? (r++, (s = n.children[r]), (o = !1))
                    : (s = null)
                  : (l.push(s),
                    u.push(r),
                    (r = 0),
                    (n = s),
                    (s = s.children[0]));
              }
              return this;
            }),
            (n.prototype.toBBox = function(t) {
              return t;
            }),
            (n.prototype.compareMinX = function(t, e) {
              return t.minX - e.minX;
            }),
            (n.prototype.compareMinY = function(t, e) {
              return t.minY - e.minY;
            }),
            (n.prototype.toJSON = function() {
              return this.data;
            }),
            (n.prototype.fromJSON = function(t) {
              return (this.data = t), this;
            }),
            (n.prototype._all = function(t, e) {
              for (var r = []; t; )
                t.leaf
                  ? e.push.apply(e, t.children)
                  : r.push.apply(r, t.children),
                  (t = r.pop());
              return e;
            }),
            (n.prototype._build = function(t, e, r, n) {
              var i,
                s = r - e + 1,
                a = this._maxEntries;
              if (s <= a) return o((i = d(t.slice(e, r + 1))), this.toBBox), i;
              n ||
                ((n = Math.ceil(Math.log(s) / Math.log(a))),
                (a = Math.ceil(s / Math.pow(a, n - 1)))),
                ((i = d([])).leaf = !1),
                (i.height = n);
              var l = Math.ceil(s / a),
                u = l * Math.ceil(Math.sqrt(a));
              y(t, e, r, u, this.compareMinX);
              for (var h = e; h <= r; h += u) {
                var c = Math.min(h + u - 1, r);
                y(t, h, c, l, this.compareMinY);
                for (var p = h; p <= c; p += l) {
                  var f = Math.min(p + l - 1, c);
                  i.children.push(this._build(t, p, f, n - 1));
                }
              }
              return o(i, this.toBBox), i;
            }),
            (n.prototype._chooseSubtree = function(t, e, r, n) {
              for (; n.push(e), !e.leaf && n.length - 1 !== r; ) {
                for (
                  var i = 1 / 0, o = 1 / 0, s = void 0, a = 0;
                  a < e.children.length;
                  a++
                ) {
                  var l = e.children[a],
                    u = h(l),
                    c =
                      ((p = t),
                      (f = l),
                      (Math.max(f.maxX, p.maxX) - Math.min(f.minX, p.minX)) *
                        (Math.max(f.maxY, p.maxY) - Math.min(f.minY, p.minY)) -
                        u);
                  c < o
                    ? ((o = c), (i = u < i ? u : i), (s = l))
                    : c === o && u < i && ((i = u), (s = l));
                }
                e = s || e.children[0];
              }
              var p, f;
              return e;
            }),
            (n.prototype._insert = function(t, e, r) {
              var n = r ? t : this.toBBox(t),
                i = [],
                o = this._chooseSubtree(n, this.data, e, i);
              for (
                o.children.push(t), a(o, n);
                e >= 0 && i[e].children.length > this._maxEntries;

              )
                this._split(i, e), e--;
              this._adjustParentBBoxes(n, i, e);
            }),
            (n.prototype._split = function(t, e) {
              var r = t[e],
                n = r.children.length,
                i = this._minEntries;
              this._chooseSplitAxis(r, i, n);
              var s = this._chooseSplitIndex(r, i, n),
                a = d(r.children.splice(s, r.children.length - s));
              (a.height = r.height),
                (a.leaf = r.leaf),
                o(r, this.toBBox),
                o(a, this.toBBox),
                e ? t[e - 1].children.push(a) : this._splitRoot(r, a);
            }),
            (n.prototype._splitRoot = function(t, e) {
              (this.data = d([t, e])),
                (this.data.height = t.height + 1),
                (this.data.leaf = !1),
                o(this.data, this.toBBox);
            }),
            (n.prototype._chooseSplitIndex = function(t, e, r) {
              for (
                var n, i, o, a, l, u, c, p = 1 / 0, f = 1 / 0, d = e;
                d <= r - e;
                d++
              ) {
                var y = s(t, 0, d, this.toBBox),
                  g = s(t, d, r, this.toBBox),
                  m =
                    ((i = y),
                    (o = g),
                    void 0,
                    void 0,
                    void 0,
                    void 0,
                    (a = Math.max(i.minX, o.minX)),
                    (l = Math.max(i.minY, o.minY)),
                    (u = Math.min(i.maxX, o.maxX)),
                    (c = Math.min(i.maxY, o.maxY)),
                    Math.max(0, u - a) * Math.max(0, c - l)),
                  v = h(y) + h(g);
                m < p
                  ? ((p = m), (n = d), (f = v < f ? v : f))
                  : m === p && v < f && ((f = v), (n = d));
              }
              return n || r - e;
            }),
            (n.prototype._chooseSplitAxis = function(t, e, r) {
              var n = t.leaf ? this.compareMinX : l,
                i = t.leaf ? this.compareMinY : u;
              this._allDistMargin(t, e, r, n) <
                this._allDistMargin(t, e, r, i) && t.children.sort(n);
            }),
            (n.prototype._allDistMargin = function(t, e, r, n) {
              t.children.sort(n);
              for (
                var i = this.toBBox,
                  o = s(t, 0, e, i),
                  l = s(t, r - e, r, i),
                  u = c(o) + c(l),
                  h = e;
                h < r - e;
                h++
              ) {
                var p = t.children[h];
                a(o, t.leaf ? i(p) : p), (u += c(o));
              }
              for (var f = r - e - 1; f >= e; f--) {
                var d = t.children[f];
                a(l, t.leaf ? i(d) : d), (u += c(l));
              }
              return u;
            }),
            (n.prototype._adjustParentBBoxes = function(t, e, r) {
              for (var n = r; n >= 0; n--) a(e[n], t);
            }),
            (n.prototype._condense = function(t) {
              for (var e = t.length - 1, r = void 0; e >= 0; e--)
                0 === t[e].children.length
                  ? e > 0
                    ? (r = t[e - 1].children).splice(r.indexOf(t[e]), 1)
                    : this.clear()
                  : o(t[e], this.toBBox);
            }),
            n
          );
        })();
      },
      3473: (t, e, r) => {
        var n = r(5996),
          i = r(2372),
          o = r(4720),
          s = r(616),
          a = r(7989),
          l = r(660),
          u = Date.prototype.getTime;
        function h(t) {
          return null == t;
        }
        function c(t) {
          return !(
            !t ||
            "object" != typeof t ||
            "number" != typeof t.length ||
            "function" != typeof t.copy ||
            "function" != typeof t.slice ||
            (t.length > 0 && "number" != typeof t[0])
          );
        }
        t.exports = function t(e, r, p) {
          var f = p || {};
          return (
            !!(f.strict ? o(e, r) : e === r) ||
            (!e || !r || ("object" != typeof e && "object" != typeof r)
              ? f.strict
                ? o(e, r)
                : e == r
              : (function(e, r, o) {
                  var p, f;
                  if (typeof e != typeof r) return !1;
                  if (h(e) || h(r)) return !1;
                  if (e.prototype !== r.prototype) return !1;
                  if (i(e) !== i(r)) return !1;
                  var d = s(e),
                    y = s(r);
                  if (d !== y) return !1;
                  if (d || y) return e.source === r.source && a(e) === a(r);
                  if (l(e) && l(r)) return u.call(e) === u.call(r);
                  var g = c(e),
                    m = c(r);
                  if (g !== m) return !1;
                  if (g || m) {
                    if (e.length !== r.length) return !1;
                    for (p = 0; p < e.length; p++) if (e[p] !== r[p]) return !1;
                    return !0;
                  }
                  if (typeof e != typeof r) return !1;
                  try {
                    var v = n(e),
                      _ = n(r);
                  } catch (t) {
                    return !1;
                  }
                  if (v.length !== _.length) return !1;
                  for (v.sort(), _.sort(), p = v.length - 1; p >= 0; p--)
                    if (v[p] != _[p]) return !1;
                  for (p = v.length - 1; p >= 0; p--)
                    if (!t(e[(f = v[p])], r[f], o)) return !1;
                  return !0;
                })(e, r, f))
          );
        };
      },
      5267: (t, e, r) => {
        "use strict";
        var n = r(5996),
          i = "function" == typeof Symbol && "symbol" == typeof Symbol("foo"),
          o = Object.prototype.toString,
          s = Array.prototype.concat,
          a = Object.defineProperty,
          l =
            a &&
            (function() {
              var t = {};
              try {
                for (var e in (a(t, "x", { enumerable: !1, value: t }), t))
                  return !1;
                return t.x === t;
              } catch (t) {
                return !1;
              }
            })(),
          u = function(t, e, r, n) {
            var i;
            (!(e in t) ||
              ("function" == typeof (i = n) &&
                "[object Function]" === o.call(i) &&
                n())) &&
              (l
                ? a(t, e, {
                    configurable: !0,
                    enumerable: !1,
                    value: r,
                    writable: !0
                  })
                : (t[e] = r));
          },
          h = function(t, e) {
            var r = arguments.length > 2 ? arguments[2] : {},
              o = n(e);
            i && (o = s.call(o, Object.getOwnPropertySymbols(e)));
            for (var a = 0; a < o.length; a += 1) u(t, o[a], e[o[a]], r[o[a]]);
          };
        (h.supportsDescriptors = !!l), (t.exports = h);
      },
      6706: t => {
        function e(t, e, r, n) {
          (this.dataset = []),
            (this.epsilon = 1),
            (this.minPts = 2),
            (this.distance = this._euclideanDistance),
            (this.clusters = []),
            (this.noise = []),
            (this._visited = []),
            (this._assigned = []),
            (this._datasetLength = 0),
            this._init(t, e, r, n);
        }
        (e.prototype.run = function(t, e, r, n) {
          this._init(t, e, r, n);
          for (var i = 0; i < this._datasetLength; i++)
            if (1 !== this._visited[i]) {
              this._visited[i] = 1;
              var o = this._regionQuery(i);
              if (o.length < this.minPts) this.noise.push(i);
              else {
                var s = this.clusters.length;
                this.clusters.push([]),
                  this._addToCluster(i, s),
                  this._expandCluster(s, o);
              }
            }
          return this.clusters;
        }),
          (e.prototype._init = function(t, e, r, n) {
            if (t) {
              if (!(t instanceof Array))
                throw Error(
                  "Dataset must be of type array, " + typeof t + " given"
                );
              (this.dataset = t),
                (this.clusters = []),
                (this.noise = []),
                (this._datasetLength = t.length),
                (this._visited = new Array(this._datasetLength)),
                (this._assigned = new Array(this._datasetLength));
            }
            e && (this.epsilon = e),
              r && (this.minPts = r),
              n && (this.distance = n);
          }),
          (e.prototype._expandCluster = function(t, e) {
            for (var r = 0; r < e.length; r++) {
              var n = e[r];
              if (1 !== this._visited[n]) {
                this._visited[n] = 1;
                var i = this._regionQuery(n);
                i.length >= this.minPts && (e = this._mergeArrays(e, i));
              }
              1 !== this._assigned[n] && this._addToCluster(n, t);
            }
          }),
          (e.prototype._addToCluster = function(t, e) {
            this.clusters[e].push(t), (this._assigned[t] = 1);
          }),
          (e.prototype._regionQuery = function(t) {
            for (var e = [], r = 0; r < this._datasetLength; r++)
              this.distance(this.dataset[t], this.dataset[r]) < this.epsilon &&
                e.push(r);
            return e;
          }),
          (e.prototype._mergeArrays = function(t, e) {
            for (var r = e.length, n = 0; n < r; n++) {
              var i = e[n];
              t.indexOf(i) < 0 && t.push(i);
            }
            return t;
          }),
          (e.prototype._euclideanDistance = function(t, e) {
            for (var r = 0, n = Math.min(t.length, e.length); n--; )
              r += (t[n] - e[n]) * (t[n] - e[n]);
            return Math.sqrt(r);
          }),
          t.exports && (t.exports = e);
      },
      8725: t => {
        function e(t, e, r) {
          (this.k = 3),
            (this.dataset = []),
            (this.assignments = []),
            (this.centroids = []),
            this.init(t, e, r);
        }
        (e.prototype.init = function(t, e, r) {
          (this.assignments = []),
            (this.centroids = []),
            void 0 !== t && (this.dataset = t),
            void 0 !== e && (this.k = e),
            void 0 !== r && (this.distance = r);
        }),
          (e.prototype.run = function(t, e) {
            this.init(t, e);
            for (var r = this.dataset.length, n = 0; n < this.k; n++)
              this.centroids[n] = this.randomCentroid();
            for (var i = !0; i; ) {
              i = this.assign();
              for (var o = 0; o < this.k; o++) {
                for (var s = new Array(h), a = 0, l = 0; l < h; l++) s[l] = 0;
                for (var u = 0; u < r; u++) {
                  var h = this.dataset[u].length;
                  if (o === this.assignments[u]) {
                    for (l = 0; l < h; l++) s[l] += this.dataset[u][l];
                    a++;
                  }
                }
                if (a > 0) {
                  for (l = 0; l < h; l++) s[l] /= a;
                  this.centroids[o] = s;
                } else (this.centroids[o] = this.randomCentroid()), (i = !0);
              }
            }
            return this.getClusters();
          }),
          (e.prototype.randomCentroid = function() {
            var t,
              e,
              r = this.dataset.length - 1;
            do {
              (e = Math.round(Math.random() * r)), (t = this.dataset[e]);
            } while (this.centroids.indexOf(t) >= 0);
            return t;
          }),
          (e.prototype.assign = function() {
            for (var t, e = !1, r = this.dataset.length, n = 0; n < r; n++)
              (t = this.argmin(
                this.dataset[n],
                this.centroids,
                this.distance
              )) != this.assignments[n] &&
                ((this.assignments[n] = t), (e = !0));
            return e;
          }),
          (e.prototype.getClusters = function() {
            for (
              var t, e = new Array(this.k), r = 0;
              r < this.assignments.length;
              r++
            )
              void 0 === e[(t = this.assignments[r])] && (e[t] = []),
                e[t].push(r);
            return e;
          }),
          (e.prototype.argmin = function(t, e, r) {
            for (
              var n, i = Number.MAX_VALUE, o = 0, s = e.length, a = 0;
              a < s;
              a++
            )
              (n = r(t, e[a])) < i && ((i = n), (o = a));
            return o;
          }),
          (e.prototype.distance = function(t, e) {
            for (var r = 0, n = Math.min(t.length, e.length); n--; ) {
              var i = t[n] - e[n];
              r += i * i;
            }
            return Math.sqrt(r);
          }),
          t.exports && (t.exports = e);
      },
      9355: (t, e, r) => {
        if (t.exports) var n = r(6196);
        function i(t, e, r, n) {
          (this.epsilon = 1),
            (this.minPts = 1),
            (this.distance = this._euclideanDistance),
            (this._reachability = []),
            (this._processed = []),
            (this._coreDistance = 0),
            (this._orderedList = []),
            this._init(t, e, r, n);
        }
        (i.prototype.run = function(t, e, r, i) {
          this._init(t, e, r, i);
          for (var o = 0, s = this.dataset.length; o < s; o++)
            if (1 !== this._processed[o]) {
              (this._processed[o] = 1), this.clusters.push([o]);
              var a = this.clusters.length - 1;
              this._orderedList.push(o);
              var l = new n(null, null, "asc"),
                u = this._regionQuery(o);
              void 0 !== this._distanceToCore(o) &&
                (this._updateQueue(o, u, l), this._expandCluster(a, l));
            }
          return this.clusters;
        }),
          (i.prototype.getReachabilityPlot = function() {
            for (var t = [], e = 0, r = this._orderedList.length; e < r; e++) {
              var n = this._orderedList[e],
                i = this._reachability[n];
              t.push([n, i]);
            }
            return t;
          }),
          (i.prototype._init = function(t, e, r, n) {
            if (t) {
              if (!(t instanceof Array))
                throw Error(
                  "Dataset must be of type array, " + typeof t + " given"
                );
              (this.dataset = t),
                (this.clusters = []),
                (this._reachability = new Array(this.dataset.length)),
                (this._processed = new Array(this.dataset.length)),
                (this._coreDistance = 0),
                (this._orderedList = []);
            }
            e && (this.epsilon = e),
              r && (this.minPts = r),
              n && (this.distance = n);
          }),
          (i.prototype._updateQueue = function(t, e, r) {
            var n = this;
            (this._coreDistance = this._distanceToCore(t)),
              e.forEach(function(e) {
                if (void 0 === n._processed[e]) {
                  var i = n.distance(n.dataset[t], n.dataset[e]),
                    o = Math.max(n._coreDistance, i);
                  void 0 === n._reachability[e]
                    ? ((n._reachability[e] = o), r.insert(e, o))
                    : o < n._reachability[e] &&
                      ((n._reachability[e] = o), r.remove(e), r.insert(e, o));
                }
              });
          }),
          (i.prototype._expandCluster = function(t, e) {
            for (var r = e.getElements(), n = 0, i = r.length; n < i; n++) {
              var o = r[n];
              if (void 0 === this._processed[o]) {
                var s = this._regionQuery(o);
                (this._processed[o] = 1),
                  this.clusters[t].push(o),
                  this._orderedList.push(o),
                  void 0 !== this._distanceToCore(o) &&
                    (this._updateQueue(o, s, e), this._expandCluster(t, e));
              }
            }
          }),
          (i.prototype._distanceToCore = function(t) {
            for (var e = this.epsilon, r = 0; r < e; r++)
              if (this._regionQuery(t, r).length >= this.minPts) return r;
          }),
          (i.prototype._regionQuery = function(t, e) {
            e = e || this.epsilon;
            for (var r = [], n = 0, i = this.dataset.length; n < i; n++)
              this.distance(this.dataset[t], this.dataset[n]) < e && r.push(n);
            return r;
          }),
          (i.prototype._euclideanDistance = function(t, e) {
            for (var r = 0, n = Math.min(t.length, e.length); n--; )
              r += (t[n] - e[n]) * (t[n] - e[n]);
            return Math.sqrt(r);
          }),
          t.exports && (t.exports = i);
      },
      6196: t => {
        function e(t, e, r) {
          (this._queue = []),
            (this._priorities = []),
            (this._sorting = "desc"),
            this._init(t, e, r);
        }
        (e.prototype.insert = function(t, e) {
          for (var r = this._queue.length, n = r; n--; ) {
            var i = this._priorities[n];
            "desc" === this._sorting ? e > i && (r = n) : e < i && (r = n);
          }
          this._insertAt(t, e, r);
        }),
          (e.prototype.remove = function(t) {
            for (var e = this._queue.length; e--; )
              if (t === this._queue[e]) {
                this._queue.splice(e, 1), this._priorities.splice(e, 1);
                break;
              }
          }),
          (e.prototype.forEach = function(t) {
            this._queue.forEach(t);
          }),
          (e.prototype.getElements = function() {
            return this._queue;
          }),
          (e.prototype.getElementPriority = function(t) {
            return this._priorities[t];
          }),
          (e.prototype.getPriorities = function() {
            return this._priorities;
          }),
          (e.prototype.getElementsWithPriorities = function() {
            for (var t = [], e = 0, r = this._queue.length; e < r; e++)
              t.push([this._queue[e], this._priorities[e]]);
            return t;
          }),
          (e.prototype._init = function(t, e, r) {
            if (t && e) {
              if (
                ((this._queue = []),
                (this._priorities = []),
                t.length !== e.length)
              )
                throw new Error("Arrays must have the same length");
              for (var n = 0; n < t.length; n++) this.insert(t[n], e[n]);
            }
            r && (this._sorting = r);
          }),
          (e.prototype._insertAt = function(t, e, r) {
            this._queue.length === r
              ? (this._queue.push(t), this._priorities.push(e))
              : (this._queue.splice(r, 0, t), this._priorities.splice(r, 0, e));
          }),
          t.exports && (t.exports = e);
      },
      7370: (t, e, r) => {
        t.exports &&
          (t.exports = {
            DBSCAN: r(6706),
            KMEANS: r(8725),
            OPTICS: r(9355),
            PriorityQueue: r(6196)
          });
      },
      3444: t => {
        "use strict";
        function e(t, e, o) {
          o = o || 2;
          var s,
            a,
            l,
            c,
            p,
            d,
            y,
            g = e && e.length,
            m = g ? e[0] * o : t.length,
            v = r(t, 0, m, o, !0),
            _ = [];
          if (!v || v.next === v.prev) return _;
          if (
            (g &&
              (v = (function(t, e, i, o) {
                var s,
                  a,
                  l,
                  c = [];
                for (s = 0, a = e.length; s < a; s++)
                  (l = r(
                    t,
                    e[s] * o,
                    s < a - 1 ? e[s + 1] * o : t.length,
                    o,
                    !1
                  )) === l.next && (l.steiner = !0),
                    c.push(f(l));
                for (c.sort(u), s = 0; s < c.length; s++)
                  h(c[s], i), (i = n(i, i.next));
                return i;
              })(t, e, v, o)),
            t.length > 80 * o)
          ) {
            (s = l = t[0]), (a = c = t[1]);
            for (var x = o; x < m; x += o)
              (p = t[x]) < s && (s = p),
                (d = t[x + 1]) < a && (a = d),
                p > l && (l = p),
                d > c && (c = d);
            y = 0 !== (y = Math.max(l - s, c - a)) ? 1 / y : 0;
          }
          return i(v, _, o, s, a, y), _;
        }
        function r(t, e, r, n, i) {
          var o, s;
          if (i === C(t, e, r, n) > 0)
            for (o = e; o < r; o += n) s = I(o, t[o], t[o + 1], s);
          else for (o = r - n; o >= e; o -= n) s = I(o, t[o], t[o + 1], s);
          return s && m(s, s.next) && (w(s), (s = s.next)), s;
        }
        function n(t, e) {
          if (!t) return t;
          e || (e = t);
          var r,
            n = t;
          do {
            if (
              ((r = !1),
              n.steiner || (!m(n, n.next) && 0 !== g(n.prev, n, n.next)))
            )
              n = n.next;
            else {
              if ((w(n), (n = e = n.prev) === n.next)) break;
              r = !0;
            }
          } while (r || n !== e);
          return e;
        }
        function i(t, e, r, u, h, c, f) {
          if (t) {
            !f &&
              c &&
              (function(t, e, r, n) {
                var i = t;
                do {
                  null === i.z && (i.z = p(i.x, i.y, e, r, n)),
                    (i.prevZ = i.prev),
                    (i.nextZ = i.next),
                    (i = i.next);
                } while (i !== t);
                (i.prevZ.nextZ = null),
                  (i.prevZ = null),
                  (function(t) {
                    var e,
                      r,
                      n,
                      i,
                      o,
                      s,
                      a,
                      l,
                      u = 1;
                    do {
                      for (r = t, t = null, o = null, s = 0; r; ) {
                        for (
                          s++, n = r, a = 0, e = 0;
                          e < u && (a++, (n = n.nextZ));
                          e++
                        );
                        for (l = u; a > 0 || (l > 0 && n); )
                          0 !== a && (0 === l || !n || r.z <= n.z)
                            ? ((i = r), (r = r.nextZ), a--)
                            : ((i = n), (n = n.nextZ), l--),
                            o ? (o.nextZ = i) : (t = i),
                            (i.prevZ = o),
                            (o = i);
                        r = n;
                      }
                      (o.nextZ = null), (u *= 2);
                    } while (s > 1);
                  })(i);
              })(t, u, h, c);
            for (var d, y, g = t; t.prev !== t.next; )
              if (((d = t.prev), (y = t.next), c ? s(t, u, h, c) : o(t)))
                e.push(d.i / r),
                  e.push(t.i / r),
                  e.push(y.i / r),
                  w(t),
                  (t = y.next),
                  (g = y.next);
              else if ((t = y) === g) {
                f
                  ? 1 === f
                    ? i((t = a(n(t), e, r)), e, r, u, h, c, 2)
                    : 2 === f && l(t, e, r, u, h, c)
                  : i(n(t), e, r, u, h, c, 1);
                break;
              }
          }
        }
        function o(t) {
          var e = t.prev,
            r = t,
            n = t.next;
          if (g(e, r, n) >= 0) return !1;
          for (var i = t.next.next; i !== t.prev; ) {
            if (
              d(e.x, e.y, r.x, r.y, n.x, n.y, i.x, i.y) &&
              g(i.prev, i, i.next) >= 0
            )
              return !1;
            i = i.next;
          }
          return !0;
        }
        function s(t, e, r, n) {
          var i = t.prev,
            o = t,
            s = t.next;
          if (g(i, o, s) >= 0) return !1;
          for (
            var a = i.x < o.x ? (i.x < s.x ? i.x : s.x) : o.x < s.x ? o.x : s.x,
              l = i.y < o.y ? (i.y < s.y ? i.y : s.y) : o.y < s.y ? o.y : s.y,
              u = i.x > o.x ? (i.x > s.x ? i.x : s.x) : o.x > s.x ? o.x : s.x,
              h = i.y > o.y ? (i.y > s.y ? i.y : s.y) : o.y > s.y ? o.y : s.y,
              c = p(a, l, e, r, n),
              f = p(u, h, e, r, n),
              y = t.prevZ,
              m = t.nextZ;
            y && y.z >= c && m && m.z <= f;

          ) {
            if (
              y !== t.prev &&
              y !== t.next &&
              d(i.x, i.y, o.x, o.y, s.x, s.y, y.x, y.y) &&
              g(y.prev, y, y.next) >= 0
            )
              return !1;
            if (
              ((y = y.prevZ),
              m !== t.prev &&
                m !== t.next &&
                d(i.x, i.y, o.x, o.y, s.x, s.y, m.x, m.y) &&
                g(m.prev, m, m.next) >= 0)
            )
              return !1;
            m = m.nextZ;
          }
          for (; y && y.z >= c; ) {
            if (
              y !== t.prev &&
              y !== t.next &&
              d(i.x, i.y, o.x, o.y, s.x, s.y, y.x, y.y) &&
              g(y.prev, y, y.next) >= 0
            )
              return !1;
            y = y.prevZ;
          }
          for (; m && m.z <= f; ) {
            if (
              m !== t.prev &&
              m !== t.next &&
              d(i.x, i.y, o.x, o.y, s.x, s.y, m.x, m.y) &&
              g(m.prev, m, m.next) >= 0
            )
              return !1;
            m = m.nextZ;
          }
          return !0;
        }
        function a(t, e, r) {
          var i = t;
          do {
            var o = i.prev,
              s = i.next.next;
            !m(o, s) &&
              v(o, i, i.next, s) &&
              b(o, s) &&
              b(s, o) &&
              (e.push(o.i / r),
              e.push(i.i / r),
              e.push(s.i / r),
              w(i),
              w(i.next),
              (i = t = s)),
              (i = i.next);
          } while (i !== t);
          return n(i);
        }
        function l(t, e, r, o, s, a) {
          var l = t;
          do {
            for (var u = l.next.next; u !== l.prev; ) {
              if (l.i !== u.i && y(l, u)) {
                var h = S(l, u);
                return (
                  (l = n(l, l.next)),
                  (h = n(h, h.next)),
                  i(l, e, r, o, s, a),
                  void i(h, e, r, o, s, a)
                );
              }
              u = u.next;
            }
            l = l.next;
          } while (l !== t);
        }
        function u(t, e) {
          return t.x - e.x;
        }
        function h(t, e) {
          if (
            ((e = (function(t, e) {
              var r,
                n = e,
                i = t.x,
                o = t.y,
                s = -1 / 0;
              do {
                if (o <= n.y && o >= n.next.y && n.next.y !== n.y) {
                  var a =
                    n.x + ((o - n.y) * (n.next.x - n.x)) / (n.next.y - n.y);
                  if (a <= i && a > s) {
                    if (((s = a), a === i)) {
                      if (o === n.y) return n;
                      if (o === n.next.y) return n.next;
                    }
                    r = n.x < n.next.x ? n : n.next;
                  }
                }
                n = n.next;
              } while (n !== e);
              if (!r) return null;
              if (i === s) return r;
              var l,
                u = r,
                h = r.x,
                p = r.y,
                f = 1 / 0;
              n = r;
              do {
                i >= n.x &&
                  n.x >= h &&
                  i !== n.x &&
                  d(o < p ? i : s, o, h, p, o < p ? s : i, o, n.x, n.y) &&
                  ((l = Math.abs(o - n.y) / (i - n.x)),
                  b(n, t) &&
                    (l < f ||
                      (l === f && (n.x > r.x || (n.x === r.x && c(r, n))))) &&
                    ((r = n), (f = l))),
                  (n = n.next);
              } while (n !== u);
              return r;
            })(t, e)),
            e)
          ) {
            var r = S(e, t);
            n(e, e.next), n(r, r.next);
          }
        }
        function c(t, e) {
          return g(t.prev, t, e.prev) < 0 && g(e.next, t, t.next) < 0;
        }
        function p(t, e, r, n, i) {
          return (
            (t =
              1431655765 &
              ((t =
                858993459 &
                ((t =
                  252645135 &
                  ((t = 16711935 & ((t = 32767 * (t - r) * i) | (t << 8))) |
                    (t << 4))) |
                  (t << 2))) |
                (t << 1))) |
            ((e =
              1431655765 &
              ((e =
                858993459 &
                ((e =
                  252645135 &
                  ((e = 16711935 & ((e = 32767 * (e - n) * i) | (e << 8))) |
                    (e << 4))) |
                  (e << 2))) |
                (e << 1))) <<
              1)
          );
        }
        function f(t) {
          var e = t,
            r = t;
          do {
            (e.x < r.x || (e.x === r.x && e.y < r.y)) && (r = e), (e = e.next);
          } while (e !== t);
          return r;
        }
        function d(t, e, r, n, i, o, s, a) {
          return (
            (i - s) * (e - a) - (t - s) * (o - a) >= 0 &&
            (t - s) * (n - a) - (r - s) * (e - a) >= 0 &&
            (r - s) * (o - a) - (i - s) * (n - a) >= 0
          );
        }
        function y(t, e) {
          return (
            t.next.i !== e.i &&
            t.prev.i !== e.i &&
            !(function(t, e) {
              var r = t;
              do {
                if (
                  r.i !== t.i &&
                  r.next.i !== t.i &&
                  r.i !== e.i &&
                  r.next.i !== e.i &&
                  v(r, r.next, t, e)
                )
                  return !0;
                r = r.next;
              } while (r !== t);
              return !1;
            })(t, e) &&
            ((b(t, e) &&
              b(e, t) &&
              (function(t, e) {
                var r = t,
                  n = !1,
                  i = (t.x + e.x) / 2,
                  o = (t.y + e.y) / 2;
                do {
                  r.y > o != r.next.y > o &&
                    r.next.y !== r.y &&
                    i <
                      ((r.next.x - r.x) * (o - r.y)) / (r.next.y - r.y) + r.x &&
                    (n = !n),
                    (r = r.next);
                } while (r !== t);
                return n;
              })(t, e) &&
              (g(t.prev, t, e.prev) || g(t, e.prev, e))) ||
              (m(t, e) && g(t.prev, t, t.next) > 0 && g(e.prev, e, e.next) > 0))
          );
        }
        function g(t, e, r) {
          return (e.y - t.y) * (r.x - e.x) - (e.x - t.x) * (r.y - e.y);
        }
        function m(t, e) {
          return t.x === e.x && t.y === e.y;
        }
        function v(t, e, r, n) {
          var i = x(g(t, e, r)),
            o = x(g(t, e, n)),
            s = x(g(r, n, t)),
            a = x(g(r, n, e));
          return (
            (i !== o && s !== a) ||
            !(0 !== i || !_(t, r, e)) ||
            !(0 !== o || !_(t, n, e)) ||
            !(0 !== s || !_(r, t, n)) ||
            !(0 !== a || !_(r, e, n))
          );
        }
        function _(t, e, r) {
          return (
            e.x <= Math.max(t.x, r.x) &&
            e.x >= Math.min(t.x, r.x) &&
            e.y <= Math.max(t.y, r.y) &&
            e.y >= Math.min(t.y, r.y)
          );
        }
        function x(t) {
          return t > 0 ? 1 : t < 0 ? -1 : 0;
        }
        function b(t, e) {
          return g(t.prev, t, t.next) < 0
            ? g(t, e, t.next) >= 0 && g(t, t.prev, e) >= 0
            : g(t, e, t.prev) < 0 || g(t, t.next, e) < 0;
        }
        function S(t, e) {
          var r = new N(t.i, t.x, t.y),
            n = new N(e.i, e.x, e.y),
            i = t.next,
            o = e.prev;
          return (
            (t.next = e),
            (e.prev = t),
            (r.next = i),
            (i.prev = r),
            (n.next = r),
            (r.prev = n),
            (o.next = n),
            (n.prev = o),
            n
          );
        }
        function I(t, e, r, n) {
          var i = new N(t, e, r);
          return (
            n
              ? ((i.next = n.next),
                (i.prev = n),
                (n.next.prev = i),
                (n.next = i))
              : ((i.prev = i), (i.next = i)),
            i
          );
        }
        function w(t) {
          (t.next.prev = t.prev),
            (t.prev.next = t.next),
            t.prevZ && (t.prevZ.nextZ = t.nextZ),
            t.nextZ && (t.nextZ.prevZ = t.prevZ);
        }
        function N(t, e, r) {
          (this.i = t),
            (this.x = e),
            (this.y = r),
            (this.prev = null),
            (this.next = null),
            (this.z = null),
            (this.prevZ = null),
            (this.nextZ = null),
            (this.steiner = !1);
        }
        function C(t, e, r, n) {
          for (var i = 0, o = e, s = r - n; o < r; o += n)
            (i += (t[s] - t[o]) * (t[o + 1] + t[s + 1])), (s = o);
          return i;
        }
        (t.exports = e),
          (t.exports.default = e),
          (e.deviation = function(t, e, r, n) {
            var i = e && e.length,
              o = i ? e[0] * r : t.length,
              s = Math.abs(C(t, 0, o, r));
            if (i)
              for (var a = 0, l = e.length; a < l; a++) {
                var u = e[a] * r,
                  h = a < l - 1 ? e[a + 1] * r : t.length;
                s -= Math.abs(C(t, u, h, r));
              }
            var c = 0;
            for (a = 0; a < n.length; a += 3) {
              var p = n[a] * r,
                f = n[a + 1] * r,
                d = n[a + 2] * r;
              c += Math.abs(
                (t[p] - t[d]) * (t[f + 1] - t[p + 1]) -
                  (t[p] - t[f]) * (t[d + 1] - t[p + 1])
              );
            }
            return 0 === s && 0 === c ? 0 : Math.abs((c - s) / s);
          }),
          (e.flatten = function(t) {
            for (
              var e = t[0][0].length,
                r = { vertices: [], holes: [], dimensions: e },
                n = 0,
                i = 0;
              i < t.length;
              i++
            ) {
              for (var o = 0; o < t[i].length; o++)
                for (var s = 0; s < e; s++) r.vertices.push(t[i][o][s]);
              i > 0 && ((n += t[i - 1].length), r.holes.push(n));
            }
            return r;
          });
      },
      8727: (t, e, r) => {
        "use strict";
        const n = r(2360).buildOptions,
          i = {
            attributeNamePrefix: "@_",
            attrNodeName: !1,
            textNodeName: "#text",
            ignoreAttributes: !0,
            cdataTagName: !1,
            cdataPositionChar: "\\c",
            format: !1,
            indentBy: "  ",
            supressEmptyNode: !1,
            tagValueProcessor: function(t) {
              return t;
            },
            attrValueProcessor: function(t) {
              return t;
            }
          },
          o = [
            "attributeNamePrefix",
            "attrNodeName",
            "textNodeName",
            "ignoreAttributes",
            "cdataTagName",
            "cdataPositionChar",
            "format",
            "indentBy",
            "supressEmptyNode",
            "tagValueProcessor",
            "attrValueProcessor"
          ];
        function s(t) {
          (this.options = n(t, i, o)),
            this.options.ignoreAttributes || this.options.attrNodeName
              ? (this.isAttribute = function() {
                  return !1;
                })
              : ((this.attrPrefixLen = this.options.attributeNamePrefix.length),
                (this.isAttribute = d)),
            this.options.cdataTagName
              ? (this.isCDATA = y)
              : (this.isCDATA = function() {
                  return !1;
                }),
            (this.replaceCDATAstr = a),
            (this.replaceCDATAarr = l),
            this.options.format
              ? ((this.indentate = f),
                (this.tagEndChar = ">\n"),
                (this.newLine = "\n"))
              : ((this.indentate = function() {
                  return "";
                }),
                (this.tagEndChar = ">"),
                (this.newLine = "")),
            this.options.supressEmptyNode
              ? ((this.buildTextNode = p), (this.buildObjNode = h))
              : ((this.buildTextNode = c), (this.buildObjNode = u)),
            (this.buildTextValNode = c),
            (this.buildObjectNode = u);
        }
        function a(t, e) {
          return (
            (t = this.options.tagValueProcessor("" + t)),
            "" === this.options.cdataPositionChar || "" === t
              ? t + "<![CDATA[" + e + "]]" + this.tagEndChar
              : t.replace(
                  this.options.cdataPositionChar,
                  "<![CDATA[" + e + "]]" + this.tagEndChar
                )
          );
        }
        function l(t, e) {
          if (
            ((t = this.options.tagValueProcessor("" + t)),
            "" === this.options.cdataPositionChar || "" === t)
          )
            return (
              t + "<![CDATA[" + e.join("]]><![CDATA[") + "]]" + this.tagEndChar
            );
          for (let r in e)
            t = t.replace(
              this.options.cdataPositionChar,
              "<![CDATA[" + e[r] + "]]>"
            );
          return t + this.newLine;
        }
        function u(t, e, r, n) {
          return r && !t.includes("<")
            ? this.indentate(n) +
                "<" +
                e +
                r +
                ">" +
                t +
                "</" +
                e +
                this.tagEndChar
            : this.indentate(n) +
                "<" +
                e +
                r +
                this.tagEndChar +
                t +
                this.indentate(n) +
                "</" +
                e +
                this.tagEndChar;
        }
        function h(t, e, r, n) {
          return "" !== t
            ? this.buildObjectNode(t, e, r, n)
            : this.indentate(n) + "<" + e + r + "/" + this.tagEndChar;
        }
        function c(t, e, r, n) {
          return (
            this.indentate(n) +
            "<" +
            e +
            r +
            ">" +
            this.options.tagValueProcessor(t) +
            "</" +
            e +
            this.tagEndChar
          );
        }
        function p(t, e, r, n) {
          return "" !== t
            ? this.buildTextValNode(t, e, r, n)
            : this.indentate(n) + "<" + e + r + "/" + this.tagEndChar;
        }
        function f(t) {
          return this.options.indentBy.repeat(t);
        }
        function d(t) {
          return (
            !!t.startsWith(this.options.attributeNamePrefix) &&
            t.substr(this.attrPrefixLen)
          );
        }
        function y(t) {
          return t === this.options.cdataTagName;
        }
        (s.prototype.parse = function(t) {
          return this.j2x(t, 0).val;
        }),
          (s.prototype.j2x = function(t, e) {
            let r = "",
              n = "";
            const i = Object.keys(t),
              o = i.length;
            for (let s = 0; s < o; s++) {
              const o = i[s];
              if (void 0 === t[o]);
              else if (null === t[o])
                n += this.indentate(e) + "<" + o + "/" + this.tagEndChar;
              else if (t[o] instanceof Date)
                n += this.buildTextNode(t[o], o, "", e);
              else if ("object" != typeof t[o]) {
                const i = this.isAttribute(o);
                i
                  ? (r +=
                      " " +
                      i +
                      '="' +
                      this.options.attrValueProcessor("" + t[o]) +
                      '"')
                  : this.isCDATA(o)
                  ? t[this.options.textNodeName]
                    ? (n += this.replaceCDATAstr(
                        t[this.options.textNodeName],
                        t[o]
                      ))
                    : (n += this.replaceCDATAstr("", t[o]))
                  : o === this.options.textNodeName
                  ? t[this.options.cdataTagName] ||
                    (n += this.options.tagValueProcessor("" + t[o]))
                  : (n += this.buildTextNode(t[o], o, "", e));
              } else if (Array.isArray(t[o]))
                if (this.isCDATA(o))
                  (n += this.indentate(e)),
                    t[this.options.textNodeName]
                      ? (n += this.replaceCDATAarr(
                          t[this.options.textNodeName],
                          t[o]
                        ))
                      : (n += this.replaceCDATAarr("", t[o]));
                else {
                  const r = t[o].length;
                  for (let i = 0; i < r; i++) {
                    const r = t[o][i];
                    if (void 0 === r);
                    else if (null === r)
                      n += this.indentate(e) + "<" + o + "/" + this.tagEndChar;
                    else if ("object" == typeof r) {
                      const t = this.j2x(r, e + 1);
                      n += this.buildObjNode(t.val, o, t.attrStr, e);
                    } else n += this.buildTextNode(r, o, "", e);
                  }
                }
              else if (
                this.options.attrNodeName &&
                o === this.options.attrNodeName
              ) {
                const e = Object.keys(t[o]),
                  n = e.length;
                for (let i = 0; i < n; i++)
                  r +=
                    " " +
                    e[i] +
                    '="' +
                    this.options.attrValueProcessor("" + t[o][e[i]]) +
                    '"';
              } else {
                const r = this.j2x(t[o], e + 1);
                n += this.buildObjNode(r.val, o, r.attrStr, e);
              }
            }
            return { attrStr: r, val: n };
          }),
          (t.exports = s);
      },
      1720: (t, e, r) => {
        "use strict";
        const n = function(t) {
            return String.fromCharCode(t);
          },
          i = {
            nilChar: n(176),
            missingChar: n(201),
            nilPremitive: n(175),
            missingPremitive: n(200),
            emptyChar: n(178),
            emptyValue: n(177),
            boundryChar: n(179),
            objStart: n(198),
            arrStart: n(204),
            arrayEnd: n(185)
          },
          o = [
            i.nilChar,
            i.nilPremitive,
            i.missingChar,
            i.missingPremitive,
            i.boundryChar,
            i.emptyChar,
            i.emptyValue,
            i.arrayEnd,
            i.objStart,
            i.arrStart
          ],
          s = function(t, e, r) {
            if ("string" == typeof e)
              return t && t[0] && void 0 !== t[0].val
                ? a(t[0].val, e)
                : a(t, e);
            {
              const o =
                void 0 === (n = t)
                  ? i.missingChar
                  : null === n
                  ? i.nilChar
                  : !(
                      n.child &&
                      0 === Object.keys(n.child).length &&
                      (!n.attrsMap || 0 === Object.keys(n.attrsMap).length)
                    ) || i.emptyChar;
              if (!0 === o) {
                let n = "";
                if (Array.isArray(e)) {
                  n += i.arrStart;
                  const o = e[0],
                    u = t.length;
                  if ("string" == typeof o)
                    for (let e = 0; e < u; e++) {
                      const r = a(t[e].val, o);
                      n = l(n, r);
                    }
                  else
                    for (let e = 0; e < u; e++) {
                      const i = s(t[e], o, r);
                      n = l(n, i);
                    }
                  n += i.arrayEnd;
                } else {
                  n += i.objStart;
                  const o = Object.keys(e);
                  Array.isArray(t) && (t = t[0]);
                  for (let i in o) {
                    const a = o[i];
                    let u;
                    (u =
                      !r.ignoreAttributes && t.attrsMap && t.attrsMap[a]
                        ? s(t.attrsMap[a], e[a], r)
                        : a === r.textNodeName
                        ? s(t.val, e[a], r)
                        : s(t.child[a], e[a], r)),
                      (n = l(n, u));
                  }
                }
                return n;
              }
              return o;
            }
            var n;
          },
          a = function(t) {
            switch (t) {
              case void 0:
                return i.missingPremitive;
              case null:
                return i.nilPremitive;
              case "":
                return i.emptyValue;
              default:
                return t;
            }
          },
          l = function(t, e) {
            return u(e[0]) || u(t[t.length - 1]) || (t += i.boundryChar), t + e;
          },
          u = function(t) {
            return -1 !== o.indexOf(t);
          },
          h = r(509),
          c = r(2360).buildOptions;
        e.convert2nimn = function(t, e, r) {
          return (r = c(r, h.defaultOptions, h.props)), s(t, e, r);
        };
      },
      67: (t, e, r) => {
        "use strict";
        const n = r(2360),
          i = function(t, e, r) {
            const o = {};
            if (
              (!t.child || n.isEmptyObject(t.child)) &&
              (!t.attrsMap || n.isEmptyObject(t.attrsMap))
            )
              return n.isExist(t.val) ? t.val : "";
            if (
              n.isExist(t.val) &&
              ("string" != typeof t.val ||
                ("" !== t.val && t.val !== e.cdataPositionChar))
            ) {
              const i = n.isTagNameInArrayMode(t.tagname, e.arrayMode, r);
              o[e.textNodeName] = i ? [t.val] : t.val;
            }
            n.merge(o, t.attrsMap, e.arrayMode);
            const s = Object.keys(t.child);
            for (let a = 0; a < s.length; a++) {
              const l = s[a];
              if (t.child[l] && t.child[l].length > 1) {
                o[l] = [];
                for (let r in t.child[l])
                  t.child[l].hasOwnProperty(r) &&
                    o[l].push(i(t.child[l][r], e, l));
              } else {
                const s = i(t.child[l][0], e, l),
                  a =
                    (!0 === e.arrayMode && "object" == typeof s) ||
                    n.isTagNameInArrayMode(l, e.arrayMode, r);
                o[l] = a ? [s] : s;
              }
            }
            return o;
          };
        e.convertToJson = i;
      },
      7085: (t, e, r) => {
        "use strict";
        const n = r(2360),
          i = r(2360).buildOptions,
          o = r(509),
          s = function(t, e, r) {
            let i = "{";
            const o = Object.keys(t.child);
            for (let r = 0; r < o.length; r++) {
              var a = o[r];
              if (t.child[a] && t.child[a].length > 1) {
                for (var l in ((i += '"' + a + '" : [ '), t.child[a]))
                  i += s(t.child[a][l], e) + " , ";
                i = i.substr(0, i.length - 1) + " ] ";
              } else i += '"' + a + '" : ' + s(t.child[a][0], e) + " ,";
            }
            return (
              n.merge(i, t.attrsMap),
              n.isEmptyObject(i)
                ? n.isExist(t.val)
                  ? t.val
                  : ""
                : (n.isExist(t.val) &&
                    ("string" != typeof t.val ||
                      ("" !== t.val && t.val !== e.cdataPositionChar)) &&
                    (i +=
                      '"' +
                      e.textNodeName +
                      '" : ' +
                      (!0 !== (u = t.val) && !1 !== u && isNaN(u)
                        ? '"' + u + '"'
                        : u)),
                  "," === i[i.length - 1] && (i = i.substr(0, i.length - 2)),
                  i + "}")
            );
            var u;
          };
        e.convertToJsonString = function(t, e) {
          return (
            ((e = i(e, o.defaultOptions, o.props)).indentBy = e.indentBy || ""),
            s(t, e, 0)
          );
        };
      },
      8909: (t, e, r) => {
        "use strict";
        const n = r(67),
          i = r(509),
          o = r(509),
          s = r(2360).buildOptions,
          a = r(1455);
        (e.parse = function(t, e, r) {
          if (r) {
            !0 === r && (r = {});
            const e = a.validate(t, r);
            if (!0 !== e) throw Error(e.err.msg);
          }
          e = s(e, o.defaultOptions, o.props);
          const l = i.getTraversalObj(t, e);
          return n.convertToJson(l, e);
        }),
          (e.convertTonimn = r(1720).convert2nimn),
          (e.getTraversalObj = i.getTraversalObj),
          (e.convertToJson = n.convertToJson),
          (e.convertToJsonString = r(7085).convertToJsonString),
          (e.validate = a.validate),
          (e.j2xParser = r(8727)),
          (e.parseToNimn = function(t, r, n) {
            return e.convertTonimn(e.getTraversalObj(t, n), r, n);
          });
      },
      2360: (t, e) => {
        "use strict";
        const r =
            "[:A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*",
          n = new RegExp("^" + r + "$");
        (e.isExist = function(t) {
          return void 0 !== t;
        }),
          (e.isEmptyObject = function(t) {
            return 0 === Object.keys(t).length;
          }),
          (e.merge = function(t, e, r) {
            if (e) {
              const n = Object.keys(e),
                i = n.length;
              for (let o = 0; o < i; o++)
                t[n[o]] = "strict" === r ? [e[n[o]]] : e[n[o]];
            }
          }),
          (e.getValue = function(t) {
            return e.isExist(t) ? t : "";
          }),
          (e.buildOptions = function(t, e, r) {
            var n = {};
            if (!t) return e;
            for (let i = 0; i < r.length; i++)
              void 0 !== t[r[i]] ? (n[r[i]] = t[r[i]]) : (n[r[i]] = e[r[i]]);
            return n;
          }),
          (e.isTagNameInArrayMode = function(t, e, r) {
            return (
              !1 !== e &&
              (e instanceof RegExp
                ? e.test(t)
                : "function" == typeof e
                ? !!e(t, r)
                : "strict" === e)
            );
          }),
          (e.isName = function(t) {
            return !(null == n.exec(t));
          }),
          (e.getAllMatches = function(t, e) {
            const r = [];
            let n = e.exec(t);
            for (; n; ) {
              const i = [],
                o = n.length;
              for (let t = 0; t < o; t++) i.push(n[t]);
              r.push(i), (n = e.exec(t));
            }
            return r;
          }),
          (e.nameRegexp = r);
      },
      1455: (t, e, r) => {
        "use strict";
        const n = r(2360),
          i = { allowBooleanAttributes: !1 },
          o = ["allowBooleanAttributes"];
        function s(t, e) {
          for (var r = e; e < t.length; e++)
            if ("?" != t[e] && " " != t[e]);
            else {
              var n = t.substr(r, e - r);
              if (e > 5 && "xml" === n)
                return p(
                  "InvalidXml",
                  "XML declaration allowed only at the start of the document.",
                  d(t, e)
                );
              if ("?" == t[e] && ">" == t[e + 1]) {
                e++;
                break;
              }
            }
          return e;
        }
        function a(t, e) {
          if (t.length > e + 5 && "-" === t[e + 1] && "-" === t[e + 2]) {
            for (e += 3; e < t.length; e++)
              if ("-" === t[e] && "-" === t[e + 1] && ">" === t[e + 2]) {
                e += 2;
                break;
              }
          } else if (
            t.length > e + 8 &&
            "D" === t[e + 1] &&
            "O" === t[e + 2] &&
            "C" === t[e + 3] &&
            "T" === t[e + 4] &&
            "Y" === t[e + 5] &&
            "P" === t[e + 6] &&
            "E" === t[e + 7]
          ) {
            let r = 1;
            for (e += 8; e < t.length; e++)
              if ("<" === t[e]) r++;
              else if (">" === t[e] && (r--, 0 === r)) break;
          } else if (
            t.length > e + 9 &&
            "[" === t[e + 1] &&
            "C" === t[e + 2] &&
            "D" === t[e + 3] &&
            "A" === t[e + 4] &&
            "T" === t[e + 5] &&
            "A" === t[e + 6] &&
            "[" === t[e + 7]
          )
            for (e += 8; e < t.length; e++)
              if ("]" === t[e] && "]" === t[e + 1] && ">" === t[e + 2]) {
                e += 2;
                break;
              }
          return e;
        }
        function l(t, e) {
          let r = "",
            n = "",
            i = !1;
          for (; e < t.length; e++) {
            if ('"' === t[e] || "'" === t[e])
              if ("" === n) n = t[e];
              else {
                if (n !== t[e]) continue;
                n = "";
              }
            else if (">" === t[e] && "" === n) {
              i = !0;
              break;
            }
            r += t[e];
          }
          return "" === n && { value: r, index: e, tagClosed: i };
        }
        e.validate = function(t, e) {
          e = n.buildOptions(e, i, o);
          const r = [];
          let u = !1,
            f = !1;
          "\ufeff" === t[0] && (t = t.substr(1));
          for (let i = 0; i < t.length; i++)
            if ("<" === t[i] && "?" === t[i + 1]) {
              if (((i += 2), (i = s(t, i)), i.err)) return i;
            } else {
              if ("<" !== t[i]) {
                if (
                  " " === t[i] ||
                  "\t" === t[i] ||
                  "\n" === t[i] ||
                  "\r" === t[i]
                )
                  continue;
                return p(
                  "InvalidChar",
                  "char '" + t[i] + "' is not expected.",
                  d(t, i)
                );
              }
              if ((i++, "!" === t[i])) {
                i = a(t, i);
                continue;
              }
              {
                let o = !1;
                "/" === t[i] && ((o = !0), i++);
                let g = "";
                for (
                  ;
                  i < t.length &&
                  ">" !== t[i] &&
                  " " !== t[i] &&
                  "\t" !== t[i] &&
                  "\n" !== t[i] &&
                  "\r" !== t[i];
                  i++
                )
                  g += t[i];
                if (
                  ((g = g.trim()),
                  "/" === g[g.length - 1] &&
                    ((g = g.substring(0, g.length - 1)), i--),
                  (y = g),
                  !n.isName(y))
                ) {
                  let e;
                  return (
                    (e =
                      0 === g.trim().length
                        ? "There is an unnecessary space between tag name and backward slash '</ ..'."
                        : "Tag '" + g + "' is an invalid name."),
                    p("InvalidTag", e, d(t, i))
                  );
                }
                const m = l(t, i);
                if (!1 === m)
                  return p(
                    "InvalidAttr",
                    "Attributes for '" + g + "' have open quote.",
                    d(t, i)
                  );
                let v = m.value;
                if (((i = m.index), "/" === v[v.length - 1])) {
                  v = v.substring(0, v.length - 1);
                  const r = h(v, e);
                  if (!0 !== r)
                    return p(
                      r.err.code,
                      r.err.msg,
                      d(t, i - v.length + r.err.line)
                    );
                  u = !0;
                } else if (o) {
                  if (!m.tagClosed)
                    return p(
                      "InvalidTag",
                      "Closing tag '" + g + "' doesn't have proper closing.",
                      d(t, i)
                    );
                  if (v.trim().length > 0)
                    return p(
                      "InvalidTag",
                      "Closing tag '" +
                        g +
                        "' can't have attributes or invalid starting.",
                      d(t, i)
                    );
                  {
                    const e = r.pop();
                    if (g !== e)
                      return p(
                        "InvalidTag",
                        "Closing tag '" +
                          e +
                          "' is expected inplace of '" +
                          g +
                          "'.",
                        d(t, i)
                      );
                    0 == r.length && (f = !0);
                  }
                } else {
                  const n = h(v, e);
                  if (!0 !== n)
                    return p(
                      n.err.code,
                      n.err.msg,
                      d(t, i - v.length + n.err.line)
                    );
                  if (!0 === f)
                    return p(
                      "InvalidXml",
                      "Multiple possible root nodes found.",
                      d(t, i)
                    );
                  r.push(g), (u = !0);
                }
                for (i++; i < t.length; i++)
                  if ("<" === t[i]) {
                    if ("!" === t[i + 1]) {
                      i++, (i = a(t, i));
                      continue;
                    }
                    if ("?" !== t[i + 1]) break;
                    if (((i = s(t, ++i)), i.err)) return i;
                  } else if ("&" === t[i]) {
                    const e = c(t, i);
                    if (-1 == e)
                      return p(
                        "InvalidChar",
                        "char '&' is not expected.",
                        d(t, i)
                      );
                    i = e;
                  }
                "<" === t[i] && i--;
              }
            }
          var y;
          return u
            ? !(r.length > 0) ||
                p(
                  "InvalidXml",
                  "Invalid '" +
                    JSON.stringify(r, null, 4).replace(/\r?\n/g, "") +
                    "' found.",
                  1
                )
            : p("InvalidXml", "Start tag expected.", 1);
        };
        const u = new RegExp(
          "(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['\"])(([\\s\\S])*?)\\5)?",
          "g"
        );
        function h(t, e) {
          const r = n.getAllMatches(t, u),
            i = {};
          for (let n = 0; n < r.length; n++) {
            if (0 === r[n][1].length)
              return p(
                "InvalidAttr",
                "Attribute '" + r[n][2] + "' has no space in starting.",
                y(t, r[n][0])
              );
            if (void 0 === r[n][3] && !e.allowBooleanAttributes)
              return p(
                "InvalidAttr",
                "boolean attribute '" + r[n][2] + "' is not allowed.",
                y(t, r[n][0])
              );
            const o = r[n][2];
            if (!f(o))
              return p(
                "InvalidAttr",
                "Attribute '" + o + "' is an invalid name.",
                y(t, r[n][0])
              );
            if (i.hasOwnProperty(o))
              return p(
                "InvalidAttr",
                "Attribute '" + o + "' is repeated.",
                y(t, r[n][0])
              );
            i[o] = 1;
          }
          return !0;
        }
        function c(t, e) {
          if (";" === t[++e]) return -1;
          if ("#" === t[e])
            return (function(t, e) {
              let r = /\d/;
              for (
                "x" === t[e] && (e++, (r = /[\da-fA-F]/));
                e < t.length;
                e++
              ) {
                if (";" === t[e]) return e;
                if (!t[e].match(r)) break;
              }
              return -1;
            })(t, ++e);
          let r = 0;
          for (; e < t.length; e++, r++)
            if (!(t[e].match(/\w/) && r < 20)) {
              if (";" === t[e]) break;
              return -1;
            }
          return e;
        }
        function p(t, e, r) {
          return { err: { code: t, msg: e, line: r } };
        }
        function f(t) {
          return n.isName(t);
        }
        function d(t, e) {
          return t.substring(0, e).split(/\r?\n/).length;
        }
        function y(t, e) {
          return t.indexOf(e) + e.length;
        }
      },
      1114: t => {
        "use strict";
        t.exports = function(t, e, r) {
          (this.tagname = t),
            (this.parent = e),
            (this.child = {}),
            (this.attrsMap = {}),
            (this.val = r),
            (this.addChild = function(t) {
              Array.isArray(this.child[t.tagname])
                ? this.child[t.tagname].push(t)
                : (this.child[t.tagname] = [t]);
            });
        };
      },
      509: (t, e, r) => {
        "use strict";
        const n = r(2360),
          i = r(2360).buildOptions,
          o = r(1114);
        "<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)".replace(
          /NAME/g,
          n.nameRegexp
        ),
          !Number.parseInt &&
            window.parseInt &&
            (Number.parseInt = window.parseInt),
          !Number.parseFloat &&
            window.parseFloat &&
            (Number.parseFloat = window.parseFloat);
        const s = {
          attributeNamePrefix: "@_",
          attrNodeName: !1,
          textNodeName: "#text",
          ignoreAttributes: !0,
          ignoreNameSpace: !1,
          allowBooleanAttributes: !1,
          parseNodeValue: !0,
          parseAttributeValue: !1,
          arrayMode: !1,
          trimValues: !0,
          cdataTagName: !1,
          cdataPositionChar: "\\c",
          tagValueProcessor: function(t, e) {
            return t;
          },
          attrValueProcessor: function(t, e) {
            return t;
          },
          stopNodes: []
        };
        e.defaultOptions = s;
        const a = [
          "attributeNamePrefix",
          "attrNodeName",
          "textNodeName",
          "ignoreAttributes",
          "ignoreNameSpace",
          "allowBooleanAttributes",
          "parseNodeValue",
          "parseAttributeValue",
          "arrayMode",
          "trimValues",
          "cdataTagName",
          "cdataPositionChar",
          "tagValueProcessor",
          "attrValueProcessor",
          "parseTrueNumberOnly",
          "stopNodes"
        ];
        function l(t, e, r) {
          return (
            e &&
              (r.trimValues && (e = e.trim()),
              (e = h(
                (e = r.tagValueProcessor(e, t)),
                r.parseNodeValue,
                r.parseTrueNumberOnly
              ))),
            e
          );
        }
        function u(t, e) {
          if (e.ignoreNameSpace) {
            const e = t.split(":"),
              r = "/" === t.charAt(0) ? "/" : "";
            if ("xmlns" === e[0]) return "";
            2 === e.length && (t = r + e[1]);
          }
          return t;
        }
        function h(t, e, r) {
          if (e && "string" == typeof t) {
            let e;
            return (
              "" === t.trim() || isNaN(t)
                ? (e = "true" === t || ("false" !== t && t))
                : (-1 !== t.indexOf("0x")
                    ? (e = Number.parseInt(t, 16))
                    : -1 !== t.indexOf(".")
                    ? ((e = Number.parseFloat(t)),
                      (t = t.replace(/\.?0+$/, "")))
                    : (e = Number.parseInt(t, 10)),
                  r && (e = String(e) === t ? e : t)),
              e
            );
          }
          return n.isExist(t) ? t : "";
        }
        e.props = a;
        const c = new RegExp("([^\\s=]+)\\s*(=\\s*(['\"])(.*?)\\3)?", "g");
        function p(t, e) {
          if (!e.ignoreAttributes && "string" == typeof t) {
            t = t.replace(/\r?\n/g, " ");
            const r = n.getAllMatches(t, c),
              i = r.length,
              o = {};
            for (let t = 0; t < i; t++) {
              const n = u(r[t][1], e);
              n.length &&
                (void 0 !== r[t][4]
                  ? (e.trimValues && (r[t][4] = r[t][4].trim()),
                    (r[t][4] = e.attrValueProcessor(r[t][4], n)),
                    (o[e.attributeNamePrefix + n] = h(
                      r[t][4],
                      e.parseAttributeValue,
                      e.parseTrueNumberOnly
                    )))
                  : e.allowBooleanAttributes &&
                    (o[e.attributeNamePrefix + n] = !0));
            }
            if (!Object.keys(o).length) return;
            if (e.attrNodeName) {
              const t = {};
              return (t[e.attrNodeName] = o), t;
            }
            return o;
          }
        }
        function f(t, e) {
          let r,
            n = "";
          for (let i = e; i < t.length; i++) {
            let e = t[i];
            if (r) e === r && (r = "");
            else if ('"' === e || "'" === e) r = e;
            else {
              if (">" === e) return { data: n, index: i };
              "\t" === e && (e = " ");
            }
            n += e;
          }
        }
        function d(t, e, r, n) {
          const i = t.indexOf(e, r);
          if (-1 === i) throw new Error(n);
          return i + e.length - 1;
        }
        e.getTraversalObj = function(t, e) {
          (t = t.replace(/\r\n?/g, "\n")), (e = i(e, s, a));
          const r = new o("!xml");
          let u = r,
            h = "";
          for (let r = 0; r < t.length; r++)
            if ("<" === t[r])
              if ("/" === t[r + 1]) {
                const i = d(t, ">", r, "Closing Tag is not closed.");
                let o = t.substring(r + 2, i).trim();
                if (e.ignoreNameSpace) {
                  const t = o.indexOf(":");
                  -1 !== t && (o = o.substr(t + 1));
                }
                u &&
                  (u.val
                    ? (u.val = n.getValue(u.val) + "" + l(o, h, e))
                    : (u.val = l(o, h, e))),
                  e.stopNodes.length &&
                    e.stopNodes.includes(u.tagname) &&
                    ((u.child = []),
                    null == u.attrsMap && (u.attrsMap = {}),
                    (u.val = t.substr(u.startIndex + 1, r - u.startIndex - 1))),
                  (u = u.parent),
                  (h = ""),
                  (r = i);
              } else if ("?" === t[r + 1])
                r = d(t, "?>", r, "Pi Tag is not closed.");
              else if ("!--" === t.substr(r + 1, 3))
                r = d(t, "--\x3e", r, "Comment is not closed.");
              else if ("!D" === t.substr(r + 1, 2)) {
                const e = d(t, ">", r, "DOCTYPE is not closed.");
                r =
                  t.substring(r, e).indexOf("[") >= 0
                    ? t.indexOf("]>", r) + 1
                    : e;
              } else if ("![" === t.substr(r + 1, 2)) {
                const i = d(t, "]]>", r, "CDATA is not closed.") - 2,
                  s = t.substring(r + 9, i);
                if (
                  (h &&
                    ((u.val = n.getValue(u.val) + "" + l(u.tagname, h, e)),
                    (h = "")),
                  e.cdataTagName)
                ) {
                  const t = new o(e.cdataTagName, u, s);
                  u.addChild(t),
                    (u.val = n.getValue(u.val) + e.cdataPositionChar),
                    s && (t.val = s);
                } else u.val = (u.val || "") + (s || "");
                r = i + 2;
              } else {
                const i = f(t, r + 1);
                let s = i.data;
                const a = i.index,
                  c = s.indexOf(" ");
                let d = s,
                  y = !0;
                if (
                  (-1 !== c &&
                    ((d = s.substr(0, c).replace(/\s\s*$/, "")),
                    (s = s.substr(c + 1))),
                  e.ignoreNameSpace)
                ) {
                  const t = d.indexOf(":");
                  -1 !== t &&
                    ((d = d.substr(t + 1)), (y = d !== i.data.substr(t + 1)));
                }
                if (
                  (u &&
                    h &&
                    "!xml" !== u.tagname &&
                    (u.val = n.getValue(u.val) + "" + l(u.tagname, h, e)),
                  s.length > 0 && s.lastIndexOf("/") === s.length - 1)
                ) {
                  "/" === d[d.length - 1]
                    ? ((d = d.substr(0, d.length - 1)), (s = d))
                    : (s = s.substr(0, s.length - 1));
                  const t = new o(d, u, "");
                  d !== s && (t.attrsMap = p(s, e)), u.addChild(t);
                } else {
                  const t = new o(d, u);
                  e.stopNodes.length &&
                    e.stopNodes.includes(t.tagname) &&
                    (t.startIndex = a),
                    d !== s && y && (t.attrsMap = p(s, e)),
                    u.addChild(t),
                    (u = t);
                }
                (h = ""), (r = a);
              }
            else h += t[r];
          return r;
        };
      },
      4352: t => {
        "use strict";
        var e = "Function.prototype.bind called on incompatible ",
          r = Array.prototype.slice,
          n = Object.prototype.toString,
          i = "[object Function]";
        t.exports = function(t) {
          var o = this;
          if ("function" != typeof o || n.call(o) !== i)
            throw new TypeError(e + o);
          for (
            var s,
              a = r.call(arguments, 1),
              l = function() {
                if (this instanceof s) {
                  var e = o.apply(this, a.concat(r.call(arguments)));
                  return Object(e) === e ? e : this;
                }
                return o.apply(t, a.concat(r.call(arguments)));
              },
              u = Math.max(0, o.length - a.length),
              h = [],
              c = 0;
            c < u;
            c++
          )
            h.push("$" + c);
          if (
            ((s = Function(
              "binder",
              "return function (" +
                h.join(",") +
                "){ return binder.apply(this,arguments); }"
            )(l)),
            o.prototype)
          ) {
            var p = function() {};
            (p.prototype = o.prototype),
              (s.prototype = new p()),
              (p.prototype = null);
          }
          return s;
        };
      },
      6558: (t, e, r) => {
        "use strict";
        var n = r(4352);
        t.exports = Function.prototype.bind || n;
      },
      3847: (t, e, r) => {
        var n = r(3473),
          i = function(t) {
            (this.precision = t && t.precision ? t.precision : 17),
              (this.direction = !(!t || !t.direction) && t.direction),
              (this.pseudoNode = !(!t || !t.pseudoNode) && t.pseudoNode),
              (this.objectComparator =
                t && t.objectComparator ? t.objectComparator : a);
          };
        function o(t) {
          return t.coordinates.map(function(e) {
            return { type: t.type.replace("Multi", ""), coordinates: e };
          });
        }
        function s(t, e) {
          return t.hasOwnProperty("coordinates")
            ? t.coordinates.length === e.coordinates.length
            : t.length === e.length;
        }
        function a(t, e) {
          return n(t, e, { strict: !0 });
        }
        (i.prototype.compare = function(t, e) {
          if (t.type !== e.type || !s(t, e)) return !1;
          switch (t.type) {
            case "Point":
              return this.compareCoord(t.coordinates, e.coordinates);
            case "LineString":
              return this.compareLine(t.coordinates, e.coordinates, 0, !1);
            case "Polygon":
              return this.comparePolygon(t, e);
            case "Feature":
              return this.compareFeature(t, e);
            default:
              if (0 === t.type.indexOf("Multi")) {
                var r = this,
                  n = o(t),
                  i = o(e);
                return n.every(function(t) {
                  return this.some(function(e) {
                    return r.compare(t, e);
                  });
                }, i);
              }
          }
          return !1;
        }),
          (i.prototype.compareCoord = function(t, e) {
            if (t.length !== e.length) return !1;
            for (var r = 0; r < t.length; r++)
              if (t[r].toFixed(this.precision) !== e[r].toFixed(this.precision))
                return !1;
            return !0;
          }),
          (i.prototype.compareLine = function(t, e, r, n) {
            if (!s(t, e)) return !1;
            var i = this.pseudoNode ? t : this.removePseudo(t),
              o = this.pseudoNode ? e : this.removePseudo(e);
            if (
              !n ||
              this.compareCoord(i[0], o[0]) ||
              (o = this.fixStartIndex(o, i))
            ) {
              var a = this.compareCoord(i[r], o[r]);
              return this.direction || a
                ? this.comparePath(i, o)
                : !!this.compareCoord(i[r], o[o.length - (1 + r)]) &&
                    this.comparePath(i.slice().reverse(), o);
            }
          }),
          (i.prototype.fixStartIndex = function(t, e) {
            for (var r, n = -1, i = 0; i < t.length; i++)
              if (this.compareCoord(t[i], e[0])) {
                n = i;
                break;
              }
            return (
              n >= 0 &&
                (r = [].concat(t.slice(n, t.length), t.slice(1, n + 1))),
              r
            );
          }),
          (i.prototype.comparePath = function(t, e) {
            var r = this;
            return t.every(function(t, e) {
              return r.compareCoord(t, this[e]);
            }, e);
          }),
          (i.prototype.comparePolygon = function(t, e) {
            if (this.compareLine(t.coordinates[0], e.coordinates[0], 1, !0)) {
              var r = t.coordinates.slice(1, t.coordinates.length),
                n = e.coordinates.slice(1, e.coordinates.length),
                i = this;
              return r.every(function(t) {
                return this.some(function(e) {
                  return i.compareLine(t, e, 1, !0);
                });
              }, n);
            }
            return !1;
          }),
          (i.prototype.compareFeature = function(t, e) {
            return (
              !(
                t.id !== e.id ||
                !this.objectComparator(t.properties, e.properties) ||
                !this.compareBBox(t, e)
              ) && this.compare(t.geometry, e.geometry)
            );
          }),
          (i.prototype.compareBBox = function(t, e) {
            return !!(
              (!t.bbox && !e.bbox) ||
              (t.bbox && e.bbox && this.compareCoord(t.bbox, e.bbox))
            );
          }),
          (i.prototype.removePseudo = function(t) {
            return t;
          }),
          (t.exports = i);
      },
      7406: (t, e, r) => {
        var n = r(5622),
          i = r(4953),
          o = r(1031),
          s = r(6653).Z,
          a = o.featureEach,
          l = (o.coordEach, i.polygon, i.featureCollection);
        function u(t) {
          var e = new n(t);
          return (
            (e.insert = function(t) {
              if ("Feature" !== t.type) throw new Error("invalid feature");
              return (
                (t.bbox = t.bbox ? t.bbox : s(t)),
                n.prototype.insert.call(this, t)
              );
            }),
            (e.load = function(t) {
              var e = [];
              return (
                Array.isArray(t)
                  ? t.forEach(function(t) {
                      if ("Feature" !== t.type)
                        throw new Error("invalid features");
                      (t.bbox = t.bbox ? t.bbox : s(t)), e.push(t);
                    })
                  : a(t, function(t) {
                      if ("Feature" !== t.type)
                        throw new Error("invalid features");
                      (t.bbox = t.bbox ? t.bbox : s(t)), e.push(t);
                    }),
                n.prototype.load.call(this, e)
              );
            }),
            (e.remove = function(t, e) {
              if ("Feature" !== t.type) throw new Error("invalid feature");
              return (
                (t.bbox = t.bbox ? t.bbox : s(t)),
                n.prototype.remove.call(this, t, e)
              );
            }),
            (e.clear = function() {
              return n.prototype.clear.call(this);
            }),
            (e.search = function(t) {
              var e = n.prototype.search.call(this, this.toBBox(t));
              return l(e);
            }),
            (e.collides = function(t) {
              return n.prototype.collides.call(this, this.toBBox(t));
            }),
            (e.all = function() {
              var t = n.prototype.all.call(this);
              return l(t);
            }),
            (e.toJSON = function() {
              return n.prototype.toJSON.call(this);
            }),
            (e.fromJSON = function(t) {
              return n.prototype.fromJSON.call(this, t);
            }),
            (e.toBBox = function(t) {
              var e;
              if (t.bbox) e = t.bbox;
              else if (Array.isArray(t) && 4 === t.length) e = t;
              else if (Array.isArray(t) && 6 === t.length)
                e = [t[0], t[1], t[3], t[4]];
              else if ("Feature" === t.type) e = s(t);
              else {
                if ("FeatureCollection" !== t.type)
                  throw new Error("invalid geojson");
                e = s(t);
              }
              return { minX: e[0], minY: e[1], maxX: e[2], maxY: e[3] };
            }),
            e
          );
        }
        (t.exports = u), (t.exports.default = u);
      },
      5622: function(t) {
        t.exports = (function() {
          "use strict";
          function t(t, n, i, o, s) {
            !(function t(r, n, i, o, s) {
              for (; o > i; ) {
                if (o - i > 600) {
                  var a = o - i + 1,
                    l = n - i + 1,
                    u = Math.log(a),
                    h = 0.5 * Math.exp((2 * u) / 3),
                    c =
                      0.5 *
                      Math.sqrt((u * h * (a - h)) / a) *
                      (l - a / 2 < 0 ? -1 : 1);
                  t(
                    r,
                    n,
                    Math.max(i, Math.floor(n - (l * h) / a + c)),
                    Math.min(o, Math.floor(n + ((a - l) * h) / a + c)),
                    s
                  );
                }
                var p = r[n],
                  f = i,
                  d = o;
                for (e(r, i, n), s(r[o], p) > 0 && e(r, i, o); f < d; ) {
                  for (e(r, f, d), f++, d--; s(r[f], p) < 0; ) f++;
                  for (; s(r[d], p) > 0; ) d--;
                }
                0 === s(r[i], p) ? e(r, i, d) : e(r, ++d, o),
                  d <= n && (i = d + 1),
                  n <= d && (o = d - 1);
              }
            })(t, n, i || 0, o || t.length - 1, s || r);
          }
          function e(t, e, r) {
            var n = t[e];
            (t[e] = t[r]), (t[r] = n);
          }
          function r(t, e) {
            return t < e ? -1 : t > e ? 1 : 0;
          }
          var n = function(t) {
            void 0 === t && (t = 9),
              (this._maxEntries = Math.max(4, t)),
              (this._minEntries = Math.max(
                2,
                Math.ceil(0.4 * this._maxEntries)
              )),
              this.clear();
          };
          function i(t, e, r) {
            if (!r) return e.indexOf(t);
            for (var n = 0; n < e.length; n++) if (r(t, e[n])) return n;
            return -1;
          }
          function o(t, e) {
            s(t, 0, t.children.length, e, t);
          }
          function s(t, e, r, n, i) {
            i || (i = d(null)),
              (i.minX = 1 / 0),
              (i.minY = 1 / 0),
              (i.maxX = -1 / 0),
              (i.maxY = -1 / 0);
            for (var o = e; o < r; o++) {
              var s = t.children[o];
              a(i, t.leaf ? n(s) : s);
            }
            return i;
          }
          function a(t, e) {
            return (
              (t.minX = Math.min(t.minX, e.minX)),
              (t.minY = Math.min(t.minY, e.minY)),
              (t.maxX = Math.max(t.maxX, e.maxX)),
              (t.maxY = Math.max(t.maxY, e.maxY)),
              t
            );
          }
          function l(t, e) {
            return t.minX - e.minX;
          }
          function u(t, e) {
            return t.minY - e.minY;
          }
          function h(t) {
            return (t.maxX - t.minX) * (t.maxY - t.minY);
          }
          function c(t) {
            return t.maxX - t.minX + (t.maxY - t.minY);
          }
          function p(t, e) {
            return (
              t.minX <= e.minX &&
              t.minY <= e.minY &&
              e.maxX <= t.maxX &&
              e.maxY <= t.maxY
            );
          }
          function f(t, e) {
            return (
              e.minX <= t.maxX &&
              e.minY <= t.maxY &&
              e.maxX >= t.minX &&
              e.maxY >= t.minY
            );
          }
          function d(t) {
            return {
              children: t,
              height: 1,
              leaf: !0,
              minX: 1 / 0,
              minY: 1 / 0,
              maxX: -1 / 0,
              maxY: -1 / 0
            };
          }
          function y(e, r, n, i, o) {
            for (var s = [r, n]; s.length; )
              if (!((n = s.pop()) - (r = s.pop()) <= i)) {
                var a = r + Math.ceil((n - r) / i / 2) * i;
                t(e, a, r, n, o), s.push(r, a, a, n);
              }
          }
          return (
            (n.prototype.all = function() {
              return this._all(this.data, []);
            }),
            (n.prototype.search = function(t) {
              var e = this.data,
                r = [];
              if (!f(t, e)) return r;
              for (var n = this.toBBox, i = []; e; ) {
                for (var o = 0; o < e.children.length; o++) {
                  var s = e.children[o],
                    a = e.leaf ? n(s) : s;
                  f(t, a) &&
                    (e.leaf
                      ? r.push(s)
                      : p(t, a)
                      ? this._all(s, r)
                      : i.push(s));
                }
                e = i.pop();
              }
              return r;
            }),
            (n.prototype.collides = function(t) {
              var e = this.data;
              if (!f(t, e)) return !1;
              for (var r = []; e; ) {
                for (var n = 0; n < e.children.length; n++) {
                  var i = e.children[n],
                    o = e.leaf ? this.toBBox(i) : i;
                  if (f(t, o)) {
                    if (e.leaf || p(t, o)) return !0;
                    r.push(i);
                  }
                }
                e = r.pop();
              }
              return !1;
            }),
            (n.prototype.load = function(t) {
              if (!t || !t.length) return this;
              if (t.length < this._minEntries) {
                for (var e = 0; e < t.length; e++) this.insert(t[e]);
                return this;
              }
              var r = this._build(t.slice(), 0, t.length - 1, 0);
              if (this.data.children.length)
                if (this.data.height === r.height)
                  this._splitRoot(this.data, r);
                else {
                  if (this.data.height < r.height) {
                    var n = this.data;
                    (this.data = r), (r = n);
                  }
                  this._insert(r, this.data.height - r.height - 1, !0);
                }
              else this.data = r;
              return this;
            }),
            (n.prototype.insert = function(t) {
              return t && this._insert(t, this.data.height - 1), this;
            }),
            (n.prototype.clear = function() {
              return (this.data = d([])), this;
            }),
            (n.prototype.remove = function(t, e) {
              if (!t) return this;
              for (
                var r, n, o, s = this.data, a = this.toBBox(t), l = [], u = [];
                s || l.length;

              ) {
                if (
                  (s ||
                    ((s = l.pop()),
                    (n = l[l.length - 1]),
                    (r = u.pop()),
                    (o = !0)),
                  s.leaf)
                ) {
                  var h = i(t, s.children, e);
                  if (-1 !== h)
                    return (
                      s.children.splice(h, 1),
                      l.push(s),
                      this._condense(l),
                      this
                    );
                }
                o || s.leaf || !p(s, a)
                  ? n
                    ? (r++, (s = n.children[r]), (o = !1))
                    : (s = null)
                  : (l.push(s),
                    u.push(r),
                    (r = 0),
                    (n = s),
                    (s = s.children[0]));
              }
              return this;
            }),
            (n.prototype.toBBox = function(t) {
              return t;
            }),
            (n.prototype.compareMinX = function(t, e) {
              return t.minX - e.minX;
            }),
            (n.prototype.compareMinY = function(t, e) {
              return t.minY - e.minY;
            }),
            (n.prototype.toJSON = function() {
              return this.data;
            }),
            (n.prototype.fromJSON = function(t) {
              return (this.data = t), this;
            }),
            (n.prototype._all = function(t, e) {
              for (var r = []; t; )
                t.leaf
                  ? e.push.apply(e, t.children)
                  : r.push.apply(r, t.children),
                  (t = r.pop());
              return e;
            }),
            (n.prototype._build = function(t, e, r, n) {
              var i,
                s = r - e + 1,
                a = this._maxEntries;
              if (s <= a) return o((i = d(t.slice(e, r + 1))), this.toBBox), i;
              n ||
                ((n = Math.ceil(Math.log(s) / Math.log(a))),
                (a = Math.ceil(s / Math.pow(a, n - 1)))),
                ((i = d([])).leaf = !1),
                (i.height = n);
              var l = Math.ceil(s / a),
                u = l * Math.ceil(Math.sqrt(a));
              y(t, e, r, u, this.compareMinX);
              for (var h = e; h <= r; h += u) {
                var c = Math.min(h + u - 1, r);
                y(t, h, c, l, this.compareMinY);
                for (var p = h; p <= c; p += l) {
                  var f = Math.min(p + l - 1, c);
                  i.children.push(this._build(t, p, f, n - 1));
                }
              }
              return o(i, this.toBBox), i;
            }),
            (n.prototype._chooseSubtree = function(t, e, r, n) {
              for (; n.push(e), !e.leaf && n.length - 1 !== r; ) {
                for (
                  var i = 1 / 0, o = 1 / 0, s = void 0, a = 0;
                  a < e.children.length;
                  a++
                ) {
                  var l = e.children[a],
                    u = h(l),
                    c =
                      ((p = t),
                      (f = l),
                      (Math.max(f.maxX, p.maxX) - Math.min(f.minX, p.minX)) *
                        (Math.max(f.maxY, p.maxY) - Math.min(f.minY, p.minY)) -
                        u);
                  c < o
                    ? ((o = c), (i = u < i ? u : i), (s = l))
                    : c === o && u < i && ((i = u), (s = l));
                }
                e = s || e.children[0];
              }
              var p, f;
              return e;
            }),
            (n.prototype._insert = function(t, e, r) {
              var n = r ? t : this.toBBox(t),
                i = [],
                o = this._chooseSubtree(n, this.data, e, i);
              for (
                o.children.push(t), a(o, n);
                e >= 0 && i[e].children.length > this._maxEntries;

              )
                this._split(i, e), e--;
              this._adjustParentBBoxes(n, i, e);
            }),
            (n.prototype._split = function(t, e) {
              var r = t[e],
                n = r.children.length,
                i = this._minEntries;
              this._chooseSplitAxis(r, i, n);
              var s = this._chooseSplitIndex(r, i, n),
                a = d(r.children.splice(s, r.children.length - s));
              (a.height = r.height),
                (a.leaf = r.leaf),
                o(r, this.toBBox),
                o(a, this.toBBox),
                e ? t[e - 1].children.push(a) : this._splitRoot(r, a);
            }),
            (n.prototype._splitRoot = function(t, e) {
              (this.data = d([t, e])),
                (this.data.height = t.height + 1),
                (this.data.leaf = !1),
                o(this.data, this.toBBox);
            }),
            (n.prototype._chooseSplitIndex = function(t, e, r) {
              for (
                var n, i, o, a, l, u, c, p = 1 / 0, f = 1 / 0, d = e;
                d <= r - e;
                d++
              ) {
                var y = s(t, 0, d, this.toBBox),
                  g = s(t, d, r, this.toBBox),
                  m =
                    ((i = y),
                    (o = g),
                    void 0,
                    void 0,
                    void 0,
                    void 0,
                    (a = Math.max(i.minX, o.minX)),
                    (l = Math.max(i.minY, o.minY)),
                    (u = Math.min(i.maxX, o.maxX)),
                    (c = Math.min(i.maxY, o.maxY)),
                    Math.max(0, u - a) * Math.max(0, c - l)),
                  v = h(y) + h(g);
                m < p
                  ? ((p = m), (n = d), (f = v < f ? v : f))
                  : m === p && v < f && ((f = v), (n = d));
              }
              return n || r - e;
            }),
            (n.prototype._chooseSplitAxis = function(t, e, r) {
              var n = t.leaf ? this.compareMinX : l,
                i = t.leaf ? this.compareMinY : u;
              this._allDistMargin(t, e, r, n) <
                this._allDistMargin(t, e, r, i) && t.children.sort(n);
            }),
            (n.prototype._allDistMargin = function(t, e, r, n) {
              t.children.sort(n);
              for (
                var i = this.toBBox,
                  o = s(t, 0, e, i),
                  l = s(t, r - e, r, i),
                  u = c(o) + c(l),
                  h = e;
                h < r - e;
                h++
              ) {
                var p = t.children[h];
                a(o, t.leaf ? i(p) : p), (u += c(o));
              }
              for (var f = r - e - 1; f >= e; f--) {
                var d = t.children[f];
                a(l, t.leaf ? i(d) : d), (u += c(l));
              }
              return u;
            }),
            (n.prototype._adjustParentBBoxes = function(t, e, r) {
              for (var n = r; n >= 0; n--) a(e[n], t);
            }),
            (n.prototype._condense = function(t) {
              for (var e = t.length - 1, r = void 0; e >= 0; e--)
                0 === t[e].children.length
                  ? e > 0
                    ? (r = t[e - 1].children).splice(r.indexOf(t[e]), 1)
                    : this.clear()
                  : o(t[e], this.toBBox);
            }),
            n
          );
        })();
      },
      9427: (t, e, r) => {
        "use strict";
        var n,
          i = SyntaxError,
          o = Function,
          s = TypeError,
          a = function(t) {
            try {
              return o('"use strict"; return (' + t + ").constructor;")();
            } catch (t) {}
          },
          l = Object.getOwnPropertyDescriptor;
        if (l)
          try {
            l({}, "");
          } catch (t) {
            l = null;
          }
        var u = function() {
            throw new s();
          },
          h = l
            ? (function() {
                try {
                  return u;
                } catch (t) {
                  try {
                    return l(arguments, "callee").get;
                  } catch (t) {
                    return u;
                  }
                }
              })()
            : u,
          c = r(4133)(),
          p =
            Object.getPrototypeOf ||
            function(t) {
              return t.__proto__;
            },
          f = {},
          d = "undefined" == typeof Uint8Array ? n : p(Uint8Array),
          y = {
            "%AggregateError%":
              "undefined" == typeof AggregateError ? n : AggregateError,
            "%Array%": Array,
            "%ArrayBuffer%":
              "undefined" == typeof ArrayBuffer ? n : ArrayBuffer,
            "%ArrayIteratorPrototype%": c ? p([][Symbol.iterator]()) : n,
            "%AsyncFromSyncIteratorPrototype%": n,
            "%AsyncFunction%": f,
            "%AsyncGenerator%": f,
            "%AsyncGeneratorFunction%": f,
            "%AsyncIteratorPrototype%": f,
            "%Atomics%": "undefined" == typeof Atomics ? n : Atomics,
            "%BigInt%": "undefined" == typeof BigInt ? n : BigInt,
            "%Boolean%": Boolean,
            "%DataView%": "undefined" == typeof DataView ? n : DataView,
            "%Date%": Date,
            "%decodeURI%": decodeURI,
            "%decodeURIComponent%": decodeURIComponent,
            "%encodeURI%": encodeURI,
            "%encodeURIComponent%": encodeURIComponent,
            "%Error%": Error,
            "%eval%": eval,
            "%EvalError%": EvalError,
            "%Float32Array%":
              "undefined" == typeof Float32Array ? n : Float32Array,
            "%Float64Array%":
              "undefined" == typeof Float64Array ? n : Float64Array,
            "%FinalizationRegistry%":
              "undefined" == typeof FinalizationRegistry
                ? n
                : FinalizationRegistry,
            "%Function%": o,
            "%GeneratorFunction%": f,
            "%Int8Array%": "undefined" == typeof Int8Array ? n : Int8Array,
            "%Int16Array%": "undefined" == typeof Int16Array ? n : Int16Array,
            "%Int32Array%": "undefined" == typeof Int32Array ? n : Int32Array,
            "%isFinite%": isFinite,
            "%isNaN%": isNaN,
            "%IteratorPrototype%": c ? p(p([][Symbol.iterator]())) : n,
            "%JSON%": "object" == typeof JSON ? JSON : n,
            "%Map%": "undefined" == typeof Map ? n : Map,
            "%MapIteratorPrototype%":
              "undefined" != typeof Map && c
                ? p(new Map()[Symbol.iterator]())
                : n,
            "%Math%": Math,
            "%Number%": Number,
            "%Object%": Object,
            "%parseFloat%": parseFloat,
            "%parseInt%": parseInt,
            "%Promise%": "undefined" == typeof Promise ? n : Promise,
            "%Proxy%": "undefined" == typeof Proxy ? n : Proxy,
            "%RangeError%": RangeError,
            "%ReferenceError%": ReferenceError,
            "%Reflect%": "undefined" == typeof Reflect ? n : Reflect,
            "%RegExp%": RegExp,
            "%Set%": "undefined" == typeof Set ? n : Set,
            "%SetIteratorPrototype%":
              "undefined" != typeof Set && c
                ? p(new Set()[Symbol.iterator]())
                : n,
            "%SharedArrayBuffer%":
              "undefined" == typeof SharedArrayBuffer ? n : SharedArrayBuffer,
            "%String%": String,
            "%StringIteratorPrototype%": c ? p(""[Symbol.iterator]()) : n,
            "%Symbol%": c ? Symbol : n,
            "%SyntaxError%": i,
            "%ThrowTypeError%": h,
            "%TypedArray%": d,
            "%TypeError%": s,
            "%Uint8Array%": "undefined" == typeof Uint8Array ? n : Uint8Array,
            "%Uint8ClampedArray%":
              "undefined" == typeof Uint8ClampedArray ? n : Uint8ClampedArray,
            "%Uint16Array%":
              "undefined" == typeof Uint16Array ? n : Uint16Array,
            "%Uint32Array%":
              "undefined" == typeof Uint32Array ? n : Uint32Array,
            "%URIError%": URIError,
            "%WeakMap%": "undefined" == typeof WeakMap ? n : WeakMap,
            "%WeakRef%": "undefined" == typeof WeakRef ? n : WeakRef,
            "%WeakSet%": "undefined" == typeof WeakSet ? n : WeakSet
          },
          g = function t(e) {
            var r;
            if ("%AsyncFunction%" === e) r = a("async function () {}");
            else if ("%GeneratorFunction%" === e) r = a("function* () {}");
            else if ("%AsyncGeneratorFunction%" === e)
              r = a("async function* () {}");
            else if ("%AsyncGenerator%" === e) {
              var n = t("%AsyncGeneratorFunction%");
              n && (r = n.prototype);
            } else if ("%AsyncIteratorPrototype%" === e) {
              var i = t("%AsyncGenerator%");
              i && (r = p(i.prototype));
            }
            return (y[e] = r), r;
          },
          m = {
            "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
            "%ArrayPrototype%": ["Array", "prototype"],
            "%ArrayProto_entries%": ["Array", "prototype", "entries"],
            "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
            "%ArrayProto_keys%": ["Array", "prototype", "keys"],
            "%ArrayProto_values%": ["Array", "prototype", "values"],
            "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
            "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
            "%AsyncGeneratorPrototype%": [
              "AsyncGeneratorFunction",
              "prototype",
              "prototype"
            ],
            "%BooleanPrototype%": ["Boolean", "prototype"],
            "%DataViewPrototype%": ["DataView", "prototype"],
            "%DatePrototype%": ["Date", "prototype"],
            "%ErrorPrototype%": ["Error", "prototype"],
            "%EvalErrorPrototype%": ["EvalError", "prototype"],
            "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
            "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
            "%FunctionPrototype%": ["Function", "prototype"],
            "%Generator%": ["GeneratorFunction", "prototype"],
            "%GeneratorPrototype%": [
              "GeneratorFunction",
              "prototype",
              "prototype"
            ],
            "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
            "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
            "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
            "%JSONParse%": ["JSON", "parse"],
            "%JSONStringify%": ["JSON", "stringify"],
            "%MapPrototype%": ["Map", "prototype"],
            "%NumberPrototype%": ["Number", "prototype"],
            "%ObjectPrototype%": ["Object", "prototype"],
            "%ObjProto_toString%": ["Object", "prototype", "toString"],
            "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
            "%PromisePrototype%": ["Promise", "prototype"],
            "%PromiseProto_then%": ["Promise", "prototype", "then"],
            "%Promise_all%": ["Promise", "all"],
            "%Promise_reject%": ["Promise", "reject"],
            "%Promise_resolve%": ["Promise", "resolve"],
            "%RangeErrorPrototype%": ["RangeError", "prototype"],
            "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
            "%RegExpPrototype%": ["RegExp", "prototype"],
            "%SetPrototype%": ["Set", "prototype"],
            "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
            "%StringPrototype%": ["String", "prototype"],
            "%SymbolPrototype%": ["Symbol", "prototype"],
            "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
            "%TypedArrayPrototype%": ["TypedArray", "prototype"],
            "%TypeErrorPrototype%": ["TypeError", "prototype"],
            "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
            "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
            "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
            "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
            "%URIErrorPrototype%": ["URIError", "prototype"],
            "%WeakMapPrototype%": ["WeakMap", "prototype"],
            "%WeakSetPrototype%": ["WeakSet", "prototype"]
          },
          v = r(6558),
          _ = r(3209),
          x = v.call(Function.call, Array.prototype.concat),
          b = v.call(Function.apply, Array.prototype.splice),
          S = v.call(Function.call, String.prototype.replace),
          I = v.call(Function.call, String.prototype.slice),
          w = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
          N = /\\(\\)?/g,
          C = function(t) {
            var e = I(t, 0, 1),
              r = I(t, -1);
            if ("%" === e && "%" !== r)
              throw new i("invalid intrinsic syntax, expected closing `%`");
            if ("%" === r && "%" !== e)
              throw new i("invalid intrinsic syntax, expected opening `%`");
            var n = [];
            return (
              S(t, w, function(t, e, r, i) {
                n[n.length] = r ? S(i, N, "$1") : e || t;
              }),
              n
            );
          },
          E = function(t, e) {
            var r,
              n = t;
            if ((_(m, n) && (n = "%" + (r = m[n])[0] + "%"), _(y, n))) {
              var o = y[n];
              if ((o === f && (o = g(n)), void 0 === o && !e))
                throw new s(
                  "intrinsic " +
                    t +
                    " exists, but is not available. Please file an issue!"
                );
              return { alias: r, name: n, value: o };
            }
            throw new i("intrinsic " + t + " does not exist!");
          };
        t.exports = function(t, e) {
          if ("string" != typeof t || 0 === t.length)
            throw new s("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && "boolean" != typeof e)
            throw new s('"allowMissing" argument must be a boolean');
          var r = C(t),
            n = r.length > 0 ? r[0] : "",
            o = E("%" + n + "%", e),
            a = o.name,
            u = o.value,
            h = !1,
            c = o.alias;
          c && ((n = c[0]), b(r, x([0, 1], c)));
          for (var p = 1, f = !0; p < r.length; p += 1) {
            var d = r[p],
              g = I(d, 0, 1),
              m = I(d, -1);
            if (
              ('"' === g ||
                "'" === g ||
                "`" === g ||
                '"' === m ||
                "'" === m ||
                "`" === m) &&
              g !== m
            )
              throw new i(
                "property names with quotes must have matching quotes"
              );
            if (
              (("constructor" !== d && f) || (h = !0),
              _(y, (a = "%" + (n += "." + d) + "%")))
            )
              u = y[a];
            else if (null != u) {
              if (!(d in u)) {
                if (!e)
                  throw new s(
                    "base intrinsic for " +
                      t +
                      " exists, but the property is not available."
                  );
                return;
              }
              if (l && p + 1 >= r.length) {
                var v = l(u, d);
                u =
                  (f = !!v) && "get" in v && !("originalValue" in v.get)
                    ? v.get
                    : u[d];
              } else (f = _(u, d)), (u = u[d]);
              f && !h && (y[a] = u);
            }
          }
          return u;
        };
      },
      4133: (t, e, r) => {
        "use strict";
        var n = "undefined" != typeof Symbol && Symbol,
          i = r(1773);
        t.exports = function() {
          return (
            "function" == typeof n &&
            "function" == typeof Symbol &&
            "symbol" == typeof n("foo") &&
            "symbol" == typeof Symbol("bar") &&
            i()
          );
        };
      },
      1773: t => {
        "use strict";
        t.exports = function() {
          if (
            "function" != typeof Symbol ||
            "function" != typeof Object.getOwnPropertySymbols
          )
            return !1;
          if ("symbol" == typeof Symbol.iterator) return !0;
          var t = {},
            e = Symbol("test"),
            r = Object(e);
          if ("string" == typeof e) return !1;
          if ("[object Symbol]" !== Object.prototype.toString.call(e))
            return !1;
          if ("[object Symbol]" !== Object.prototype.toString.call(r))
            return !1;
          for (e in ((t[e] = 42), t)) return !1;
          if ("function" == typeof Object.keys && 0 !== Object.keys(t).length)
            return !1;
          if (
            "function" == typeof Object.getOwnPropertyNames &&
            0 !== Object.getOwnPropertyNames(t).length
          )
            return !1;
          var n = Object.getOwnPropertySymbols(t);
          if (1 !== n.length || n[0] !== e) return !1;
          if (!Object.prototype.propertyIsEnumerable.call(t, e)) return !1;
          if ("function" == typeof Object.getOwnPropertyDescriptor) {
            var i = Object.getOwnPropertyDescriptor(t, e);
            if (42 !== i.value || !0 !== i.enumerable) return !1;
          }
          return !0;
        };
      },
      3209: (t, e, r) => {
        "use strict";
        var n = r(6558);
        t.exports = n.call(Function.call, Object.prototype.hasOwnProperty);
      },
      2372: (t, e, r) => {
        "use strict";
        var n =
            "function" == typeof Symbol &&
            "symbol" == typeof Symbol.toStringTag,
          i = r(6489)("Object.prototype.toString"),
          o = function(t) {
            return (
              !(n && t && "object" == typeof t && Symbol.toStringTag in t) &&
              "[object Arguments]" === i(t)
            );
          },
          s = function(t) {
            return (
              !!o(t) ||
              (null !== t &&
                "object" == typeof t &&
                "number" == typeof t.length &&
                t.length >= 0 &&
                "[object Array]" !== i(t) &&
                "[object Function]" === i(t.callee))
            );
          },
          a = (function() {
            return o(arguments);
          })();
        (o.isLegacyArguments = s), (t.exports = a ? o : s);
      },
      660: t => {
        "use strict";
        var e = Date.prototype.getDay,
          r = Object.prototype.toString,
          n = "function" == typeof Symbol && !!Symbol.toStringTag;
        t.exports = function(t) {
          return (
            "object" == typeof t &&
            null !== t &&
            (n
              ? (function(t) {
                  try {
                    return e.call(t), !0;
                  } catch (t) {
                    return !1;
                  }
                })(t)
              : "[object Date]" === r.call(t))
          );
        };
      },
      616: (t, e, r) => {
        "use strict";
        var n,
          i,
          o,
          s,
          a = r(6489),
          l = r(1773)() && !!Symbol.toStringTag;
        if (l) {
          (n = a("Object.prototype.hasOwnProperty")),
            (i = a("RegExp.prototype.exec")),
            (o = {});
          var u = function() {
            throw o;
          };
          (s = { toString: u, valueOf: u }),
            "symbol" == typeof Symbol.toPrimitive &&
              (s[Symbol.toPrimitive] = u);
        }
        var h = a("Object.prototype.toString"),
          c = Object.getOwnPropertyDescriptor;
        t.exports = l
          ? function(t) {
              if (!t || "object" != typeof t) return !1;
              var e = c(t, "lastIndex");
              if (!e || !n(e, "value")) return !1;
              try {
                i(t, s);
              } catch (t) {
                return t === o;
              }
            }
          : function(t) {
              return (
                !(!t || ("object" != typeof t && "function" != typeof t)) &&
                "[object RegExp]" === h(t)
              );
            };
      },
      233: t => {
        "use strict";
        var e = Object.getOwnPropertySymbols,
          r = Object.prototype.hasOwnProperty,
          n = Object.prototype.propertyIsEnumerable;
        function i(t) {
          if (null == t)
            throw new TypeError(
              "Object.assign cannot be called with null or undefined"
            );
          return Object(t);
        }
        t.exports = (function() {
          try {
            if (!Object.assign) return !1;
            var t = new String("abc");
            if (((t[5] = "de"), "5" === Object.getOwnPropertyNames(t)[0]))
              return !1;
            for (var e = {}, r = 0; r < 10; r++)
              e["_" + String.fromCharCode(r)] = r;
            if (
              "0123456789" !==
              Object.getOwnPropertyNames(e)
                .map(function(t) {
                  return e[t];
                })
                .join("")
            )
              return !1;
            var n = {};
            return (
              "abcdefghijklmnopqrst".split("").forEach(function(t) {
                n[t] = t;
              }),
              "abcdefghijklmnopqrst" ===
                Object.keys(Object.assign({}, n)).join("")
            );
          } catch (t) {
            return !1;
          }
        })()
          ? Object.assign
          : function(t, o) {
              for (var s, a, l = i(t), u = 1; u < arguments.length; u++) {
                for (var h in (s = Object(arguments[u])))
                  r.call(s, h) && (l[h] = s[h]);
                if (e) {
                  a = e(s);
                  for (var c = 0; c < a.length; c++)
                    n.call(s, a[c]) && (l[a[c]] = s[a[c]]);
                }
              }
              return l;
            };
      },
      3331: (t, e, r) => {
        var n = "function" == typeof Map && Map.prototype,
          i =
            Object.getOwnPropertyDescriptor && n
              ? Object.getOwnPropertyDescriptor(Map.prototype, "size")
              : null,
          o = n && i && "function" == typeof i.get ? i.get : null,
          s = n && Map.prototype.forEach,
          a = "function" == typeof Set && Set.prototype,
          l =
            Object.getOwnPropertyDescriptor && a
              ? Object.getOwnPropertyDescriptor(Set.prototype, "size")
              : null,
          u = a && l && "function" == typeof l.get ? l.get : null,
          h = a && Set.prototype.forEach,
          c =
            "function" == typeof WeakMap && WeakMap.prototype
              ? WeakMap.prototype.has
              : null,
          p =
            "function" == typeof WeakSet && WeakSet.prototype
              ? WeakSet.prototype.has
              : null,
          f =
            "function" == typeof WeakRef && WeakRef.prototype
              ? WeakRef.prototype.deref
              : null,
          d = Boolean.prototype.valueOf,
          y = Object.prototype.toString,
          g = Function.prototype.toString,
          m = String.prototype.match,
          v = "function" == typeof BigInt ? BigInt.prototype.valueOf : null,
          _ = Object.getOwnPropertySymbols,
          x =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? Symbol.prototype.toString
              : null,
          b = "function" == typeof Symbol && "object" == typeof Symbol.iterator,
          S = Object.prototype.propertyIsEnumerable,
          I =
            ("function" == typeof Reflect
              ? Reflect.getPrototypeOf
              : Object.getPrototypeOf) ||
            ([].__proto__ === Array.prototype
              ? function(t) {
                  return t.__proto__;
                }
              : null),
          w = r(7531).custom,
          N = w && O(w) ? w : null,
          C =
            "function" == typeof Symbol && void 0 !== Symbol.toStringTag
              ? Symbol.toStringTag
              : null;
        function E(t, e, r) {
          var n = "double" === (r.quoteStyle || e) ? '"' : "'";
          return n + t + n;
        }
        function M(t) {
          return String(t).replace(/"/g, "&quot;");
        }
        function P(t) {
          return !(
            "[object Array]" !== A(t) ||
            (C && "object" == typeof t && C in t)
          );
        }
        function O(t) {
          if (b) return t && "object" == typeof t && t instanceof Symbol;
          if ("symbol" == typeof t) return !0;
          if (!t || "object" != typeof t || !x) return !1;
          try {
            return x.call(t), !0;
          } catch (t) {}
          return !1;
        }
        t.exports = function t(e, r, n, i) {
          var a = r || {};
          if (
            T(a, "quoteStyle") &&
            "single" !== a.quoteStyle &&
            "double" !== a.quoteStyle
          )
            throw new TypeError(
              'option "quoteStyle" must be "single" or "double"'
            );
          if (
            T(a, "maxStringLength") &&
            ("number" == typeof a.maxStringLength
              ? a.maxStringLength < 0 && a.maxStringLength !== 1 / 0
              : null !== a.maxStringLength)
          )
            throw new TypeError(
              'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`'
            );
          var l = !T(a, "customInspect") || a.customInspect;
          if ("boolean" != typeof l)
            throw new TypeError(
              'option "customInspect", if provided, must be `true` or `false`'
            );
          if (
            T(a, "indent") &&
            null !== a.indent &&
            "\t" !== a.indent &&
            !(parseInt(a.indent, 10) === a.indent && a.indent > 0)
          )
            throw new TypeError(
              'options "indent" must be "\\t", an integer > 0, or `null`'
            );
          if (void 0 === e) return "undefined";
          if (null === e) return "null";
          if ("boolean" == typeof e) return e ? "true" : "false";
          if ("string" == typeof e) return F(e, a);
          if ("number" == typeof e)
            return 0 === e ? (1 / 0 / e > 0 ? "0" : "-0") : String(e);
          if ("bigint" == typeof e) return String(e) + "n";
          var y = void 0 === a.depth ? 5 : a.depth;
          if (
            (void 0 === n && (n = 0), n >= y && y > 0 && "object" == typeof e)
          )
            return P(e) ? "[Array]" : "[Object]";
          var _,
            S = (function(t, e) {
              var r;
              if ("\t" === t.indent) r = "\t";
              else {
                if (!("number" == typeof t.indent && t.indent > 0)) return null;
                r = Array(t.indent + 1).join(" ");
              }
              return { base: r, prev: Array(e + 1).join(r) };
            })(a, n);
          if (void 0 === i) i = [];
          else if (R(i, e) >= 0) return "[Circular]";
          function w(e, r, o) {
            if ((r && (i = i.slice()).push(r), o)) {
              var s = { depth: a.depth };
              return (
                T(a, "quoteStyle") && (s.quoteStyle = a.quoteStyle),
                t(e, s, n + 1, i)
              );
            }
            return t(e, a, n + 1, i);
          }
          if ("function" == typeof e) {
            var L = (function(t) {
                if (t.name) return t.name;
                var e = m.call(g.call(t), /^function\s*([\w$]+)/);
                return e ? e[1] : null;
              })(e),
              D = k(e, w);
            return (
              "[Function" +
              (L ? ": " + L : " (anonymous)") +
              "]" +
              (D.length > 0 ? " { " + D.join(", ") + " }" : "")
            );
          }
          if (O(e)) {
            var q = b
              ? String(e).replace(/^(Symbol\(.*\))_[^)]*$/, "$1")
              : x.call(e);
            return "object" != typeof e || b ? q : j(q);
          }
          if (
            (_ = e) &&
            "object" == typeof _ &&
            (("undefined" != typeof HTMLElement && _ instanceof HTMLElement) ||
              ("string" == typeof _.nodeName &&
                "function" == typeof _.getAttribute))
          ) {
            for (
              var z = "<" + String(e.nodeName).toLowerCase(),
                V = e.attributes || [],
                W = 0;
              W < V.length;
              W++
            )
              z += " " + V[W].name + "=" + E(M(V[W].value), "double", a);
            return (
              (z += ">"),
              e.childNodes && e.childNodes.length && (z += "..."),
              z + "</" + String(e.nodeName).toLowerCase() + ">"
            );
          }
          if (P(e)) {
            if (0 === e.length) return "[]";
            var X = k(e, w);
            return S &&
              !(function(t) {
                for (var e = 0; e < t.length; e++)
                  if (R(t[e], "\n") >= 0) return !1;
                return !0;
              })(X)
              ? "[" + B(X, S) + "]"
              : "[ " + X.join(", ") + " ]";
          }
          if (
            (function(t) {
              return !(
                "[object Error]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          ) {
            var Y = k(e, w);
            return 0 === Y.length
              ? "[" + String(e) + "]"
              : "{ [" + String(e) + "] " + Y.join(", ") + " }";
          }
          if ("object" == typeof e && l) {
            if (N && "function" == typeof e[N]) return e[N]();
            if ("function" == typeof e.inspect) return e.inspect();
          }
          if (
            (function(t) {
              if (!o || !t || "object" != typeof t) return !1;
              try {
                o.call(t);
                try {
                  u.call(t);
                } catch (t) {
                  return !0;
                }
                return t instanceof Map;
              } catch (t) {}
              return !1;
            })(e)
          ) {
            var H = [];
            return (
              s.call(e, function(t, r) {
                H.push(w(r, e, !0) + " => " + w(t, e));
              }),
              G("Map", o.call(e), H, S)
            );
          }
          if (
            (function(t) {
              if (!u || !t || "object" != typeof t) return !1;
              try {
                u.call(t);
                try {
                  o.call(t);
                } catch (t) {
                  return !0;
                }
                return t instanceof Set;
              } catch (t) {}
              return !1;
            })(e)
          ) {
            var J = [];
            return (
              h.call(e, function(t) {
                J.push(w(t, e));
              }),
              G("Set", u.call(e), J, S)
            );
          }
          if (
            (function(t) {
              if (!c || !t || "object" != typeof t) return !1;
              try {
                c.call(t, c);
                try {
                  p.call(t, p);
                } catch (t) {
                  return !0;
                }
                return t instanceof WeakMap;
              } catch (t) {}
              return !1;
            })(e)
          )
            return U("WeakMap");
          if (
            (function(t) {
              if (!p || !t || "object" != typeof t) return !1;
              try {
                p.call(t, p);
                try {
                  c.call(t, c);
                } catch (t) {
                  return !0;
                }
                return t instanceof WeakSet;
              } catch (t) {}
              return !1;
            })(e)
          )
            return U("WeakSet");
          if (
            (function(t) {
              if (!f || !t || "object" != typeof t) return !1;
              try {
                return f.call(t), !0;
              } catch (t) {}
              return !1;
            })(e)
          )
            return U("WeakRef");
          if (
            (function(t) {
              return !(
                "[object Number]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          )
            return j(w(Number(e)));
          if (
            (function(t) {
              if (!t || "object" != typeof t || !v) return !1;
              try {
                return v.call(t), !0;
              } catch (t) {}
              return !1;
            })(e)
          )
            return j(w(v.call(e)));
          if (
            (function(t) {
              return !(
                "[object Boolean]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          )
            return j(d.call(e));
          if (
            (function(t) {
              return !(
                "[object String]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          )
            return j(w(String(e)));
          if (
            !(function(t) {
              return !(
                "[object Date]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e) &&
            !(function(t) {
              return !(
                "[object RegExp]" !== A(t) ||
                (C && "object" == typeof t && C in t)
              );
            })(e)
          ) {
            var $ = k(e, w),
              Q = I
                ? I(e) === Object.prototype
                : e instanceof Object || e.constructor === Object,
              Z = e instanceof Object ? "" : "null prototype",
              K =
                !Q && C && Object(e) === e && C in e
                  ? A(e).slice(8, -1)
                  : Z
                  ? "Object"
                  : "",
              tt =
                (Q || "function" != typeof e.constructor
                  ? ""
                  : e.constructor.name
                  ? e.constructor.name + " "
                  : "") +
                (K || Z
                  ? "[" + [].concat(K || [], Z || []).join(": ") + "] "
                  : "");
            return 0 === $.length
              ? tt + "{}"
              : S
              ? tt + "{" + B($, S) + "}"
              : tt + "{ " + $.join(", ") + " }";
          }
          return String(e);
        };
        var L =
          Object.prototype.hasOwnProperty ||
          function(t) {
            return t in this;
          };
        function T(t, e) {
          return L.call(t, e);
        }
        function A(t) {
          return y.call(t);
        }
        function R(t, e) {
          if (t.indexOf) return t.indexOf(e);
          for (var r = 0, n = t.length; r < n; r++) if (t[r] === e) return r;
          return -1;
        }
        function F(t, e) {
          if (t.length > e.maxStringLength) {
            var r = t.length - e.maxStringLength,
              n = "... " + r + " more character" + (r > 1 ? "s" : "");
            return F(t.slice(0, e.maxStringLength), e) + n;
          }
          return E(
            t.replace(/(['\\])/g, "\\$1").replace(/[\x00-\x1f]/g, D),
            "single",
            e
          );
        }
        function D(t) {
          var e = t.charCodeAt(0),
            r = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[e];
          return r
            ? "\\" + r
            : "\\x" + (e < 16 ? "0" : "") + e.toString(16).toUpperCase();
        }
        function j(t) {
          return "Object(" + t + ")";
        }
        function U(t) {
          return t + " { ? }";
        }
        function G(t, e, r, n) {
          return t + " (" + e + ") {" + (n ? B(r, n) : r.join(", ")) + "}";
        }
        function B(t, e) {
          if (0 === t.length) return "";
          var r = "\n" + e.prev + e.base;
          return r + t.join("," + r) + "\n" + e.prev;
        }
        function k(t, e) {
          var r = P(t),
            n = [];
          if (r) {
            n.length = t.length;
            for (var i = 0; i < t.length; i++) n[i] = T(t, i) ? e(t[i], t) : "";
          }
          var o,
            s = "function" == typeof _ ? _(t) : [];
          if (b) {
            o = {};
            for (var a = 0; a < s.length; a++) o["$" + s[a]] = s[a];
          }
          for (var l in t)
            T(t, l) &&
              ((r && String(Number(l)) === l && l < t.length) ||
                (b && o["$" + l] instanceof Symbol) ||
                (/[^\w$]/.test(l)
                  ? n.push(e(l, t) + ": " + e(t[l], t))
                  : n.push(l + ": " + e(t[l], t))));
          if ("function" == typeof _)
            for (var u = 0; u < s.length; u++)
              S.call(t, s[u]) && n.push("[" + e(s[u]) + "]: " + e(t[s[u]], t));
          return n;
        }
      },
      6559: t => {
        "use strict";
        var e = function(t) {
          return t != t;
        };
        t.exports = function(t, r) {
          return 0 === t && 0 === r
            ? 1 / t == 1 / r
            : t === r || !(!e(t) || !e(r));
        };
      },
      4720: (t, e, r) => {
        "use strict";
        var n = r(5267),
          i = r(6516),
          o = r(6559),
          s = r(5943),
          a = r(4497),
          l = i(s(), Object);
        n(l, { getPolyfill: s, implementation: o, shim: a }), (t.exports = l);
      },
      5943: (t, e, r) => {
        "use strict";
        var n = r(6559);
        t.exports = function() {
          return "function" == typeof Object.is ? Object.is : n;
        };
      },
      4497: (t, e, r) => {
        "use strict";
        var n = r(5943),
          i = r(5267);
        t.exports = function() {
          var t = n();
          return (
            i(
              Object,
              { is: t },
              {
                is: function() {
                  return Object.is !== t;
                }
              }
            ),
            t
          );
        };
      },
      3309: (t, e, r) => {
        "use strict";
        var n;
        if (!Object.keys) {
          var i = Object.prototype.hasOwnProperty,
            o = Object.prototype.toString,
            s = r(6752),
            a = Object.prototype.propertyIsEnumerable,
            l = !a.call({ toString: null }, "toString"),
            u = a.call(function() {}, "prototype"),
            h = [
              "toString",
              "toLocaleString",
              "valueOf",
              "hasOwnProperty",
              "isPrototypeOf",
              "propertyIsEnumerable",
              "constructor"
            ],
            c = function(t) {
              var e = t.constructor;
              return e && e.prototype === t;
            },
            p = {
              $applicationCache: !0,
              $console: !0,
              $external: !0,
              $frame: !0,
              $frameElement: !0,
              $frames: !0,
              $innerHeight: !0,
              $innerWidth: !0,
              $onmozfullscreenchange: !0,
              $onmozfullscreenerror: !0,
              $outerHeight: !0,
              $outerWidth: !0,
              $pageXOffset: !0,
              $pageYOffset: !0,
              $parent: !0,
              $scrollLeft: !0,
              $scrollTop: !0,
              $scrollX: !0,
              $scrollY: !0,
              $self: !0,
              $webkitIndexedDB: !0,
              $webkitStorageInfo: !0,
              $window: !0
            },
            f = (function() {
              if ("undefined" == typeof window) return !1;
              for (var t in window)
                try {
                  if (
                    !p["$" + t] &&
                    i.call(window, t) &&
                    null !== window[t] &&
                    "object" == typeof window[t]
                  )
                    try {
                      c(window[t]);
                    } catch (t) {
                      return !0;
                    }
                } catch (t) {
                  return !0;
                }
              return !1;
            })();
          n = function(t) {
            var e = null !== t && "object" == typeof t,
              r = "[object Function]" === o.call(t),
              n = s(t),
              a = e && "[object String]" === o.call(t),
              p = [];
            if (!e && !r && !n)
              throw new TypeError("Object.keys called on a non-object");
            var d = u && r;
            if (a && t.length > 0 && !i.call(t, 0))
              for (var y = 0; y < t.length; ++y) p.push(String(y));
            if (n && t.length > 0)
              for (var g = 0; g < t.length; ++g) p.push(String(g));
            else
              for (var m in t)
                (d && "prototype" === m) || !i.call(t, m) || p.push(String(m));
            if (l)
              for (
                var v = (function(t) {
                    if ("undefined" == typeof window || !f) return c(t);
                    try {
                      return c(t);
                    } catch (t) {
                      return !1;
                    }
                  })(t),
                  _ = 0;
                _ < h.length;
                ++_
              )
                (v && "constructor" === h[_]) ||
                  !i.call(t, h[_]) ||
                  p.push(h[_]);
            return p;
          };
        }
        t.exports = n;
      },
      5996: (t, e, r) => {
        "use strict";
        var n = Array.prototype.slice,
          i = r(6752),
          o = Object.keys,
          s = o
            ? function(t) {
                return o(t);
              }
            : r(3309),
          a = Object.keys;
        (s.shim = function() {
          if (Object.keys) {
            var t = (function() {
              var t = Object.keys(arguments);
              return t && t.length === arguments.length;
            })(1, 2);
            t ||
              (Object.keys = function(t) {
                return i(t) ? a(n.call(t)) : a(t);
              });
          } else Object.keys = s;
          return Object.keys || s;
        }),
          (t.exports = s);
      },
      6752: t => {
        "use strict";
        var e = Object.prototype.toString;
        t.exports = function(t) {
          var r = e.call(t),
            n = "[object Arguments]" === r;
          return (
            n ||
              (n =
                "[object Array]" !== r &&
                null !== t &&
                "object" == typeof t &&
                "number" == typeof t.length &&
                t.length >= 0 &&
                "[object Function]" === e.call(t.callee)),
            n
          );
        };
      },
      7110: t => {
        t.exports = function(t, e, r, n) {
          var i = t[0],
            o = t[1],
            s = !1;
          void 0 === r && (r = 0), void 0 === n && (n = e.length);
          for (var a = (n - r) / 2, l = 0, u = a - 1; l < a; u = l++) {
            var h = e[r + 2 * l + 0],
              c = e[r + 2 * l + 1],
              p = e[r + 2 * u + 0],
              f = e[r + 2 * u + 1];
            c > o != f > o && i < ((p - h) * (o - c)) / (f - c) + h && (s = !s);
          }
          return s;
        };
      },
      1947: (t, e, r) => {
        var n = r(7110),
          i = r(9093);
        (t.exports = function(t, e, r, o) {
          return e.length > 0 && Array.isArray(e[0])
            ? i(t, e, r, o)
            : n(t, e, r, o);
        }),
          (t.exports.nested = i),
          (t.exports.flat = n);
      },
      9093: t => {
        t.exports = function(t, e, r, n) {
          var i = t[0],
            o = t[1],
            s = !1;
          void 0 === r && (r = 0), void 0 === n && (n = e.length);
          for (var a = n - r, l = 0, u = a - 1; l < a; u = l++) {
            var h = e[l + r][0],
              c = e[l + r][1],
              p = e[u + r][0],
              f = e[u + r][1];
            c > o != f > o && i < ((p - h) * (o - c)) / (f - c) + h && (s = !s);
          }
          return s;
        };
      },
      5091: function(t) {
        t.exports = (function() {
          "use strict";
          function t(t, e) {
            if (!(t instanceof e))
              throw new TypeError("Cannot call a class as a function");
          }
          function e(t, e) {
            for (var r = 0; r < e.length; r++) {
              var n = e[r];
              (n.enumerable = n.enumerable || !1),
                (n.configurable = !0),
                "value" in n && (n.writable = !0),
                Object.defineProperty(t, n.key, n);
            }
          }
          function r(t, r, n) {
            return r && e(t.prototype, r), n && e(t, n), t;
          }
          var n = function(t, e) {
            (this.next = null),
              (this.key = t),
              (this.data = e),
              (this.left = null),
              (this.right = null);
          };
          function i(t, e) {
            return t > e ? 1 : t < e ? -1 : 0;
          }
          function o(t, e, r) {
            for (var i = new n(null, null), o = i, s = i; ; ) {
              var a = r(t, e.key);
              if (a < 0) {
                if (null === e.left) break;
                if (r(t, e.left.key) < 0) {
                  var l = e.left;
                  if (
                    ((e.left = l.right), (l.right = e), null === (e = l).left)
                  )
                    break;
                }
                (s.left = e), (s = e), (e = e.left);
              } else {
                if (!(a > 0)) break;
                if (null === e.right) break;
                if (
                  r(t, e.right.key) > 0 &&
                  ((l = e.right),
                  (e.right = l.left),
                  (l.left = e),
                  null === (e = l).right)
                )
                  break;
                (o.right = e), (o = e), (e = e.right);
              }
            }
            return (
              (o.right = e.left),
              (s.left = e.right),
              (e.left = i.right),
              (e.right = i.left),
              e
            );
          }
          function s(t, e, r, i) {
            var s = new n(t, e);
            if (null === r) return (s.left = s.right = null), s;
            var a = i(t, (r = o(t, r, i)).key);
            return (
              a < 0
                ? ((s.left = r.left), (s.right = r), (r.left = null))
                : a >= 0 &&
                  ((s.right = r.right), (s.left = r), (r.right = null)),
              s
            );
          }
          function a(t, e, r) {
            var n = null,
              i = null;
            if (e) {
              var s = r((e = o(t, e, r)).key, t);
              0 === s
                ? ((n = e.left), (i = e.right))
                : s < 0
                ? ((i = e.right), (e.right = null), (n = e))
                : ((n = e.left), (e.left = null), (i = e));
            }
            return { left: n, right: i };
          }
          function l(t, e, r, n, i) {
            if (t) {
              n(e + (r ? "└── " : "├── ") + i(t) + "\n");
              var o = e + (r ? "    " : "│   ");
              t.left && l(t.left, o, !1, n, i),
                t.right && l(t.right, o, !0, n, i);
            }
          }
          var u = (function() {
            function t(t) {
              void 0 === t && (t = i),
                (this._root = null),
                (this._size = 0),
                (this._comparator = t);
            }
            return (
              (t.prototype.insert = function(t, e) {
                return (
                  this._size++,
                  (this._root = s(t, e, this._root, this._comparator))
                );
              }),
              (t.prototype.add = function(t, e) {
                var r = new n(t, e);
                null === this._root &&
                  ((r.left = r.right = null), this._size++, (this._root = r));
                var i = this._comparator,
                  s = o(t, this._root, i),
                  a = i(t, s.key);
                return (
                  0 === a
                    ? (this._root = s)
                    : (a < 0
                        ? ((r.left = s.left), (r.right = s), (s.left = null))
                        : a > 0 &&
                          ((r.right = s.right), (r.left = s), (s.right = null)),
                      this._size++,
                      (this._root = r)),
                  this._root
                );
              }),
              (t.prototype.remove = function(t) {
                this._root = this._remove(t, this._root, this._comparator);
              }),
              (t.prototype._remove = function(t, e, r) {
                var n;
                return null === e
                  ? null
                  : 0 === r(t, (e = o(t, e, r)).key)
                  ? (null === e.left
                      ? (n = e.right)
                      : ((n = o(t, e.left, r)).right = e.right),
                    this._size--,
                    n)
                  : e;
              }),
              (t.prototype.pop = function() {
                var t = this._root;
                if (t) {
                  for (; t.left; ) t = t.left;
                  return (
                    (this._root = o(t.key, this._root, this._comparator)),
                    (this._root = this._remove(
                      t.key,
                      this._root,
                      this._comparator
                    )),
                    { key: t.key, data: t.data }
                  );
                }
                return null;
              }),
              (t.prototype.findStatic = function(t) {
                for (var e = this._root, r = this._comparator; e; ) {
                  var n = r(t, e.key);
                  if (0 === n) return e;
                  e = n < 0 ? e.left : e.right;
                }
                return null;
              }),
              (t.prototype.find = function(t) {
                return this._root &&
                  ((this._root = o(t, this._root, this._comparator)),
                  0 !== this._comparator(t, this._root.key))
                  ? null
                  : this._root;
              }),
              (t.prototype.contains = function(t) {
                for (var e = this._root, r = this._comparator; e; ) {
                  var n = r(t, e.key);
                  if (0 === n) return !0;
                  e = n < 0 ? e.left : e.right;
                }
                return !1;
              }),
              (t.prototype.forEach = function(t, e) {
                for (var r = this._root, n = [], i = !1; !i; )
                  null !== r
                    ? (n.push(r), (r = r.left))
                    : 0 !== n.length
                    ? ((r = n.pop()), t.call(e, r), (r = r.right))
                    : (i = !0);
                return this;
              }),
              (t.prototype.range = function(t, e, r, n) {
                for (
                  var i = [], o = this._comparator, s = this._root;
                  0 !== i.length || s;

                )
                  if (s) i.push(s), (s = s.left);
                  else {
                    if (o((s = i.pop()).key, e) > 0) break;
                    if (o(s.key, t) >= 0 && r.call(n, s)) return this;
                    s = s.right;
                  }
                return this;
              }),
              (t.prototype.keys = function() {
                var t = [];
                return (
                  this.forEach(function(e) {
                    var r = e.key;
                    return t.push(r);
                  }),
                  t
                );
              }),
              (t.prototype.values = function() {
                var t = [];
                return (
                  this.forEach(function(e) {
                    var r = e.data;
                    return t.push(r);
                  }),
                  t
                );
              }),
              (t.prototype.min = function() {
                return this._root ? this.minNode(this._root).key : null;
              }),
              (t.prototype.max = function() {
                return this._root ? this.maxNode(this._root).key : null;
              }),
              (t.prototype.minNode = function(t) {
                if ((void 0 === t && (t = this._root), t))
                  for (; t.left; ) t = t.left;
                return t;
              }),
              (t.prototype.maxNode = function(t) {
                if ((void 0 === t && (t = this._root), t))
                  for (; t.right; ) t = t.right;
                return t;
              }),
              (t.prototype.at = function(t) {
                for (var e = this._root, r = !1, n = 0, i = []; !r; )
                  if (e) i.push(e), (e = e.left);
                  else if (i.length > 0) {
                    if (((e = i.pop()), n === t)) return e;
                    n++, (e = e.right);
                  } else r = !0;
                return null;
              }),
              (t.prototype.next = function(t) {
                var e = this._root,
                  r = null;
                if (t.right) {
                  for (r = t.right; r.left; ) r = r.left;
                  return r;
                }
                for (var n = this._comparator; e; ) {
                  var i = n(t.key, e.key);
                  if (0 === i) break;
                  i < 0 ? ((r = e), (e = e.left)) : (e = e.right);
                }
                return r;
              }),
              (t.prototype.prev = function(t) {
                var e = this._root,
                  r = null;
                if (null !== t.left) {
                  for (r = t.left; r.right; ) r = r.right;
                  return r;
                }
                for (var n = this._comparator; e; ) {
                  var i = n(t.key, e.key);
                  if (0 === i) break;
                  i < 0 ? (e = e.left) : ((r = e), (e = e.right));
                }
                return r;
              }),
              (t.prototype.clear = function() {
                return (this._root = null), (this._size = 0), this;
              }),
              (t.prototype.toList = function() {
                return (function(t) {
                  for (
                    var e = t, r = [], i = !1, o = new n(null, null), s = o;
                    !i;

                  )
                    e
                      ? (r.push(e), (e = e.left))
                      : r.length > 0
                      ? (e = (e = s = s.next = r.pop()).right)
                      : (i = !0);
                  return (s.next = null), o.next;
                })(this._root);
              }),
              (t.prototype.load = function(t, e, r) {
                void 0 === e && (e = []), void 0 === r && (r = !1);
                var i = t.length,
                  o = this._comparator;
                if ((r && p(t, e, 0, i - 1, o), null === this._root))
                  (this._root = h(t, e, 0, i)), (this._size = i);
                else {
                  var s = (function(t, e, r) {
                    for (
                      var i = new n(null, null), o = i, s = t, a = e;
                      null !== s && null !== a;

                    )
                      r(s.key, a.key) < 0
                        ? ((o.next = s), (s = s.next))
                        : ((o.next = a), (a = a.next)),
                        (o = o.next);
                    return (
                      null !== s ? (o.next = s) : null !== a && (o.next = a),
                      i.next
                    );
                  })(
                    this.toList(),
                    (function(t, e) {
                      for (
                        var r = new n(null, null), i = r, o = 0;
                        o < t.length;
                        o++
                      )
                        i = i.next = new n(t[o], e[o]);
                      return (i.next = null), r.next;
                    })(t, e),
                    o
                  );
                  (i = this._size + i), (this._root = c({ head: s }, 0, i));
                }
                return this;
              }),
              (t.prototype.isEmpty = function() {
                return null === this._root;
              }),
              Object.defineProperty(t.prototype, "size", {
                get: function() {
                  return this._size;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "root", {
                get: function() {
                  return this._root;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.toString = function(t) {
                void 0 === t &&
                  (t = function(t) {
                    return String(t.key);
                  });
                var e = [];
                return (
                  l(
                    this._root,
                    "",
                    !0,
                    function(t) {
                      return e.push(t);
                    },
                    t
                  ),
                  e.join("")
                );
              }),
              (t.prototype.update = function(t, e, r) {
                var n = this._comparator,
                  i = a(t, this._root, n),
                  l = i.left,
                  u = i.right;
                n(t, e) < 0 ? (u = s(e, r, u, n)) : (l = s(e, r, l, n)),
                  (this._root = (function(t, e, r) {
                    return null === e
                      ? t
                      : (null === t || ((e = o(t.key, e, r)).left = t), e);
                  })(l, u, n));
              }),
              (t.prototype.split = function(t) {
                return a(t, this._root, this._comparator);
              }),
              t
            );
          })();
          function h(t, e, r, i) {
            var o = i - r;
            if (o > 0) {
              var s = r + Math.floor(o / 2),
                a = t[s],
                l = e[s],
                u = new n(a, l);
              return (u.left = h(t, e, r, s)), (u.right = h(t, e, s + 1, i)), u;
            }
            return null;
          }
          function c(t, e, r) {
            var n = r - e;
            if (n > 0) {
              var i = e + Math.floor(n / 2),
                o = c(t, e, i),
                s = t.head;
              return (
                (s.left = o),
                (t.head = t.head.next),
                (s.right = c(t, i + 1, r)),
                s
              );
            }
            return null;
          }
          function p(t, e, r, n, i) {
            if (!(r >= n)) {
              for (var o = t[(r + n) >> 1], s = r - 1, a = n + 1; ; ) {
                do {
                  s++;
                } while (i(t[s], o) < 0);
                do {
                  a--;
                } while (i(t[a], o) > 0);
                if (s >= a) break;
                var l = t[s];
                (t[s] = t[a]),
                  (t[a] = l),
                  (l = e[s]),
                  (e[s] = e[a]),
                  (e[a] = l);
              }
              p(t, e, r, a, i), p(t, e, a + 1, n, i);
            }
          }
          var f = function(t, e) {
              return (
                t.ll.x <= e.x && e.x <= t.ur.x && t.ll.y <= e.y && e.y <= t.ur.y
              );
            },
            d = function(t, e) {
              if (
                e.ur.x < t.ll.x ||
                t.ur.x < e.ll.x ||
                e.ur.y < t.ll.y ||
                t.ur.y < e.ll.y
              )
                return null;
              var r = t.ll.x < e.ll.x ? e.ll.x : t.ll.x,
                n = t.ur.x < e.ur.x ? t.ur.x : e.ur.x;
              return {
                ll: { x: r, y: t.ll.y < e.ll.y ? e.ll.y : t.ll.y },
                ur: { x: n, y: t.ur.y < e.ur.y ? t.ur.y : e.ur.y }
              };
            },
            y = Number.EPSILON;
          void 0 === y && (y = Math.pow(2, -52));
          var g = y * y,
            m = function(t, e) {
              if (-y < t && t < y && -y < e && e < y) return 0;
              var r = t - e;
              return r * r < g * t * e ? 0 : t < e ? -1 : 1;
            },
            v = (function() {
              function e() {
                t(this, e), this.reset();
              }
              return (
                r(e, [
                  {
                    key: "reset",
                    value: function() {
                      (this.xRounder = new _()), (this.yRounder = new _());
                    }
                  },
                  {
                    key: "round",
                    value: function(t, e) {
                      return {
                        x: this.xRounder.round(t),
                        y: this.yRounder.round(e)
                      };
                    }
                  }
                ]),
                e
              );
            })(),
            _ = (function() {
              function e() {
                t(this, e), (this.tree = new u()), this.round(0);
              }
              return (
                r(e, [
                  {
                    key: "round",
                    value: function(t) {
                      var e = this.tree.add(t),
                        r = this.tree.prev(e);
                      if (null !== r && 0 === m(e.key, r.key))
                        return this.tree.remove(t), r.key;
                      var n = this.tree.next(e);
                      return null !== n && 0 === m(e.key, n.key)
                        ? (this.tree.remove(t), n.key)
                        : t;
                    }
                  }
                ]),
                e
              );
            })(),
            x = new v(),
            b = function(t, e) {
              return t.x * e.y - t.y * e.x;
            },
            S = function(t, e) {
              return t.x * e.x + t.y * e.y;
            },
            I = function(t, e, r) {
              var n = { x: e.x - t.x, y: e.y - t.y },
                i = { x: r.x - t.x, y: r.y - t.y },
                o = b(n, i);
              return m(o, 0);
            },
            w = function(t) {
              return Math.sqrt(S(t, t));
            },
            N = function(t, e, r) {
              var n = { x: e.x - t.x, y: e.y - t.y },
                i = { x: r.x - t.x, y: r.y - t.y };
              return S(i, n) / w(i) / w(n);
            },
            C = function(t, e, r) {
              return 0 === e.y
                ? null
                : { x: t.x + (e.x / e.y) * (r - t.y), y: r };
            },
            E = function(t, e, r) {
              return 0 === e.x
                ? null
                : { x: r, y: t.y + (e.y / e.x) * (r - t.x) };
            },
            M = (function() {
              function e(r, n) {
                t(this, e),
                  void 0 === r.events
                    ? (r.events = [this])
                    : r.events.push(this),
                  (this.point = r),
                  (this.isLeft = n);
              }
              return (
                r(e, null, [
                  {
                    key: "compare",
                    value: function(t, r) {
                      var n = e.comparePoints(t.point, r.point);
                      return 0 !== n
                        ? n
                        : (t.point !== r.point && t.link(r),
                          t.isLeft !== r.isLeft
                            ? t.isLeft
                              ? 1
                              : -1
                            : O.compare(t.segment, r.segment));
                    }
                  },
                  {
                    key: "comparePoints",
                    value: function(t, e) {
                      return t.x < e.x
                        ? -1
                        : t.x > e.x
                        ? 1
                        : t.y < e.y
                        ? -1
                        : t.y > e.y
                        ? 1
                        : 0;
                    }
                  }
                ]),
                r(e, [
                  {
                    key: "link",
                    value: function(t) {
                      if (t.point === this.point)
                        throw new Error("Tried to link already linked events");
                      for (
                        var e = t.point.events, r = 0, n = e.length;
                        r < n;
                        r++
                      ) {
                        var i = e[r];
                        this.point.events.push(i), (i.point = this.point);
                      }
                      this.checkForConsuming();
                    }
                  },
                  {
                    key: "checkForConsuming",
                    value: function() {
                      for (
                        var t = this.point.events.length, e = 0;
                        e < t;
                        e++
                      ) {
                        var r = this.point.events[e];
                        if (void 0 === r.segment.consumedBy)
                          for (var n = e + 1; n < t; n++) {
                            var i = this.point.events[n];
                            void 0 === i.consumedBy &&
                              r.otherSE.point.events ===
                                i.otherSE.point.events &&
                              r.segment.consume(i.segment);
                          }
                      }
                    }
                  },
                  {
                    key: "getAvailableLinkedEvents",
                    value: function() {
                      for (
                        var t = [], e = 0, r = this.point.events.length;
                        e < r;
                        e++
                      ) {
                        var n = this.point.events[e];
                        n !== this &&
                          !n.segment.ringOut &&
                          n.segment.isInResult() &&
                          t.push(n);
                      }
                      return t;
                    }
                  },
                  {
                    key: "getLeftmostComparator",
                    value: function(t) {
                      var e = this,
                        r = new Map(),
                        n = function(n) {
                          var i,
                            o,
                            s,
                            a,
                            l,
                            u = n.otherSE;
                          r.set(n, {
                            sine:
                              ((i = e.point),
                              (o = t.point),
                              (s = u.point),
                              (a = { x: o.x - i.x, y: o.y - i.y }),
                              (l = { x: s.x - i.x, y: s.y - i.y }),
                              b(l, a) / w(l) / w(a)),
                            cosine: N(e.point, t.point, u.point)
                          });
                        };
                      return function(t, e) {
                        r.has(t) || n(t), r.has(e) || n(e);
                        var i = r.get(t),
                          o = i.sine,
                          s = i.cosine,
                          a = r.get(e),
                          l = a.sine,
                          u = a.cosine;
                        return o >= 0 && l >= 0
                          ? s < u
                            ? 1
                            : s > u
                            ? -1
                            : 0
                          : o < 0 && l < 0
                          ? s < u
                            ? -1
                            : s > u
                            ? 1
                            : 0
                          : l < o
                          ? -1
                          : l > o
                          ? 1
                          : 0;
                      };
                    }
                  }
                ]),
                e
              );
            })(),
            P = 0,
            O = (function() {
              function e(r, n, i, o) {
                t(this, e),
                  (this.id = ++P),
                  (this.leftSE = r),
                  (r.segment = this),
                  (r.otherSE = n),
                  (this.rightSE = n),
                  (n.segment = this),
                  (n.otherSE = r),
                  (this.rings = i),
                  (this.windings = o);
              }
              return (
                r(e, null, [
                  {
                    key: "compare",
                    value: function(t, e) {
                      var r = t.leftSE.point.x,
                        n = e.leftSE.point.x,
                        i = t.rightSE.point.x,
                        o = e.rightSE.point.x;
                      if (o < r) return 1;
                      if (i < n) return -1;
                      var s = t.leftSE.point.y,
                        a = e.leftSE.point.y,
                        l = t.rightSE.point.y,
                        u = e.rightSE.point.y;
                      if (r < n) {
                        if (a < s && a < l) return 1;
                        if (a > s && a > l) return -1;
                        var h = t.comparePoint(e.leftSE.point);
                        if (h < 0) return 1;
                        if (h > 0) return -1;
                        var c = e.comparePoint(t.rightSE.point);
                        return 0 !== c ? c : -1;
                      }
                      if (r > n) {
                        if (s < a && s < u) return -1;
                        if (s > a && s > u) return 1;
                        var p = e.comparePoint(t.leftSE.point);
                        if (0 !== p) return p;
                        var f = t.comparePoint(e.rightSE.point);
                        return f < 0 ? 1 : f > 0 ? -1 : 1;
                      }
                      if (s < a) return -1;
                      if (s > a) return 1;
                      if (i < o) {
                        var d = e.comparePoint(t.rightSE.point);
                        if (0 !== d) return d;
                      }
                      if (i > o) {
                        var y = t.comparePoint(e.rightSE.point);
                        if (y < 0) return 1;
                        if (y > 0) return -1;
                      }
                      if (i !== o) {
                        var g = l - s,
                          m = i - r,
                          v = u - a,
                          _ = o - n;
                        if (g > m && v < _) return 1;
                        if (g < m && v > _) return -1;
                      }
                      return i > o
                        ? 1
                        : i < o || l < u
                        ? -1
                        : l > u
                        ? 1
                        : t.id < e.id
                        ? -1
                        : t.id > e.id
                        ? 1
                        : 0;
                    }
                  }
                ]),
                r(
                  e,
                  [
                    {
                      key: "replaceRightSE",
                      value: function(t) {
                        (this.rightSE = t),
                          (this.rightSE.segment = this),
                          (this.rightSE.otherSE = this.leftSE),
                          (this.leftSE.otherSE = this.rightSE);
                      }
                    },
                    {
                      key: "bbox",
                      value: function() {
                        var t = this.leftSE.point.y,
                          e = this.rightSE.point.y;
                        return {
                          ll: { x: this.leftSE.point.x, y: t < e ? t : e },
                          ur: { x: this.rightSE.point.x, y: t > e ? t : e }
                        };
                      }
                    },
                    {
                      key: "vector",
                      value: function() {
                        return {
                          x: this.rightSE.point.x - this.leftSE.point.x,
                          y: this.rightSE.point.y - this.leftSE.point.y
                        };
                      }
                    },
                    {
                      key: "isAnEndpoint",
                      value: function(t) {
                        return (
                          (t.x === this.leftSE.point.x &&
                            t.y === this.leftSE.point.y) ||
                          (t.x === this.rightSE.point.x &&
                            t.y === this.rightSE.point.y)
                        );
                      }
                    },
                    {
                      key: "comparePoint",
                      value: function(t) {
                        if (this.isAnEndpoint(t)) return 0;
                        var e = this.leftSE.point,
                          r = this.rightSE.point,
                          n = this.vector();
                        if (e.x === r.x)
                          return t.x === e.x ? 0 : t.x < e.x ? 1 : -1;
                        var i = (t.y - e.y) / n.y,
                          o = e.x + i * n.x;
                        if (t.x === o) return 0;
                        var s = (t.x - e.x) / n.x,
                          a = e.y + s * n.y;
                        return t.y === a ? 0 : t.y < a ? -1 : 1;
                      }
                    },
                    {
                      key: "getIntersection",
                      value: function(t) {
                        var e = this.bbox(),
                          r = t.bbox(),
                          n = d(e, r);
                        if (null === n) return null;
                        var i = this.leftSE.point,
                          o = this.rightSE.point,
                          s = t.leftSE.point,
                          a = t.rightSE.point,
                          l = f(e, s) && 0 === this.comparePoint(s),
                          u = f(r, i) && 0 === t.comparePoint(i),
                          h = f(e, a) && 0 === this.comparePoint(a),
                          c = f(r, o) && 0 === t.comparePoint(o);
                        if (u && l) return c && !h ? o : !c && h ? a : null;
                        if (u)
                          return h && i.x === a.x && i.y === a.y ? null : i;
                        if (l)
                          return c && o.x === s.x && o.y === s.y ? null : s;
                        if (c && h) return null;
                        if (c) return o;
                        if (h) return a;
                        var p = (function(t, e, r, n) {
                          if (0 === e.x) return E(r, n, t.x);
                          if (0 === n.x) return E(t, e, r.x);
                          if (0 === e.y) return C(r, n, t.y);
                          if (0 === n.y) return C(t, e, r.y);
                          var i = b(e, n);
                          if (0 == i) return null;
                          var o = { x: r.x - t.x, y: r.y - t.y },
                            s = b(o, e) / i,
                            a = b(o, n) / i;
                          return {
                            x: (t.x + a * e.x + (r.x + s * n.x)) / 2,
                            y: (t.y + a * e.y + (r.y + s * n.y)) / 2
                          };
                        })(i, this.vector(), s, t.vector());
                        return null === p
                          ? null
                          : f(n, p)
                          ? x.round(p.x, p.y)
                          : null;
                      }
                    },
                    {
                      key: "split",
                      value: function(t) {
                        var r = [],
                          n = void 0 !== t.events,
                          i = new M(t, !0),
                          o = new M(t, !1),
                          s = this.rightSE;
                        this.replaceRightSE(o), r.push(o), r.push(i);
                        var a = new e(
                          i,
                          s,
                          this.rings.slice(),
                          this.windings.slice()
                        );
                        return (
                          M.comparePoints(a.leftSE.point, a.rightSE.point) >
                            0 && a.swapEvents(),
                          M.comparePoints(
                            this.leftSE.point,
                            this.rightSE.point
                          ) > 0 && this.swapEvents(),
                          n && (i.checkForConsuming(), o.checkForConsuming()),
                          r
                        );
                      }
                    },
                    {
                      key: "swapEvents",
                      value: function() {
                        var t = this.rightSE;
                        (this.rightSE = this.leftSE),
                          (this.leftSE = t),
                          (this.leftSE.isLeft = !0),
                          (this.rightSE.isLeft = !1);
                        for (var e = 0, r = this.windings.length; e < r; e++)
                          this.windings[e] *= -1;
                      }
                    },
                    {
                      key: "consume",
                      value: function(t) {
                        for (var r = this, n = t; r.consumedBy; )
                          r = r.consumedBy;
                        for (; n.consumedBy; ) n = n.consumedBy;
                        var i = e.compare(r, n);
                        if (0 !== i) {
                          if (i > 0) {
                            var o = r;
                            (r = n), (n = o);
                          }
                          if (r.prev === n) {
                            var s = r;
                            (r = n), (n = s);
                          }
                          for (var a = 0, l = n.rings.length; a < l; a++) {
                            var u = n.rings[a],
                              h = n.windings[a],
                              c = r.rings.indexOf(u);
                            -1 === c
                              ? (r.rings.push(u), r.windings.push(h))
                              : (r.windings[c] += h);
                          }
                          (n.rings = null),
                            (n.windings = null),
                            (n.consumedBy = r),
                            (n.leftSE.consumedBy = r.leftSE),
                            (n.rightSE.consumedBy = r.rightSE);
                        }
                      }
                    },
                    {
                      key: "prevInResult",
                      value: function() {
                        return (
                          void 0 !== this._prevInResult ||
                            (this.prev
                              ? this.prev.isInResult()
                                ? (this._prevInResult = this.prev)
                                : (this._prevInResult = this.prev.prevInResult())
                              : (this._prevInResult = null)),
                          this._prevInResult
                        );
                      }
                    },
                    {
                      key: "beforeState",
                      value: function() {
                        if (void 0 !== this._beforeState)
                          return this._beforeState;
                        if (this.prev) {
                          var t = this.prev.consumedBy || this.prev;
                          this._beforeState = t.afterState();
                        } else
                          this._beforeState = {
                            rings: [],
                            windings: [],
                            multiPolys: []
                          };
                        return this._beforeState;
                      }
                    },
                    {
                      key: "afterState",
                      value: function() {
                        if (void 0 !== this._afterState)
                          return this._afterState;
                        var t = this.beforeState();
                        this._afterState = {
                          rings: t.rings.slice(0),
                          windings: t.windings.slice(0),
                          multiPolys: []
                        };
                        for (
                          var e = this._afterState.rings,
                            r = this._afterState.windings,
                            n = this._afterState.multiPolys,
                            i = 0,
                            o = this.rings.length;
                          i < o;
                          i++
                        ) {
                          var s = this.rings[i],
                            a = this.windings[i],
                            l = e.indexOf(s);
                          -1 === l ? (e.push(s), r.push(a)) : (r[l] += a);
                        }
                        for (
                          var u = [], h = [], c = 0, p = e.length;
                          c < p;
                          c++
                        )
                          if (0 !== r[c]) {
                            var f = e[c],
                              d = f.poly;
                            if (-1 === h.indexOf(d))
                              if (f.isExterior) u.push(d);
                              else {
                                -1 === h.indexOf(d) && h.push(d);
                                var y = u.indexOf(f.poly);
                                -1 !== y && u.splice(y, 1);
                              }
                          }
                        for (var g = 0, m = u.length; g < m; g++) {
                          var v = u[g].multiPoly;
                          -1 === n.indexOf(v) && n.push(v);
                        }
                        return this._afterState;
                      }
                    },
                    {
                      key: "isInResult",
                      value: function() {
                        if (this.consumedBy) return !1;
                        if (void 0 !== this._isInResult)
                          return this._isInResult;
                        var t = this.beforeState().multiPolys,
                          e = this.afterState().multiPolys;
                        switch (k.type) {
                          case "union":
                            var r = 0 === t.length,
                              n = 0 === e.length;
                            this._isInResult = r !== n;
                            break;
                          case "intersection":
                            var i, o;
                            t.length < e.length
                              ? ((i = t.length), (o = e.length))
                              : ((i = e.length), (o = t.length)),
                              (this._isInResult =
                                o === k.numMultiPolys && i < o);
                            break;
                          case "xor":
                            var s = Math.abs(t.length - e.length);
                            this._isInResult = s % 2 == 1;
                            break;
                          case "difference":
                            var a = function(t) {
                              return 1 === t.length && t[0].isSubject;
                            };
                            this._isInResult = a(t) !== a(e);
                            break;
                          default:
                            throw new Error(
                              "Unrecognized operation type found ".concat(
                                k.type
                              )
                            );
                        }
                        return this._isInResult;
                      }
                    }
                  ],
                  [
                    {
                      key: "fromRing",
                      value: function(t, r, n) {
                        var i,
                          o,
                          s,
                          a = M.comparePoints(t, r);
                        if (a < 0) (i = t), (o = r), (s = 1);
                        else {
                          if (!(a > 0))
                            throw new Error(
                              "Tried to create degenerate segment at ["
                                .concat(t.x, ", ")
                                .concat(t.y, "]")
                            );
                          (i = r), (o = t), (s = -1);
                        }
                        return new e(new M(i, !0), new M(o, !1), [n], [s]);
                      }
                    }
                  ]
                ),
                e
              );
            })(),
            L = (function() {
              function e(r, n, i) {
                if ((t(this, e), !Array.isArray(r) || 0 === r.length))
                  throw new Error(
                    "Input geometry is not a valid Polygon or MultiPolygon"
                  );
                if (
                  ((this.poly = n),
                  (this.isExterior = i),
                  (this.segments = []),
                  "number" != typeof r[0][0] || "number" != typeof r[0][1])
                )
                  throw new Error(
                    "Input geometry is not a valid Polygon or MultiPolygon"
                  );
                var o = x.round(r[0][0], r[0][1]);
                this.bbox = { ll: { x: o.x, y: o.y }, ur: { x: o.x, y: o.y } };
                for (var s = o, a = 1, l = r.length; a < l; a++) {
                  if ("number" != typeof r[a][0] || "number" != typeof r[a][1])
                    throw new Error(
                      "Input geometry is not a valid Polygon or MultiPolygon"
                    );
                  var u = x.round(r[a][0], r[a][1]);
                  (u.x === s.x && u.y === s.y) ||
                    (this.segments.push(O.fromRing(s, u, this)),
                    u.x < this.bbox.ll.x && (this.bbox.ll.x = u.x),
                    u.y < this.bbox.ll.y && (this.bbox.ll.y = u.y),
                    u.x > this.bbox.ur.x && (this.bbox.ur.x = u.x),
                    u.y > this.bbox.ur.y && (this.bbox.ur.y = u.y),
                    (s = u));
                }
                (o.x === s.x && o.y === s.y) ||
                  this.segments.push(O.fromRing(s, o, this));
              }
              return (
                r(e, [
                  {
                    key: "getSweepEvents",
                    value: function() {
                      for (
                        var t = [], e = 0, r = this.segments.length;
                        e < r;
                        e++
                      ) {
                        var n = this.segments[e];
                        t.push(n.leftSE), t.push(n.rightSE);
                      }
                      return t;
                    }
                  }
                ]),
                e
              );
            })(),
            T = (function() {
              function e(r, n) {
                if ((t(this, e), !Array.isArray(r)))
                  throw new Error(
                    "Input geometry is not a valid Polygon or MultiPolygon"
                  );
                (this.exteriorRing = new L(r[0], this, !0)),
                  (this.bbox = {
                    ll: {
                      x: this.exteriorRing.bbox.ll.x,
                      y: this.exteriorRing.bbox.ll.y
                    },
                    ur: {
                      x: this.exteriorRing.bbox.ur.x,
                      y: this.exteriorRing.bbox.ur.y
                    }
                  }),
                  (this.interiorRings = []);
                for (var i = 1, o = r.length; i < o; i++) {
                  var s = new L(r[i], this, !1);
                  s.bbox.ll.x < this.bbox.ll.x &&
                    (this.bbox.ll.x = s.bbox.ll.x),
                    s.bbox.ll.y < this.bbox.ll.y &&
                      (this.bbox.ll.y = s.bbox.ll.y),
                    s.bbox.ur.x > this.bbox.ur.x &&
                      (this.bbox.ur.x = s.bbox.ur.x),
                    s.bbox.ur.y > this.bbox.ur.y &&
                      (this.bbox.ur.y = s.bbox.ur.y),
                    this.interiorRings.push(s);
                }
                this.multiPoly = n;
              }
              return (
                r(e, [
                  {
                    key: "getSweepEvents",
                    value: function() {
                      for (
                        var t = this.exteriorRing.getSweepEvents(),
                          e = 0,
                          r = this.interiorRings.length;
                        e < r;
                        e++
                      )
                        for (
                          var n = this.interiorRings[e].getSweepEvents(),
                            i = 0,
                            o = n.length;
                          i < o;
                          i++
                        )
                          t.push(n[i]);
                      return t;
                    }
                  }
                ]),
                e
              );
            })(),
            A = (function() {
              function e(r, n) {
                if ((t(this, e), !Array.isArray(r)))
                  throw new Error(
                    "Input geometry is not a valid Polygon or MultiPolygon"
                  );
                try {
                  "number" == typeof r[0][0][0] && (r = [r]);
                } catch (t) {}
                (this.polys = []),
                  (this.bbox = {
                    ll: {
                      x: Number.POSITIVE_INFINITY,
                      y: Number.POSITIVE_INFINITY
                    },
                    ur: {
                      x: Number.NEGATIVE_INFINITY,
                      y: Number.NEGATIVE_INFINITY
                    }
                  });
                for (var i = 0, o = r.length; i < o; i++) {
                  var s = new T(r[i], this);
                  s.bbox.ll.x < this.bbox.ll.x &&
                    (this.bbox.ll.x = s.bbox.ll.x),
                    s.bbox.ll.y < this.bbox.ll.y &&
                      (this.bbox.ll.y = s.bbox.ll.y),
                    s.bbox.ur.x > this.bbox.ur.x &&
                      (this.bbox.ur.x = s.bbox.ur.x),
                    s.bbox.ur.y > this.bbox.ur.y &&
                      (this.bbox.ur.y = s.bbox.ur.y),
                    this.polys.push(s);
                }
                this.isSubject = n;
              }
              return (
                r(e, [
                  {
                    key: "getSweepEvents",
                    value: function() {
                      for (var t = [], e = 0, r = this.polys.length; e < r; e++)
                        for (
                          var n = this.polys[e].getSweepEvents(),
                            i = 0,
                            o = n.length;
                          i < o;
                          i++
                        )
                          t.push(n[i]);
                      return t;
                    }
                  }
                ]),
                e
              );
            })(),
            R = (function() {
              function e(r) {
                t(this, e), (this.events = r);
                for (var n = 0, i = r.length; n < i; n++)
                  r[n].segment.ringOut = this;
                this.poly = null;
              }
              return (
                r(e, null, [
                  {
                    key: "factory",
                    value: function(t) {
                      for (var r = [], n = 0, i = t.length; n < i; n++) {
                        var o = t[n];
                        if (o.isInResult() && !o.ringOut) {
                          for (
                            var s = null,
                              a = o.leftSE,
                              l = o.rightSE,
                              u = [a],
                              h = a.point,
                              c = [];
                            (s = a), (a = l), u.push(a), a.point !== h;

                          )
                            for (;;) {
                              var p = a.getAvailableLinkedEvents();
                              if (0 === p.length) {
                                var f = u[0].point,
                                  d = u[u.length - 1].point;
                                throw new Error(
                                  "Unable to complete output ring starting at [".concat(
                                    f.x,
                                    ","
                                  ) +
                                    " ".concat(
                                      f.y,
                                      "]. Last matching segment found ends at"
                                    ) +
                                    " [".concat(d.x, ", ").concat(d.y, "].")
                                );
                              }
                              if (1 === p.length) {
                                l = p[0].otherSE;
                                break;
                              }
                              for (
                                var y = null, g = 0, m = c.length;
                                g < m;
                                g++
                              )
                                if (c[g].point === a.point) {
                                  y = g;
                                  break;
                                }
                              if (null === y) {
                                c.push({ index: u.length, point: a.point });
                                var v = a.getLeftmostComparator(s);
                                l = p.sort(v)[0].otherSE;
                                break;
                              }
                              var _ = c.splice(y)[0],
                                x = u.splice(_.index);
                              x.unshift(x[0].otherSE),
                                r.push(new e(x.reverse()));
                            }
                          r.push(new e(u));
                        }
                      }
                      return r;
                    }
                  }
                ]),
                r(e, [
                  {
                    key: "getGeom",
                    value: function() {
                      for (
                        var t = this.events[0].point,
                          e = [t],
                          r = 1,
                          n = this.events.length - 1;
                        r < n;
                        r++
                      ) {
                        var i = this.events[r].point,
                          o = this.events[r + 1].point;
                        0 !== I(i, t, o) && (e.push(i), (t = i));
                      }
                      if (1 === e.length) return null;
                      var s = e[0],
                        a = e[1];
                      0 === I(s, t, a) && e.shift(), e.push(e[0]);
                      for (
                        var l = this.isExteriorRing() ? 1 : -1,
                          u = this.isExteriorRing() ? 0 : e.length - 1,
                          h = this.isExteriorRing() ? e.length : -1,
                          c = [],
                          p = u;
                        p != h;
                        p += l
                      )
                        c.push([e[p].x, e[p].y]);
                      return c;
                    }
                  },
                  {
                    key: "isExteriorRing",
                    value: function() {
                      if (void 0 === this._isExteriorRing) {
                        var t = this.enclosingRing();
                        this._isExteriorRing = !t || !t.isExteriorRing();
                      }
                      return this._isExteriorRing;
                    }
                  },
                  {
                    key: "enclosingRing",
                    value: function() {
                      return (
                        void 0 === this._enclosingRing &&
                          (this._enclosingRing = this._calcEnclosingRing()),
                        this._enclosingRing
                      );
                    }
                  },
                  {
                    key: "_calcEnclosingRing",
                    value: function() {
                      for (
                        var t = this.events[0], e = 1, r = this.events.length;
                        e < r;
                        e++
                      ) {
                        var n = this.events[e];
                        M.compare(t, n) > 0 && (t = n);
                      }
                      for (
                        var i = t.segment.prevInResult(),
                          o = i ? i.prevInResult() : null;
                        ;

                      ) {
                        if (!i) return null;
                        if (!o) return i.ringOut;
                        if (o.ringOut !== i.ringOut)
                          return o.ringOut.enclosingRing() !== i.ringOut
                            ? i.ringOut
                            : i.ringOut.enclosingRing();
                        (i = o.prevInResult()),
                          (o = i ? i.prevInResult() : null);
                      }
                    }
                  }
                ]),
                e
              );
            })(),
            F = (function() {
              function e(r) {
                t(this, e),
                  (this.exteriorRing = r),
                  (r.poly = this),
                  (this.interiorRings = []);
              }
              return (
                r(e, [
                  {
                    key: "addInterior",
                    value: function(t) {
                      this.interiorRings.push(t), (t.poly = this);
                    }
                  },
                  {
                    key: "getGeom",
                    value: function() {
                      var t = [this.exteriorRing.getGeom()];
                      if (null === t[0]) return null;
                      for (
                        var e = 0, r = this.interiorRings.length;
                        e < r;
                        e++
                      ) {
                        var n = this.interiorRings[e].getGeom();
                        null !== n && t.push(n);
                      }
                      return t;
                    }
                  }
                ]),
                e
              );
            })(),
            D = (function() {
              function e(r) {
                t(this, e),
                  (this.rings = r),
                  (this.polys = this._composePolys(r));
              }
              return (
                r(e, [
                  {
                    key: "getGeom",
                    value: function() {
                      for (
                        var t = [], e = 0, r = this.polys.length;
                        e < r;
                        e++
                      ) {
                        var n = this.polys[e].getGeom();
                        null !== n && t.push(n);
                      }
                      return t;
                    }
                  },
                  {
                    key: "_composePolys",
                    value: function(t) {
                      for (var e = [], r = 0, n = t.length; r < n; r++) {
                        var i = t[r];
                        if (!i.poly)
                          if (i.isExteriorRing()) e.push(new F(i));
                          else {
                            var o = i.enclosingRing();
                            o.poly || e.push(new F(o)), o.poly.addInterior(i);
                          }
                      }
                      return e;
                    }
                  }
                ]),
                e
              );
            })(),
            j = (function() {
              function e(r) {
                var n =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : O.compare;
                t(this, e),
                  (this.queue = r),
                  (this.tree = new u(n)),
                  (this.segments = []);
              }
              return (
                r(e, [
                  {
                    key: "process",
                    value: function(t) {
                      var e = t.segment,
                        r = [];
                      if (t.consumedBy)
                        return (
                          t.isLeft
                            ? this.queue.remove(t.otherSE)
                            : this.tree.remove(e),
                          r
                        );
                      var n = t.isLeft
                        ? this.tree.insert(e)
                        : this.tree.find(e);
                      if (!n)
                        throw new Error(
                          "Unable to find segment #".concat(e.id, " ") +
                            "["
                              .concat(e.leftSE.point.x, ", ")
                              .concat(e.leftSE.point.y, "] -> ") +
                            "["
                              .concat(e.rightSE.point.x, ", ")
                              .concat(e.rightSE.point.y, "] ") +
                            "in SweepLine tree. Please submit a bug report."
                        );
                      for (
                        var i = n, o = n, s = void 0, a = void 0;
                        void 0 === s;

                      )
                        null === (i = this.tree.prev(i))
                          ? (s = null)
                          : void 0 === i.key.consumedBy && (s = i.key);
                      for (; void 0 === a; )
                        null === (o = this.tree.next(o))
                          ? (a = null)
                          : void 0 === o.key.consumedBy && (a = o.key);
                      if (t.isLeft) {
                        var l = null;
                        if (s) {
                          var u = s.getIntersection(e);
                          if (
                            null !== u &&
                            (e.isAnEndpoint(u) || (l = u), !s.isAnEndpoint(u))
                          )
                            for (
                              var h = this._splitSafely(s, u),
                                c = 0,
                                p = h.length;
                              c < p;
                              c++
                            )
                              r.push(h[c]);
                        }
                        var f = null;
                        if (a) {
                          var d = a.getIntersection(e);
                          if (
                            null !== d &&
                            (e.isAnEndpoint(d) || (f = d), !a.isAnEndpoint(d))
                          )
                            for (
                              var y = this._splitSafely(a, d),
                                g = 0,
                                m = y.length;
                              g < m;
                              g++
                            )
                              r.push(y[g]);
                        }
                        if (null !== l || null !== f) {
                          var v;
                          (v =
                            null === l
                              ? f
                              : null === f || M.comparePoints(l, f) <= 0
                              ? l
                              : f),
                            this.queue.remove(e.rightSE),
                            r.push(e.rightSE);
                          for (
                            var _ = e.split(v), x = 0, b = _.length;
                            x < b;
                            x++
                          )
                            r.push(_[x]);
                        }
                        r.length > 0
                          ? (this.tree.remove(e), r.push(t))
                          : (this.segments.push(e), (e.prev = s));
                      } else {
                        if (s && a) {
                          var S = s.getIntersection(a);
                          if (null !== S) {
                            if (!s.isAnEndpoint(S))
                              for (
                                var I = this._splitSafely(s, S),
                                  w = 0,
                                  N = I.length;
                                w < N;
                                w++
                              )
                                r.push(I[w]);
                            if (!a.isAnEndpoint(S))
                              for (
                                var C = this._splitSafely(a, S),
                                  E = 0,
                                  P = C.length;
                                E < P;
                                E++
                              )
                                r.push(C[E]);
                          }
                        }
                        this.tree.remove(e);
                      }
                      return r;
                    }
                  },
                  {
                    key: "_splitSafely",
                    value: function(t, e) {
                      this.tree.remove(t);
                      var r = t.rightSE;
                      this.queue.remove(r);
                      var n = t.split(e);
                      return (
                        n.push(r),
                        void 0 === t.consumedBy && this.tree.insert(t),
                        n
                      );
                    }
                  }
                ]),
                e
              );
            })(),
            U =
              ("undefined" != typeof process &&
                process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE) ||
              1e6,
            G =
              ("undefined" != typeof process &&
                process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) ||
              1e6,
            B = (function() {
              function e() {
                t(this, e);
              }
              return (
                r(e, [
                  {
                    key: "run",
                    value: function(t, e, r) {
                      (k.type = t), x.reset();
                      for (
                        var n = [new A(e, !0)], i = 0, o = r.length;
                        i < o;
                        i++
                      )
                        n.push(new A(r[i], !1));
                      if (
                        ((k.numMultiPolys = n.length), "difference" === k.type)
                      )
                        for (var s = n[0], a = 1; a < n.length; )
                          null !== d(n[a].bbox, s.bbox) ? a++ : n.splice(a, 1);
                      if ("intersection" === k.type)
                        for (var l = 0, h = n.length; l < h; l++)
                          for (
                            var c = n[l], p = l + 1, f = n.length;
                            p < f;
                            p++
                          )
                            if (null === d(c.bbox, n[p].bbox)) return [];
                      for (
                        var y = new u(M.compare), g = 0, m = n.length;
                        g < m;
                        g++
                      )
                        for (
                          var v = n[g].getSweepEvents(), _ = 0, b = v.length;
                          _ < b;
                          _++
                        )
                          if ((y.insert(v[_]), y.size > U))
                            throw new Error(
                              "Infinite loop when putting segment endpoints in a priority queue (queue size too big). Please file a bug report."
                            );
                      for (var S = new j(y), I = y.size, w = y.pop(); w; ) {
                        var N = w.key;
                        if (y.size === I) {
                          var C = N.segment;
                          throw new Error(
                            "Unable to pop() ".concat(
                              N.isLeft ? "left" : "right",
                              " SweepEvent "
                            ) +
                              "["
                                .concat(N.point.x, ", ")
                                .concat(N.point.y, "] from segment #")
                                .concat(C.id, " ") +
                              "["
                                .concat(C.leftSE.point.x, ", ")
                                .concat(C.leftSE.point.y, "] -> ") +
                              "["
                                .concat(C.rightSE.point.x, ", ")
                                .concat(C.rightSE.point.y, "] from queue. ") +
                              "Please file a bug report."
                          );
                        }
                        if (y.size > U)
                          throw new Error(
                            "Infinite loop when passing sweep line over endpoints (queue size too big). Please file a bug report."
                          );
                        if (S.segments.length > G)
                          throw new Error(
                            "Infinite loop when passing sweep line over endpoints (too many sweep line segments). Please file a bug report."
                          );
                        for (
                          var E = S.process(N), P = 0, O = E.length;
                          P < O;
                          P++
                        ) {
                          var L = E[P];
                          void 0 === L.consumedBy && y.insert(L);
                        }
                        (I = y.size), (w = y.pop());
                      }
                      x.reset();
                      var T = R.factory(S.segments);
                      return new D(T).getGeom();
                    }
                  }
                ]),
                e
              );
            })(),
            k = new B();
          return {
            union: function(t) {
              for (
                var e = arguments.length,
                  r = new Array(e > 1 ? e - 1 : 0),
                  n = 1;
                n < e;
                n++
              )
                r[n - 1] = arguments[n];
              return k.run("union", t, r);
            },
            intersection: function(t) {
              for (
                var e = arguments.length,
                  r = new Array(e > 1 ? e - 1 : 0),
                  n = 1;
                n < e;
                n++
              )
                r[n - 1] = arguments[n];
              return k.run("intersection", t, r);
            },
            xor: function(t) {
              for (
                var e = arguments.length,
                  r = new Array(e > 1 ? e - 1 : 0),
                  n = 1;
                n < e;
                n++
              )
                r[n - 1] = arguments[n];
              return k.run("xor", t, r);
            },
            difference: function(t) {
              for (
                var e = arguments.length,
                  r = new Array(e > 1 ? e - 1 : 0),
                  n = 1;
                n < e;
                n++
              )
                r[n - 1] = arguments[n];
              return k.run("difference", t, r);
            }
          };
        })();
      },
      951: t => {
        "use strict";
        var e = String.prototype.replace,
          r = /%20/g,
          n = "RFC3986";
        t.exports = {
          default: n,
          formatters: {
            RFC1738: function(t) {
              return e.call(t, r, "+");
            },
            RFC3986: function(t) {
              return String(t);
            }
          },
          RFC1738: "RFC1738",
          RFC3986: n
        };
      },
      4857: (t, e, r) => {
        "use strict";
        var n = r(6322),
          i = r(1025),
          o = r(951);
        t.exports = { formats: o, parse: i, stringify: n };
      },
      1025: (t, e, r) => {
        "use strict";
        var n = r(4425),
          i = Object.prototype.hasOwnProperty,
          o = Array.isArray,
          s = {
            allowDots: !1,
            allowPrototypes: !1,
            allowSparse: !1,
            arrayLimit: 20,
            charset: "utf-8",
            charsetSentinel: !1,
            comma: !1,
            decoder: n.decode,
            delimiter: "&",
            depth: 5,
            ignoreQueryPrefix: !1,
            interpretNumericEntities: !1,
            parameterLimit: 1e3,
            parseArrays: !0,
            plainObjects: !1,
            strictNullHandling: !1
          },
          a = function(t) {
            return t.replace(/&#(\d+);/g, function(t, e) {
              return String.fromCharCode(parseInt(e, 10));
            });
          },
          l = function(t, e) {
            return t && "string" == typeof t && e.comma && t.indexOf(",") > -1
              ? t.split(",")
              : t;
          },
          u = function(t, e, r, n) {
            if (t) {
              var o = r.allowDots ? t.replace(/\.([^.[]+)/g, "[$1]") : t,
                s = /(\[[^[\]]*])/g,
                a = r.depth > 0 && /(\[[^[\]]*])/.exec(o),
                u = a ? o.slice(0, a.index) : o,
                h = [];
              if (u) {
                if (
                  !r.plainObjects &&
                  i.call(Object.prototype, u) &&
                  !r.allowPrototypes
                )
                  return;
                h.push(u);
              }
              for (
                var c = 0;
                r.depth > 0 && null !== (a = s.exec(o)) && c < r.depth;

              ) {
                if (
                  ((c += 1),
                  !r.plainObjects &&
                    i.call(Object.prototype, a[1].slice(1, -1)) &&
                    !r.allowPrototypes)
                )
                  return;
                h.push(a[1]);
              }
              return (
                a && h.push("[" + o.slice(a.index) + "]"),
                (function(t, e, r, n) {
                  for (var i = n ? e : l(e, r), o = t.length - 1; o >= 0; --o) {
                    var s,
                      a = t[o];
                    if ("[]" === a && r.parseArrays) s = [].concat(i);
                    else {
                      s = r.plainObjects ? Object.create(null) : {};
                      var u =
                          "[" === a.charAt(0) && "]" === a.charAt(a.length - 1)
                            ? a.slice(1, -1)
                            : a,
                        h = parseInt(u, 10);
                      r.parseArrays || "" !== u
                        ? !isNaN(h) &&
                          a !== u &&
                          String(h) === u &&
                          h >= 0 &&
                          r.parseArrays &&
                          h <= r.arrayLimit
                          ? ((s = [])[h] = i)
                          : (s[u] = i)
                        : (s = { 0: i });
                    }
                    i = s;
                  }
                  return i;
                })(h, e, r, n)
              );
            }
          };
        t.exports = function(t, e) {
          var r = (function(t) {
            if (!t) return s;
            if (
              null !== t.decoder &&
              void 0 !== t.decoder &&
              "function" != typeof t.decoder
            )
              throw new TypeError("Decoder has to be a function.");
            if (
              void 0 !== t.charset &&
              "utf-8" !== t.charset &&
              "iso-8859-1" !== t.charset
            )
              throw new TypeError(
                "The charset option must be either utf-8, iso-8859-1, or undefined"
              );
            var e = void 0 === t.charset ? s.charset : t.charset;
            return {
              allowDots: void 0 === t.allowDots ? s.allowDots : !!t.allowDots,
              allowPrototypes:
                "boolean" == typeof t.allowPrototypes
                  ? t.allowPrototypes
                  : s.allowPrototypes,
              allowSparse:
                "boolean" == typeof t.allowSparse
                  ? t.allowSparse
                  : s.allowSparse,
              arrayLimit:
                "number" == typeof t.arrayLimit ? t.arrayLimit : s.arrayLimit,
              charset: e,
              charsetSentinel:
                "boolean" == typeof t.charsetSentinel
                  ? t.charsetSentinel
                  : s.charsetSentinel,
              comma: "boolean" == typeof t.comma ? t.comma : s.comma,
              decoder: "function" == typeof t.decoder ? t.decoder : s.decoder,
              delimiter:
                "string" == typeof t.delimiter || n.isRegExp(t.delimiter)
                  ? t.delimiter
                  : s.delimiter,
              depth:
                "number" == typeof t.depth || !1 === t.depth
                  ? +t.depth
                  : s.depth,
              ignoreQueryPrefix: !0 === t.ignoreQueryPrefix,
              interpretNumericEntities:
                "boolean" == typeof t.interpretNumericEntities
                  ? t.interpretNumericEntities
                  : s.interpretNumericEntities,
              parameterLimit:
                "number" == typeof t.parameterLimit
                  ? t.parameterLimit
                  : s.parameterLimit,
              parseArrays: !1 !== t.parseArrays,
              plainObjects:
                "boolean" == typeof t.plainObjects
                  ? t.plainObjects
                  : s.plainObjects,
              strictNullHandling:
                "boolean" == typeof t.strictNullHandling
                  ? t.strictNullHandling
                  : s.strictNullHandling
            };
          })(e);
          if ("" === t || null == t)
            return r.plainObjects ? Object.create(null) : {};
          for (
            var h =
                "string" == typeof t
                  ? (function(t, e) {
                      var r,
                        u = {},
                        h = e.ignoreQueryPrefix ? t.replace(/^\?/, "") : t,
                        c =
                          e.parameterLimit === 1 / 0
                            ? void 0
                            : e.parameterLimit,
                        p = h.split(e.delimiter, c),
                        f = -1,
                        d = e.charset;
                      if (e.charsetSentinel)
                        for (r = 0; r < p.length; ++r)
                          0 === p[r].indexOf("utf8=") &&
                            ("utf8=%E2%9C%93" === p[r]
                              ? (d = "utf-8")
                              : "utf8=%26%2310003%3B" === p[r] &&
                                (d = "iso-8859-1"),
                            (f = r),
                            (r = p.length));
                      for (r = 0; r < p.length; ++r)
                        if (r !== f) {
                          var y,
                            g,
                            m = p[r],
                            v = m.indexOf("]="),
                            _ = -1 === v ? m.indexOf("=") : v + 1;
                          -1 === _
                            ? ((y = e.decoder(m, s.decoder, d, "key")),
                              (g = e.strictNullHandling ? null : ""))
                            : ((y = e.decoder(
                                m.slice(0, _),
                                s.decoder,
                                d,
                                "key"
                              )),
                              (g = n.maybeMap(l(m.slice(_ + 1), e), function(
                                t
                              ) {
                                return e.decoder(t, s.decoder, d, "value");
                              }))),
                            g &&
                              e.interpretNumericEntities &&
                              "iso-8859-1" === d &&
                              (g = a(g)),
                            m.indexOf("[]=") > -1 && (g = o(g) ? [g] : g),
                            i.call(u, y)
                              ? (u[y] = n.combine(u[y], g))
                              : (u[y] = g);
                        }
                      return u;
                    })(t, r)
                  : t,
              c = r.plainObjects ? Object.create(null) : {},
              p = Object.keys(h),
              f = 0;
            f < p.length;
            ++f
          ) {
            var d = p[f],
              y = u(d, h[d], r, "string" == typeof t);
            c = n.merge(c, y, r);
          }
          return !0 === r.allowSparse ? c : n.compact(c);
        };
      },
      6322: (t, e, r) => {
        "use strict";
        var n = r(2624),
          i = r(4425),
          o = r(951),
          s = Object.prototype.hasOwnProperty,
          a = {
            brackets: function(t) {
              return t + "[]";
            },
            comma: "comma",
            indices: function(t, e) {
              return t + "[" + e + "]";
            },
            repeat: function(t) {
              return t;
            }
          },
          l = Array.isArray,
          u = Array.prototype.push,
          h = function(t, e) {
            u.apply(t, l(e) ? e : [e]);
          },
          c = Date.prototype.toISOString,
          p = o.default,
          f = {
            addQueryPrefix: !1,
            allowDots: !1,
            charset: "utf-8",
            charsetSentinel: !1,
            delimiter: "&",
            encode: !0,
            encoder: i.encode,
            encodeValuesOnly: !1,
            format: p,
            formatter: o.formatters[p],
            indices: !1,
            serializeDate: function(t) {
              return c.call(t);
            },
            skipNulls: !1,
            strictNullHandling: !1
          },
          d = function t(e, r, o, s, a, u, c, p, d, y, g, m, v, _, x) {
            var b,
              S = e;
            if (x.has(e)) throw new RangeError("Cyclic object value");
            if (
              ("function" == typeof c
                ? (S = c(r, S))
                : S instanceof Date
                ? (S = y(S))
                : "comma" === o &&
                  l(S) &&
                  (S = i.maybeMap(S, function(t) {
                    return t instanceof Date ? y(t) : t;
                  })),
              null === S)
            ) {
              if (s) return u && !v ? u(r, f.encoder, _, "key", g) : r;
              S = "";
            }
            if (
              "string" == typeof (b = S) ||
              "number" == typeof b ||
              "boolean" == typeof b ||
              "symbol" == typeof b ||
              "bigint" == typeof b ||
              i.isBuffer(S)
            )
              return u
                ? [
                    m(v ? r : u(r, f.encoder, _, "key", g)) +
                      "=" +
                      m(u(S, f.encoder, _, "value", g))
                  ]
                : [m(r) + "=" + m(String(S))];
            var I,
              w = [];
            if (void 0 === S) return w;
            if ("comma" === o && l(S))
              I = [{ value: S.length > 0 ? S.join(",") || null : void 0 }];
            else if (l(c)) I = c;
            else {
              var N = Object.keys(S);
              I = p ? N.sort(p) : N;
            }
            for (var C = 0; C < I.length; ++C) {
              var E = I[C],
                M = "object" == typeof E && void 0 !== E.value ? E.value : S[E];
              if (!a || null !== M) {
                var P = l(S)
                  ? "function" == typeof o
                    ? o(r, E)
                    : r
                  : r + (d ? "." + E : "[" + E + "]");
                x.set(e, !0);
                var O = n();
                h(w, t(M, P, o, s, a, u, c, p, d, y, g, m, v, _, O));
              }
            }
            return w;
          };
        t.exports = function(t, e) {
          var r,
            i = t,
            u = (function(t) {
              if (!t) return f;
              if (
                null !== t.encoder &&
                void 0 !== t.encoder &&
                "function" != typeof t.encoder
              )
                throw new TypeError("Encoder has to be a function.");
              var e = t.charset || f.charset;
              if (
                void 0 !== t.charset &&
                "utf-8" !== t.charset &&
                "iso-8859-1" !== t.charset
              )
                throw new TypeError(
                  "The charset option must be either utf-8, iso-8859-1, or undefined"
                );
              var r = o.default;
              if (void 0 !== t.format) {
                if (!s.call(o.formatters, t.format))
                  throw new TypeError("Unknown format option provided.");
                r = t.format;
              }
              var n = o.formatters[r],
                i = f.filter;
              return (
                ("function" == typeof t.filter || l(t.filter)) &&
                  (i = t.filter),
                {
                  addQueryPrefix:
                    "boolean" == typeof t.addQueryPrefix
                      ? t.addQueryPrefix
                      : f.addQueryPrefix,
                  allowDots:
                    void 0 === t.allowDots ? f.allowDots : !!t.allowDots,
                  charset: e,
                  charsetSentinel:
                    "boolean" == typeof t.charsetSentinel
                      ? t.charsetSentinel
                      : f.charsetSentinel,
                  delimiter: void 0 === t.delimiter ? f.delimiter : t.delimiter,
                  encode: "boolean" == typeof t.encode ? t.encode : f.encode,
                  encoder:
                    "function" == typeof t.encoder ? t.encoder : f.encoder,
                  encodeValuesOnly:
                    "boolean" == typeof t.encodeValuesOnly
                      ? t.encodeValuesOnly
                      : f.encodeValuesOnly,
                  filter: i,
                  format: r,
                  formatter: n,
                  serializeDate:
                    "function" == typeof t.serializeDate
                      ? t.serializeDate
                      : f.serializeDate,
                  skipNulls:
                    "boolean" == typeof t.skipNulls ? t.skipNulls : f.skipNulls,
                  sort: "function" == typeof t.sort ? t.sort : null,
                  strictNullHandling:
                    "boolean" == typeof t.strictNullHandling
                      ? t.strictNullHandling
                      : f.strictNullHandling
                }
              );
            })(e);
          "function" == typeof u.filter
            ? (i = (0, u.filter)("", i))
            : l(u.filter) && (r = u.filter);
          var c,
            p = [];
          if ("object" != typeof i || null === i) return "";
          c =
            e && e.arrayFormat in a
              ? e.arrayFormat
              : e && "indices" in e
              ? e.indices
                ? "indices"
                : "repeat"
              : "indices";
          var y = a[c];
          r || (r = Object.keys(i)), u.sort && r.sort(u.sort);
          for (var g = n(), m = 0; m < r.length; ++m) {
            var v = r[m];
            (u.skipNulls && null === i[v]) ||
              h(
                p,
                d(
                  i[v],
                  v,
                  y,
                  u.strictNullHandling,
                  u.skipNulls,
                  u.encode ? u.encoder : null,
                  u.filter,
                  u.sort,
                  u.allowDots,
                  u.serializeDate,
                  u.format,
                  u.formatter,
                  u.encodeValuesOnly,
                  u.charset,
                  g
                )
              );
          }
          var _ = p.join(u.delimiter),
            x = !0 === u.addQueryPrefix ? "?" : "";
          return (
            u.charsetSentinel &&
              ("iso-8859-1" === u.charset
                ? (x += "utf8=%26%2310003%3B&")
                : (x += "utf8=%E2%9C%93&")),
            _.length > 0 ? x + _ : ""
          );
        };
      },
      4425: (t, e, r) => {
        "use strict";
        var n = r(951),
          i = Object.prototype.hasOwnProperty,
          o = Array.isArray,
          s = (function() {
            for (var t = [], e = 0; e < 256; ++e)
              t.push(
                "%" + ((e < 16 ? "0" : "") + e.toString(16)).toUpperCase()
              );
            return t;
          })(),
          a = function(t, e) {
            for (
              var r = e && e.plainObjects ? Object.create(null) : {}, n = 0;
              n < t.length;
              ++n
            )
              void 0 !== t[n] && (r[n] = t[n]);
            return r;
          };
        t.exports = {
          arrayToObject: a,
          assign: function(t, e) {
            return Object.keys(e).reduce(function(t, r) {
              return (t[r] = e[r]), t;
            }, t);
          },
          combine: function(t, e) {
            return [].concat(t, e);
          },
          compact: function(t) {
            for (
              var e = [{ obj: { o: t }, prop: "o" }], r = [], n = 0;
              n < e.length;
              ++n
            )
              for (
                var i = e[n], s = i.obj[i.prop], a = Object.keys(s), l = 0;
                l < a.length;
                ++l
              ) {
                var u = a[l],
                  h = s[u];
                "object" == typeof h &&
                  null !== h &&
                  -1 === r.indexOf(h) &&
                  (e.push({ obj: s, prop: u }), r.push(h));
              }
            return (
              (function(t) {
                for (; t.length > 1; ) {
                  var e = t.pop(),
                    r = e.obj[e.prop];
                  if (o(r)) {
                    for (var n = [], i = 0; i < r.length; ++i)
                      void 0 !== r[i] && n.push(r[i]);
                    e.obj[e.prop] = n;
                  }
                }
              })(e),
              t
            );
          },
          decode: function(t, e, r) {
            var n = t.replace(/\+/g, " ");
            if ("iso-8859-1" === r)
              return n.replace(/%[0-9a-f]{2}/gi, unescape);
            try {
              return decodeURIComponent(n);
            } catch (t) {
              return n;
            }
          },
          encode: function(t, e, r, i, o) {
            if (0 === t.length) return t;
            var a = t;
            if (
              ("symbol" == typeof t
                ? (a = Symbol.prototype.toString.call(t))
                : "string" != typeof t && (a = String(t)),
              "iso-8859-1" === r)
            )
              return escape(a).replace(/%u[0-9a-f]{4}/gi, function(t) {
                return "%26%23" + parseInt(t.slice(2), 16) + "%3B";
              });
            for (var l = "", u = 0; u < a.length; ++u) {
              var h = a.charCodeAt(u);
              45 === h ||
              46 === h ||
              95 === h ||
              126 === h ||
              (h >= 48 && h <= 57) ||
              (h >= 65 && h <= 90) ||
              (h >= 97 && h <= 122) ||
              (o === n.RFC1738 && (40 === h || 41 === h))
                ? (l += a.charAt(u))
                : h < 128
                ? (l += s[h])
                : h < 2048
                ? (l += s[192 | (h >> 6)] + s[128 | (63 & h)])
                : h < 55296 || h >= 57344
                ? (l +=
                    s[224 | (h >> 12)] +
                    s[128 | ((h >> 6) & 63)] +
                    s[128 | (63 & h)])
                : ((u += 1),
                  (h = 65536 + (((1023 & h) << 10) | (1023 & a.charCodeAt(u)))),
                  (l +=
                    s[240 | (h >> 18)] +
                    s[128 | ((h >> 12) & 63)] +
                    s[128 | ((h >> 6) & 63)] +
                    s[128 | (63 & h)]));
            }
            return l;
          },
          isBuffer: function(t) {
            return !(
              !t ||
              "object" != typeof t ||
              !(
                t.constructor &&
                t.constructor.isBuffer &&
                t.constructor.isBuffer(t)
              )
            );
          },
          isRegExp: function(t) {
            return "[object RegExp]" === Object.prototype.toString.call(t);
          },
          maybeMap: function(t, e) {
            if (o(t)) {
              for (var r = [], n = 0; n < t.length; n += 1) r.push(e(t[n]));
              return r;
            }
            return e(t);
          },
          merge: function t(e, r, n) {
            if (!r) return e;
            if ("object" != typeof r) {
              if (o(e)) e.push(r);
              else {
                if (!e || "object" != typeof e) return [e, r];
                ((n && (n.plainObjects || n.allowPrototypes)) ||
                  !i.call(Object.prototype, r)) &&
                  (e[r] = !0);
              }
              return e;
            }
            if (!e || "object" != typeof e) return [e].concat(r);
            var s = e;
            return (
              o(e) && !o(r) && (s = a(e, n)),
              o(e) && o(r)
                ? (r.forEach(function(r, o) {
                    if (i.call(e, o)) {
                      var s = e[o];
                      s && "object" == typeof s && r && "object" == typeof r
                        ? (e[o] = t(s, r, n))
                        : e.push(r);
                    } else e[o] = r;
                  }),
                  e)
                : Object.keys(r).reduce(function(e, o) {
                    var s = r[o];
                    return (
                      i.call(e, o) ? (e[o] = t(e[o], s, n)) : (e[o] = s), e
                    );
                  }, s)
            );
          }
        };
      },
      5730: function(t) {
        t.exports = (function() {
          "use strict";
          function t(r, n, i, o, s) {
            for (; o > i; ) {
              if (o - i > 600) {
                var a = o - i + 1,
                  l = n - i + 1,
                  u = Math.log(a),
                  h = 0.5 * Math.exp((2 * u) / 3),
                  c =
                    0.5 *
                    Math.sqrt((u * h * (a - h)) / a) *
                    (l - a / 2 < 0 ? -1 : 1);
                t(
                  r,
                  n,
                  Math.max(i, Math.floor(n - (l * h) / a + c)),
                  Math.min(o, Math.floor(n + ((a - l) * h) / a + c)),
                  s
                );
              }
              var p = r[n],
                f = i,
                d = o;
              for (e(r, i, n), s(r[o], p) > 0 && e(r, i, o); f < d; ) {
                for (e(r, f, d), f++, d--; s(r[f], p) < 0; ) f++;
                for (; s(r[d], p) > 0; ) d--;
              }
              0 === s(r[i], p) ? e(r, i, d) : e(r, ++d, o),
                d <= n && (i = d + 1),
                n <= d && (o = d - 1);
            }
          }
          function e(t, e, r) {
            var n = t[e];
            (t[e] = t[r]), (t[r] = n);
          }
          function r(t, e) {
            return t < e ? -1 : t > e ? 1 : 0;
          }
          return function(e, n, i, o, s) {
            t(e, n, i || 0, o || e.length - 1, s || r);
          };
        })();
      },
      6363: (t, e, r) => {
        "use strict";
        (t.exports = i), (t.exports.default = i);
        var n = r(5730);
        function i(t, e) {
          if (!(this instanceof i)) return new i(t, e);
          (this._maxEntries = Math.max(4, t || 9)),
            (this._minEntries = Math.max(2, Math.ceil(0.4 * this._maxEntries))),
            e && this._initFormat(e),
            this.clear();
        }
        function o(t, e, r) {
          if (!r) return e.indexOf(t);
          for (var n = 0; n < e.length; n++) if (r(t, e[n])) return n;
          return -1;
        }
        function s(t, e) {
          a(t, 0, t.children.length, e, t);
        }
        function a(t, e, r, n, i) {
          i || (i = y(null)),
            (i.minX = 1 / 0),
            (i.minY = 1 / 0),
            (i.maxX = -1 / 0),
            (i.maxY = -1 / 0);
          for (var o, s = e; s < r; s++)
            (o = t.children[s]), l(i, t.leaf ? n(o) : o);
          return i;
        }
        function l(t, e) {
          return (
            (t.minX = Math.min(t.minX, e.minX)),
            (t.minY = Math.min(t.minY, e.minY)),
            (t.maxX = Math.max(t.maxX, e.maxX)),
            (t.maxY = Math.max(t.maxY, e.maxY)),
            t
          );
        }
        function u(t, e) {
          return t.minX - e.minX;
        }
        function h(t, e) {
          return t.minY - e.minY;
        }
        function c(t) {
          return (t.maxX - t.minX) * (t.maxY - t.minY);
        }
        function p(t) {
          return t.maxX - t.minX + (t.maxY - t.minY);
        }
        function f(t, e) {
          return (
            t.minX <= e.minX &&
            t.minY <= e.minY &&
            e.maxX <= t.maxX &&
            e.maxY <= t.maxY
          );
        }
        function d(t, e) {
          return (
            e.minX <= t.maxX &&
            e.minY <= t.maxY &&
            e.maxX >= t.minX &&
            e.maxY >= t.minY
          );
        }
        function y(t) {
          return {
            children: t,
            height: 1,
            leaf: !0,
            minX: 1 / 0,
            minY: 1 / 0,
            maxX: -1 / 0,
            maxY: -1 / 0
          };
        }
        function g(t, e, r, i, o) {
          for (var s, a = [e, r]; a.length; )
            (r = a.pop()) - (e = a.pop()) <= i ||
              ((s = e + Math.ceil((r - e) / i / 2) * i),
              n(t, s, e, r, o),
              a.push(e, s, s, r));
        }
        i.prototype = {
          all: function() {
            return this._all(this.data, []);
          },
          search: function(t) {
            var e = this.data,
              r = [],
              n = this.toBBox;
            if (!d(t, e)) return r;
            for (var i, o, s, a, l = []; e; ) {
              for (i = 0, o = e.children.length; i < o; i++)
                (s = e.children[i]),
                  d(t, (a = e.leaf ? n(s) : s)) &&
                    (e.leaf
                      ? r.push(s)
                      : f(t, a)
                      ? this._all(s, r)
                      : l.push(s));
              e = l.pop();
            }
            return r;
          },
          collides: function(t) {
            var e = this.data,
              r = this.toBBox;
            if (!d(t, e)) return !1;
            for (var n, i, o, s, a = []; e; ) {
              for (n = 0, i = e.children.length; n < i; n++)
                if (((o = e.children[n]), d(t, (s = e.leaf ? r(o) : o)))) {
                  if (e.leaf || f(t, s)) return !0;
                  a.push(o);
                }
              e = a.pop();
            }
            return !1;
          },
          load: function(t) {
            if (!t || !t.length) return this;
            if (t.length < this._minEntries) {
              for (var e = 0, r = t.length; e < r; e++) this.insert(t[e]);
              return this;
            }
            var n = this._build(t.slice(), 0, t.length - 1, 0);
            if (this.data.children.length)
              if (this.data.height === n.height) this._splitRoot(this.data, n);
              else {
                if (this.data.height < n.height) {
                  var i = this.data;
                  (this.data = n), (n = i);
                }
                this._insert(n, this.data.height - n.height - 1, !0);
              }
            else this.data = n;
            return this;
          },
          insert: function(t) {
            return t && this._insert(t, this.data.height - 1), this;
          },
          clear: function() {
            return (this.data = y([])), this;
          },
          remove: function(t, e) {
            if (!t) return this;
            for (
              var r, n, i, s, a = this.data, l = this.toBBox(t), u = [], h = [];
              a || u.length;

            ) {
              if (
                (a ||
                  ((a = u.pop()),
                  (n = u[u.length - 1]),
                  (r = h.pop()),
                  (s = !0)),
                a.leaf && -1 !== (i = o(t, a.children, e)))
              )
                return (
                  a.children.splice(i, 1), u.push(a), this._condense(u), this
                );
              s || a.leaf || !f(a, l)
                ? n
                  ? (r++, (a = n.children[r]), (s = !1))
                  : (a = null)
                : (u.push(a), h.push(r), (r = 0), (n = a), (a = a.children[0]));
            }
            return this;
          },
          toBBox: function(t) {
            return t;
          },
          compareMinX: u,
          compareMinY: h,
          toJSON: function() {
            return this.data;
          },
          fromJSON: function(t) {
            return (this.data = t), this;
          },
          _all: function(t, e) {
            for (var r = []; t; )
              t.leaf
                ? e.push.apply(e, t.children)
                : r.push.apply(r, t.children),
                (t = r.pop());
            return e;
          },
          _build: function(t, e, r, n) {
            var i,
              o = r - e + 1,
              a = this._maxEntries;
            if (o <= a) return s((i = y(t.slice(e, r + 1))), this.toBBox), i;
            n ||
              ((n = Math.ceil(Math.log(o) / Math.log(a))),
              (a = Math.ceil(o / Math.pow(a, n - 1)))),
              ((i = y([])).leaf = !1),
              (i.height = n);
            var l,
              u,
              h,
              c,
              p = Math.ceil(o / a),
              f = p * Math.ceil(Math.sqrt(a));
            for (g(t, e, r, f, this.compareMinX), l = e; l <= r; l += f)
              for (
                g(t, l, (h = Math.min(l + f - 1, r)), p, this.compareMinY),
                  u = l;
                u <= h;
                u += p
              )
                (c = Math.min(u + p - 1, h)),
                  i.children.push(this._build(t, u, c, n - 1));
            return s(i, this.toBBox), i;
          },
          _chooseSubtree: function(t, e, r, n) {
            for (
              var i, o, s, a, l, u, h, p, f, d;
              n.push(e), !e.leaf && n.length - 1 !== r;

            ) {
              for (h = p = 1 / 0, i = 0, o = e.children.length; i < o; i++)
                (l = c((s = e.children[i]))),
                  (f = t),
                  (d = s),
                  (u =
                    (Math.max(d.maxX, f.maxX) - Math.min(d.minX, f.minX)) *
                      (Math.max(d.maxY, f.maxY) - Math.min(d.minY, f.minY)) -
                    l) < p
                    ? ((p = u), (h = l < h ? l : h), (a = s))
                    : u === p && l < h && ((h = l), (a = s));
              e = a || e.children[0];
            }
            return e;
          },
          _insert: function(t, e, r) {
            var n = this.toBBox,
              i = r ? t : n(t),
              o = [],
              s = this._chooseSubtree(i, this.data, e, o);
            for (
              s.children.push(t), l(s, i);
              e >= 0 && o[e].children.length > this._maxEntries;

            )
              this._split(o, e), e--;
            this._adjustParentBBoxes(i, o, e);
          },
          _split: function(t, e) {
            var r = t[e],
              n = r.children.length,
              i = this._minEntries;
            this._chooseSplitAxis(r, i, n);
            var o = this._chooseSplitIndex(r, i, n),
              a = y(r.children.splice(o, r.children.length - o));
            (a.height = r.height),
              (a.leaf = r.leaf),
              s(r, this.toBBox),
              s(a, this.toBBox),
              e ? t[e - 1].children.push(a) : this._splitRoot(r, a);
          },
          _splitRoot: function(t, e) {
            (this.data = y([t, e])),
              (this.data.height = t.height + 1),
              (this.data.leaf = !1),
              s(this.data, this.toBBox);
          },
          _chooseSplitIndex: function(t, e, r) {
            var n, i, o, s, l, u, h, p, f, d, y, g, m, v;
            for (u = h = 1 / 0, n = e; n <= r - e; n++)
              (f = i = a(t, 0, n, this.toBBox)),
                (d = o = a(t, n, r, this.toBBox)),
                void 0,
                void 0,
                void 0,
                void 0,
                (y = Math.max(f.minX, d.minX)),
                (g = Math.max(f.minY, d.minY)),
                (m = Math.min(f.maxX, d.maxX)),
                (v = Math.min(f.maxY, d.maxY)),
                (s = Math.max(0, m - y) * Math.max(0, v - g)),
                (l = c(i) + c(o)),
                s < u
                  ? ((u = s), (p = n), (h = l < h ? l : h))
                  : s === u && l < h && ((h = l), (p = n));
            return p;
          },
          _chooseSplitAxis: function(t, e, r) {
            var n = t.leaf ? this.compareMinX : u,
              i = t.leaf ? this.compareMinY : h;
            this._allDistMargin(t, e, r, n) < this._allDistMargin(t, e, r, i) &&
              t.children.sort(n);
          },
          _allDistMargin: function(t, e, r, n) {
            t.children.sort(n);
            var i,
              o,
              s = this.toBBox,
              u = a(t, 0, e, s),
              h = a(t, r - e, r, s),
              c = p(u) + p(h);
            for (i = e; i < r - e; i++)
              (o = t.children[i]), l(u, t.leaf ? s(o) : o), (c += p(u));
            for (i = r - e - 1; i >= e; i--)
              (o = t.children[i]), l(h, t.leaf ? s(o) : o), (c += p(h));
            return c;
          },
          _adjustParentBBoxes: function(t, e, r) {
            for (var n = r; n >= 0; n--) l(e[n], t);
          },
          _condense: function(t) {
            for (var e, r = t.length - 1; r >= 0; r--)
              0 === t[r].children.length
                ? r > 0
                  ? (e = t[r - 1].children).splice(e.indexOf(t[r]), 1)
                  : this.clear()
                : s(t[r], this.toBBox);
          },
          _initFormat: function(t) {
            var e = ["return a", " - b", ";"];
            (this.compareMinX = new Function("a", "b", e.join(t[0]))),
              (this.compareMinY = new Function("a", "b", e.join(t[1]))),
              (this.toBBox = new Function(
                "a",
                "return {minX: a" +
                  t[0] +
                  ", minY: a" +
                  t[1] +
                  ", maxX: a" +
                  t[2] +
                  ", maxY: a" +
                  t[3] +
                  "};"
              ));
          }
        };
      },
      4278: t => {
        "use strict";
        var e = Object,
          r = TypeError;
        t.exports = function() {
          if (null != this && this !== e(this))
            throw new r("RegExp.prototype.flags getter called on non-object");
          var t = "";
          return (
            this.global && (t += "g"),
            this.ignoreCase && (t += "i"),
            this.multiline && (t += "m"),
            this.dotAll && (t += "s"),
            this.unicode && (t += "u"),
            this.sticky && (t += "y"),
            t
          );
        };
      },
      7989: (t, e, r) => {
        "use strict";
        var n = r(5267),
          i = r(6516),
          o = r(4278),
          s = r(7477),
          a = r(6717),
          l = i(o);
        n(l, { getPolyfill: s, implementation: o, shim: a }), (t.exports = l);
      },
      7477: (t, e, r) => {
        "use strict";
        var n = r(4278),
          i = r(5267).supportsDescriptors,
          o = Object.getOwnPropertyDescriptor,
          s = TypeError;
        t.exports = function() {
          if (!i)
            throw new s(
              "RegExp.prototype.flags requires a true ES5 environment that supports property descriptors"
            );
          if ("gim" === /a/gim.flags) {
            var t = o(RegExp.prototype, "flags");
            if (
              t &&
              "function" == typeof t.get &&
              "boolean" == typeof /a/.dotAll
            )
              return t.get;
          }
          return n;
        };
      },
      6717: (t, e, r) => {
        "use strict";
        var n = r(5267).supportsDescriptors,
          i = r(7477),
          o = Object.getOwnPropertyDescriptor,
          s = Object.defineProperty,
          a = TypeError,
          l = Object.getPrototypeOf,
          u = /a/;
        t.exports = function() {
          if (!n || !l)
            throw new a(
              "RegExp.prototype.flags requires a true ES5 environment that supports property descriptors"
            );
          var t = i(),
            e = l(u),
            r = o(e, "flags");
          return (
            (r && r.get === t) ||
              s(e, "flags", { configurable: !0, enumerable: !1, get: t }),
            t
          );
        };
      },
      3797: function(t, e) {
        !(function(t) {
          "use strict";
          const e = 134217729;
          function r(t, e, r, n, i) {
            let o,
              s,
              a,
              l,
              u = e[0],
              h = n[0],
              c = 0,
              p = 0;
            h > u == h > -u ? ((o = u), (u = e[++c])) : ((o = h), (h = n[++p]));
            let f = 0;
            if (c < t && p < r)
              for (
                h > u == h > -u
                  ? ((a = o - ((s = u + o) - u)), (u = e[++c]))
                  : ((a = o - ((s = h + o) - h)), (h = n[++p])),
                  o = s,
                  0 !== a && (i[f++] = a);
                c < t && p < r;

              )
                h > u == h > -u
                  ? ((a = o - ((s = o + u) - (l = s - o)) + (u - l)),
                    (u = e[++c]))
                  : ((a = o - ((s = o + h) - (l = s - o)) + (h - l)),
                    (h = n[++p])),
                  (o = s),
                  0 !== a && (i[f++] = a);
            for (; c < t; )
              (a = o - ((s = o + u) - (l = s - o)) + (u - l)),
                (u = e[++c]),
                (o = s),
                0 !== a && (i[f++] = a);
            for (; p < r; )
              (a = o - ((s = o + h) - (l = s - o)) + (h - l)),
                (h = n[++p]),
                (o = s),
                0 !== a && (i[f++] = a);
            return (0 === o && 0 !== f) || (i[f++] = o), f;
          }
          function n(t) {
            return new Float64Array(t);
          }
          const i = n(4),
            o = n(8),
            s = n(12),
            a = n(16),
            l = n(4);
          (t.orient2d = function(t, n, u, h, c, p) {
            const f = (n - p) * (u - c),
              d = (t - c) * (h - p),
              y = f - d;
            if (0 === f || 0 === d || f > 0 != d > 0) return y;
            const g = Math.abs(f + d);
            return Math.abs(y) >= 33306690738754716e-32 * g
              ? y
              : -(function(t, n, u, h, c, p, f) {
                  let d, y, g, m, v, _, x, b, S, I, w, N, C, E, M, P, O, L;
                  const T = t - c,
                    A = u - c,
                    R = n - p,
                    F = h - p;
                  (v =
                    (M =
                      (b = T - (x = (_ = e * T) - (_ - T))) *
                        (I = F - (S = (_ = e * F) - (_ - F))) -
                      ((E = T * F) - x * S - b * S - x * I)) -
                    (w =
                      M -
                      (O =
                        (b = R - (x = (_ = e * R) - (_ - R))) *
                          (I = A - (S = (_ = e * A) - (_ - A))) -
                        ((P = R * A) - x * S - b * S - x * I)))),
                    (i[0] = M - (w + v) + (v - O)),
                    (v =
                      (C = E - ((N = E + w) - (v = N - E)) + (w - v)) -
                      (w = C - P)),
                    (i[1] = C - (w + v) + (v - P)),
                    (v = (L = N + w) - N),
                    (i[2] = N - (L - v) + (w - v)),
                    (i[3] = L);
                  let D = (function(t, e) {
                      let r = e[0];
                      for (let t = 1; t < 4; t++) r += e[t];
                      return r;
                    })(0, i),
                    j = 22204460492503146e-32 * f;
                  if (D >= j || -D >= j) return D;
                  if (
                    ((d = t - (T + (v = t - T)) + (v - c)),
                    (g = u - (A + (v = u - A)) + (v - c)),
                    (y = n - (R + (v = n - R)) + (v - p)),
                    (m = h - (F + (v = h - F)) + (v - p)),
                    0 === d && 0 === y && 0 === g && 0 === m)
                  )
                    return D;
                  if (
                    ((j =
                      11093356479670487e-47 * f +
                      33306690738754706e-32 * Math.abs(D)),
                    (D += T * m + F * d - (R * g + A * y)) >= j || -D >= j)
                  )
                    return D;
                  (v =
                    (M =
                      (b = d - (x = (_ = e * d) - (_ - d))) *
                        (I = F - (S = (_ = e * F) - (_ - F))) -
                      ((E = d * F) - x * S - b * S - x * I)) -
                    (w =
                      M -
                      (O =
                        (b = y - (x = (_ = e * y) - (_ - y))) *
                          (I = A - (S = (_ = e * A) - (_ - A))) -
                        ((P = y * A) - x * S - b * S - x * I)))),
                    (l[0] = M - (w + v) + (v - O)),
                    (v =
                      (C = E - ((N = E + w) - (v = N - E)) + (w - v)) -
                      (w = C - P)),
                    (l[1] = C - (w + v) + (v - P)),
                    (v = (L = N + w) - N),
                    (l[2] = N - (L - v) + (w - v)),
                    (l[3] = L);
                  const U = r(4, i, 4, l, o);
                  (v =
                    (M =
                      (b = T - (x = (_ = e * T) - (_ - T))) *
                        (I = m - (S = (_ = e * m) - (_ - m))) -
                      ((E = T * m) - x * S - b * S - x * I)) -
                    (w =
                      M -
                      (O =
                        (b = R - (x = (_ = e * R) - (_ - R))) *
                          (I = g - (S = (_ = e * g) - (_ - g))) -
                        ((P = R * g) - x * S - b * S - x * I)))),
                    (l[0] = M - (w + v) + (v - O)),
                    (v =
                      (C = E - ((N = E + w) - (v = N - E)) + (w - v)) -
                      (w = C - P)),
                    (l[1] = C - (w + v) + (v - P)),
                    (v = (L = N + w) - N),
                    (l[2] = N - (L - v) + (w - v)),
                    (l[3] = L);
                  const G = r(U, o, 4, l, s);
                  (v =
                    (M =
                      (b = d - (x = (_ = e * d) - (_ - d))) *
                        (I = m - (S = (_ = e * m) - (_ - m))) -
                      ((E = d * m) - x * S - b * S - x * I)) -
                    (w =
                      M -
                      (O =
                        (b = y - (x = (_ = e * y) - (_ - y))) *
                          (I = g - (S = (_ = e * g) - (_ - g))) -
                        ((P = y * g) - x * S - b * S - x * I)))),
                    (l[0] = M - (w + v) + (v - O)),
                    (v =
                      (C = E - ((N = E + w) - (v = N - E)) + (w - v)) -
                      (w = C - P)),
                    (l[1] = C - (w + v) + (v - P)),
                    (v = (L = N + w) - N),
                    (l[2] = N - (L - v) + (w - v)),
                    (l[3] = L);
                  const B = r(G, s, 4, l, a);
                  return a[B - 1];
                })(t, n, u, h, c, p, g);
          }),
            (t.orient2dfast = function(t, e, r, n, i, o) {
              return (e - o) * (r - i) - (t - i) * (n - o);
            }),
            Object.defineProperty(t, "__esModule", { value: !0 });
        })(e);
      },
      2624: (t, e, r) => {
        "use strict";
        var n = r(9427),
          i = r(6489),
          o = r(3331),
          s = n("%TypeError%"),
          a = n("%WeakMap%", !0),
          l = n("%Map%", !0),
          u = i("WeakMap.prototype.get", !0),
          h = i("WeakMap.prototype.set", !0),
          c = i("WeakMap.prototype.has", !0),
          p = i("Map.prototype.get", !0),
          f = i("Map.prototype.set", !0),
          d = i("Map.prototype.has", !0),
          y = function(t, e) {
            for (var r, n = t; null !== (r = n.next); n = r)
              if (r.key === e)
                return (n.next = r.next), (r.next = t.next), (t.next = r), r;
          };
        t.exports = function() {
          var t,
            e,
            r,
            n = {
              assert: function(t) {
                if (!n.has(t))
                  throw new s("Side channel does not contain " + o(t));
              },
              get: function(n) {
                if (
                  a &&
                  n &&
                  ("object" == typeof n || "function" == typeof n)
                ) {
                  if (t) return u(t, n);
                } else if (l) {
                  if (e) return p(e, n);
                } else if (r)
                  return (function(t, e) {
                    var r = y(t, e);
                    return r && r.value;
                  })(r, n);
              },
              has: function(n) {
                if (
                  a &&
                  n &&
                  ("object" == typeof n || "function" == typeof n)
                ) {
                  if (t) return c(t, n);
                } else if (l) {
                  if (e) return d(e, n);
                } else if (r)
                  return (function(t, e) {
                    return !!y(t, e);
                  })(r, n);
                return !1;
              },
              set: function(n, i) {
                a && n && ("object" == typeof n || "function" == typeof n)
                  ? (t || (t = new a()), h(t, n, i))
                  : l
                  ? (e || (e = new l()), f(e, n, i))
                  : (r || (r = { key: {}, next: null }),
                    (function(t, e, r) {
                      var n = y(t, e);
                      n
                        ? (n.value = r)
                        : (t.next = { key: e, next: t.next, value: r });
                    })(r, n, i));
              }
            };
          return n;
        };
      },
      8552: t => {
        "use strict";
        t.exports = {
          eudist: function(t, e, r) {
            for (var n = t.length, i = 0, o = 0; o < n; o++) {
              var s = (t[o] || 0) - (e[o] || 0);
              i += s * s;
            }
            return r ? Math.sqrt(i) : i;
          },
          mandist: function(t, e, r) {
            for (var n = t.length, i = 0, o = 0; o < n; o++)
              i += Math.abs((t[o] || 0) - (e[o] || 0));
            return r ? Math.sqrt(i) : i;
          },
          dist: function(t, e, r) {
            var n = Math.abs(t - e);
            return r ? n : n * n;
          }
        };
      },
      1030: (t, e, r) => {
        "use strict";
        var n = r(8552),
          i = n.eudist,
          o = n.dist;
        t.exports = {
          kmrand: function(t, e) {
            for (
              var r = {}, n = [], i = e << 2, o = t.length, s = t[0].length > 0;
              n.length < e && i-- > 0;

            ) {
              var a = t[Math.floor(Math.random() * o)],
                l = s ? a.join("_") : "" + a;
              r[l] || ((r[l] = !0), n.push(a));
            }
            if (n.length < e) throw new Error("Error initializating clusters");
            return n;
          },
          kmpp: function(t, e) {
            var r = t[0].length ? i : o,
              n = [],
              s = t.length,
              a = t[0].length > 0,
              l = t[Math.floor(Math.random() * s)];
            for (a && l.join("_"), n.push(l); n.length < e; ) {
              for (var u = [], h = n.length, c = 0, p = [], f = 0; f < s; f++) {
                for (var d = 1 / 0, y = 0; y < h; y++) {
                  var g = r(t[f], n[y]);
                  g <= d && (d = g);
                }
                u[f] = d;
              }
              for (var m = 0; m < s; m++) c += u[m];
              for (var v = 0; v < s; v++)
                p[v] = { i: v, v: t[v], pr: u[v] / c, cs: 0 };
              p.sort(function(t, e) {
                return t.pr - e.pr;
              }),
                (p[0].cs = p[0].pr);
              for (var _ = 1; _ < s; _++) p[_].cs = p[_ - 1].cs + p[_].pr;
              for (var x = Math.random(), b = 0; b < s - 1 && p[b++].cs < x; );
              n.push(p[b - 1].v);
            }
            return n;
          }
        };
      },
      9922: (t, e, r) => {
        "use strict";
        var n = r(8552),
          i = r(1030),
          o = n.eudist,
          s = (n.mandist, n.dist, i.kmrand),
          a = i.kmpp;
        function l(t, e, r) {
          r = r || [];
          for (var n = 0; n < t; n++) r[n] = e;
          return r;
        }
        t.exports = function(t, e, r, n) {
          var i = [],
            u = [],
            h = [],
            c = [],
            p = !1,
            f = n || 1e4,
            d = t.length,
            y = t[0].length,
            g = y > 0,
            m = [];
          if (r) i = "kmrand" == r ? s(t, e) : "kmpp" == r ? a(t, e) : r;
          else
            for (var v = {}; i.length < e; ) {
              var _ = Math.floor(Math.random() * d);
              v[_] || ((v[_] = !0), i.push(t[_]));
            }
          do {
            l(e, 0, m);
            for (var x = 0; x < d; x++) {
              for (var b = 1 / 0, S = 0, I = 0; I < e; I++)
                (c = g ? o(t[x], i[I]) : Math.abs(t[x] - i[I])) <= b &&
                  ((b = c), (S = I));
              (h[x] = S), m[S]++;
            }
            for (var w = [], N = ((u = []), 0); N < e; N++)
              (w[N] = g ? l(y, 0, w[N]) : 0), (u[N] = i[N]);
            if (g) {
              for (var C = 0; C < e; C++) i[C] = [];
              for (var E = 0; E < d; E++)
                for (var M = w[h[E]], P = t[E], O = 0; O < y; O++) M[O] += P[O];
              p = !0;
              for (var L = 0; L < e; L++) {
                for (
                  var T = i[L], A = w[L], R = u[L], F = m[L], D = 0;
                  D < y;
                  D++
                )
                  T[D] = A[D] / F || 0;
                if (p)
                  for (var j = 0; j < y; j++)
                    if (R[j] != T[j]) {
                      p = !1;
                      break;
                    }
              }
            } else {
              for (var U = 0; U < d; U++) w[h[U]] += t[U];
              for (var G = 0; G < e; G++) i[G] = w[G] / m[G] || 0;
              p = !0;
              for (var B = 0; B < e; B++)
                if (u[B] != i[B]) {
                  p = !1;
                  break;
                }
            }
            p = p || --f <= 0;
          } while (!p);
          return { it: 1e4 - f, k: e, idxs: h, centroids: i };
        };
      },
      1266: (t, e, r) => {
        "use strict";
        r.r(e), r.d(e, { default: () => n });
        class n {
          constructor(t = [], e = i) {
            if (
              ((this.data = t),
              (this.length = this.data.length),
              (this.compare = e),
              this.length > 0)
            )
              for (let t = (this.length >> 1) - 1; t >= 0; t--) this._down(t);
          }
          push(t) {
            this.data.push(t), this.length++, this._up(this.length - 1);
          }
          pop() {
            if (0 === this.length) return;
            const t = this.data[0],
              e = this.data.pop();
            return (
              this.length--,
              this.length > 0 && ((this.data[0] = e), this._down(0)),
              t
            );
          }
          peek() {
            return this.data[0];
          }
          _up(t) {
            const { data: e, compare: r } = this,
              n = e[t];
            for (; t > 0; ) {
              const i = (t - 1) >> 1,
                o = e[i];
              if (r(n, o) >= 0) break;
              (e[t] = o), (t = i);
            }
            e[t] = n;
          }
          _down(t) {
            const { data: e, compare: r } = this,
              n = this.length >> 1,
              i = e[t];
            for (; t < n; ) {
              let n = 1 + (t << 1),
                o = e[n];
              const s = n + 1;
              if (
                (s < this.length && r(e[s], o) < 0 && ((n = s), (o = e[s])),
                r(o, i) >= 0)
              )
                break;
              (e[t] = o), (t = n);
            }
            e[t] = i;
          }
        }
        function i(t, e) {
          return t < e ? -1 : t > e ? 1 : 0;
        }
      },
      3766: function(t, e) {
        !(function(t) {
          "use strict";
          function e() {}
          function r(t) {
            this.message = t || "";
          }
          function n(t) {
            this.message = t || "";
          }
          function i(t) {
            this.message = t || "";
          }
          function o() {}
          function s(t) {
            return null === t ? Rt : t.color;
          }
          function a(t) {
            return null === t ? null : t.parent;
          }
          function l(t, e) {
            null !== t && (t.color = e);
          }
          function u(t) {
            return null === t ? null : t.left;
          }
          function h(t) {
            return null === t ? null : t.right;
          }
          function c() {
            (this.root_ = null), (this.size_ = 0);
          }
          function p() {}
          function f() {
            (this.array_ = []),
              arguments[0] instanceof xt && this.addAll(arguments[0]);
          }
          function d() {}
          function y(t) {
            this.message = t || "";
          }
          function g() {
            this.array_ = [];
          }
          "fill" in Array.prototype ||
            Object.defineProperty(Array.prototype, "fill", {
              configurable: !0,
              value: function(t) {
                if (null == this)
                  throw new TypeError(this + " is not an object");
                var e = Object(this),
                  r = Math.max(Math.min(e.length, 9007199254740991), 0) || 0,
                  n =
                    (1 in arguments && parseInt(Number(arguments[1]), 10)) || 0;
                n = n < 0 ? Math.max(r + n, 0) : Math.min(n, r);
                var i =
                  2 in arguments && void 0 !== arguments[2]
                    ? parseInt(Number(arguments[2]), 10) || 0
                    : r;
                for (
                  i = i < 0 ? Math.max(r + arguments[2], 0) : Math.min(i, r);
                  n < i;

                )
                  (e[n] = t), ++n;
                return e;
              },
              writable: !0
            }),
            (Number.isFinite =
              Number.isFinite ||
              function(t) {
                return "number" == typeof t && isFinite(t);
              }),
            (Number.isInteger =
              Number.isInteger ||
              function(t) {
                return (
                  "number" == typeof t && isFinite(t) && Math.floor(t) === t
                );
              }),
            (Number.parseFloat = Number.parseFloat || parseFloat),
            (Number.isNaN =
              Number.isNaN ||
              function(t) {
                return t != t;
              }),
            (Math.trunc =
              Math.trunc ||
              function(t) {
                return t < 0 ? Math.ceil(t) : Math.floor(t);
              });
          var m = function() {};
          (m.prototype.interfaces_ = function() {
            return [];
          }),
            (m.prototype.getClass = function() {
              return m;
            }),
            (m.prototype.equalsWithTolerance = function(t, e, r) {
              return Math.abs(t - e) <= r;
            });
          var v = (function(t) {
              function e(e) {
                t.call(this, e),
                  (this.name = "IllegalArgumentException"),
                  (this.message = e),
                  (this.stack = new t().stack);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                e
              );
            })(Error),
            _ = function() {},
            x = { MAX_VALUE: { configurable: !0 } };
          (_.isNaN = function(t) {
            return Number.isNaN(t);
          }),
            (_.doubleToLongBits = function(t) {
              return t;
            }),
            (_.longBitsToDouble = function(t) {
              return t;
            }),
            (_.isInfinite = function(t) {
              return !Number.isFinite(t);
            }),
            (x.MAX_VALUE.get = function() {
              return Number.MAX_VALUE;
            }),
            Object.defineProperties(_, x);
          var b = function() {},
            S = function() {},
            I = function() {},
            w = function t() {
              if (
                ((this.x = null),
                (this.y = null),
                (this.z = null),
                0 === arguments.length)
              )
                (this.x = 0), (this.y = 0), (this.z = t.NULL_ORDINATE);
              else if (1 === arguments.length) {
                var e = arguments[0];
                (this.x = e.x), (this.y = e.y), (this.z = e.z);
              } else
                2 === arguments.length
                  ? ((this.x = arguments[0]),
                    (this.y = arguments[1]),
                    (this.z = t.NULL_ORDINATE))
                  : 3 === arguments.length &&
                    ((this.x = arguments[0]),
                    (this.y = arguments[1]),
                    (this.z = arguments[2]));
            },
            N = {
              DimensionalComparator: { configurable: !0 },
              serialVersionUID: { configurable: !0 },
              NULL_ORDINATE: { configurable: !0 },
              X: { configurable: !0 },
              Y: { configurable: !0 },
              Z: { configurable: !0 }
            };
          (w.prototype.setOrdinate = function(t, e) {
            switch (t) {
              case w.X:
                this.x = e;
                break;
              case w.Y:
                this.y = e;
                break;
              case w.Z:
                this.z = e;
                break;
              default:
                throw new v("Invalid ordinate index: " + t);
            }
          }),
            (w.prototype.equals2D = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return this.x === t.x && this.y === t.y;
              }
              if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                return (
                  !!m.equalsWithTolerance(this.x, e.x, r) &&
                  !!m.equalsWithTolerance(this.y, e.y, r)
                );
              }
            }),
            (w.prototype.getOrdinate = function(t) {
              switch (t) {
                case w.X:
                  return this.x;
                case w.Y:
                  return this.y;
                case w.Z:
                  return this.z;
              }
              throw new v("Invalid ordinate index: " + t);
            }),
            (w.prototype.equals3D = function(t) {
              return (
                this.x === t.x &&
                this.y === t.y &&
                (this.z === t.z || _.isNaN(this.z)) &&
                _.isNaN(t.z)
              );
            }),
            (w.prototype.equals = function(t) {
              return t instanceof w && this.equals2D(t);
            }),
            (w.prototype.equalInZ = function(t, e) {
              return m.equalsWithTolerance(this.z, t.z, e);
            }),
            (w.prototype.compareTo = function(t) {
              var e = t;
              return this.x < e.x
                ? -1
                : this.x > e.x
                ? 1
                : this.y < e.y
                ? -1
                : this.y > e.y
                ? 1
                : 0;
            }),
            (w.prototype.clone = function() {}),
            (w.prototype.copy = function() {
              return new w(this);
            }),
            (w.prototype.toString = function() {
              return "(" + this.x + ", " + this.y + ", " + this.z + ")";
            }),
            (w.prototype.distance3D = function(t) {
              var e = this.x - t.x,
                r = this.y - t.y,
                n = this.z - t.z;
              return Math.sqrt(e * e + r * r + n * n);
            }),
            (w.prototype.distance = function(t) {
              var e = this.x - t.x,
                r = this.y - t.y;
              return Math.sqrt(e * e + r * r);
            }),
            (w.prototype.hashCode = function() {
              var t = 17;
              return (
                37 * (t = 37 * t + w.hashCode(this.x)) + w.hashCode(this.y)
              );
            }),
            (w.prototype.setCoordinate = function(t) {
              (this.x = t.x), (this.y = t.y), (this.z = t.z);
            }),
            (w.prototype.interfaces_ = function() {
              return [b, S, e];
            }),
            (w.prototype.getClass = function() {
              return w;
            }),
            (w.hashCode = function() {
              if (1 === arguments.length) {
                var t = arguments[0],
                  e = _.doubleToLongBits(t);
                return Math.trunc((e ^ e) >>> 32);
              }
            }),
            (N.DimensionalComparator.get = function() {
              return C;
            }),
            (N.serialVersionUID.get = function() {
              return 0x5cbf2c235c7e5800;
            }),
            (N.NULL_ORDINATE.get = function() {
              return _.NaN;
            }),
            (N.X.get = function() {
              return 0;
            }),
            (N.Y.get = function() {
              return 1;
            }),
            (N.Z.get = function() {
              return 2;
            }),
            Object.defineProperties(w, N);
          var C = function(t) {
            if (((this._dimensionsToTest = 2), 0 === arguments.length));
            else if (1 === arguments.length) {
              var e = arguments[0];
              if (2 !== e && 3 !== e)
                throw new v("only 2 or 3 dimensions may be specified");
              this._dimensionsToTest = e;
            }
          };
          (C.prototype.compare = function(t, e) {
            var r = t,
              n = e,
              i = C.compare(r.x, n.x);
            if (0 !== i) return i;
            var o = C.compare(r.y, n.y);
            return 0 !== o
              ? o
              : this._dimensionsToTest <= 2
              ? 0
              : C.compare(r.z, n.z);
          }),
            (C.prototype.interfaces_ = function() {
              return [I];
            }),
            (C.prototype.getClass = function() {
              return C;
            }),
            (C.compare = function(t, e) {
              return t < e
                ? -1
                : t > e
                ? 1
                : _.isNaN(t)
                ? _.isNaN(e)
                  ? 0
                  : -1
                : _.isNaN(e)
                ? 1
                : 0;
            });
          var E = function() {};
          (E.prototype.create = function() {}),
            (E.prototype.interfaces_ = function() {
              return [];
            }),
            (E.prototype.getClass = function() {
              return E;
            });
          var M = function() {},
            P = {
              INTERIOR: { configurable: !0 },
              BOUNDARY: { configurable: !0 },
              EXTERIOR: { configurable: !0 },
              NONE: { configurable: !0 }
            };
          (M.prototype.interfaces_ = function() {
            return [];
          }),
            (M.prototype.getClass = function() {
              return M;
            }),
            (M.toLocationSymbol = function(t) {
              switch (t) {
                case M.EXTERIOR:
                  return "e";
                case M.BOUNDARY:
                  return "b";
                case M.INTERIOR:
                  return "i";
                case M.NONE:
                  return "-";
              }
              throw new v("Unknown location value: " + t);
            }),
            (P.INTERIOR.get = function() {
              return 0;
            }),
            (P.BOUNDARY.get = function() {
              return 1;
            }),
            (P.EXTERIOR.get = function() {
              return 2;
            }),
            (P.NONE.get = function() {
              return -1;
            }),
            Object.defineProperties(M, P);
          var O = function(t, e) {
              return t.interfaces_ && t.interfaces_().indexOf(e) > -1;
            },
            L = function() {},
            T = { LOG_10: { configurable: !0 } };
          (L.prototype.interfaces_ = function() {
            return [];
          }),
            (L.prototype.getClass = function() {
              return L;
            }),
            (L.log10 = function(t) {
              var e = Math.log(t);
              return _.isInfinite(e) || _.isNaN(e) ? e : e / L.LOG_10;
            }),
            (L.min = function(t, e, r, n) {
              var i = t;
              return e < i && (i = e), r < i && (i = r), n < i && (i = n), i;
            }),
            (L.clamp = function() {
              if (
                "number" == typeof arguments[2] &&
                "number" == typeof arguments[0] &&
                "number" == typeof arguments[1]
              ) {
                var t = arguments[0],
                  e = arguments[1],
                  r = arguments[2];
                return t < e ? e : t > r ? r : t;
              }
              if (
                Number.isInteger(arguments[2]) &&
                Number.isInteger(arguments[0]) &&
                Number.isInteger(arguments[1])
              ) {
                var n = arguments[0],
                  i = arguments[1],
                  o = arguments[2];
                return n < i ? i : n > o ? o : n;
              }
            }),
            (L.wrap = function(t, e) {
              return t < 0 ? e - (-t % e) : t % e;
            }),
            (L.max = function() {
              if (3 === arguments.length) {
                var t = arguments[1],
                  e = arguments[2],
                  r = arguments[0];
                return t > r && (r = t), e > r && (r = e), r;
              }
              if (4 === arguments.length) {
                var n = arguments[1],
                  i = arguments[2],
                  o = arguments[3],
                  s = arguments[0];
                return n > s && (s = n), i > s && (s = i), o > s && (s = o), s;
              }
            }),
            (L.average = function(t, e) {
              return (t + e) / 2;
            }),
            (T.LOG_10.get = function() {
              return Math.log(10);
            }),
            Object.defineProperties(L, T);
          var A = function(t) {
            this.str = t;
          };
          (A.prototype.append = function(t) {
            this.str += t;
          }),
            (A.prototype.setCharAt = function(t, e) {
              this.str = this.str.substr(0, t) + e + this.str.substr(t + 1);
            }),
            (A.prototype.toString = function(t) {
              return this.str;
            });
          var R = function(t) {
            this.value = t;
          };
          (R.prototype.intValue = function() {
            return this.value;
          }),
            (R.prototype.compareTo = function(t) {
              return this.value < t ? -1 : this.value > t ? 1 : 0;
            }),
            (R.isNaN = function(t) {
              return Number.isNaN(t);
            });
          var F = function() {};
          (F.isWhitespace = function(t) {
            return (t <= 32 && t >= 0) || 127 === t;
          }),
            (F.toUpperCase = function(t) {
              return t.toUpperCase();
            });
          var D = function t() {
              if (((this._hi = 0), (this._lo = 0), 0 === arguments.length))
                this.init(0);
              else if (1 === arguments.length)
                if ("number" == typeof arguments[0]) {
                  var e = arguments[0];
                  this.init(e);
                } else if (arguments[0] instanceof t) {
                  var r = arguments[0];
                  this.init(r);
                } else
                  "string" == typeof arguments[0] &&
                    t.call(this, t.parse(arguments[0]));
              else if (2 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1];
                this.init(n, i);
              }
            },
            j = {
              PI: { configurable: !0 },
              TWO_PI: { configurable: !0 },
              PI_2: { configurable: !0 },
              E: { configurable: !0 },
              NaN: { configurable: !0 },
              EPS: { configurable: !0 },
              SPLIT: { configurable: !0 },
              MAX_PRINT_DIGITS: { configurable: !0 },
              TEN: { configurable: !0 },
              ONE: { configurable: !0 },
              SCI_NOT_EXPONENT_CHAR: { configurable: !0 },
              SCI_NOT_ZERO: { configurable: !0 }
            };
          (D.prototype.le = function(t) {
            return (
              (this._hi < t._hi || this._hi === t._hi) && this._lo <= t._lo
            );
          }),
            (D.prototype.extractSignificantDigits = function(t, e) {
              var r = this.abs(),
                n = D.magnitude(r._hi),
                i = D.TEN.pow(n);
              (r = r.divide(i)).gt(D.TEN)
                ? ((r = r.divide(D.TEN)), (n += 1))
                : r.lt(D.ONE) && ((r = r.multiply(D.TEN)), (n -= 1));
              for (
                var o = n + 1, s = new A(), a = D.MAX_PRINT_DIGITS - 1, l = 0;
                l <= a;
                l++
              ) {
                t && l === o && s.append(".");
                var u = Math.trunc(r._hi);
                if (u < 0) break;
                var h = !1,
                  c = 0;
                u > 9 ? ((h = !0), (c = "9")) : (c = "0" + u),
                  s.append(c),
                  (r = r.subtract(D.valueOf(u)).multiply(D.TEN)),
                  h && r.selfAdd(D.TEN);
                var p = !0,
                  f = D.magnitude(r._hi);
                if ((f < 0 && Math.abs(f) >= a - l && (p = !1), !p)) break;
              }
              return (e[0] = n), s.toString();
            }),
            (D.prototype.sqr = function() {
              return this.multiply(this);
            }),
            (D.prototype.doubleValue = function() {
              return this._hi + this._lo;
            }),
            (D.prototype.subtract = function() {
              if (arguments[0] instanceof D) {
                var t = arguments[0];
                return this.add(t.negate());
              }
              if ("number" == typeof arguments[0]) {
                var e = arguments[0];
                return this.add(-e);
              }
            }),
            (D.prototype.equals = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return this._hi === t._hi && this._lo === t._lo;
              }
            }),
            (D.prototype.isZero = function() {
              return 0 === this._hi && 0 === this._lo;
            }),
            (D.prototype.selfSubtract = function() {
              if (arguments[0] instanceof D) {
                var t = arguments[0];
                return this.isNaN() ? this : this.selfAdd(-t._hi, -t._lo);
              }
              if ("number" == typeof arguments[0]) {
                var e = arguments[0];
                return this.isNaN() ? this : this.selfAdd(-e, 0);
              }
            }),
            (D.prototype.getSpecialNumberString = function() {
              return this.isZero() ? "0.0" : this.isNaN() ? "NaN " : null;
            }),
            (D.prototype.min = function(t) {
              return this.le(t) ? this : t;
            }),
            (D.prototype.selfDivide = function() {
              if (1 === arguments.length) {
                if (arguments[0] instanceof D) {
                  var t = arguments[0];
                  return this.selfDivide(t._hi, t._lo);
                }
                if ("number" == typeof arguments[0]) {
                  var e = arguments[0];
                  return this.selfDivide(e, 0);
                }
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1],
                  i = null,
                  o = null,
                  s = null,
                  a = null,
                  l = null,
                  u = null,
                  h = null,
                  c = null;
                return (
                  (l = this._hi / r),
                  (c =
                    (i = (u = D.SPLIT * l) - (i = u - l)) *
                      (s = (c = D.SPLIT * r) - (s = c - r)) -
                    (h = l * r) +
                    i * (a = r - s) +
                    (o = l - i) * s +
                    o * a),
                  (c = l + (u = (this._hi - h - c + this._lo - l * n) / r)),
                  (this._hi = c),
                  (this._lo = l - c + u),
                  this
                );
              }
            }),
            (D.prototype.dump = function() {
              return "DD<" + this._hi + ", " + this._lo + ">";
            }),
            (D.prototype.divide = function() {
              if (arguments[0] instanceof D) {
                var t = arguments[0],
                  e = null,
                  r = null,
                  n = null,
                  i = null,
                  o = null,
                  s = null,
                  a = null,
                  l = null;
                return (
                  (r =
                    (o = this._hi / t._hi) -
                    (e = (s = D.SPLIT * o) - (e = s - o))),
                  (l =
                    e * (n = (l = D.SPLIT * t._hi) - (n = l - t._hi)) -
                    (a = o * t._hi) +
                    e * (i = t._hi - n) +
                    r * n +
                    r * i),
                  (s = (this._hi - a - l + this._lo - o * t._lo) / t._hi),
                  new D((l = o + s), o - l + s)
                );
              }
              if ("number" == typeof arguments[0]) {
                var u = arguments[0];
                return _.isNaN(u)
                  ? D.createNaN()
                  : D.copy(this).selfDivide(u, 0);
              }
            }),
            (D.prototype.ge = function(t) {
              return (
                (this._hi > t._hi || this._hi === t._hi) && this._lo >= t._lo
              );
            }),
            (D.prototype.pow = function(t) {
              if (0 === t) return D.valueOf(1);
              var e = new D(this),
                r = D.valueOf(1),
                n = Math.abs(t);
              if (n > 1)
                for (; n > 0; )
                  n % 2 == 1 && r.selfMultiply(e),
                    (n /= 2) > 0 && (e = e.sqr());
              else r = e;
              return t < 0 ? r.reciprocal() : r;
            }),
            (D.prototype.ceil = function() {
              if (this.isNaN()) return D.NaN;
              var t = Math.ceil(this._hi),
                e = 0;
              return t === this._hi && (e = Math.ceil(this._lo)), new D(t, e);
            }),
            (D.prototype.compareTo = function(t) {
              var e = t;
              return this._hi < e._hi
                ? -1
                : this._hi > e._hi
                ? 1
                : this._lo < e._lo
                ? -1
                : this._lo > e._lo
                ? 1
                : 0;
            }),
            (D.prototype.rint = function() {
              return this.isNaN() ? this : this.add(0.5).floor();
            }),
            (D.prototype.setValue = function() {
              if (arguments[0] instanceof D) {
                var t = arguments[0];
                return this.init(t), this;
              }
              if ("number" == typeof arguments[0]) {
                var e = arguments[0];
                return this.init(e), this;
              }
            }),
            (D.prototype.max = function(t) {
              return this.ge(t) ? this : t;
            }),
            (D.prototype.sqrt = function() {
              if (this.isZero()) return D.valueOf(0);
              if (this.isNegative()) return D.NaN;
              var t = 1 / Math.sqrt(this._hi),
                e = this._hi * t,
                r = D.valueOf(e),
                n = this.subtract(r.sqr())._hi * (0.5 * t);
              return r.add(n);
            }),
            (D.prototype.selfAdd = function() {
              if (1 === arguments.length) {
                if (arguments[0] instanceof D) {
                  var t = arguments[0];
                  return this.selfAdd(t._hi, t._lo);
                }
                if ("number" == typeof arguments[0]) {
                  var e = arguments[0],
                    r = null,
                    n = null,
                    i = null,
                    o = null,
                    s = null,
                    a = null;
                  return (
                    (o = (i = this._hi + e) - (s = i - this._hi)),
                    (n =
                      (a = (o = e - s + (this._hi - o)) + this._lo) +
                      (i - (r = i + a))),
                    (this._hi = r + n),
                    (this._lo = n + (r - this._hi)),
                    this
                  );
                }
              } else if (2 === arguments.length) {
                var l = arguments[0],
                  u = arguments[1],
                  h = null,
                  c = null,
                  p = null,
                  f = null,
                  d = null,
                  y = null,
                  g = null;
                (f = this._hi + l),
                  (c = this._lo + u),
                  (d = f - (y = f - this._hi)),
                  (p = c - (g = c - this._lo));
                var m =
                    (h = f + (y = (d = l - y + (this._hi - d)) + c)) +
                    (y = (p = u - g + (this._lo - p)) + (y + (f - h))),
                  v = y + (h - m);
                return (this._hi = m), (this._lo = v), this;
              }
            }),
            (D.prototype.selfMultiply = function() {
              if (1 === arguments.length) {
                if (arguments[0] instanceof D) {
                  var t = arguments[0];
                  return this.selfMultiply(t._hi, t._lo);
                }
                if ("number" == typeof arguments[0]) {
                  var e = arguments[0];
                  return this.selfMultiply(e, 0);
                }
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1],
                  i = null,
                  o = null,
                  s = null,
                  a = null,
                  l = null,
                  u = null;
                (i = (l = D.SPLIT * this._hi) - this._hi),
                  (u = D.SPLIT * r),
                  (i = l - i),
                  (o = this._hi - i),
                  (s = u - r);
                var h =
                    (l = this._hi * r) +
                    (u =
                      i * (s = u - s) -
                      l +
                      i * (a = r - s) +
                      o * s +
                      o * a +
                      (this._hi * n + this._lo * r)),
                  c = u + (i = l - h);
                return (this._hi = h), (this._lo = c), this;
              }
            }),
            (D.prototype.selfSqr = function() {
              return this.selfMultiply(this);
            }),
            (D.prototype.floor = function() {
              if (this.isNaN()) return D.NaN;
              var t = Math.floor(this._hi),
                e = 0;
              return t === this._hi && (e = Math.floor(this._lo)), new D(t, e);
            }),
            (D.prototype.negate = function() {
              return this.isNaN() ? this : new D(-this._hi, -this._lo);
            }),
            (D.prototype.clone = function() {}),
            (D.prototype.multiply = function() {
              if (arguments[0] instanceof D) {
                var t = arguments[0];
                return t.isNaN() ? D.createNaN() : D.copy(this).selfMultiply(t);
              }
              if ("number" == typeof arguments[0]) {
                var e = arguments[0];
                return _.isNaN(e)
                  ? D.createNaN()
                  : D.copy(this).selfMultiply(e, 0);
              }
            }),
            (D.prototype.isNaN = function() {
              return _.isNaN(this._hi);
            }),
            (D.prototype.intValue = function() {
              return Math.trunc(this._hi);
            }),
            (D.prototype.toString = function() {
              var t = D.magnitude(this._hi);
              return t >= -3 && t <= 20
                ? this.toStandardNotation()
                : this.toSciNotation();
            }),
            (D.prototype.toStandardNotation = function() {
              var t = this.getSpecialNumberString();
              if (null !== t) return t;
              var e = new Array(1).fill(null),
                r = this.extractSignificantDigits(!0, e),
                n = e[0] + 1,
                i = r;
              if ("." === r.charAt(0)) i = "0" + r;
              else if (n < 0) i = "0." + D.stringOfChar("0", -n) + r;
              else if (-1 === r.indexOf(".")) {
                var o = n - r.length;
                i = r + D.stringOfChar("0", o) + ".0";
              }
              return this.isNegative() ? "-" + i : i;
            }),
            (D.prototype.reciprocal = function() {
              var t,
                e,
                r,
                n,
                i = null,
                o = null,
                s = null,
                a = null;
              (t = (r = 1 / this._hi) - (i = (s = D.SPLIT * r) - (i = s - r))),
                (o = (a = D.SPLIT * this._hi) - this._hi);
              var l =
                r +
                (s =
                  (1 -
                    (n = r * this._hi) -
                    (a =
                      i * (o = a - o) -
                      n +
                      i * (e = this._hi - o) +
                      t * o +
                      t * e) -
                    r * this._lo) /
                  this._hi);
              return new D(l, r - l + s);
            }),
            (D.prototype.toSciNotation = function() {
              if (this.isZero()) return D.SCI_NOT_ZERO;
              var t = this.getSpecialNumberString();
              if (null !== t) return t;
              var e = new Array(1).fill(null),
                r = this.extractSignificantDigits(!1, e),
                n = D.SCI_NOT_EXPONENT_CHAR + e[0];
              if ("0" === r.charAt(0))
                throw new Error("Found leading zero: " + r);
              var i = "";
              r.length > 1 && (i = r.substring(1));
              var o = r.charAt(0) + "." + i;
              return this.isNegative() ? "-" + o + n : o + n;
            }),
            (D.prototype.abs = function() {
              return this.isNaN()
                ? D.NaN
                : this.isNegative()
                ? this.negate()
                : new D(this);
            }),
            (D.prototype.isPositive = function() {
              return (this._hi > 0 || 0 === this._hi) && this._lo > 0;
            }),
            (D.prototype.lt = function(t) {
              return (
                (this._hi < t._hi || this._hi === t._hi) && this._lo < t._lo
              );
            }),
            (D.prototype.add = function() {
              if (arguments[0] instanceof D) {
                var t = arguments[0];
                return D.copy(this).selfAdd(t);
              }
              if ("number" == typeof arguments[0]) {
                var e = arguments[0];
                return D.copy(this).selfAdd(e);
              }
            }),
            (D.prototype.init = function() {
              if (1 === arguments.length) {
                if ("number" == typeof arguments[0]) {
                  var t = arguments[0];
                  (this._hi = t), (this._lo = 0);
                } else if (arguments[0] instanceof D) {
                  var e = arguments[0];
                  (this._hi = e._hi), (this._lo = e._lo);
                }
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                (this._hi = r), (this._lo = n);
              }
            }),
            (D.prototype.gt = function(t) {
              return (
                (this._hi > t._hi || this._hi === t._hi) && this._lo > t._lo
              );
            }),
            (D.prototype.isNegative = function() {
              return (this._hi < 0 || 0 === this._hi) && this._lo < 0;
            }),
            (D.prototype.trunc = function() {
              return this.isNaN()
                ? D.NaN
                : this.isPositive()
                ? this.floor()
                : this.ceil();
            }),
            (D.prototype.signum = function() {
              return this._hi > 0
                ? 1
                : this._hi < 0
                ? -1
                : this._lo > 0
                ? 1
                : this._lo < 0
                ? -1
                : 0;
            }),
            (D.prototype.interfaces_ = function() {
              return [e, b, S];
            }),
            (D.prototype.getClass = function() {
              return D;
            }),
            (D.sqr = function(t) {
              return D.valueOf(t).selfMultiply(t);
            }),
            (D.valueOf = function() {
              if ("string" == typeof arguments[0]) {
                var t = arguments[0];
                return D.parse(t);
              }
              if ("number" == typeof arguments[0]) return new D(arguments[0]);
            }),
            (D.sqrt = function(t) {
              return D.valueOf(t).sqrt();
            }),
            (D.parse = function(t) {
              for (var e = 0, r = t.length; F.isWhitespace(t.charAt(e)); ) e++;
              var n = !1;
              if (e < r) {
                var i = t.charAt(e);
                ("-" !== i && "+" !== i) || (e++, "-" === i && (n = !0));
              }
              for (var o = new D(), s = 0, a = 0, l = 0; !(e >= r); ) {
                var u = t.charAt(e);
                if ((e++, F.isDigit(u))) {
                  var h = u - "0";
                  o.selfMultiply(D.TEN), o.selfAdd(h), s++;
                } else {
                  if ("." !== u) {
                    if ("e" === u || "E" === u) {
                      var c = t.substring(e);
                      try {
                        l = R.parseInt(c);
                      } catch (e) {
                        throw e instanceof Error
                          ? new Error(
                              "Invalid exponent " + c + " in string " + t
                            )
                          : e;
                      }
                      break;
                    }
                    throw new Error(
                      "Unexpected character '" +
                        u +
                        "' at position " +
                        e +
                        " in string " +
                        t
                    );
                  }
                  a = s;
                }
              }
              var p = o,
                f = s - a - l;
              if (0 === f) p = o;
              else if (f > 0) {
                var d = D.TEN.pow(f);
                p = o.divide(d);
              } else if (f < 0) {
                var y = D.TEN.pow(-f);
                p = o.multiply(y);
              }
              return n ? p.negate() : p;
            }),
            (D.createNaN = function() {
              return new D(_.NaN, _.NaN);
            }),
            (D.copy = function(t) {
              return new D(t);
            }),
            (D.magnitude = function(t) {
              var e = Math.abs(t),
                r = Math.log(e) / Math.log(10),
                n = Math.trunc(Math.floor(r));
              return 10 * Math.pow(10, n) <= e && (n += 1), n;
            }),
            (D.stringOfChar = function(t, e) {
              for (var r = new A(), n = 0; n < e; n++) r.append(t);
              return r.toString();
            }),
            (j.PI.get = function() {
              return new D(3.141592653589793, 12246467991473532e-32);
            }),
            (j.TWO_PI.get = function() {
              return new D(6.283185307179586, 24492935982947064e-32);
            }),
            (j.PI_2.get = function() {
              return new D(1.5707963267948966, 6123233995736766e-32);
            }),
            (j.E.get = function() {
              return new D(2.718281828459045, 14456468917292502e-32);
            }),
            (j.NaN.get = function() {
              return new D(_.NaN, _.NaN);
            }),
            (j.EPS.get = function() {
              return 123259516440783e-46;
            }),
            (j.SPLIT.get = function() {
              return 134217729;
            }),
            (j.MAX_PRINT_DIGITS.get = function() {
              return 32;
            }),
            (j.TEN.get = function() {
              return D.valueOf(10);
            }),
            (j.ONE.get = function() {
              return D.valueOf(1);
            }),
            (j.SCI_NOT_EXPONENT_CHAR.get = function() {
              return "E";
            }),
            (j.SCI_NOT_ZERO.get = function() {
              return "0.0E0";
            }),
            Object.defineProperties(D, j);
          var U = function() {},
            G = { DP_SAFE_EPSILON: { configurable: !0 } };
          (U.prototype.interfaces_ = function() {
            return [];
          }),
            (U.prototype.getClass = function() {
              return U;
            }),
            (U.orientationIndex = function(t, e, r) {
              var n = U.orientationIndexFilter(t, e, r);
              if (n <= 1) return n;
              var i = D.valueOf(e.x).selfAdd(-t.x),
                o = D.valueOf(e.y).selfAdd(-t.y),
                s = D.valueOf(r.x).selfAdd(-e.x),
                a = D.valueOf(r.y).selfAdd(-e.y);
              return i
                .selfMultiply(a)
                .selfSubtract(o.selfMultiply(s))
                .signum();
            }),
            (U.signOfDet2x2 = function(t, e, r, n) {
              return t
                .multiply(n)
                .selfSubtract(e.multiply(r))
                .signum();
            }),
            (U.intersection = function(t, e, r, n) {
              var i = D.valueOf(n.y)
                  .selfSubtract(r.y)
                  .selfMultiply(D.valueOf(e.x).selfSubtract(t.x)),
                o = D.valueOf(n.x)
                  .selfSubtract(r.x)
                  .selfMultiply(D.valueOf(e.y).selfSubtract(t.y)),
                s = i.subtract(o),
                a = D.valueOf(n.x)
                  .selfSubtract(r.x)
                  .selfMultiply(D.valueOf(t.y).selfSubtract(r.y)),
                l = D.valueOf(n.y)
                  .selfSubtract(r.y)
                  .selfMultiply(D.valueOf(t.x).selfSubtract(r.x)),
                u = a
                  .subtract(l)
                  .selfDivide(s)
                  .doubleValue(),
                h = D.valueOf(t.x)
                  .selfAdd(
                    D.valueOf(e.x)
                      .selfSubtract(t.x)
                      .selfMultiply(u)
                  )
                  .doubleValue(),
                c = D.valueOf(e.x)
                  .selfSubtract(t.x)
                  .selfMultiply(D.valueOf(t.y).selfSubtract(r.y)),
                p = D.valueOf(e.y)
                  .selfSubtract(t.y)
                  .selfMultiply(D.valueOf(t.x).selfSubtract(r.x)),
                f = c
                  .subtract(p)
                  .selfDivide(s)
                  .doubleValue(),
                d = D.valueOf(r.y)
                  .selfAdd(
                    D.valueOf(n.y)
                      .selfSubtract(r.y)
                      .selfMultiply(f)
                  )
                  .doubleValue();
              return new w(h, d);
            }),
            (U.orientationIndexFilter = function(t, e, r) {
              var n = null,
                i = (t.x - r.x) * (e.y - r.y),
                o = (t.y - r.y) * (e.x - r.x),
                s = i - o;
              if (i > 0) {
                if (o <= 0) return U.signum(s);
                n = i + o;
              } else {
                if (!(i < 0)) return U.signum(s);
                if (o >= 0) return U.signum(s);
                n = -i - o;
              }
              var a = U.DP_SAFE_EPSILON * n;
              return s >= a || -s >= a ? U.signum(s) : 2;
            }),
            (U.signum = function(t) {
              return t > 0 ? 1 : t < 0 ? -1 : 0;
            }),
            (G.DP_SAFE_EPSILON.get = function() {
              return 1e-15;
            }),
            Object.defineProperties(U, G);
          var B = function() {},
            k = {
              X: { configurable: !0 },
              Y: { configurable: !0 },
              Z: { configurable: !0 },
              M: { configurable: !0 }
            };
          (k.X.get = function() {
            return 0;
          }),
            (k.Y.get = function() {
              return 1;
            }),
            (k.Z.get = function() {
              return 2;
            }),
            (k.M.get = function() {
              return 3;
            }),
            (B.prototype.setOrdinate = function(t, e, r) {}),
            (B.prototype.size = function() {}),
            (B.prototype.getOrdinate = function(t, e) {}),
            (B.prototype.getCoordinate = function() {}),
            (B.prototype.getCoordinateCopy = function(t) {}),
            (B.prototype.getDimension = function() {}),
            (B.prototype.getX = function(t) {}),
            (B.prototype.clone = function() {}),
            (B.prototype.expandEnvelope = function(t) {}),
            (B.prototype.copy = function() {}),
            (B.prototype.getY = function(t) {}),
            (B.prototype.toCoordinateArray = function() {}),
            (B.prototype.interfaces_ = function() {
              return [S];
            }),
            (B.prototype.getClass = function() {
              return B;
            }),
            Object.defineProperties(B, k);
          var q = function() {},
            z = (function(t) {
              function e() {
                t.call(
                  this,
                  "Projective point not representable on the Cartesian plane."
                );
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(q),
            V = function() {};
          (V.arraycopy = function(t, e, r, n, i) {
            for (var o = 0, s = e; s < e + i; s++) (r[n + o] = t[s]), o++;
          }),
            (V.getProperty = function(t) {
              return { "line.separator": "\n" }[t];
            });
          var W = function t() {
            if (
              ((this.x = null),
              (this.y = null),
              (this.w = null),
              0 === arguments.length)
            )
              (this.x = 0), (this.y = 0), (this.w = 1);
            else if (1 === arguments.length) {
              var e = arguments[0];
              (this.x = e.x), (this.y = e.y), (this.w = 1);
            } else if (2 === arguments.length) {
              if (
                "number" == typeof arguments[0] &&
                "number" == typeof arguments[1]
              ) {
                var r = arguments[0],
                  n = arguments[1];
                (this.x = r), (this.y = n), (this.w = 1);
              } else if (
                arguments[0] instanceof t &&
                arguments[1] instanceof t
              ) {
                var i = arguments[0],
                  o = arguments[1];
                (this.x = i.y * o.w - o.y * i.w),
                  (this.y = o.x * i.w - i.x * o.w),
                  (this.w = i.x * o.y - o.x * i.y);
              } else if (
                arguments[0] instanceof w &&
                arguments[1] instanceof w
              ) {
                var s = arguments[0],
                  a = arguments[1];
                (this.x = s.y - a.y),
                  (this.y = a.x - s.x),
                  (this.w = s.x * a.y - a.x * s.y);
              }
            } else if (3 === arguments.length) {
              var l = arguments[0],
                u = arguments[1],
                h = arguments[2];
              (this.x = l), (this.y = u), (this.w = h);
            } else if (4 === arguments.length) {
              var c = arguments[0],
                p = arguments[1],
                f = arguments[2],
                d = arguments[3],
                y = c.y - p.y,
                g = p.x - c.x,
                m = c.x * p.y - p.x * c.y,
                v = f.y - d.y,
                _ = d.x - f.x,
                x = f.x * d.y - d.x * f.y;
              (this.x = g * x - _ * m),
                (this.y = v * m - y * x),
                (this.w = y * _ - v * g);
            }
          };
          (W.prototype.getY = function() {
            var t = this.y / this.w;
            if (_.isNaN(t) || _.isInfinite(t)) throw new z();
            return t;
          }),
            (W.prototype.getX = function() {
              var t = this.x / this.w;
              if (_.isNaN(t) || _.isInfinite(t)) throw new z();
              return t;
            }),
            (W.prototype.getCoordinate = function() {
              var t = new w();
              return (t.x = this.getX()), (t.y = this.getY()), t;
            }),
            (W.prototype.interfaces_ = function() {
              return [];
            }),
            (W.prototype.getClass = function() {
              return W;
            }),
            (W.intersection = function(t, e, r, n) {
              var i = t.y - e.y,
                o = e.x - t.x,
                s = t.x * e.y - e.x * t.y,
                a = r.y - n.y,
                l = n.x - r.x,
                u = r.x * n.y - n.x * r.y,
                h = i * l - a * o,
                c = (o * u - l * s) / h,
                p = (a * s - i * u) / h;
              if (
                _.isNaN(c) ||
                _.isInfinite(c) ||
                _.isNaN(p) ||
                _.isInfinite(p)
              )
                throw new z();
              return new w(c, p);
            });
          var X = function t() {
              if (
                ((this._minx = null),
                (this._maxx = null),
                (this._miny = null),
                (this._maxy = null),
                0 === arguments.length)
              )
                this.init();
              else if (1 === arguments.length) {
                if (arguments[0] instanceof w) {
                  var e = arguments[0];
                  this.init(e.x, e.x, e.y, e.y);
                } else if (arguments[0] instanceof t) {
                  var r = arguments[0];
                  this.init(r);
                }
              } else if (2 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1];
                this.init(n.x, i.x, n.y, i.y);
              } else if (4 === arguments.length) {
                var o = arguments[0],
                  s = arguments[1],
                  a = arguments[2],
                  l = arguments[3];
                this.init(o, s, a, l);
              }
            },
            Y = { serialVersionUID: { configurable: !0 } };
          (X.prototype.getArea = function() {
            return this.getWidth() * this.getHeight();
          }),
            (X.prototype.equals = function(t) {
              if (!(t instanceof X)) return !1;
              var e = t;
              return this.isNull()
                ? e.isNull()
                : this._maxx === e.getMaxX() &&
                    this._maxy === e.getMaxY() &&
                    this._minx === e.getMinX() &&
                    this._miny === e.getMinY();
            }),
            (X.prototype.intersection = function(t) {
              if (this.isNull() || t.isNull() || !this.intersects(t))
                return new X();
              var e = this._minx > t._minx ? this._minx : t._minx,
                r = this._miny > t._miny ? this._miny : t._miny,
                n = this._maxx < t._maxx ? this._maxx : t._maxx,
                i = this._maxy < t._maxy ? this._maxy : t._maxy;
              return new X(e, n, r, i);
            }),
            (X.prototype.isNull = function() {
              return this._maxx < this._minx;
            }),
            (X.prototype.getMaxX = function() {
              return this._maxx;
            }),
            (X.prototype.covers = function() {
              if (1 === arguments.length) {
                if (arguments[0] instanceof w) {
                  var t = arguments[0];
                  return this.covers(t.x, t.y);
                }
                if (arguments[0] instanceof X) {
                  var e = arguments[0];
                  return (
                    !this.isNull() &&
                    !e.isNull() &&
                    e.getMinX() >= this._minx &&
                    e.getMaxX() <= this._maxx &&
                    e.getMinY() >= this._miny &&
                    e.getMaxY() <= this._maxy
                  );
                }
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                return (
                  !this.isNull() &&
                  r >= this._minx &&
                  r <= this._maxx &&
                  n >= this._miny &&
                  n <= this._maxy
                );
              }
            }),
            (X.prototype.intersects = function() {
              if (1 === arguments.length) {
                if (arguments[0] instanceof X) {
                  var t = arguments[0];
                  return (
                    !this.isNull() &&
                    !t.isNull() &&
                    !(
                      t._minx > this._maxx ||
                      t._maxx < this._minx ||
                      t._miny > this._maxy ||
                      t._maxy < this._miny
                    )
                  );
                }
                if (arguments[0] instanceof w) {
                  var e = arguments[0];
                  return this.intersects(e.x, e.y);
                }
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                return (
                  !this.isNull() &&
                  !(
                    r > this._maxx ||
                    r < this._minx ||
                    n > this._maxy ||
                    n < this._miny
                  )
                );
              }
            }),
            (X.prototype.getMinY = function() {
              return this._miny;
            }),
            (X.prototype.getMinX = function() {
              return this._minx;
            }),
            (X.prototype.expandToInclude = function() {
              if (1 === arguments.length) {
                if (arguments[0] instanceof w) {
                  var t = arguments[0];
                  this.expandToInclude(t.x, t.y);
                } else if (arguments[0] instanceof X) {
                  var e = arguments[0];
                  if (e.isNull()) return null;
                  this.isNull()
                    ? ((this._minx = e.getMinX()),
                      (this._maxx = e.getMaxX()),
                      (this._miny = e.getMinY()),
                      (this._maxy = e.getMaxY()))
                    : (e._minx < this._minx && (this._minx = e._minx),
                      e._maxx > this._maxx && (this._maxx = e._maxx),
                      e._miny < this._miny && (this._miny = e._miny),
                      e._maxy > this._maxy && (this._maxy = e._maxy));
                }
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                this.isNull()
                  ? ((this._minx = r),
                    (this._maxx = r),
                    (this._miny = n),
                    (this._maxy = n))
                  : (r < this._minx && (this._minx = r),
                    r > this._maxx && (this._maxx = r),
                    n < this._miny && (this._miny = n),
                    n > this._maxy && (this._maxy = n));
              }
            }),
            (X.prototype.minExtent = function() {
              if (this.isNull()) return 0;
              var t = this.getWidth(),
                e = this.getHeight();
              return t < e ? t : e;
            }),
            (X.prototype.getWidth = function() {
              return this.isNull() ? 0 : this._maxx - this._minx;
            }),
            (X.prototype.compareTo = function(t) {
              var e = t;
              return this.isNull()
                ? e.isNull()
                  ? 0
                  : -1
                : e.isNull()
                ? 1
                : this._minx < e._minx
                ? -1
                : this._minx > e._minx
                ? 1
                : this._miny < e._miny
                ? -1
                : this._miny > e._miny
                ? 1
                : this._maxx < e._maxx
                ? -1
                : this._maxx > e._maxx
                ? 1
                : this._maxy < e._maxy
                ? -1
                : this._maxy > e._maxy
                ? 1
                : 0;
            }),
            (X.prototype.translate = function(t, e) {
              if (this.isNull()) return null;
              this.init(
                this.getMinX() + t,
                this.getMaxX() + t,
                this.getMinY() + e,
                this.getMaxY() + e
              );
            }),
            (X.prototype.toString = function() {
              return (
                "Env[" +
                this._minx +
                " : " +
                this._maxx +
                ", " +
                this._miny +
                " : " +
                this._maxy +
                "]"
              );
            }),
            (X.prototype.setToNull = function() {
              (this._minx = 0),
                (this._maxx = -1),
                (this._miny = 0),
                (this._maxy = -1);
            }),
            (X.prototype.getHeight = function() {
              return this.isNull() ? 0 : this._maxy - this._miny;
            }),
            (X.prototype.maxExtent = function() {
              if (this.isNull()) return 0;
              var t = this.getWidth(),
                e = this.getHeight();
              return t > e ? t : e;
            }),
            (X.prototype.expandBy = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.expandBy(t, t);
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                if (this.isNull()) return null;
                (this._minx -= e),
                  (this._maxx += e),
                  (this._miny -= r),
                  (this._maxy += r),
                  (this._minx > this._maxx || this._miny > this._maxy) &&
                    this.setToNull();
              }
            }),
            (X.prototype.contains = function() {
              if (1 === arguments.length) {
                if (arguments[0] instanceof X) {
                  var t = arguments[0];
                  return this.covers(t);
                }
                if (arguments[0] instanceof w) {
                  var e = arguments[0];
                  return this.covers(e);
                }
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                return this.covers(r, n);
              }
            }),
            (X.prototype.centre = function() {
              return this.isNull()
                ? null
                : new w(
                    (this.getMinX() + this.getMaxX()) / 2,
                    (this.getMinY() + this.getMaxY()) / 2
                  );
            }),
            (X.prototype.init = function() {
              if (0 === arguments.length) this.setToNull();
              else if (1 === arguments.length) {
                if (arguments[0] instanceof w) {
                  var t = arguments[0];
                  this.init(t.x, t.x, t.y, t.y);
                } else if (arguments[0] instanceof X) {
                  var e = arguments[0];
                  (this._minx = e._minx),
                    (this._maxx = e._maxx),
                    (this._miny = e._miny),
                    (this._maxy = e._maxy);
                }
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                this.init(r.x, n.x, r.y, n.y);
              } else if (4 === arguments.length) {
                var i = arguments[0],
                  o = arguments[1],
                  s = arguments[2],
                  a = arguments[3];
                i < o
                  ? ((this._minx = i), (this._maxx = o))
                  : ((this._minx = o), (this._maxx = i)),
                  s < a
                    ? ((this._miny = s), (this._maxy = a))
                    : ((this._miny = a), (this._maxy = s));
              }
            }),
            (X.prototype.getMaxY = function() {
              return this._maxy;
            }),
            (X.prototype.distance = function(t) {
              if (this.intersects(t)) return 0;
              var e = 0;
              this._maxx < t._minx
                ? (e = t._minx - this._maxx)
                : this._minx > t._maxx && (e = this._minx - t._maxx);
              var r = 0;
              return (
                this._maxy < t._miny
                  ? (r = t._miny - this._maxy)
                  : this._miny > t._maxy && (r = this._miny - t._maxy),
                0 === e ? r : 0 === r ? e : Math.sqrt(e * e + r * r)
              );
            }),
            (X.prototype.hashCode = function() {
              var t = 17;
              return (
                37 *
                  (t =
                    37 *
                      (t =
                        37 * (t = 37 * t + w.hashCode(this._minx)) +
                        w.hashCode(this._maxx)) +
                    w.hashCode(this._miny)) +
                w.hashCode(this._maxy)
              );
            }),
            (X.prototype.interfaces_ = function() {
              return [b, e];
            }),
            (X.prototype.getClass = function() {
              return X;
            }),
            (X.intersects = function() {
              if (3 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1],
                  r = arguments[2];
                return (
                  r.x >= (t.x < e.x ? t.x : e.x) &&
                  r.x <= (t.x > e.x ? t.x : e.x) &&
                  r.y >= (t.y < e.y ? t.y : e.y) &&
                  r.y <= (t.y > e.y ? t.y : e.y)
                );
              }
              if (4 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1],
                  o = arguments[2],
                  s = arguments[3],
                  a = Math.min(o.x, s.x),
                  l = Math.max(o.x, s.x),
                  u = Math.min(n.x, i.x),
                  h = Math.max(n.x, i.x);
                return !(
                  u > l ||
                  h < a ||
                  ((a = Math.min(o.y, s.y)),
                  (l = Math.max(o.y, s.y)),
                  (u = Math.min(n.y, i.y)),
                  (h = Math.max(n.y, i.y)),
                  u > l || h < a)
                );
              }
            }),
            (Y.serialVersionUID.get = function() {
              return 0x51845cd552189800;
            }),
            Object.defineProperties(X, Y);
          var H = {
              typeStr: /^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,
              emptyTypeStr: /^\s*(\w+)\s*EMPTY\s*$/,
              spaces: /\s+/,
              parenComma: /\)\s*,\s*\(/,
              doubleParenComma: /\)\s*\)\s*,\s*\(\s*\(/,
              trimParens: /^\s*\(?(.*?)\)?\s*$/
            },
            J = function(t) {
              this.geometryFactory = t || new me();
            };
          (J.prototype.read = function(t) {
            var e, r, n;
            t = t.replace(/[\n\r]/g, " ");
            var i = H.typeStr.exec(t);
            if (
              (-1 !== t.search("EMPTY") &&
                ((i = H.emptyTypeStr.exec(t))[2] = void 0),
              i &&
                ((r = i[1].toLowerCase()),
                (n = i[2]),
                Q[r] && (e = Q[r].apply(this, [n]))),
              void 0 === e)
            )
              throw new Error("Could not parse WKT " + t);
            return e;
          }),
            (J.prototype.write = function(t) {
              return this.extractGeometry(t);
            }),
            (J.prototype.extractGeometry = function(t) {
              var e = t.getGeometryType().toLowerCase();
              if (!$[e]) return null;
              var r = e.toUpperCase();
              return t.isEmpty()
                ? r + " EMPTY"
                : r + "(" + $[e].apply(this, [t]) + ")";
            });
          var $ = {
              coordinate: function(t) {
                return t.x + " " + t.y;
              },
              point: function(t) {
                return $.coordinate.call(this, t._coordinates._coordinates[0]);
              },
              multipoint: function(t) {
                for (var e = [], r = 0, n = t._geometries.length; r < n; ++r)
                  e.push("(" + $.point.apply(this, [t._geometries[r]]) + ")");
                return e.join(",");
              },
              linestring: function(t) {
                for (
                  var e = [], r = 0, n = t._points._coordinates.length;
                  r < n;
                  ++r
                )
                  e.push($.coordinate.apply(this, [t._points._coordinates[r]]));
                return e.join(",");
              },
              linearring: function(t) {
                for (
                  var e = [], r = 0, n = t._points._coordinates.length;
                  r < n;
                  ++r
                )
                  e.push($.coordinate.apply(this, [t._points._coordinates[r]]));
                return e.join(",");
              },
              multilinestring: function(t) {
                for (var e = [], r = 0, n = t._geometries.length; r < n; ++r)
                  e.push(
                    "(" + $.linestring.apply(this, [t._geometries[r]]) + ")"
                  );
                return e.join(",");
              },
              polygon: function(t) {
                var e = [];
                e.push("(" + $.linestring.apply(this, [t._shell]) + ")");
                for (var r = 0, n = t._holes.length; r < n; ++r)
                  e.push("(" + $.linestring.apply(this, [t._holes[r]]) + ")");
                return e.join(",");
              },
              multipolygon: function(t) {
                for (var e = [], r = 0, n = t._geometries.length; r < n; ++r)
                  e.push("(" + $.polygon.apply(this, [t._geometries[r]]) + ")");
                return e.join(",");
              },
              geometrycollection: function(t) {
                for (var e = [], r = 0, n = t._geometries.length; r < n; ++r)
                  e.push(this.extractGeometry(t._geometries[r]));
                return e.join(",");
              }
            },
            Q = {
              point: function(t) {
                if (void 0 === t) return this.geometryFactory.createPoint();
                var e = t.trim().split(H.spaces);
                return this.geometryFactory.createPoint(
                  new w(Number.parseFloat(e[0]), Number.parseFloat(e[1]))
                );
              },
              multipoint: function(t) {
                if (void 0 === t)
                  return this.geometryFactory.createMultiPoint();
                for (
                  var e, r = t.trim().split(","), n = [], i = 0, o = r.length;
                  i < o;
                  ++i
                )
                  (e = r[i].replace(H.trimParens, "$1")),
                    n.push(Q.point.apply(this, [e]));
                return this.geometryFactory.createMultiPoint(n);
              },
              linestring: function(t) {
                if (void 0 === t)
                  return this.geometryFactory.createLineString();
                for (
                  var e, r = t.trim().split(","), n = [], i = 0, o = r.length;
                  i < o;
                  ++i
                )
                  (e = r[i].trim().split(H.spaces)),
                    n.push(
                      new w(Number.parseFloat(e[0]), Number.parseFloat(e[1]))
                    );
                return this.geometryFactory.createLineString(n);
              },
              linearring: function(t) {
                if (void 0 === t)
                  return this.geometryFactory.createLinearRing();
                for (
                  var e, r = t.trim().split(","), n = [], i = 0, o = r.length;
                  i < o;
                  ++i
                )
                  (e = r[i].trim().split(H.spaces)),
                    n.push(
                      new w(Number.parseFloat(e[0]), Number.parseFloat(e[1]))
                    );
                return this.geometryFactory.createLinearRing(n);
              },
              multilinestring: function(t) {
                if (void 0 === t)
                  return this.geometryFactory.createMultiLineString();
                for (
                  var e,
                    r = t.trim().split(H.parenComma),
                    n = [],
                    i = 0,
                    o = r.length;
                  i < o;
                  ++i
                )
                  (e = r[i].replace(H.trimParens, "$1")),
                    n.push(Q.linestring.apply(this, [e]));
                return this.geometryFactory.createMultiLineString(n);
              },
              polygon: function(t) {
                if (void 0 === t) return this.geometryFactory.createPolygon();
                for (
                  var e,
                    r,
                    n,
                    i,
                    o = t.trim().split(H.parenComma),
                    s = [],
                    a = 0,
                    l = o.length;
                  a < l;
                  ++a
                )
                  (e = o[a].replace(H.trimParens, "$1")),
                    (r = Q.linestring.apply(this, [e])),
                    (n = this.geometryFactory.createLinearRing(r._points)),
                    0 === a ? (i = n) : s.push(n);
                return this.geometryFactory.createPolygon(i, s);
              },
              multipolygon: function(t) {
                if (void 0 === t)
                  return this.geometryFactory.createMultiPolygon();
                for (
                  var e,
                    r = t.trim().split(H.doubleParenComma),
                    n = [],
                    i = 0,
                    o = r.length;
                  i < o;
                  ++i
                )
                  (e = r[i].replace(H.trimParens, "$1")),
                    n.push(Q.polygon.apply(this, [e]));
                return this.geometryFactory.createMultiPolygon(n);
              },
              geometrycollection: function(t) {
                if (void 0 === t)
                  return this.geometryFactory.createGeometryCollection();
                for (
                  var e = (t = t.replace(/,\s*([A-Za-z])/g, "|$1"))
                      .trim()
                      .split("|"),
                    r = [],
                    n = 0,
                    i = e.length;
                  n < i;
                  ++n
                )
                  r.push(this.read(e[n]));
                return this.geometryFactory.createGeometryCollection(r);
              }
            },
            Z = function(t) {
              this.parser = new J(t);
            };
          (Z.prototype.write = function(t) {
            return this.parser.write(t);
          }),
            (Z.toLineString = function(t, e) {
              if (2 !== arguments.length) throw new Error("Not implemented");
              return (
                "LINESTRING ( " +
                t.x +
                " " +
                t.y +
                ", " +
                e.x +
                " " +
                e.y +
                " )"
              );
            });
          var K = (function(t) {
              function e(e) {
                t.call(this, e),
                  (this.name = "RuntimeException"),
                  (this.message = e),
                  (this.stack = new t().stack);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                e
              );
            })(Error),
            tt = (function(t) {
              function e() {
                if ((t.call(this), 0 === arguments.length)) t.call(this);
                else if (1 === arguments.length) {
                  var e = arguments[0];
                  t.call(this, e);
                }
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(K),
            et = function() {};
          (et.prototype.interfaces_ = function() {
            return [];
          }),
            (et.prototype.getClass = function() {
              return et;
            }),
            (et.shouldNeverReachHere = function() {
              if (0 === arguments.length) et.shouldNeverReachHere(null);
              else if (1 === arguments.length) {
                var t = arguments[0];
                throw new tt(
                  "Should never reach here" + (null !== t ? ": " + t : "")
                );
              }
            }),
            (et.isTrue = function() {
              var t;
              if (1 === arguments.length) et.isTrue(arguments[0], null);
              else if (
                2 === arguments.length &&
                ((t = arguments[1]), !arguments[0])
              )
                throw null === t ? new tt() : new tt(t);
            }),
            (et.equals = function() {
              var t, e, r;
              if (2 === arguments.length)
                et.equals((t = arguments[0]), (e = arguments[1]), null);
              else if (
                3 === arguments.length &&
                ((t = arguments[0]),
                (r = arguments[2]),
                !(e = arguments[1]).equals(t))
              )
                throw new tt(
                  "Expected " +
                    t +
                    " but encountered " +
                    e +
                    (null !== r ? ": " + r : "")
                );
            });
          var rt = function() {
              (this._result = null),
                (this._inputLines = Array(2)
                  .fill()
                  .map(function() {
                    return Array(2);
                  })),
                (this._intPt = new Array(2).fill(null)),
                (this._intLineIndex = null),
                (this._isProper = null),
                (this._pa = null),
                (this._pb = null),
                (this._precisionModel = null),
                (this._intPt[0] = new w()),
                (this._intPt[1] = new w()),
                (this._pa = this._intPt[0]),
                (this._pb = this._intPt[1]),
                (this._result = 0);
            },
            nt = {
              DONT_INTERSECT: { configurable: !0 },
              DO_INTERSECT: { configurable: !0 },
              COLLINEAR: { configurable: !0 },
              NO_INTERSECTION: { configurable: !0 },
              POINT_INTERSECTION: { configurable: !0 },
              COLLINEAR_INTERSECTION: { configurable: !0 }
            };
          (rt.prototype.getIndexAlongSegment = function(t, e) {
            return this.computeIntLineIndex(), this._intLineIndex[t][e];
          }),
            (rt.prototype.getTopologySummary = function() {
              var t = new A();
              return (
                this.isEndPoint() && t.append(" endpoint"),
                this._isProper && t.append(" proper"),
                this.isCollinear() && t.append(" collinear"),
                t.toString()
              );
            }),
            (rt.prototype.computeIntersection = function(t, e, r, n) {
              (this._inputLines[0][0] = t),
                (this._inputLines[0][1] = e),
                (this._inputLines[1][0] = r),
                (this._inputLines[1][1] = n),
                (this._result = this.computeIntersect(t, e, r, n));
            }),
            (rt.prototype.getIntersectionNum = function() {
              return this._result;
            }),
            (rt.prototype.computeIntLineIndex = function() {
              if (0 === arguments.length)
                null === this._intLineIndex &&
                  ((this._intLineIndex = Array(2)
                    .fill()
                    .map(function() {
                      return Array(2);
                    })),
                  this.computeIntLineIndex(0),
                  this.computeIntLineIndex(1));
              else if (1 === arguments.length) {
                var t = arguments[0];
                this.getEdgeDistance(t, 0) > this.getEdgeDistance(t, 1)
                  ? ((this._intLineIndex[t][0] = 0),
                    (this._intLineIndex[t][1] = 1))
                  : ((this._intLineIndex[t][0] = 1),
                    (this._intLineIndex[t][1] = 0));
              }
            }),
            (rt.prototype.isProper = function() {
              return this.hasIntersection() && this._isProper;
            }),
            (rt.prototype.setPrecisionModel = function(t) {
              this._precisionModel = t;
            }),
            (rt.prototype.isInteriorIntersection = function() {
              if (0 === arguments.length)
                return (
                  !!this.isInteriorIntersection(0) ||
                  !!this.isInteriorIntersection(1)
                );
              if (1 === arguments.length) {
                for (var t = arguments[0], e = 0; e < this._result; e++)
                  if (
                    !this._intPt[e].equals2D(this._inputLines[t][0]) &&
                    !this._intPt[e].equals2D(this._inputLines[t][1])
                  )
                    return !0;
                return !1;
              }
            }),
            (rt.prototype.getIntersection = function(t) {
              return this._intPt[t];
            }),
            (rt.prototype.isEndPoint = function() {
              return this.hasIntersection() && !this._isProper;
            }),
            (rt.prototype.hasIntersection = function() {
              return this._result !== rt.NO_INTERSECTION;
            }),
            (rt.prototype.getEdgeDistance = function(t, e) {
              return rt.computeEdgeDistance(
                this._intPt[e],
                this._inputLines[t][0],
                this._inputLines[t][1]
              );
            }),
            (rt.prototype.isCollinear = function() {
              return this._result === rt.COLLINEAR_INTERSECTION;
            }),
            (rt.prototype.toString = function() {
              return (
                Z.toLineString(this._inputLines[0][0], this._inputLines[0][1]) +
                " - " +
                Z.toLineString(this._inputLines[1][0], this._inputLines[1][1]) +
                this.getTopologySummary()
              );
            }),
            (rt.prototype.getEndpoint = function(t, e) {
              return this._inputLines[t][e];
            }),
            (rt.prototype.isIntersection = function(t) {
              for (var e = 0; e < this._result; e++)
                if (this._intPt[e].equals2D(t)) return !0;
              return !1;
            }),
            (rt.prototype.getIntersectionAlongSegment = function(t, e) {
              return (
                this.computeIntLineIndex(),
                this._intPt[this._intLineIndex[t][e]]
              );
            }),
            (rt.prototype.interfaces_ = function() {
              return [];
            }),
            (rt.prototype.getClass = function() {
              return rt;
            }),
            (rt.computeEdgeDistance = function(t, e, r) {
              var n = Math.abs(r.x - e.x),
                i = Math.abs(r.y - e.y),
                o = -1;
              if (t.equals(e)) o = 0;
              else if (t.equals(r)) o = n > i ? n : i;
              else {
                var s = Math.abs(t.x - e.x),
                  a = Math.abs(t.y - e.y);
                0 !== (o = n > i ? s : a) ||
                  t.equals(e) ||
                  (o = Math.max(s, a));
              }
              return (
                et.isTrue(
                  !(0 === o && !t.equals(e)),
                  "Bad distance calculation"
                ),
                o
              );
            }),
            (rt.nonRobustComputeEdgeDistance = function(t, e, r) {
              var n = t.x - e.x,
                i = t.y - e.y,
                o = Math.sqrt(n * n + i * i);
              return (
                et.isTrue(
                  !(0 === o && !t.equals(e)),
                  "Invalid distance calculation"
                ),
                o
              );
            }),
            (nt.DONT_INTERSECT.get = function() {
              return 0;
            }),
            (nt.DO_INTERSECT.get = function() {
              return 1;
            }),
            (nt.COLLINEAR.get = function() {
              return 2;
            }),
            (nt.NO_INTERSECTION.get = function() {
              return 0;
            }),
            (nt.POINT_INTERSECTION.get = function() {
              return 1;
            }),
            (nt.COLLINEAR_INTERSECTION.get = function() {
              return 2;
            }),
            Object.defineProperties(rt, nt);
          var it = (function(t) {
              function e() {
                t.apply(this, arguments);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.isInSegmentEnvelopes = function(t) {
                  var e = new X(this._inputLines[0][0], this._inputLines[0][1]),
                    r = new X(this._inputLines[1][0], this._inputLines[1][1]);
                  return e.contains(t) && r.contains(t);
                }),
                (e.prototype.computeIntersection = function() {
                  if (3 !== arguments.length)
                    return t.prototype.computeIntersection.apply(
                      this,
                      arguments
                    );
                  var e = arguments[0],
                    r = arguments[1],
                    n = arguments[2];
                  if (
                    ((this._isProper = !1),
                    X.intersects(r, n, e) &&
                      0 === at.orientationIndex(r, n, e) &&
                      0 === at.orientationIndex(n, r, e))
                  )
                    return (
                      (this._isProper = !0),
                      (e.equals(r) || e.equals(n)) && (this._isProper = !1),
                      (this._result = t.POINT_INTERSECTION),
                      null
                    );
                  this._result = t.NO_INTERSECTION;
                }),
                (e.prototype.normalizeToMinimum = function(t, e, r, n, i) {
                  (i.x = this.smallestInAbsValue(t.x, e.x, r.x, n.x)),
                    (i.y = this.smallestInAbsValue(t.y, e.y, r.y, n.y)),
                    (t.x -= i.x),
                    (t.y -= i.y),
                    (e.x -= i.x),
                    (e.y -= i.y),
                    (r.x -= i.x),
                    (r.y -= i.y),
                    (n.x -= i.x),
                    (n.y -= i.y);
                }),
                (e.prototype.safeHCoordinateIntersection = function(
                  t,
                  r,
                  n,
                  i
                ) {
                  var o = null;
                  try {
                    o = W.intersection(t, r, n, i);
                  } catch (s) {
                    if (!(s instanceof z)) throw s;
                    o = e.nearestEndpoint(t, r, n, i);
                  }
                  return o;
                }),
                (e.prototype.intersection = function(t, r, n, i) {
                  var o = this.intersectionWithNormalization(t, r, n, i);
                  return (
                    this.isInSegmentEnvelopes(o) ||
                      (o = new w(e.nearestEndpoint(t, r, n, i))),
                    null !== this._precisionModel &&
                      this._precisionModel.makePrecise(o),
                    o
                  );
                }),
                (e.prototype.smallestInAbsValue = function(t, e, r, n) {
                  var i = t,
                    o = Math.abs(i);
                  return (
                    Math.abs(e) < o && ((i = e), (o = Math.abs(e))),
                    Math.abs(r) < o && ((i = r), (o = Math.abs(r))),
                    Math.abs(n) < o && (i = n),
                    i
                  );
                }),
                (e.prototype.checkDD = function(t, e, r, n, i) {
                  var o = U.intersection(t, e, r, n),
                    s = this.isInSegmentEnvelopes(o);
                  V.out.println(
                    "DD in env = " + s + "  --------------------- " + o
                  ),
                    i.distance(o) > 1e-4 &&
                      V.out.println("Distance = " + i.distance(o));
                }),
                (e.prototype.intersectionWithNormalization = function(
                  t,
                  e,
                  r,
                  n
                ) {
                  var i = new w(t),
                    o = new w(e),
                    s = new w(r),
                    a = new w(n),
                    l = new w();
                  this.normalizeToEnvCentre(i, o, s, a, l);
                  var u = this.safeHCoordinateIntersection(i, o, s, a);
                  return (u.x += l.x), (u.y += l.y), u;
                }),
                (e.prototype.computeCollinearIntersection = function(
                  e,
                  r,
                  n,
                  i
                ) {
                  var o = X.intersects(e, r, n),
                    s = X.intersects(e, r, i),
                    a = X.intersects(n, i, e),
                    l = X.intersects(n, i, r);
                  return o && s
                    ? ((this._intPt[0] = n),
                      (this._intPt[1] = i),
                      t.COLLINEAR_INTERSECTION)
                    : a && l
                    ? ((this._intPt[0] = e),
                      (this._intPt[1] = r),
                      t.COLLINEAR_INTERSECTION)
                    : o && a
                    ? ((this._intPt[0] = n),
                      (this._intPt[1] = e),
                      !n.equals(e) || s || l
                        ? t.COLLINEAR_INTERSECTION
                        : t.POINT_INTERSECTION)
                    : o && l
                    ? ((this._intPt[0] = n),
                      (this._intPt[1] = r),
                      !n.equals(r) || s || a
                        ? t.COLLINEAR_INTERSECTION
                        : t.POINT_INTERSECTION)
                    : s && a
                    ? ((this._intPt[0] = i),
                      (this._intPt[1] = e),
                      !i.equals(e) || o || l
                        ? t.COLLINEAR_INTERSECTION
                        : t.POINT_INTERSECTION)
                    : s && l
                    ? ((this._intPt[0] = i),
                      (this._intPt[1] = r),
                      !i.equals(r) || o || a
                        ? t.COLLINEAR_INTERSECTION
                        : t.POINT_INTERSECTION)
                    : t.NO_INTERSECTION;
                }),
                (e.prototype.normalizeToEnvCentre = function(t, e, r, n, i) {
                  var o = t.x < e.x ? t.x : e.x,
                    s = t.y < e.y ? t.y : e.y,
                    a = t.x > e.x ? t.x : e.x,
                    l = t.y > e.y ? t.y : e.y,
                    u = r.x < n.x ? r.x : n.x,
                    h = r.y < n.y ? r.y : n.y,
                    c = r.x > n.x ? r.x : n.x,
                    p = r.y > n.y ? r.y : n.y,
                    f = ((o > u ? o : u) + (a < c ? a : c)) / 2,
                    d = ((s > h ? s : h) + (l < p ? l : p)) / 2;
                  (i.x = f),
                    (i.y = d),
                    (t.x -= i.x),
                    (t.y -= i.y),
                    (e.x -= i.x),
                    (e.y -= i.y),
                    (r.x -= i.x),
                    (r.y -= i.y),
                    (n.x -= i.x),
                    (n.y -= i.y);
                }),
                (e.prototype.computeIntersect = function(e, r, n, i) {
                  if (((this._isProper = !1), !X.intersects(e, r, n, i)))
                    return t.NO_INTERSECTION;
                  var o = at.orientationIndex(e, r, n),
                    s = at.orientationIndex(e, r, i);
                  if ((o > 0 && s > 0) || (o < 0 && s < 0))
                    return t.NO_INTERSECTION;
                  var a = at.orientationIndex(n, i, e),
                    l = at.orientationIndex(n, i, r);
                  return (a > 0 && l > 0) || (a < 0 && l < 0)
                    ? t.NO_INTERSECTION
                    : 0 === o && 0 === s && 0 === a && 0 === l
                    ? this.computeCollinearIntersection(e, r, n, i)
                    : (0 === o || 0 === s || 0 === a || 0 === l
                        ? ((this._isProper = !1),
                          e.equals2D(n) || e.equals2D(i)
                            ? (this._intPt[0] = e)
                            : r.equals2D(n) || r.equals2D(i)
                            ? (this._intPt[0] = r)
                            : 0 === o
                            ? (this._intPt[0] = new w(n))
                            : 0 === s
                            ? (this._intPt[0] = new w(i))
                            : 0 === a
                            ? (this._intPt[0] = new w(e))
                            : 0 === l && (this._intPt[0] = new w(r)))
                        : ((this._isProper = !0),
                          (this._intPt[0] = this.intersection(e, r, n, i))),
                      t.POINT_INTERSECTION);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (e.nearestEndpoint = function(t, e, r, n) {
                  var i = t,
                    o = at.distancePointLine(t, r, n),
                    s = at.distancePointLine(e, r, n);
                  return (
                    s < o && ((o = s), (i = e)),
                    (s = at.distancePointLine(r, t, e)) < o &&
                      ((o = s), (i = r)),
                    (s = at.distancePointLine(n, t, e)) < o &&
                      ((o = s), (i = n)),
                    i
                  );
                }),
                e
              );
            })(rt),
            ot = function() {};
          (ot.prototype.interfaces_ = function() {
            return [];
          }),
            (ot.prototype.getClass = function() {
              return ot;
            }),
            (ot.orientationIndex = function(t, e, r) {
              var n = e.x - t.x,
                i = e.y - t.y,
                o = r.x - e.x,
                s = r.y - e.y;
              return ot.signOfDet2x2(n, i, o, s);
            }),
            (ot.signOfDet2x2 = function(t, e, r, n) {
              var i = null,
                o = null,
                s = null;
              if (((i = 1), 0 === t || 0 === n))
                return 0 === e || 0 === r
                  ? 0
                  : e > 0
                  ? r > 0
                    ? -i
                    : i
                  : r > 0
                  ? i
                  : -i;
              if (0 === e || 0 === r)
                return n > 0 ? (t > 0 ? i : -i) : t > 0 ? -i : i;
              if (
                (e > 0
                  ? n > 0
                    ? e <= n ||
                      ((i = -i),
                      (o = t),
                      (t = r),
                      (r = o),
                      (o = e),
                      (e = n),
                      (n = o))
                    : e <= -n
                    ? ((i = -i), (r = -r), (n = -n))
                    : ((o = t), (t = -r), (r = o), (o = e), (e = -n), (n = o))
                  : n > 0
                  ? -e <= n
                    ? ((i = -i), (t = -t), (e = -e))
                    : ((o = -t), (t = r), (r = o), (o = -e), (e = n), (n = o))
                  : e >= n
                  ? ((t = -t), (e = -e), (r = -r), (n = -n))
                  : ((i = -i),
                    (o = -t),
                    (t = -r),
                    (r = o),
                    (o = -e),
                    (e = -n),
                    (n = o)),
                t > 0)
              ) {
                if (!(r > 0)) return i;
                if (!(t <= r)) return i;
              } else {
                if (r > 0) return -i;
                if (!(t >= r)) return -i;
                (i = -i), (t = -t), (r = -r);
              }
              for (;;) {
                if ((n -= (s = Math.floor(r / t)) * e) < 0) return -i;
                if (n > e) return i;
                if (t > (r -= s * t) + r) {
                  if (e < n + n) return i;
                } else {
                  if (e > n + n) return -i;
                  (r = t - r), (n = e - n), (i = -i);
                }
                if (0 === n) return 0 === r ? 0 : -i;
                if (0 === r) return i;
                if ((e -= (s = Math.floor(t / r)) * n) < 0) return i;
                if (e > n) return -i;
                if (r > (t -= s * r) + t) {
                  if (n < e + e) return -i;
                } else {
                  if (n > e + e) return i;
                  (t = r - t), (e = n - e), (i = -i);
                }
                if (0 === e) return 0 === t ? 0 : i;
                if (0 === t) return -i;
              }
            });
          var st = function() {
            (this._p = null),
              (this._crossingCount = 0),
              (this._isPointOnSegment = !1);
            var t = arguments[0];
            this._p = t;
          };
          (st.prototype.countSegment = function(t, e) {
            if (t.x < this._p.x && e.x < this._p.x) return null;
            if (this._p.x === e.x && this._p.y === e.y)
              return (this._isPointOnSegment = !0), null;
            if (t.y === this._p.y && e.y === this._p.y) {
              var r = t.x,
                n = e.x;
              return (
                r > n && ((r = e.x), (n = t.x)),
                this._p.x >= r &&
                  this._p.x <= n &&
                  (this._isPointOnSegment = !0),
                null
              );
            }
            if (
              (t.y > this._p.y && e.y <= this._p.y) ||
              (e.y > this._p.y && t.y <= this._p.y)
            ) {
              var i = t.x - this._p.x,
                o = t.y - this._p.y,
                s = e.x - this._p.x,
                a = e.y - this._p.y,
                l = ot.signOfDet2x2(i, o, s, a);
              if (0 === l) return (this._isPointOnSegment = !0), null;
              a < o && (l = -l), l > 0 && this._crossingCount++;
            }
          }),
            (st.prototype.isPointInPolygon = function() {
              return this.getLocation() !== M.EXTERIOR;
            }),
            (st.prototype.getLocation = function() {
              return this._isPointOnSegment
                ? M.BOUNDARY
                : this._crossingCount % 2 == 1
                ? M.INTERIOR
                : M.EXTERIOR;
            }),
            (st.prototype.isOnSegment = function() {
              return this._isPointOnSegment;
            }),
            (st.prototype.interfaces_ = function() {
              return [];
            }),
            (st.prototype.getClass = function() {
              return st;
            }),
            (st.locatePointInRing = function() {
              if (arguments[0] instanceof w && O(arguments[1], B)) {
                for (
                  var t = arguments[1],
                    e = new st(arguments[0]),
                    r = new w(),
                    n = new w(),
                    i = 1;
                  i < t.size();
                  i++
                )
                  if (
                    (t.getCoordinate(i, r),
                    t.getCoordinate(i - 1, n),
                    e.countSegment(r, n),
                    e.isOnSegment())
                  )
                    return e.getLocation();
                return e.getLocation();
              }
              if (arguments[0] instanceof w && arguments[1] instanceof Array) {
                for (
                  var o = arguments[1], s = new st(arguments[0]), a = 1;
                  a < o.length;
                  a++
                ) {
                  var l = o[a],
                    u = o[a - 1];
                  if ((s.countSegment(l, u), s.isOnSegment()))
                    return s.getLocation();
                }
                return s.getLocation();
              }
            });
          var at = function() {},
            lt = {
              CLOCKWISE: { configurable: !0 },
              RIGHT: { configurable: !0 },
              COUNTERCLOCKWISE: { configurable: !0 },
              LEFT: { configurable: !0 },
              COLLINEAR: { configurable: !0 },
              STRAIGHT: { configurable: !0 }
            };
          (at.prototype.interfaces_ = function() {
            return [];
          }),
            (at.prototype.getClass = function() {
              return at;
            }),
            (at.orientationIndex = function(t, e, r) {
              return U.orientationIndex(t, e, r);
            }),
            (at.signedArea = function() {
              if (arguments[0] instanceof Array) {
                var t = arguments[0];
                if (t.length < 3) return 0;
                for (var e = 0, r = t[0].x, n = 1; n < t.length - 1; n++) {
                  var i = t[n].x - r,
                    o = t[n + 1].y;
                  e += i * (t[n - 1].y - o);
                }
                return e / 2;
              }
              if (O(arguments[0], B)) {
                var s = arguments[0],
                  a = s.size();
                if (a < 3) return 0;
                var l = new w(),
                  u = new w(),
                  h = new w();
                s.getCoordinate(0, u), s.getCoordinate(1, h);
                var c = u.x;
                h.x -= c;
                for (var p = 0, f = 1; f < a - 1; f++)
                  (l.y = u.y),
                    (u.x = h.x),
                    (u.y = h.y),
                    s.getCoordinate(f + 1, h),
                    (h.x -= c),
                    (p += u.x * (l.y - h.y));
                return p / 2;
              }
            }),
            (at.distanceLineLine = function(t, e, r, n) {
              if (t.equals(e)) return at.distancePointLine(t, r, n);
              if (r.equals(n)) return at.distancePointLine(n, t, e);
              var i = !1;
              if (X.intersects(t, e, r, n)) {
                var o = (e.x - t.x) * (n.y - r.y) - (e.y - t.y) * (n.x - r.x);
                if (0 === o) i = !0;
                else {
                  var s = (t.y - r.y) * (n.x - r.x) - (t.x - r.x) * (n.y - r.y),
                    a =
                      ((t.y - r.y) * (e.x - t.x) - (t.x - r.x) * (e.y - t.y)) /
                      o,
                    l = s / o;
                  (l < 0 || l > 1 || a < 0 || a > 1) && (i = !0);
                }
              } else i = !0;
              return i
                ? L.min(
                    at.distancePointLine(t, r, n),
                    at.distancePointLine(e, r, n),
                    at.distancePointLine(r, t, e),
                    at.distancePointLine(n, t, e)
                  )
                : 0;
            }),
            (at.isPointInRing = function(t, e) {
              return at.locatePointInRing(t, e) !== M.EXTERIOR;
            }),
            (at.computeLength = function(t) {
              var e = t.size();
              if (e <= 1) return 0;
              var r = 0,
                n = new w();
              t.getCoordinate(0, n);
              for (var i = n.x, o = n.y, s = 1; s < e; s++) {
                t.getCoordinate(s, n);
                var a = n.x,
                  l = n.y,
                  u = a - i,
                  h = l - o;
                (r += Math.sqrt(u * u + h * h)), (i = a), (o = l);
              }
              return r;
            }),
            (at.isCCW = function(t) {
              var e = t.length - 1;
              if (e < 3)
                throw new v(
                  "Ring has fewer than 4 points, so orientation cannot be determined"
                );
              for (var r = t[0], n = 0, i = 1; i <= e; i++) {
                var o = t[i];
                o.y > r.y && ((r = o), (n = i));
              }
              var s = n;
              do {
                (s -= 1) < 0 && (s = e);
              } while (t[s].equals2D(r) && s !== n);
              var a = n;
              do {
                a = (a + 1) % e;
              } while (t[a].equals2D(r) && a !== n);
              var l = t[s],
                u = t[a];
              if (l.equals2D(r) || u.equals2D(r) || l.equals2D(u)) return !1;
              var h = at.computeOrientation(l, r, u);
              return 0 === h ? l.x > u.x : h > 0;
            }),
            (at.locatePointInRing = function(t, e) {
              return st.locatePointInRing(t, e);
            }),
            (at.distancePointLinePerpendicular = function(t, e, r) {
              var n = (r.x - e.x) * (r.x - e.x) + (r.y - e.y) * (r.y - e.y),
                i = ((e.y - t.y) * (r.x - e.x) - (e.x - t.x) * (r.y - e.y)) / n;
              return Math.abs(i) * Math.sqrt(n);
            }),
            (at.computeOrientation = function(t, e, r) {
              return at.orientationIndex(t, e, r);
            }),
            (at.distancePointLine = function() {
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                if (0 === e.length)
                  throw new v("Line array must contain at least one vertex");
                for (var r = t.distance(e[0]), n = 0; n < e.length - 1; n++) {
                  var i = at.distancePointLine(t, e[n], e[n + 1]);
                  i < r && (r = i);
                }
                return r;
              }
              if (3 === arguments.length) {
                var o = arguments[0],
                  s = arguments[1],
                  a = arguments[2];
                if (s.x === a.x && s.y === a.y) return o.distance(s);
                var l = (a.x - s.x) * (a.x - s.x) + (a.y - s.y) * (a.y - s.y),
                  u =
                    ((o.x - s.x) * (a.x - s.x) + (o.y - s.y) * (a.y - s.y)) / l;
                if (u <= 0) return o.distance(s);
                if (u >= 1) return o.distance(a);
                var h =
                  ((s.y - o.y) * (a.x - s.x) - (s.x - o.x) * (a.y - s.y)) / l;
                return Math.abs(h) * Math.sqrt(l);
              }
            }),
            (at.isOnLine = function(t, e) {
              for (var r = new it(), n = 1; n < e.length; n++) {
                var i = e[n - 1],
                  o = e[n];
                if ((r.computeIntersection(t, i, o), r.hasIntersection()))
                  return !0;
              }
              return !1;
            }),
            (lt.CLOCKWISE.get = function() {
              return -1;
            }),
            (lt.RIGHT.get = function() {
              return at.CLOCKWISE;
            }),
            (lt.COUNTERCLOCKWISE.get = function() {
              return 1;
            }),
            (lt.LEFT.get = function() {
              return at.COUNTERCLOCKWISE;
            }),
            (lt.COLLINEAR.get = function() {
              return 0;
            }),
            (lt.STRAIGHT.get = function() {
              return at.COLLINEAR;
            }),
            Object.defineProperties(at, lt);
          var ut = function() {};
          (ut.prototype.filter = function(t) {}),
            (ut.prototype.interfaces_ = function() {
              return [];
            }),
            (ut.prototype.getClass = function() {
              return ut;
            });
          var ht = function() {
              var t = arguments[0];
              (this._envelope = null),
                (this._factory = null),
                (this._SRID = null),
                (this._userData = null),
                (this._factory = t),
                (this._SRID = t.getSRID());
            },
            ct = {
              serialVersionUID: { configurable: !0 },
              SORTINDEX_POINT: { configurable: !0 },
              SORTINDEX_MULTIPOINT: { configurable: !0 },
              SORTINDEX_LINESTRING: { configurable: !0 },
              SORTINDEX_LINEARRING: { configurable: !0 },
              SORTINDEX_MULTILINESTRING: { configurable: !0 },
              SORTINDEX_POLYGON: { configurable: !0 },
              SORTINDEX_MULTIPOLYGON: { configurable: !0 },
              SORTINDEX_GEOMETRYCOLLECTION: { configurable: !0 },
              geometryChangedFilter: { configurable: !0 }
            };
          (ht.prototype.isGeometryCollection = function() {
            return this.getSortIndex() === ht.SORTINDEX_GEOMETRYCOLLECTION;
          }),
            (ht.prototype.getFactory = function() {
              return this._factory;
            }),
            (ht.prototype.getGeometryN = function(t) {
              return this;
            }),
            (ht.prototype.getArea = function() {
              return 0;
            }),
            (ht.prototype.isRectangle = function() {
              return !1;
            }),
            (ht.prototype.equals = function() {
              if (arguments[0] instanceof ht) {
                var t = arguments[0];
                return null !== t && this.equalsTopo(t);
              }
              if (arguments[0] instanceof Object) {
                var e = arguments[0];
                if (!(e instanceof ht)) return !1;
                var r = e;
                return this.equalsExact(r);
              }
            }),
            (ht.prototype.equalsExact = function(t) {
              return this === t || this.equalsExact(t, 0);
            }),
            (ht.prototype.geometryChanged = function() {
              this.apply(ht.geometryChangedFilter);
            }),
            (ht.prototype.geometryChangedAction = function() {
              this._envelope = null;
            }),
            (ht.prototype.equalsNorm = function(t) {
              return null !== t && this.norm().equalsExact(t.norm());
            }),
            (ht.prototype.getLength = function() {
              return 0;
            }),
            (ht.prototype.getNumGeometries = function() {
              return 1;
            }),
            (ht.prototype.compareTo = function() {
              if (1 === arguments.length) {
                var t = arguments[0],
                  e = t;
                return this.getSortIndex() !== e.getSortIndex()
                  ? this.getSortIndex() - e.getSortIndex()
                  : this.isEmpty() && e.isEmpty()
                  ? 0
                  : this.isEmpty()
                  ? -1
                  : e.isEmpty()
                  ? 1
                  : this.compareToSameClass(t);
              }
              if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                return this.getSortIndex() !== r.getSortIndex()
                  ? this.getSortIndex() - r.getSortIndex()
                  : this.isEmpty() && r.isEmpty()
                  ? 0
                  : this.isEmpty()
                  ? -1
                  : r.isEmpty()
                  ? 1
                  : this.compareToSameClass(r, n);
              }
            }),
            (ht.prototype.getUserData = function() {
              return this._userData;
            }),
            (ht.prototype.getSRID = function() {
              return this._SRID;
            }),
            (ht.prototype.getEnvelope = function() {
              return this.getFactory().toGeometry(this.getEnvelopeInternal());
            }),
            (ht.prototype.checkNotGeometryCollection = function(t) {
              if (t.getSortIndex() === ht.SORTINDEX_GEOMETRYCOLLECTION)
                throw new v(
                  "This method does not support GeometryCollection arguments"
                );
            }),
            (ht.prototype.equal = function(t, e, r) {
              return 0 === r ? t.equals(e) : t.distance(e) <= r;
            }),
            (ht.prototype.norm = function() {
              var t = this.copy();
              return t.normalize(), t;
            }),
            (ht.prototype.getPrecisionModel = function() {
              return this._factory.getPrecisionModel();
            }),
            (ht.prototype.getEnvelopeInternal = function() {
              return (
                null === this._envelope &&
                  (this._envelope = this.computeEnvelopeInternal()),
                new X(this._envelope)
              );
            }),
            (ht.prototype.setSRID = function(t) {
              this._SRID = t;
            }),
            (ht.prototype.setUserData = function(t) {
              this._userData = t;
            }),
            (ht.prototype.compare = function(t, e) {
              for (
                var r = t.iterator(), n = e.iterator();
                r.hasNext() && n.hasNext();

              ) {
                var i = r.next(),
                  o = n.next(),
                  s = i.compareTo(o);
                if (0 !== s) return s;
              }
              return r.hasNext() ? 1 : n.hasNext() ? -1 : 0;
            }),
            (ht.prototype.hashCode = function() {
              return this.getEnvelopeInternal().hashCode();
            }),
            (ht.prototype.isGeometryCollectionOrDerived = function() {
              return (
                this.getSortIndex() === ht.SORTINDEX_GEOMETRYCOLLECTION ||
                this.getSortIndex() === ht.SORTINDEX_MULTIPOINT ||
                this.getSortIndex() === ht.SORTINDEX_MULTILINESTRING ||
                this.getSortIndex() === ht.SORTINDEX_MULTIPOLYGON
              );
            }),
            (ht.prototype.interfaces_ = function() {
              return [S, b, e];
            }),
            (ht.prototype.getClass = function() {
              return ht;
            }),
            (ht.hasNonEmptyElements = function(t) {
              for (var e = 0; e < t.length; e++) if (!t[e].isEmpty()) return !0;
              return !1;
            }),
            (ht.hasNullElements = function(t) {
              for (var e = 0; e < t.length; e++) if (null === t[e]) return !0;
              return !1;
            }),
            (ct.serialVersionUID.get = function() {
              return 0x799ea46522854c00;
            }),
            (ct.SORTINDEX_POINT.get = function() {
              return 0;
            }),
            (ct.SORTINDEX_MULTIPOINT.get = function() {
              return 1;
            }),
            (ct.SORTINDEX_LINESTRING.get = function() {
              return 2;
            }),
            (ct.SORTINDEX_LINEARRING.get = function() {
              return 3;
            }),
            (ct.SORTINDEX_MULTILINESTRING.get = function() {
              return 4;
            }),
            (ct.SORTINDEX_POLYGON.get = function() {
              return 5;
            }),
            (ct.SORTINDEX_MULTIPOLYGON.get = function() {
              return 6;
            }),
            (ct.SORTINDEX_GEOMETRYCOLLECTION.get = function() {
              return 7;
            }),
            (ct.geometryChangedFilter.get = function() {
              return pt;
            }),
            Object.defineProperties(ht, ct);
          var pt = function() {};
          (pt.interfaces_ = function() {
            return [ut];
          }),
            (pt.filter = function(t) {
              t.geometryChangedAction();
            });
          var ft = function() {};
          (ft.prototype.filter = function(t) {}),
            (ft.prototype.interfaces_ = function() {
              return [];
            }),
            (ft.prototype.getClass = function() {
              return ft;
            });
          var dt = function() {},
            yt = {
              Mod2BoundaryNodeRule: { configurable: !0 },
              EndPointBoundaryNodeRule: { configurable: !0 },
              MultiValentEndPointBoundaryNodeRule: { configurable: !0 },
              MonoValentEndPointBoundaryNodeRule: { configurable: !0 },
              MOD2_BOUNDARY_RULE: { configurable: !0 },
              ENDPOINT_BOUNDARY_RULE: { configurable: !0 },
              MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: !0 },
              MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: !0 },
              OGC_SFS_BOUNDARY_RULE: { configurable: !0 }
            };
          (dt.prototype.isInBoundary = function(t) {}),
            (dt.prototype.interfaces_ = function() {
              return [];
            }),
            (dt.prototype.getClass = function() {
              return dt;
            }),
            (yt.Mod2BoundaryNodeRule.get = function() {
              return gt;
            }),
            (yt.EndPointBoundaryNodeRule.get = function() {
              return mt;
            }),
            (yt.MultiValentEndPointBoundaryNodeRule.get = function() {
              return vt;
            }),
            (yt.MonoValentEndPointBoundaryNodeRule.get = function() {
              return _t;
            }),
            (yt.MOD2_BOUNDARY_RULE.get = function() {
              return new gt();
            }),
            (yt.ENDPOINT_BOUNDARY_RULE.get = function() {
              return new mt();
            }),
            (yt.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function() {
              return new vt();
            }),
            (yt.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function() {
              return new _t();
            }),
            (yt.OGC_SFS_BOUNDARY_RULE.get = function() {
              return dt.MOD2_BOUNDARY_RULE;
            }),
            Object.defineProperties(dt, yt);
          var gt = function() {};
          (gt.prototype.isInBoundary = function(t) {
            return t % 2 == 1;
          }),
            (gt.prototype.interfaces_ = function() {
              return [dt];
            }),
            (gt.prototype.getClass = function() {
              return gt;
            });
          var mt = function() {};
          (mt.prototype.isInBoundary = function(t) {
            return t > 0;
          }),
            (mt.prototype.interfaces_ = function() {
              return [dt];
            }),
            (mt.prototype.getClass = function() {
              return mt;
            });
          var vt = function() {};
          (vt.prototype.isInBoundary = function(t) {
            return t > 1;
          }),
            (vt.prototype.interfaces_ = function() {
              return [dt];
            }),
            (vt.prototype.getClass = function() {
              return vt;
            });
          var _t = function() {};
          (_t.prototype.isInBoundary = function(t) {
            return 1 === t;
          }),
            (_t.prototype.interfaces_ = function() {
              return [dt];
            }),
            (_t.prototype.getClass = function() {
              return _t;
            });
          var xt = function() {};
          (xt.prototype.add = function() {}),
            (xt.prototype.addAll = function() {}),
            (xt.prototype.isEmpty = function() {}),
            (xt.prototype.iterator = function() {}),
            (xt.prototype.size = function() {}),
            (xt.prototype.toArray = function() {}),
            (xt.prototype.remove = function() {}),
            ((r.prototype = new Error()).name = "IndexOutOfBoundsException");
          var bt = function() {};
          (bt.prototype.hasNext = function() {}),
            (bt.prototype.next = function() {}),
            (bt.prototype.remove = function() {});
          var St = (function(t) {
            function e() {
              t.apply(this, arguments);
            }
            return (
              t && (e.__proto__ = t),
              (e.prototype = Object.create(t && t.prototype)),
              (e.prototype.constructor = e),
              (e.prototype.get = function() {}),
              (e.prototype.set = function() {}),
              (e.prototype.isEmpty = function() {}),
              e
            );
          })(xt);
          (n.prototype = new Error()).name = "NoSuchElementException";
          var It = (function(t) {
              function e() {
                t.call(this),
                  (this.array_ = []),
                  arguments[0] instanceof xt && this.addAll(arguments[0]);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.ensureCapacity = function() {}),
                (e.prototype.interfaces_ = function() {
                  return [t, xt];
                }),
                (e.prototype.add = function(t) {
                  return (
                    1 === arguments.length
                      ? this.array_.push(t)
                      : this.array_.splice(arguments[0], arguments[1]),
                    !0
                  );
                }),
                (e.prototype.clear = function() {
                  this.array_ = [];
                }),
                (e.prototype.addAll = function(t) {
                  for (var e = t.iterator(); e.hasNext(); ) this.add(e.next());
                  return !0;
                }),
                (e.prototype.set = function(t, e) {
                  var r = this.array_[t];
                  return (this.array_[t] = e), r;
                }),
                (e.prototype.iterator = function() {
                  return new wt(this);
                }),
                (e.prototype.get = function(t) {
                  if (t < 0 || t >= this.size()) throw new r();
                  return this.array_[t];
                }),
                (e.prototype.isEmpty = function() {
                  return 0 === this.array_.length;
                }),
                (e.prototype.size = function() {
                  return this.array_.length;
                }),
                (e.prototype.toArray = function() {
                  for (var t = [], e = 0, r = this.array_.length; e < r; e++)
                    t.push(this.array_[e]);
                  return t;
                }),
                (e.prototype.remove = function(t) {
                  for (var e = !1, r = 0, n = this.array_.length; r < n; r++)
                    if (this.array_[r] === t) {
                      this.array_.splice(r, 1), (e = !0);
                      break;
                    }
                  return e;
                }),
                e
              );
            })(St),
            wt = (function(t) {
              function e(e) {
                t.call(this), (this.arrayList_ = e), (this.position_ = 0);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.next = function() {
                  if (this.position_ === this.arrayList_.size()) throw new n();
                  return this.arrayList_.get(this.position_++);
                }),
                (e.prototype.hasNext = function() {
                  return this.position_ < this.arrayList_.size();
                }),
                (e.prototype.set = function(t) {
                  return this.arrayList_.set(this.position_ - 1, t);
                }),
                (e.prototype.remove = function() {
                  this.arrayList_.remove(this.arrayList_.get(this.position_));
                }),
                e
              );
            })(bt),
            Nt = (function(t) {
              function e() {
                if ((t.call(this), 0 === arguments.length));
                else if (1 === arguments.length) {
                  var e = arguments[0];
                  this.ensureCapacity(e.length), this.add(e, !0);
                } else if (2 === arguments.length) {
                  var r = arguments[0],
                    n = arguments[1];
                  this.ensureCapacity(r.length), this.add(r, n);
                }
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { coordArrayType: { configurable: !0 } };
              return (
                (r.coordArrayType.get = function() {
                  return new Array(0).fill(null);
                }),
                (e.prototype.getCoordinate = function(t) {
                  return this.get(t);
                }),
                (e.prototype.addAll = function() {
                  if (2 === arguments.length) {
                    for (
                      var e = arguments[1], r = !1, n = arguments[0].iterator();
                      n.hasNext();

                    )
                      this.add(n.next(), e), (r = !0);
                    return r;
                  }
                  return t.prototype.addAll.apply(this, arguments);
                }),
                (e.prototype.clone = function() {
                  for (
                    var e = t.prototype.clone.call(this), r = 0;
                    r < this.size();
                    r++
                  )
                    e.add(r, this.get(r).copy());
                  return e;
                }),
                (e.prototype.toCoordinateArray = function() {
                  return this.toArray(e.coordArrayType);
                }),
                (e.prototype.add = function() {
                  if (1 === arguments.length) {
                    var e = arguments[0];
                    t.prototype.add.call(this, e);
                  } else if (2 === arguments.length) {
                    if (
                      arguments[0] instanceof Array &&
                      "boolean" == typeof arguments[1]
                    ) {
                      var r = arguments[0],
                        n = arguments[1];
                      return this.add(r, n, !0), !0;
                    }
                    if (
                      arguments[0] instanceof w &&
                      "boolean" == typeof arguments[1]
                    ) {
                      var i = arguments[0];
                      if (
                        !arguments[1] &&
                        this.size() >= 1 &&
                        this.get(this.size() - 1).equals2D(i)
                      )
                        return null;
                      t.prototype.add.call(this, i);
                    } else if (
                      arguments[0] instanceof Object &&
                      "boolean" == typeof arguments[1]
                    ) {
                      var o = arguments[0],
                        s = arguments[1];
                      return this.add(o, s), !0;
                    }
                  } else if (3 === arguments.length) {
                    if (
                      "boolean" == typeof arguments[2] &&
                      arguments[0] instanceof Array &&
                      "boolean" == typeof arguments[1]
                    ) {
                      var a = arguments[0],
                        l = arguments[1];
                      if (arguments[2])
                        for (var u = 0; u < a.length; u++) this.add(a[u], l);
                      else
                        for (var h = a.length - 1; h >= 0; h--)
                          this.add(a[h], l);
                      return !0;
                    }
                    if (
                      "boolean" == typeof arguments[2] &&
                      Number.isInteger(arguments[0]) &&
                      arguments[1] instanceof w
                    ) {
                      var c = arguments[0],
                        p = arguments[1];
                      if (!arguments[2]) {
                        var f = this.size();
                        if (f > 0) {
                          if (c > 0 && this.get(c - 1).equals2D(p)) return null;
                          if (c < f && this.get(c).equals2D(p)) return null;
                        }
                      }
                      t.prototype.add.call(this, c, p);
                    }
                  } else if (4 === arguments.length) {
                    var d = arguments[0],
                      y = arguments[1],
                      g = arguments[2],
                      m = arguments[3],
                      v = 1;
                    g > m && (v = -1);
                    for (var _ = g; _ !== m; _ += v) this.add(d[_], y);
                    return !0;
                  }
                }),
                (e.prototype.closeRing = function() {
                  this.size() > 0 && this.add(new w(this.get(0)), !1);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(It),
            Ct = function() {},
            Et = {
              ForwardComparator: { configurable: !0 },
              BidirectionalComparator: { configurable: !0 },
              coordArrayType: { configurable: !0 }
            };
          (Et.ForwardComparator.get = function() {
            return Mt;
          }),
            (Et.BidirectionalComparator.get = function() {
              return Pt;
            }),
            (Et.coordArrayType.get = function() {
              return new Array(0).fill(null);
            }),
            (Ct.prototype.interfaces_ = function() {
              return [];
            }),
            (Ct.prototype.getClass = function() {
              return Ct;
            }),
            (Ct.isRing = function(t) {
              return !(t.length < 4 || !t[0].equals2D(t[t.length - 1]));
            }),
            (Ct.ptNotInList = function(t, e) {
              for (var r = 0; r < t.length; r++) {
                var n = t[r];
                if (Ct.indexOf(n, e) < 0) return n;
              }
              return null;
            }),
            (Ct.scroll = function(t, e) {
              var r = Ct.indexOf(e, t);
              if (r < 0) return null;
              var n = new Array(t.length).fill(null);
              V.arraycopy(t, r, n, 0, t.length - r),
                V.arraycopy(t, 0, n, t.length - r, r),
                V.arraycopy(n, 0, t, 0, t.length);
            }),
            (Ct.equals = function() {
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                if (t === e) return !0;
                if (null === t || null === e) return !1;
                if (t.length !== e.length) return !1;
                for (var r = 0; r < t.length; r++)
                  if (!t[r].equals(e[r])) return !1;
                return !0;
              }
              if (3 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1],
                  o = arguments[2];
                if (n === i) return !0;
                if (null === n || null === i) return !1;
                if (n.length !== i.length) return !1;
                for (var s = 0; s < n.length; s++)
                  if (0 !== o.compare(n[s], i[s])) return !1;
                return !0;
              }
            }),
            (Ct.intersection = function(t, e) {
              for (var r = new Nt(), n = 0; n < t.length; n++)
                e.intersects(t[n]) && r.add(t[n], !0);
              return r.toCoordinateArray();
            }),
            (Ct.hasRepeatedPoints = function(t) {
              for (var e = 1; e < t.length; e++)
                if (t[e - 1].equals(t[e])) return !0;
              return !1;
            }),
            (Ct.removeRepeatedPoints = function(t) {
              return Ct.hasRepeatedPoints(t)
                ? new Nt(t, !1).toCoordinateArray()
                : t;
            }),
            (Ct.reverse = function(t) {
              for (
                var e = t.length - 1, r = Math.trunc(e / 2), n = 0;
                n <= r;
                n++
              ) {
                var i = t[n];
                (t[n] = t[e - n]), (t[e - n] = i);
              }
            }),
            (Ct.removeNull = function(t) {
              for (var e = 0, r = 0; r < t.length; r++) null !== t[r] && e++;
              var n = new Array(e).fill(null);
              if (0 === e) return n;
              for (var i = 0, o = 0; o < t.length; o++)
                null !== t[o] && (n[i++] = t[o]);
              return n;
            }),
            (Ct.copyDeep = function() {
              if (1 === arguments.length) {
                for (
                  var t = arguments[0],
                    e = new Array(t.length).fill(null),
                    r = 0;
                  r < t.length;
                  r++
                )
                  e[r] = new w(t[r]);
                return e;
              }
              if (5 === arguments.length)
                for (
                  var n = arguments[0],
                    i = arguments[1],
                    o = arguments[2],
                    s = arguments[3],
                    a = arguments[4],
                    l = 0;
                  l < a;
                  l++
                )
                  o[s + l] = new w(n[i + l]);
            }),
            (Ct.isEqualReversed = function(t, e) {
              for (var r = 0; r < t.length; r++) {
                var n = t[r],
                  i = e[t.length - r - 1];
                if (0 !== n.compareTo(i)) return !1;
              }
              return !0;
            }),
            (Ct.envelope = function(t) {
              for (var e = new X(), r = 0; r < t.length; r++)
                e.expandToInclude(t[r]);
              return e;
            }),
            (Ct.toCoordinateArray = function(t) {
              return t.toArray(Ct.coordArrayType);
            }),
            (Ct.atLeastNCoordinatesOrNothing = function(t, e) {
              return e.length >= t ? e : [];
            }),
            (Ct.indexOf = function(t, e) {
              for (var r = 0; r < e.length; r++) if (t.equals(e[r])) return r;
              return -1;
            }),
            (Ct.increasingDirection = function(t) {
              for (var e = 0; e < Math.trunc(t.length / 2); e++) {
                var r = t.length - 1 - e,
                  n = t[e].compareTo(t[r]);
                if (0 !== n) return n;
              }
              return 1;
            }),
            (Ct.compare = function(t, e) {
              for (var r = 0; r < t.length && r < e.length; ) {
                var n = t[r].compareTo(e[r]);
                if (0 !== n) return n;
                r++;
              }
              return r < e.length ? -1 : r < t.length ? 1 : 0;
            }),
            (Ct.minCoordinate = function(t) {
              for (var e = null, r = 0; r < t.length; r++)
                (null === e || e.compareTo(t[r]) > 0) && (e = t[r]);
              return e;
            }),
            (Ct.extract = function(t, e, r) {
              e = L.clamp(e, 0, t.length);
              var n = (r = L.clamp(r, -1, t.length)) - e + 1;
              r < 0 && (n = 0), e >= t.length && (n = 0), r < e && (n = 0);
              var i = new Array(n).fill(null);
              if (0 === n) return i;
              for (var o = 0, s = e; s <= r; s++) i[o++] = t[s];
              return i;
            }),
            Object.defineProperties(Ct, Et);
          var Mt = function() {};
          (Mt.prototype.compare = function(t, e) {
            return Ct.compare(t, e);
          }),
            (Mt.prototype.interfaces_ = function() {
              return [I];
            }),
            (Mt.prototype.getClass = function() {
              return Mt;
            });
          var Pt = function() {};
          (Pt.prototype.compare = function(t, e) {
            var r = t,
              n = e;
            if (r.length < n.length) return -1;
            if (r.length > n.length) return 1;
            if (0 === r.length) return 0;
            var i = Ct.compare(r, n);
            return Ct.isEqualReversed(r, n) ? 0 : i;
          }),
            (Pt.prototype.OLDcompare = function(t, e) {
              var r = t,
                n = e;
              if (r.length < n.length) return -1;
              if (r.length > n.length) return 1;
              if (0 === r.length) return 0;
              for (
                var i = Ct.increasingDirection(r),
                  o = Ct.increasingDirection(n),
                  s = i > 0 ? 0 : r.length - 1,
                  a = o > 0 ? 0 : r.length - 1,
                  l = 0;
                l < r.length;
                l++
              ) {
                var u = r[s].compareTo(n[a]);
                if (0 !== u) return u;
                (s += i), (a += o);
              }
              return 0;
            }),
            (Pt.prototype.interfaces_ = function() {
              return [I];
            }),
            (Pt.prototype.getClass = function() {
              return Pt;
            });
          var Ot = function() {};
          (Ot.prototype.get = function() {}),
            (Ot.prototype.put = function() {}),
            (Ot.prototype.size = function() {}),
            (Ot.prototype.values = function() {}),
            (Ot.prototype.entrySet = function() {});
          var Lt = (function(t) {
            function e() {
              t.apply(this, arguments);
            }
            return (
              t && (e.__proto__ = t),
              (e.prototype = Object.create(t && t.prototype)),
              (e.prototype.constructor = e),
              e
            );
          })(Ot);
          ((i.prototype = new Error()).name = "OperationNotSupported"),
            ((o.prototype = new xt()).contains = function() {});
          var Tt = (function(t) {
              function e() {
                t.call(this),
                  (this.array_ = []),
                  arguments[0] instanceof xt && this.addAll(arguments[0]);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.contains = function(t) {
                  for (var e = 0, r = this.array_.length; e < r; e++)
                    if (this.array_[e] === t) return !0;
                  return !1;
                }),
                (e.prototype.add = function(t) {
                  return !this.contains(t) && (this.array_.push(t), !0);
                }),
                (e.prototype.addAll = function(t) {
                  for (var e = t.iterator(); e.hasNext(); ) this.add(e.next());
                  return !0;
                }),
                (e.prototype.remove = function(t) {
                  throw new Error();
                }),
                (e.prototype.size = function() {
                  return this.array_.length;
                }),
                (e.prototype.isEmpty = function() {
                  return 0 === this.array_.length;
                }),
                (e.prototype.toArray = function() {
                  for (var t = [], e = 0, r = this.array_.length; e < r; e++)
                    t.push(this.array_[e]);
                  return t;
                }),
                (e.prototype.iterator = function() {
                  return new At(this);
                }),
                e
              );
            })(o),
            At = (function(t) {
              function e(e) {
                t.call(this), (this.hashSet_ = e), (this.position_ = 0);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.next = function() {
                  if (this.position_ === this.hashSet_.size()) throw new n();
                  return this.hashSet_.array_[this.position_++];
                }),
                (e.prototype.hasNext = function() {
                  return this.position_ < this.hashSet_.size();
                }),
                (e.prototype.remove = function() {
                  throw new i();
                }),
                e
              );
            })(bt),
            Rt = 0;
          ((c.prototype = new Lt()).get = function(t) {
            for (var e = this.root_; null !== e; ) {
              var r = t.compareTo(e.key);
              if (r < 0) e = e.left;
              else {
                if (!(r > 0)) return e.value;
                e = e.right;
              }
            }
            return null;
          }),
            (c.prototype.put = function(t, e) {
              if (null === this.root_)
                return (
                  (this.root_ = {
                    key: t,
                    value: e,
                    left: null,
                    right: null,
                    parent: null,
                    color: Rt,
                    getValue: function() {
                      return this.value;
                    },
                    getKey: function() {
                      return this.key;
                    }
                  }),
                  (this.size_ = 1),
                  null
                );
              var r,
                n,
                i = this.root_;
              do {
                if (((r = i), (n = t.compareTo(i.key)) < 0)) i = i.left;
                else {
                  if (!(n > 0)) {
                    var o = i.value;
                    return (i.value = e), o;
                  }
                  i = i.right;
                }
              } while (null !== i);
              var s = {
                key: t,
                left: null,
                right: null,
                value: e,
                parent: r,
                color: Rt,
                getValue: function() {
                  return this.value;
                },
                getKey: function() {
                  return this.key;
                }
              };
              return (
                n < 0 ? (r.left = s) : (r.right = s),
                this.fixAfterInsertion(s),
                this.size_++,
                null
              );
            }),
            (c.prototype.fixAfterInsertion = function(t) {
              for (
                t.color = 1;
                null != t && t !== this.root_ && 1 === t.parent.color;

              )
                if (a(t) === u(a(a(t)))) {
                  var e = h(a(a(t)));
                  1 === s(e)
                    ? (l(a(t), Rt), l(e, Rt), l(a(a(t)), 1), (t = a(a(t))))
                    : (t === h(a(t)) && ((t = a(t)), this.rotateLeft(t)),
                      l(a(t), Rt),
                      l(a(a(t)), 1),
                      this.rotateRight(a(a(t))));
                } else {
                  var r = u(a(a(t)));
                  1 === s(r)
                    ? (l(a(t), Rt), l(r, Rt), l(a(a(t)), 1), (t = a(a(t))))
                    : (t === u(a(t)) && ((t = a(t)), this.rotateRight(t)),
                      l(a(t), Rt),
                      l(a(a(t)), 1),
                      this.rotateLeft(a(a(t))));
                }
              this.root_.color = Rt;
            }),
            (c.prototype.values = function() {
              var t = new It(),
                e = this.getFirstEntry();
              if (null !== e)
                for (t.add(e.value); null !== (e = c.successor(e)); )
                  t.add(e.value);
              return t;
            }),
            (c.prototype.entrySet = function() {
              var t = new Tt(),
                e = this.getFirstEntry();
              if (null !== e)
                for (t.add(e); null !== (e = c.successor(e)); ) t.add(e);
              return t;
            }),
            (c.prototype.rotateLeft = function(t) {
              if (null != t) {
                var e = t.right;
                (t.right = e.left),
                  null != e.left && (e.left.parent = t),
                  (e.parent = t.parent),
                  null === t.parent
                    ? (this.root_ = e)
                    : t.parent.left === t
                    ? (t.parent.left = e)
                    : (t.parent.right = e),
                  (e.left = t),
                  (t.parent = e);
              }
            }),
            (c.prototype.rotateRight = function(t) {
              if (null != t) {
                var e = t.left;
                (t.left = e.right),
                  null != e.right && (e.right.parent = t),
                  (e.parent = t.parent),
                  null === t.parent
                    ? (this.root_ = e)
                    : t.parent.right === t
                    ? (t.parent.right = e)
                    : (t.parent.left = e),
                  (e.right = t),
                  (t.parent = e);
              }
            }),
            (c.prototype.getFirstEntry = function() {
              var t = this.root_;
              if (null != t) for (; null != t.left; ) t = t.left;
              return t;
            }),
            (c.successor = function(t) {
              if (null === t) return null;
              if (null !== t.right) {
                for (var e = t.right; null !== e.left; ) e = e.left;
                return e;
              }
              for (var r = t.parent, n = t; null !== r && n === r.right; )
                (n = r), (r = r.parent);
              return r;
            }),
            (c.prototype.size = function() {
              return this.size_;
            });
          var Ft = function() {};
          (Ft.prototype.interfaces_ = function() {
            return [];
          }),
            (Ft.prototype.getClass = function() {
              return Ft;
            }),
            (p.prototype = new o()),
            ((f.prototype = new p()).contains = function(t) {
              for (var e = 0, r = this.array_.length; e < r; e++)
                if (0 === this.array_[e].compareTo(t)) return !0;
              return !1;
            }),
            (f.prototype.add = function(t) {
              if (this.contains(t)) return !1;
              for (var e = 0, r = this.array_.length; e < r; e++)
                if (1 === this.array_[e].compareTo(t))
                  return this.array_.splice(e, 0, t), !0;
              return this.array_.push(t), !0;
            }),
            (f.prototype.addAll = function(t) {
              for (var e = t.iterator(); e.hasNext(); ) this.add(e.next());
              return !0;
            }),
            (f.prototype.remove = function(t) {
              throw new i();
            }),
            (f.prototype.size = function() {
              return this.array_.length;
            }),
            (f.prototype.isEmpty = function() {
              return 0 === this.array_.length;
            }),
            (f.prototype.toArray = function() {
              for (var t = [], e = 0, r = this.array_.length; e < r; e++)
                t.push(this.array_[e]);
              return t;
            }),
            (f.prototype.iterator = function() {
              return new Dt(this);
            });
          var Dt = function(t) {
            (this.treeSet_ = t), (this.position_ = 0);
          };
          (Dt.prototype.next = function() {
            if (this.position_ === this.treeSet_.size()) throw new n();
            return this.treeSet_.array_[this.position_++];
          }),
            (Dt.prototype.hasNext = function() {
              return this.position_ < this.treeSet_.size();
            }),
            (Dt.prototype.remove = function() {
              throw new i();
            });
          var jt = function() {};
          (jt.sort = function() {
            var t,
              e,
              r,
              n,
              i = arguments[0];
            if (1 === arguments.length)
              (n = function(t, e) {
                return t.compareTo(e);
              }),
                i.sort(n);
            else if (2 === arguments.length)
              (r = arguments[1]),
                (n = function(t, e) {
                  return r.compare(t, e);
                }),
                i.sort(n);
            else if (3 === arguments.length) {
              (e = i.slice(arguments[1], arguments[2])).sort();
              var o = i
                .slice(0, arguments[1])
                .concat(e, i.slice(arguments[2], i.length));
              for (i.splice(0, i.length), t = 0; t < o.length; t++)
                i.push(o[t]);
            } else if (4 === arguments.length)
              for (
                e = i.slice(arguments[1], arguments[2]),
                  r = arguments[3],
                  n = function(t, e) {
                    return r.compare(t, e);
                  },
                  e.sort(n),
                  o = i
                    .slice(0, arguments[1])
                    .concat(e, i.slice(arguments[2], i.length)),
                  i.splice(0, i.length),
                  t = 0;
                t < o.length;
                t++
              )
                i.push(o[t]);
          }),
            (jt.asList = function(t) {
              for (var e = new It(), r = 0, n = t.length; r < n; r++)
                e.add(t[r]);
              return e;
            });
          var Ut = function() {},
            Gt = {
              P: { configurable: !0 },
              L: { configurable: !0 },
              A: { configurable: !0 },
              FALSE: { configurable: !0 },
              TRUE: { configurable: !0 },
              DONTCARE: { configurable: !0 },
              SYM_FALSE: { configurable: !0 },
              SYM_TRUE: { configurable: !0 },
              SYM_DONTCARE: { configurable: !0 },
              SYM_P: { configurable: !0 },
              SYM_L: { configurable: !0 },
              SYM_A: { configurable: !0 }
            };
          (Gt.P.get = function() {
            return 0;
          }),
            (Gt.L.get = function() {
              return 1;
            }),
            (Gt.A.get = function() {
              return 2;
            }),
            (Gt.FALSE.get = function() {
              return -1;
            }),
            (Gt.TRUE.get = function() {
              return -2;
            }),
            (Gt.DONTCARE.get = function() {
              return -3;
            }),
            (Gt.SYM_FALSE.get = function() {
              return "F";
            }),
            (Gt.SYM_TRUE.get = function() {
              return "T";
            }),
            (Gt.SYM_DONTCARE.get = function() {
              return "*";
            }),
            (Gt.SYM_P.get = function() {
              return "0";
            }),
            (Gt.SYM_L.get = function() {
              return "1";
            }),
            (Gt.SYM_A.get = function() {
              return "2";
            }),
            (Ut.prototype.interfaces_ = function() {
              return [];
            }),
            (Ut.prototype.getClass = function() {
              return Ut;
            }),
            (Ut.toDimensionSymbol = function(t) {
              switch (t) {
                case Ut.FALSE:
                  return Ut.SYM_FALSE;
                case Ut.TRUE:
                  return Ut.SYM_TRUE;
                case Ut.DONTCARE:
                  return Ut.SYM_DONTCARE;
                case Ut.P:
                  return Ut.SYM_P;
                case Ut.L:
                  return Ut.SYM_L;
                case Ut.A:
                  return Ut.SYM_A;
              }
              throw new v("Unknown dimension value: " + t);
            }),
            (Ut.toDimensionValue = function(t) {
              switch (F.toUpperCase(t)) {
                case Ut.SYM_FALSE:
                  return Ut.FALSE;
                case Ut.SYM_TRUE:
                  return Ut.TRUE;
                case Ut.SYM_DONTCARE:
                  return Ut.DONTCARE;
                case Ut.SYM_P:
                  return Ut.P;
                case Ut.SYM_L:
                  return Ut.L;
                case Ut.SYM_A:
                  return Ut.A;
              }
              throw new v("Unknown dimension symbol: " + t);
            }),
            Object.defineProperties(Ut, Gt);
          var Bt = function() {};
          (Bt.prototype.filter = function(t) {}),
            (Bt.prototype.interfaces_ = function() {
              return [];
            }),
            (Bt.prototype.getClass = function() {
              return Bt;
            });
          var kt = function() {};
          (kt.prototype.filter = function(t, e) {}),
            (kt.prototype.isDone = function() {}),
            (kt.prototype.isGeometryChanged = function() {}),
            (kt.prototype.interfaces_ = function() {
              return [];
            }),
            (kt.prototype.getClass = function() {
              return kt;
            });
          var qt = (function(t) {
              function e(e, r) {
                if (
                  (t.call(this, r),
                  (this._geometries = e || []),
                  t.hasNullElements(this._geometries))
                )
                  throw new v("geometries must not contain null elements");
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { serialVersionUID: { configurable: !0 } };
              return (
                (e.prototype.computeEnvelopeInternal = function() {
                  for (var t = new X(), e = 0; e < this._geometries.length; e++)
                    t.expandToInclude(
                      this._geometries[e].getEnvelopeInternal()
                    );
                  return t;
                }),
                (e.prototype.getGeometryN = function(t) {
                  return this._geometries[t];
                }),
                (e.prototype.getSortIndex = function() {
                  return t.SORTINDEX_GEOMETRYCOLLECTION;
                }),
                (e.prototype.getCoordinates = function() {
                  for (
                    var t = new Array(this.getNumPoints()).fill(null),
                      e = -1,
                      r = 0;
                    r < this._geometries.length;
                    r++
                  )
                    for (
                      var n = this._geometries[r].getCoordinates(), i = 0;
                      i < n.length;
                      i++
                    )
                      t[++e] = n[i];
                  return t;
                }),
                (e.prototype.getArea = function() {
                  for (var t = 0, e = 0; e < this._geometries.length; e++)
                    t += this._geometries[e].getArea();
                  return t;
                }),
                (e.prototype.equalsExact = function() {
                  if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    if (!this.isEquivalentClass(e)) return !1;
                    var n = e;
                    if (this._geometries.length !== n._geometries.length)
                      return !1;
                    for (var i = 0; i < this._geometries.length; i++)
                      if (!this._geometries[i].equalsExact(n._geometries[i], r))
                        return !1;
                    return !0;
                  }
                  return t.prototype.equalsExact.apply(this, arguments);
                }),
                (e.prototype.normalize = function() {
                  for (var t = 0; t < this._geometries.length; t++)
                    this._geometries[t].normalize();
                  jt.sort(this._geometries);
                }),
                (e.prototype.getCoordinate = function() {
                  return this.isEmpty()
                    ? null
                    : this._geometries[0].getCoordinate();
                }),
                (e.prototype.getBoundaryDimension = function() {
                  for (
                    var t = Ut.FALSE, e = 0;
                    e < this._geometries.length;
                    e++
                  )
                    t = Math.max(t, this._geometries[e].getBoundaryDimension());
                  return t;
                }),
                (e.prototype.getDimension = function() {
                  for (
                    var t = Ut.FALSE, e = 0;
                    e < this._geometries.length;
                    e++
                  )
                    t = Math.max(t, this._geometries[e].getDimension());
                  return t;
                }),
                (e.prototype.getLength = function() {
                  for (var t = 0, e = 0; e < this._geometries.length; e++)
                    t += this._geometries[e].getLength();
                  return t;
                }),
                (e.prototype.getNumPoints = function() {
                  for (var t = 0, e = 0; e < this._geometries.length; e++)
                    t += this._geometries[e].getNumPoints();
                  return t;
                }),
                (e.prototype.getNumGeometries = function() {
                  return this._geometries.length;
                }),
                (e.prototype.reverse = function() {
                  for (
                    var t = this._geometries.length,
                      e = new Array(t).fill(null),
                      r = 0;
                    r < this._geometries.length;
                    r++
                  )
                    e[r] = this._geometries[r].reverse();
                  return this.getFactory().createGeometryCollection(e);
                }),
                (e.prototype.compareToSameClass = function() {
                  if (1 === arguments.length) {
                    var t = arguments[0],
                      e = new f(jt.asList(this._geometries)),
                      r = new f(jt.asList(t._geometries));
                    return this.compare(e, r);
                  }
                  if (2 === arguments.length) {
                    for (
                      var n = arguments[1],
                        i = arguments[0],
                        o = this.getNumGeometries(),
                        s = i.getNumGeometries(),
                        a = 0;
                      a < o && a < s;

                    ) {
                      var l = this.getGeometryN(a),
                        u = i.getGeometryN(a),
                        h = l.compareToSameClass(u, n);
                      if (0 !== h) return h;
                      a++;
                    }
                    return a < o ? 1 : a < s ? -1 : 0;
                  }
                }),
                (e.prototype.apply = function() {
                  if (O(arguments[0], ft))
                    for (
                      var t = arguments[0], e = 0;
                      e < this._geometries.length;
                      e++
                    )
                      this._geometries[e].apply(t);
                  else if (O(arguments[0], kt)) {
                    var r = arguments[0];
                    if (0 === this._geometries.length) return null;
                    for (
                      var n = 0;
                      n < this._geometries.length &&
                      (this._geometries[n].apply(r), !r.isDone());
                      n++
                    );
                    r.isGeometryChanged() && this.geometryChanged();
                  } else if (O(arguments[0], Bt)) {
                    var i = arguments[0];
                    i.filter(this);
                    for (var o = 0; o < this._geometries.length; o++)
                      this._geometries[o].apply(i);
                  } else if (O(arguments[0], ut)) {
                    var s = arguments[0];
                    s.filter(this);
                    for (var a = 0; a < this._geometries.length; a++)
                      this._geometries[a].apply(s);
                  }
                }),
                (e.prototype.getBoundary = function() {
                  return (
                    this.checkNotGeometryCollection(this),
                    et.shouldNeverReachHere(),
                    null
                  );
                }),
                (e.prototype.clone = function() {
                  var e = t.prototype.clone.call(this);
                  e._geometries = new Array(this._geometries.length).fill(null);
                  for (var r = 0; r < this._geometries.length; r++)
                    e._geometries[r] = this._geometries[r].clone();
                  return e;
                }),
                (e.prototype.getGeometryType = function() {
                  return "GeometryCollection";
                }),
                (e.prototype.copy = function() {
                  for (
                    var t = new Array(this._geometries.length).fill(null),
                      r = 0;
                    r < t.length;
                    r++
                  )
                    t[r] = this._geometries[r].copy();
                  return new e(t, this._factory);
                }),
                (e.prototype.isEmpty = function() {
                  for (var t = 0; t < this._geometries.length; t++)
                    if (!this._geometries[t].isEmpty()) return !1;
                  return !0;
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.serialVersionUID.get = function() {
                  return -0x4f07bcb1f857d800;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(ht),
            zt = (function(t) {
              function e() {
                t.apply(this, arguments);
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { serialVersionUID: { configurable: !0 } };
              return (
                (e.prototype.getSortIndex = function() {
                  return ht.SORTINDEX_MULTILINESTRING;
                }),
                (e.prototype.equalsExact = function() {
                  if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    return (
                      !!this.isEquivalentClass(e) &&
                      t.prototype.equalsExact.call(this, e, r)
                    );
                  }
                  return t.prototype.equalsExact.apply(this, arguments);
                }),
                (e.prototype.getBoundaryDimension = function() {
                  return this.isClosed() ? Ut.FALSE : 0;
                }),
                (e.prototype.isClosed = function() {
                  if (this.isEmpty()) return !1;
                  for (var t = 0; t < this._geometries.length; t++)
                    if (!this._geometries[t].isClosed()) return !1;
                  return !0;
                }),
                (e.prototype.getDimension = function() {
                  return 1;
                }),
                (e.prototype.reverse = function() {
                  for (
                    var t = this._geometries.length,
                      e = new Array(t).fill(null),
                      r = 0;
                    r < this._geometries.length;
                    r++
                  )
                    e[t - 1 - r] = this._geometries[r].reverse();
                  return this.getFactory().createMultiLineString(e);
                }),
                (e.prototype.getBoundary = function() {
                  return new Vt(this).getBoundary();
                }),
                (e.prototype.getGeometryType = function() {
                  return "MultiLineString";
                }),
                (e.prototype.copy = function() {
                  for (
                    var t = new Array(this._geometries.length).fill(null),
                      r = 0;
                    r < t.length;
                    r++
                  )
                    t[r] = this._geometries[r].copy();
                  return new e(t, this._factory);
                }),
                (e.prototype.interfaces_ = function() {
                  return [Ft];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.serialVersionUID.get = function() {
                  return 0x7155d2ab4afa8000;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(qt),
            Vt = function() {
              if (
                ((this._geom = null),
                (this._geomFact = null),
                (this._bnRule = null),
                (this._endpointMap = null),
                1 === arguments.length)
              ) {
                var t = arguments[0],
                  e = dt.MOD2_BOUNDARY_RULE;
                (this._geom = t),
                  (this._geomFact = t.getFactory()),
                  (this._bnRule = e);
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                (this._geom = r),
                  (this._geomFact = r.getFactory()),
                  (this._bnRule = n);
              }
            };
          (Vt.prototype.boundaryMultiLineString = function(t) {
            if (this._geom.isEmpty()) return this.getEmptyMultiPoint();
            var e = this.computeBoundaryCoordinates(t);
            return 1 === e.length
              ? this._geomFact.createPoint(e[0])
              : this._geomFact.createMultiPointFromCoords(e);
          }),
            (Vt.prototype.getBoundary = function() {
              return this._geom instanceof Jt
                ? this.boundaryLineString(this._geom)
                : this._geom instanceof zt
                ? this.boundaryMultiLineString(this._geom)
                : this._geom.getBoundary();
            }),
            (Vt.prototype.boundaryLineString = function(t) {
              return this._geom.isEmpty()
                ? this.getEmptyMultiPoint()
                : t.isClosed()
                ? this._bnRule.isInBoundary(2)
                  ? t.getStartPoint()
                  : this._geomFact.createMultiPoint()
                : this._geomFact.createMultiPoint([
                    t.getStartPoint(),
                    t.getEndPoint()
                  ]);
            }),
            (Vt.prototype.getEmptyMultiPoint = function() {
              return this._geomFact.createMultiPoint();
            }),
            (Vt.prototype.computeBoundaryCoordinates = function(t) {
              var e = new It();
              this._endpointMap = new c();
              for (var r = 0; r < t.getNumGeometries(); r++) {
                var n = t.getGeometryN(r);
                0 !== n.getNumPoints() &&
                  (this.addEndpoint(n.getCoordinateN(0)),
                  this.addEndpoint(n.getCoordinateN(n.getNumPoints() - 1)));
              }
              for (
                var i = this._endpointMap.entrySet().iterator();
                i.hasNext();

              ) {
                var o = i.next(),
                  s = o.getValue().count;
                this._bnRule.isInBoundary(s) && e.add(o.getKey());
              }
              return Ct.toCoordinateArray(e);
            }),
            (Vt.prototype.addEndpoint = function(t) {
              var e = this._endpointMap.get(t);
              null === e && ((e = new Wt()), this._endpointMap.put(t, e)),
                e.count++;
            }),
            (Vt.prototype.interfaces_ = function() {
              return [];
            }),
            (Vt.prototype.getClass = function() {
              return Vt;
            }),
            (Vt.getBoundary = function() {
              return 1 === arguments.length
                ? new Vt(arguments[0]).getBoundary()
                : 2 === arguments.length
                ? new Vt(arguments[0], arguments[1]).getBoundary()
                : void 0;
            });
          var Wt = function() {
            this.count = null;
          };
          (Wt.prototype.interfaces_ = function() {
            return [];
          }),
            (Wt.prototype.getClass = function() {
              return Wt;
            });
          var Xt = function() {},
            Yt = {
              NEWLINE: { configurable: !0 },
              SIMPLE_ORDINATE_FORMAT: { configurable: !0 }
            };
          (Xt.prototype.interfaces_ = function() {
            return [];
          }),
            (Xt.prototype.getClass = function() {
              return Xt;
            }),
            (Xt.chars = function(t, e) {
              for (var r = new Array(e).fill(null), n = 0; n < e; n++) r[n] = t;
              return String(r);
            }),
            (Xt.getStackTrace = function() {
              if (1 === arguments.length) {
                var t = arguments[0],
                  e = new (function() {})(),
                  r = new (function() {})(e);
                return t.printStackTrace(r), e.toString();
              }
              if (2 === arguments.length) {
                for (
                  var n = arguments[0],
                    i = arguments[1],
                    o = "",
                    s = new (function() {})(
                      new (function() {})(Xt.getStackTrace(n))
                    ),
                    a = 0;
                  a < i;
                  a++
                )
                  try {
                    o += s.readLine() + Xt.NEWLINE;
                  } catch (t) {
                    if (!(t instanceof d)) throw t;
                    et.shouldNeverReachHere();
                  }
                return o;
              }
            }),
            (Xt.split = function(t, e) {
              for (
                var r = e.length, n = new It(), i = "" + t, o = i.indexOf(e);
                o >= 0;

              ) {
                var s = i.substring(0, o);
                n.add(s), (o = (i = i.substring(o + r)).indexOf(e));
              }
              i.length > 0 && n.add(i);
              for (
                var a = new Array(n.size()).fill(null), l = 0;
                l < a.length;
                l++
              )
                a[l] = n.get(l);
              return a;
            }),
            (Xt.toString = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return Xt.SIMPLE_ORDINATE_FORMAT.format(t);
              }
            }),
            (Xt.spaces = function(t) {
              return Xt.chars(" ", t);
            }),
            (Yt.NEWLINE.get = function() {
              return V.getProperty("line.separator");
            }),
            (Yt.SIMPLE_ORDINATE_FORMAT.get = function() {
              return new (function() {})("0.#");
            }),
            Object.defineProperties(Xt, Yt);
          var Ht = function() {};
          (Ht.prototype.interfaces_ = function() {
            return [];
          }),
            (Ht.prototype.getClass = function() {
              return Ht;
            }),
            (Ht.copyCoord = function(t, e, r, n) {
              for (
                var i = Math.min(t.getDimension(), r.getDimension()), o = 0;
                o < i;
                o++
              )
                r.setOrdinate(n, o, t.getOrdinate(e, o));
            }),
            (Ht.isRing = function(t) {
              var e = t.size();
              return (
                0 === e ||
                (!(e <= 3) &&
                  t.getOrdinate(0, B.X) === t.getOrdinate(e - 1, B.X) &&
                  t.getOrdinate(0, B.Y) === t.getOrdinate(e - 1, B.Y))
              );
            }),
            (Ht.isEqual = function(t, e) {
              var r = t.size();
              if (r !== e.size()) return !1;
              for (
                var n = Math.min(t.getDimension(), e.getDimension()), i = 0;
                i < r;
                i++
              )
                for (var o = 0; o < n; o++) {
                  var s = t.getOrdinate(i, o),
                    a = e.getOrdinate(i, o);
                  if (
                    !(
                      t.getOrdinate(i, o) === e.getOrdinate(i, o) ||
                      (_.isNaN(s) && _.isNaN(a))
                    )
                  )
                    return !1;
                }
              return !0;
            }),
            (Ht.extend = function(t, e, r) {
              var n = t.create(r, e.getDimension()),
                i = e.size();
              if ((Ht.copy(e, 0, n, 0, i), i > 0))
                for (var o = i; o < r; o++) Ht.copy(e, i - 1, n, o, 1);
              return n;
            }),
            (Ht.reverse = function(t) {
              for (
                var e = t.size() - 1, r = Math.trunc(e / 2), n = 0;
                n <= r;
                n++
              )
                Ht.swap(t, n, e - n);
            }),
            (Ht.swap = function(t, e, r) {
              if (e === r) return null;
              for (var n = 0; n < t.getDimension(); n++) {
                var i = t.getOrdinate(e, n);
                t.setOrdinate(e, n, t.getOrdinate(r, n)),
                  t.setOrdinate(r, n, i);
              }
            }),
            (Ht.copy = function(t, e, r, n, i) {
              for (var o = 0; o < i; o++) Ht.copyCoord(t, e + o, r, n + o);
            }),
            (Ht.toString = function() {
              if (1 === arguments.length) {
                var t = arguments[0],
                  e = t.size();
                if (0 === e) return "()";
                var r = t.getDimension(),
                  n = new A();
                n.append("(");
                for (var i = 0; i < e; i++) {
                  i > 0 && n.append(" ");
                  for (var o = 0; o < r; o++)
                    o > 0 && n.append(","),
                      n.append(Xt.toString(t.getOrdinate(i, o)));
                }
                return n.append(")"), n.toString();
              }
            }),
            (Ht.ensureValidRing = function(t, e) {
              var r = e.size();
              return 0 === r
                ? e
                : r <= 3
                ? Ht.createClosedRing(t, e, 4)
                : e.getOrdinate(0, B.X) === e.getOrdinate(r - 1, B.X) &&
                  e.getOrdinate(0, B.Y) === e.getOrdinate(r - 1, B.Y)
                ? e
                : Ht.createClosedRing(t, e, r + 1);
            }),
            (Ht.createClosedRing = function(t, e, r) {
              var n = t.create(r, e.getDimension()),
                i = e.size();
              Ht.copy(e, 0, n, 0, i);
              for (var o = i; o < r; o++) Ht.copy(e, 0, n, o, 1);
              return n;
            });
          var Jt = (function(t) {
              function e(e, r) {
                t.call(this, r), (this._points = null), this.init(e);
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { serialVersionUID: { configurable: !0 } };
              return (
                (e.prototype.computeEnvelopeInternal = function() {
                  return this.isEmpty()
                    ? new X()
                    : this._points.expandEnvelope(new X());
                }),
                (e.prototype.isRing = function() {
                  return this.isClosed() && this.isSimple();
                }),
                (e.prototype.getSortIndex = function() {
                  return t.SORTINDEX_LINESTRING;
                }),
                (e.prototype.getCoordinates = function() {
                  return this._points.toCoordinateArray();
                }),
                (e.prototype.equalsExact = function() {
                  if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    if (!this.isEquivalentClass(e)) return !1;
                    var n = e;
                    if (this._points.size() !== n._points.size()) return !1;
                    for (var i = 0; i < this._points.size(); i++)
                      if (
                        !this.equal(
                          this._points.getCoordinate(i),
                          n._points.getCoordinate(i),
                          r
                        )
                      )
                        return !1;
                    return !0;
                  }
                  return t.prototype.equalsExact.apply(this, arguments);
                }),
                (e.prototype.normalize = function() {
                  for (
                    var t = 0;
                    t < Math.trunc(this._points.size() / 2);
                    t++
                  ) {
                    var e = this._points.size() - 1 - t;
                    if (
                      !this._points
                        .getCoordinate(t)
                        .equals(this._points.getCoordinate(e))
                    )
                      return (
                        this._points
                          .getCoordinate(t)
                          .compareTo(this._points.getCoordinate(e)) > 0 &&
                          Ht.reverse(this._points),
                        null
                      );
                  }
                }),
                (e.prototype.getCoordinate = function() {
                  return this.isEmpty() ? null : this._points.getCoordinate(0);
                }),
                (e.prototype.getBoundaryDimension = function() {
                  return this.isClosed() ? Ut.FALSE : 0;
                }),
                (e.prototype.isClosed = function() {
                  return (
                    !this.isEmpty() &&
                    this.getCoordinateN(0).equals2D(
                      this.getCoordinateN(this.getNumPoints() - 1)
                    )
                  );
                }),
                (e.prototype.getEndPoint = function() {
                  return this.isEmpty()
                    ? null
                    : this.getPointN(this.getNumPoints() - 1);
                }),
                (e.prototype.getDimension = function() {
                  return 1;
                }),
                (e.prototype.getLength = function() {
                  return at.computeLength(this._points);
                }),
                (e.prototype.getNumPoints = function() {
                  return this._points.size();
                }),
                (e.prototype.reverse = function() {
                  var t = this._points.copy();
                  return Ht.reverse(t), this.getFactory().createLineString(t);
                }),
                (e.prototype.compareToSameClass = function() {
                  if (1 === arguments.length) {
                    for (
                      var t = arguments[0], e = 0, r = 0;
                      e < this._points.size() && r < t._points.size();

                    ) {
                      var n = this._points
                        .getCoordinate(e)
                        .compareTo(t._points.getCoordinate(r));
                      if (0 !== n) return n;
                      e++, r++;
                    }
                    return e < this._points.size()
                      ? 1
                      : r < t._points.size()
                      ? -1
                      : 0;
                  }
                  if (2 === arguments.length) {
                    var i = arguments[0];
                    return arguments[1].compare(this._points, i._points);
                  }
                }),
                (e.prototype.apply = function() {
                  if (O(arguments[0], ft))
                    for (
                      var t = arguments[0], e = 0;
                      e < this._points.size();
                      e++
                    )
                      t.filter(this._points.getCoordinate(e));
                  else if (O(arguments[0], kt)) {
                    var r = arguments[0];
                    if (0 === this._points.size()) return null;
                    for (
                      var n = 0;
                      n < this._points.size() &&
                      (r.filter(this._points, n), !r.isDone());
                      n++
                    );
                    r.isGeometryChanged() && this.geometryChanged();
                  } else
                    (O(arguments[0], Bt) || O(arguments[0], ut)) &&
                      arguments[0].filter(this);
                }),
                (e.prototype.getBoundary = function() {
                  return new Vt(this).getBoundary();
                }),
                (e.prototype.isEquivalentClass = function(t) {
                  return t instanceof e;
                }),
                (e.prototype.clone = function() {
                  var e = t.prototype.clone.call(this);
                  return (e._points = this._points.clone()), e;
                }),
                (e.prototype.getCoordinateN = function(t) {
                  return this._points.getCoordinate(t);
                }),
                (e.prototype.getGeometryType = function() {
                  return "LineString";
                }),
                (e.prototype.copy = function() {
                  return new e(this._points.copy(), this._factory);
                }),
                (e.prototype.getCoordinateSequence = function() {
                  return this._points;
                }),
                (e.prototype.isEmpty = function() {
                  return 0 === this._points.size();
                }),
                (e.prototype.init = function(t) {
                  if (
                    (null === t &&
                      (t = this.getFactory()
                        .getCoordinateSequenceFactory()
                        .create([])),
                    1 === t.size())
                  )
                    throw new v(
                      "Invalid number of points in LineString (found " +
                        t.size() +
                        " - must be 0 or >= 2)"
                    );
                  this._points = t;
                }),
                (e.prototype.isCoordinate = function(t) {
                  for (var e = 0; e < this._points.size(); e++)
                    if (this._points.getCoordinate(e).equals(t)) return !0;
                  return !1;
                }),
                (e.prototype.getStartPoint = function() {
                  return this.isEmpty() ? null : this.getPointN(0);
                }),
                (e.prototype.getPointN = function(t) {
                  return this.getFactory().createPoint(
                    this._points.getCoordinate(t)
                  );
                }),
                (e.prototype.interfaces_ = function() {
                  return [Ft];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.serialVersionUID.get = function() {
                  return 0x2b2b51ba435c8e00;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(ht),
            $t = function() {};
          ($t.prototype.interfaces_ = function() {
            return [];
          }),
            ($t.prototype.getClass = function() {
              return $t;
            });
          var Qt = (function(t) {
              function e(e, r) {
                t.call(this, r),
                  (this._coordinates = e || null),
                  this.init(this._coordinates);
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { serialVersionUID: { configurable: !0 } };
              return (
                (e.prototype.computeEnvelopeInternal = function() {
                  if (this.isEmpty()) return new X();
                  var t = new X();
                  return (
                    t.expandToInclude(
                      this._coordinates.getX(0),
                      this._coordinates.getY(0)
                    ),
                    t
                  );
                }),
                (e.prototype.getSortIndex = function() {
                  return t.SORTINDEX_POINT;
                }),
                (e.prototype.getCoordinates = function() {
                  return this.isEmpty() ? [] : [this.getCoordinate()];
                }),
                (e.prototype.equalsExact = function() {
                  if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    return (
                      !!this.isEquivalentClass(e) &&
                      (!(!this.isEmpty() || !e.isEmpty()) ||
                        (this.isEmpty() === e.isEmpty() &&
                          this.equal(
                            e.getCoordinate(),
                            this.getCoordinate(),
                            r
                          )))
                    );
                  }
                  return t.prototype.equalsExact.apply(this, arguments);
                }),
                (e.prototype.normalize = function() {}),
                (e.prototype.getCoordinate = function() {
                  return 0 !== this._coordinates.size()
                    ? this._coordinates.getCoordinate(0)
                    : null;
                }),
                (e.prototype.getBoundaryDimension = function() {
                  return Ut.FALSE;
                }),
                (e.prototype.getDimension = function() {
                  return 0;
                }),
                (e.prototype.getNumPoints = function() {
                  return this.isEmpty() ? 0 : 1;
                }),
                (e.prototype.reverse = function() {
                  return this.copy();
                }),
                (e.prototype.getX = function() {
                  if (null === this.getCoordinate())
                    throw new Error("getX called on empty Point");
                  return this.getCoordinate().x;
                }),
                (e.prototype.compareToSameClass = function() {
                  if (1 === arguments.length) {
                    var t = arguments[0];
                    return this.getCoordinate().compareTo(t.getCoordinate());
                  }
                  if (2 === arguments.length) {
                    var e = arguments[0];
                    return arguments[1].compare(
                      this._coordinates,
                      e._coordinates
                    );
                  }
                }),
                (e.prototype.apply = function() {
                  if (O(arguments[0], ft)) {
                    var t = arguments[0];
                    if (this.isEmpty()) return null;
                    t.filter(this.getCoordinate());
                  } else if (O(arguments[0], kt)) {
                    var e = arguments[0];
                    if (this.isEmpty()) return null;
                    e.filter(this._coordinates, 0),
                      e.isGeometryChanged() && this.geometryChanged();
                  } else
                    (O(arguments[0], Bt) || O(arguments[0], ut)) &&
                      arguments[0].filter(this);
                }),
                (e.prototype.getBoundary = function() {
                  return this.getFactory().createGeometryCollection(null);
                }),
                (e.prototype.clone = function() {
                  var e = t.prototype.clone.call(this);
                  return (e._coordinates = this._coordinates.clone()), e;
                }),
                (e.prototype.getGeometryType = function() {
                  return "Point";
                }),
                (e.prototype.copy = function() {
                  return new e(this._coordinates.copy(), this._factory);
                }),
                (e.prototype.getCoordinateSequence = function() {
                  return this._coordinates;
                }),
                (e.prototype.getY = function() {
                  if (null === this.getCoordinate())
                    throw new Error("getY called on empty Point");
                  return this.getCoordinate().y;
                }),
                (e.prototype.isEmpty = function() {
                  return 0 === this._coordinates.size();
                }),
                (e.prototype.init = function(t) {
                  null === t &&
                    (t = this.getFactory()
                      .getCoordinateSequenceFactory()
                      .create([])),
                    et.isTrue(t.size() <= 1),
                    (this._coordinates = t);
                }),
                (e.prototype.isSimple = function() {
                  return !0;
                }),
                (e.prototype.interfaces_ = function() {
                  return [$t];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.serialVersionUID.get = function() {
                  return 0x44077bad161cbc00;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(ht),
            Zt = function() {};
          (Zt.prototype.interfaces_ = function() {
            return [];
          }),
            (Zt.prototype.getClass = function() {
              return Zt;
            });
          var Kt = (function(t) {
              function e(e, r, n) {
                if (
                  (t.call(this, n),
                  (this._shell = null),
                  (this._holes = null),
                  null === e && (e = this.getFactory().createLinearRing()),
                  null === r && (r = []),
                  t.hasNullElements(r))
                )
                  throw new v("holes must not contain null elements");
                if (e.isEmpty() && t.hasNonEmptyElements(r))
                  throw new v("shell is empty but holes are not");
                (this._shell = e), (this._holes = r);
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { serialVersionUID: { configurable: !0 } };
              return (
                (e.prototype.computeEnvelopeInternal = function() {
                  return this._shell.getEnvelopeInternal();
                }),
                (e.prototype.getSortIndex = function() {
                  return t.SORTINDEX_POLYGON;
                }),
                (e.prototype.getCoordinates = function() {
                  if (this.isEmpty()) return [];
                  for (
                    var t = new Array(this.getNumPoints()).fill(null),
                      e = -1,
                      r = this._shell.getCoordinates(),
                      n = 0;
                    n < r.length;
                    n++
                  )
                    t[++e] = r[n];
                  for (var i = 0; i < this._holes.length; i++)
                    for (
                      var o = this._holes[i].getCoordinates(), s = 0;
                      s < o.length;
                      s++
                    )
                      t[++e] = o[s];
                  return t;
                }),
                (e.prototype.getArea = function() {
                  var t = 0;
                  t += Math.abs(
                    at.signedArea(this._shell.getCoordinateSequence())
                  );
                  for (var e = 0; e < this._holes.length; e++)
                    t -= Math.abs(
                      at.signedArea(this._holes[e].getCoordinateSequence())
                    );
                  return t;
                }),
                (e.prototype.isRectangle = function() {
                  if (0 !== this.getNumInteriorRing()) return !1;
                  if (null === this._shell) return !1;
                  if (5 !== this._shell.getNumPoints()) return !1;
                  for (
                    var t = this._shell.getCoordinateSequence(),
                      e = this.getEnvelopeInternal(),
                      r = 0;
                    r < 5;
                    r++
                  ) {
                    var n = t.getX(r);
                    if (n !== e.getMinX() && n !== e.getMaxX()) return !1;
                    var i = t.getY(r);
                    if (i !== e.getMinY() && i !== e.getMaxY()) return !1;
                  }
                  for (var o = t.getX(0), s = t.getY(0), a = 1; a <= 4; a++) {
                    var l = t.getX(a),
                      u = t.getY(a);
                    if ((l !== o) == (u !== s)) return !1;
                    (o = l), (s = u);
                  }
                  return !0;
                }),
                (e.prototype.equalsExact = function() {
                  if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    if (!this.isEquivalentClass(e)) return !1;
                    var n = e,
                      i = this._shell,
                      o = n._shell;
                    if (!i.equalsExact(o, r)) return !1;
                    if (this._holes.length !== n._holes.length) return !1;
                    for (var s = 0; s < this._holes.length; s++)
                      if (!this._holes[s].equalsExact(n._holes[s], r))
                        return !1;
                    return !0;
                  }
                  return t.prototype.equalsExact.apply(this, arguments);
                }),
                (e.prototype.normalize = function() {
                  if (0 === arguments.length) {
                    this.normalize(this._shell, !0);
                    for (var t = 0; t < this._holes.length; t++)
                      this.normalize(this._holes[t], !1);
                    jt.sort(this._holes);
                  } else if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    if (e.isEmpty()) return null;
                    var n = new Array(e.getCoordinates().length - 1).fill(null);
                    V.arraycopy(e.getCoordinates(), 0, n, 0, n.length);
                    var i = Ct.minCoordinate(e.getCoordinates());
                    Ct.scroll(n, i),
                      V.arraycopy(n, 0, e.getCoordinates(), 0, n.length),
                      (e.getCoordinates()[n.length] = n[0]),
                      at.isCCW(e.getCoordinates()) === r &&
                        Ct.reverse(e.getCoordinates());
                  }
                }),
                (e.prototype.getCoordinate = function() {
                  return this._shell.getCoordinate();
                }),
                (e.prototype.getNumInteriorRing = function() {
                  return this._holes.length;
                }),
                (e.prototype.getBoundaryDimension = function() {
                  return 1;
                }),
                (e.prototype.getDimension = function() {
                  return 2;
                }),
                (e.prototype.getLength = function() {
                  var t = 0;
                  t += this._shell.getLength();
                  for (var e = 0; e < this._holes.length; e++)
                    t += this._holes[e].getLength();
                  return t;
                }),
                (e.prototype.getNumPoints = function() {
                  for (
                    var t = this._shell.getNumPoints(), e = 0;
                    e < this._holes.length;
                    e++
                  )
                    t += this._holes[e].getNumPoints();
                  return t;
                }),
                (e.prototype.reverse = function() {
                  var t = this.copy();
                  (t._shell = this._shell.copy().reverse()),
                    (t._holes = new Array(this._holes.length).fill(null));
                  for (var e = 0; e < this._holes.length; e++)
                    t._holes[e] = this._holes[e].copy().reverse();
                  return t;
                }),
                (e.prototype.convexHull = function() {
                  return this.getExteriorRing().convexHull();
                }),
                (e.prototype.compareToSameClass = function() {
                  if (1 === arguments.length) {
                    var t = arguments[0],
                      e = this._shell,
                      r = t._shell;
                    return e.compareToSameClass(r);
                  }
                  if (2 === arguments.length) {
                    var n = arguments[1],
                      i = arguments[0],
                      o = this._shell,
                      s = i._shell,
                      a = o.compareToSameClass(s, n);
                    if (0 !== a) return a;
                    for (
                      var l = this.getNumInteriorRing(),
                        u = i.getNumInteriorRing(),
                        h = 0;
                      h < l && h < u;

                    ) {
                      var c = this.getInteriorRingN(h),
                        p = i.getInteriorRingN(h),
                        f = c.compareToSameClass(p, n);
                      if (0 !== f) return f;
                      h++;
                    }
                    return h < l ? 1 : h < u ? -1 : 0;
                  }
                }),
                (e.prototype.apply = function(t) {
                  if (O(t, ft)) {
                    this._shell.apply(t);
                    for (var e = 0; e < this._holes.length; e++)
                      this._holes[e].apply(t);
                  } else if (O(t, kt)) {
                    if ((this._shell.apply(t), !t.isDone()))
                      for (
                        var r = 0;
                        r < this._holes.length &&
                        (this._holes[r].apply(t), !t.isDone());
                        r++
                      );
                    t.isGeometryChanged() && this.geometryChanged();
                  } else if (O(t, Bt)) t.filter(this);
                  else if (O(t, ut)) {
                    t.filter(this), this._shell.apply(t);
                    for (var n = 0; n < this._holes.length; n++)
                      this._holes[n].apply(t);
                  }
                }),
                (e.prototype.getBoundary = function() {
                  if (this.isEmpty())
                    return this.getFactory().createMultiLineString();
                  var t = new Array(this._holes.length + 1).fill(null);
                  t[0] = this._shell;
                  for (var e = 0; e < this._holes.length; e++)
                    t[e + 1] = this._holes[e];
                  return t.length <= 1
                    ? this.getFactory().createLinearRing(
                        t[0].getCoordinateSequence()
                      )
                    : this.getFactory().createMultiLineString(t);
                }),
                (e.prototype.clone = function() {
                  var e = t.prototype.clone.call(this);
                  (e._shell = this._shell.clone()),
                    (e._holes = new Array(this._holes.length).fill(null));
                  for (var r = 0; r < this._holes.length; r++)
                    e._holes[r] = this._holes[r].clone();
                  return e;
                }),
                (e.prototype.getGeometryType = function() {
                  return "Polygon";
                }),
                (e.prototype.copy = function() {
                  for (
                    var t = this._shell.copy(),
                      r = new Array(this._holes.length).fill(null),
                      n = 0;
                    n < r.length;
                    n++
                  )
                    r[n] = this._holes[n].copy();
                  return new e(t, r, this._factory);
                }),
                (e.prototype.getExteriorRing = function() {
                  return this._shell;
                }),
                (e.prototype.isEmpty = function() {
                  return this._shell.isEmpty();
                }),
                (e.prototype.getInteriorRingN = function(t) {
                  return this._holes[t];
                }),
                (e.prototype.interfaces_ = function() {
                  return [Zt];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.serialVersionUID.get = function() {
                  return -0x307ffefd8dc97200;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(ht),
            te = (function(t) {
              function e() {
                t.apply(this, arguments);
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { serialVersionUID: { configurable: !0 } };
              return (
                (e.prototype.getSortIndex = function() {
                  return ht.SORTINDEX_MULTIPOINT;
                }),
                (e.prototype.isValid = function() {
                  return !0;
                }),
                (e.prototype.equalsExact = function() {
                  if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    return (
                      !!this.isEquivalentClass(e) &&
                      t.prototype.equalsExact.call(this, e, r)
                    );
                  }
                  return t.prototype.equalsExact.apply(this, arguments);
                }),
                (e.prototype.getCoordinate = function() {
                  if (1 === arguments.length) {
                    var e = arguments[0];
                    return this._geometries[e].getCoordinate();
                  }
                  return t.prototype.getCoordinate.apply(this, arguments);
                }),
                (e.prototype.getBoundaryDimension = function() {
                  return Ut.FALSE;
                }),
                (e.prototype.getDimension = function() {
                  return 0;
                }),
                (e.prototype.getBoundary = function() {
                  return this.getFactory().createGeometryCollection(null);
                }),
                (e.prototype.getGeometryType = function() {
                  return "MultiPoint";
                }),
                (e.prototype.copy = function() {
                  for (
                    var t = new Array(this._geometries.length).fill(null),
                      r = 0;
                    r < t.length;
                    r++
                  )
                    t[r] = this._geometries[r].copy();
                  return new e(t, this._factory);
                }),
                (e.prototype.interfaces_ = function() {
                  return [$t];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.serialVersionUID.get = function() {
                  return -0x6fb1ed4162e0fc00;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(qt),
            ee = (function(t) {
              function e(e, r) {
                e instanceof w &&
                  r instanceof me &&
                  (e = r.getCoordinateSequenceFactory().create(e)),
                  t.call(this, e, r),
                  this.validateConstruction();
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = {
                MINIMUM_VALID_SIZE: { configurable: !0 },
                serialVersionUID: { configurable: !0 }
              };
              return (
                (e.prototype.getSortIndex = function() {
                  return ht.SORTINDEX_LINEARRING;
                }),
                (e.prototype.getBoundaryDimension = function() {
                  return Ut.FALSE;
                }),
                (e.prototype.isClosed = function() {
                  return !!this.isEmpty() || t.prototype.isClosed.call(this);
                }),
                (e.prototype.reverse = function() {
                  var t = this._points.copy();
                  return Ht.reverse(t), this.getFactory().createLinearRing(t);
                }),
                (e.prototype.validateConstruction = function() {
                  if (!this.isEmpty() && !t.prototype.isClosed.call(this))
                    throw new v(
                      "Points of LinearRing do not form a closed linestring"
                    );
                  if (
                    this.getCoordinateSequence().size() >= 1 &&
                    this.getCoordinateSequence().size() < e.MINIMUM_VALID_SIZE
                  )
                    throw new v(
                      "Invalid number of points in LinearRing (found " +
                        this.getCoordinateSequence().size() +
                        " - must be 0 or >= 4)"
                    );
                }),
                (e.prototype.getGeometryType = function() {
                  return "LinearRing";
                }),
                (e.prototype.copy = function() {
                  return new e(this._points.copy(), this._factory);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.MINIMUM_VALID_SIZE.get = function() {
                  return 4;
                }),
                (r.serialVersionUID.get = function() {
                  return -0x3b229e262367a600;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(Jt),
            re = (function(t) {
              function e() {
                t.apply(this, arguments);
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { serialVersionUID: { configurable: !0 } };
              return (
                (e.prototype.getSortIndex = function() {
                  return ht.SORTINDEX_MULTIPOLYGON;
                }),
                (e.prototype.equalsExact = function() {
                  if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    return (
                      !!this.isEquivalentClass(e) &&
                      t.prototype.equalsExact.call(this, e, r)
                    );
                  }
                  return t.prototype.equalsExact.apply(this, arguments);
                }),
                (e.prototype.getBoundaryDimension = function() {
                  return 1;
                }),
                (e.prototype.getDimension = function() {
                  return 2;
                }),
                (e.prototype.reverse = function() {
                  for (
                    var t = this._geometries.length,
                      e = new Array(t).fill(null),
                      r = 0;
                    r < this._geometries.length;
                    r++
                  )
                    e[r] = this._geometries[r].reverse();
                  return this.getFactory().createMultiPolygon(e);
                }),
                (e.prototype.getBoundary = function() {
                  if (this.isEmpty())
                    return this.getFactory().createMultiLineString();
                  for (
                    var t = new It(), e = 0;
                    e < this._geometries.length;
                    e++
                  )
                    for (
                      var r = this._geometries[e].getBoundary(), n = 0;
                      n < r.getNumGeometries();
                      n++
                    )
                      t.add(r.getGeometryN(n));
                  var i = new Array(t.size()).fill(null);
                  return this.getFactory().createMultiLineString(t.toArray(i));
                }),
                (e.prototype.getGeometryType = function() {
                  return "MultiPolygon";
                }),
                (e.prototype.copy = function() {
                  for (
                    var t = new Array(this._geometries.length).fill(null),
                      r = 0;
                    r < t.length;
                    r++
                  )
                    t[r] = this._geometries[r].copy();
                  return new e(t, this._factory);
                }),
                (e.prototype.interfaces_ = function() {
                  return [Zt];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.serialVersionUID.get = function() {
                  return -0x7a5aa1369171980;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(qt),
            ne = function(t) {
              (this._factory = t || null), (this._isUserDataCopied = !1);
            },
            ie = {
              NoOpGeometryOperation: { configurable: !0 },
              CoordinateOperation: { configurable: !0 },
              CoordinateSequenceOperation: { configurable: !0 }
            };
          (ne.prototype.setCopyUserData = function(t) {
            this._isUserDataCopied = t;
          }),
            (ne.prototype.edit = function(t, e) {
              if (null === t) return null;
              var r = this.editInternal(t, e);
              return (
                this._isUserDataCopied && r.setUserData(t.getUserData()), r
              );
            }),
            (ne.prototype.editInternal = function(t, e) {
              return (
                null === this._factory && (this._factory = t.getFactory()),
                t instanceof qt
                  ? this.editGeometryCollection(t, e)
                  : t instanceof Kt
                  ? this.editPolygon(t, e)
                  : t instanceof Qt || t instanceof Jt
                  ? e.edit(t, this._factory)
                  : (et.shouldNeverReachHere(
                      "Unsupported Geometry class: " + t.getClass().getName()
                    ),
                    null)
              );
            }),
            (ne.prototype.editGeometryCollection = function(t, e) {
              for (
                var r = e.edit(t, this._factory), n = new It(), i = 0;
                i < r.getNumGeometries();
                i++
              ) {
                var o = this.edit(r.getGeometryN(i), e);
                null === o || o.isEmpty() || n.add(o);
              }
              return r.getClass() === te
                ? this._factory.createMultiPoint(n.toArray([]))
                : r.getClass() === zt
                ? this._factory.createMultiLineString(n.toArray([]))
                : r.getClass() === re
                ? this._factory.createMultiPolygon(n.toArray([]))
                : this._factory.createGeometryCollection(n.toArray([]));
            }),
            (ne.prototype.editPolygon = function(t, e) {
              var r = e.edit(t, this._factory);
              if (
                (null === r && (r = this._factory.createPolygon(null)),
                r.isEmpty())
              )
                return r;
              var n = this.edit(r.getExteriorRing(), e);
              if (null === n || n.isEmpty())
                return this._factory.createPolygon();
              for (var i = new It(), o = 0; o < r.getNumInteriorRing(); o++) {
                var s = this.edit(r.getInteriorRingN(o), e);
                null === s || s.isEmpty() || i.add(s);
              }
              return this._factory.createPolygon(n, i.toArray([]));
            }),
            (ne.prototype.interfaces_ = function() {
              return [];
            }),
            (ne.prototype.getClass = function() {
              return ne;
            }),
            (ne.GeometryEditorOperation = function() {}),
            (ie.NoOpGeometryOperation.get = function() {
              return oe;
            }),
            (ie.CoordinateOperation.get = function() {
              return se;
            }),
            (ie.CoordinateSequenceOperation.get = function() {
              return ae;
            }),
            Object.defineProperties(ne, ie);
          var oe = function() {};
          (oe.prototype.edit = function(t, e) {
            return t;
          }),
            (oe.prototype.interfaces_ = function() {
              return [ne.GeometryEditorOperation];
            }),
            (oe.prototype.getClass = function() {
              return oe;
            });
          var se = function() {};
          (se.prototype.edit = function(t, e) {
            var r = this.editCoordinates(t.getCoordinates(), t);
            return null === r
              ? t
              : t instanceof ee
              ? e.createLinearRing(r)
              : t instanceof Jt
              ? e.createLineString(r)
              : t instanceof Qt
              ? r.length > 0
                ? e.createPoint(r[0])
                : e.createPoint()
              : t;
          }),
            (se.prototype.interfaces_ = function() {
              return [ne.GeometryEditorOperation];
            }),
            (se.prototype.getClass = function() {
              return se;
            });
          var ae = function() {};
          (ae.prototype.edit = function(t, e) {
            return t instanceof ee
              ? e.createLinearRing(this.edit(t.getCoordinateSequence(), t))
              : t instanceof Jt
              ? e.createLineString(this.edit(t.getCoordinateSequence(), t))
              : t instanceof Qt
              ? e.createPoint(this.edit(t.getCoordinateSequence(), t))
              : t;
          }),
            (ae.prototype.interfaces_ = function() {
              return [ne.GeometryEditorOperation];
            }),
            (ae.prototype.getClass = function() {
              return ae;
            });
          var le = function() {
              if (
                ((this._dimension = 3),
                (this._coordinates = null),
                1 === arguments.length)
              ) {
                if (arguments[0] instanceof Array)
                  (this._coordinates = arguments[0]), (this._dimension = 3);
                else if (Number.isInteger(arguments[0])) {
                  var t = arguments[0];
                  this._coordinates = new Array(t).fill(null);
                  for (var e = 0; e < t; e++) this._coordinates[e] = new w();
                } else if (O(arguments[0], B)) {
                  var r = arguments[0];
                  if (null === r)
                    return (this._coordinates = new Array(0).fill(null)), null;
                  (this._dimension = r.getDimension()),
                    (this._coordinates = new Array(r.size()).fill(null));
                  for (var n = 0; n < this._coordinates.length; n++)
                    this._coordinates[n] = r.getCoordinateCopy(n);
                }
              } else if (2 === arguments.length)
                if (
                  arguments[0] instanceof Array &&
                  Number.isInteger(arguments[1])
                ) {
                  var i = arguments[0],
                    o = arguments[1];
                  (this._coordinates = i),
                    (this._dimension = o),
                    null === i && (this._coordinates = new Array(0).fill(null));
                } else if (
                  Number.isInteger(arguments[0]) &&
                  Number.isInteger(arguments[1])
                ) {
                  var s = arguments[0],
                    a = arguments[1];
                  (this._coordinates = new Array(s).fill(null)),
                    (this._dimension = a);
                  for (var l = 0; l < s; l++) this._coordinates[l] = new w();
                }
            },
            ue = { serialVersionUID: { configurable: !0 } };
          (le.prototype.setOrdinate = function(t, e, r) {
            switch (e) {
              case B.X:
                this._coordinates[t].x = r;
                break;
              case B.Y:
                this._coordinates[t].y = r;
                break;
              case B.Z:
                this._coordinates[t].z = r;
                break;
              default:
                throw new v("invalid ordinateIndex");
            }
          }),
            (le.prototype.size = function() {
              return this._coordinates.length;
            }),
            (le.prototype.getOrdinate = function(t, e) {
              switch (e) {
                case B.X:
                  return this._coordinates[t].x;
                case B.Y:
                  return this._coordinates[t].y;
                case B.Z:
                  return this._coordinates[t].z;
              }
              return _.NaN;
            }),
            (le.prototype.getCoordinate = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return this._coordinates[t];
              }
              if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                (r.x = this._coordinates[e].x),
                  (r.y = this._coordinates[e].y),
                  (r.z = this._coordinates[e].z);
              }
            }),
            (le.prototype.getCoordinateCopy = function(t) {
              return new w(this._coordinates[t]);
            }),
            (le.prototype.getDimension = function() {
              return this._dimension;
            }),
            (le.prototype.getX = function(t) {
              return this._coordinates[t].x;
            }),
            (le.prototype.clone = function() {
              for (
                var t = new Array(this.size()).fill(null), e = 0;
                e < this._coordinates.length;
                e++
              )
                t[e] = this._coordinates[e].clone();
              return new le(t, this._dimension);
            }),
            (le.prototype.expandEnvelope = function(t) {
              for (var e = 0; e < this._coordinates.length; e++)
                t.expandToInclude(this._coordinates[e]);
              return t;
            }),
            (le.prototype.copy = function() {
              for (
                var t = new Array(this.size()).fill(null), e = 0;
                e < this._coordinates.length;
                e++
              )
                t[e] = this._coordinates[e].copy();
              return new le(t, this._dimension);
            }),
            (le.prototype.toString = function() {
              if (this._coordinates.length > 0) {
                var t = new A(17 * this._coordinates.length);
                t.append("("), t.append(this._coordinates[0]);
                for (var e = 1; e < this._coordinates.length; e++)
                  t.append(", "), t.append(this._coordinates[e]);
                return t.append(")"), t.toString();
              }
              return "()";
            }),
            (le.prototype.getY = function(t) {
              return this._coordinates[t].y;
            }),
            (le.prototype.toCoordinateArray = function() {
              return this._coordinates;
            }),
            (le.prototype.interfaces_ = function() {
              return [B, e];
            }),
            (le.prototype.getClass = function() {
              return le;
            }),
            (ue.serialVersionUID.get = function() {
              return -0xcb44a778db18e00;
            }),
            Object.defineProperties(le, ue);
          var he = function() {},
            ce = {
              serialVersionUID: { configurable: !0 },
              instanceObject: { configurable: !0 }
            };
          (he.prototype.readResolve = function() {
            return he.instance();
          }),
            (he.prototype.create = function() {
              if (1 === arguments.length) {
                if (arguments[0] instanceof Array) return new le(arguments[0]);
                if (O(arguments[0], B)) return new le(arguments[0]);
              } else if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                return e > 3 && (e = 3), e < 2 ? new le(t) : new le(t, e);
              }
            }),
            (he.prototype.interfaces_ = function() {
              return [E, e];
            }),
            (he.prototype.getClass = function() {
              return he;
            }),
            (he.instance = function() {
              return he.instanceObject;
            }),
            (ce.serialVersionUID.get = function() {
              return -0x38e49fa6cf6f2e00;
            }),
            (ce.instanceObject.get = function() {
              return new he();
            }),
            Object.defineProperties(he, ce);
          var pe = (function(t) {
              function e() {
                t.call(this), (this.map_ = new Map());
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.get = function(t) {
                  return this.map_.get(t) || null;
                }),
                (e.prototype.put = function(t, e) {
                  return this.map_.set(t, e), e;
                }),
                (e.prototype.values = function() {
                  for (
                    var t = new It(), e = this.map_.values(), r = e.next();
                    !r.done;

                  )
                    t.add(r.value), (r = e.next());
                  return t;
                }),
                (e.prototype.entrySet = function() {
                  var t = new Tt();
                  return (
                    this.map_.entries().forEach(function(e) {
                      return t.add(e);
                    }),
                    t
                  );
                }),
                (e.prototype.size = function() {
                  return this.map_.size();
                }),
                e
              );
            })(Ot),
            fe = function t() {
              if (
                ((this._modelType = null),
                (this._scale = null),
                0 === arguments.length)
              )
                this._modelType = t.FLOATING;
              else if (1 === arguments.length)
                if (arguments[0] instanceof ye) {
                  var e = arguments[0];
                  (this._modelType = e), e === t.FIXED && this.setScale(1);
                } else if ("number" == typeof arguments[0]) {
                  var r = arguments[0];
                  (this._modelType = t.FIXED), this.setScale(r);
                } else if (arguments[0] instanceof t) {
                  var n = arguments[0];
                  (this._modelType = n._modelType), (this._scale = n._scale);
                }
            },
            de = {
              serialVersionUID: { configurable: !0 },
              maximumPreciseValue: { configurable: !0 }
            };
          (fe.prototype.equals = function(t) {
            if (!(t instanceof fe)) return !1;
            var e = t;
            return this._modelType === e._modelType && this._scale === e._scale;
          }),
            (fe.prototype.compareTo = function(t) {
              var e = t,
                r = this.getMaximumSignificantDigits(),
                n = e.getMaximumSignificantDigits();
              return new R(r).compareTo(new R(n));
            }),
            (fe.prototype.getScale = function() {
              return this._scale;
            }),
            (fe.prototype.isFloating = function() {
              return (
                this._modelType === fe.FLOATING ||
                this._modelType === fe.FLOATING_SINGLE
              );
            }),
            (fe.prototype.getType = function() {
              return this._modelType;
            }),
            (fe.prototype.toString = function() {
              var t = "UNKNOWN";
              return (
                this._modelType === fe.FLOATING
                  ? (t = "Floating")
                  : this._modelType === fe.FLOATING_SINGLE
                  ? (t = "Floating-Single")
                  : this._modelType === fe.FIXED &&
                    (t = "Fixed (Scale=" + this.getScale() + ")"),
                t
              );
            }),
            (fe.prototype.makePrecise = function() {
              if ("number" == typeof arguments[0]) {
                var t = arguments[0];
                return _.isNaN(t) || this._modelType === fe.FLOATING_SINGLE
                  ? t
                  : this._modelType === fe.FIXED
                  ? Math.round(t * this._scale) / this._scale
                  : t;
              }
              if (arguments[0] instanceof w) {
                var e = arguments[0];
                if (this._modelType === fe.FLOATING) return null;
                (e.x = this.makePrecise(e.x)), (e.y = this.makePrecise(e.y));
              }
            }),
            (fe.prototype.getMaximumSignificantDigits = function() {
              var t = 16;
              return (
                this._modelType === fe.FLOATING
                  ? (t = 16)
                  : this._modelType === fe.FLOATING_SINGLE
                  ? (t = 6)
                  : this._modelType === fe.FIXED &&
                    (t =
                      1 +
                      Math.trunc(
                        Math.ceil(Math.log(this.getScale()) / Math.log(10))
                      )),
                t
              );
            }),
            (fe.prototype.setScale = function(t) {
              this._scale = Math.abs(t);
            }),
            (fe.prototype.interfaces_ = function() {
              return [e, b];
            }),
            (fe.prototype.getClass = function() {
              return fe;
            }),
            (fe.mostPrecise = function(t, e) {
              return t.compareTo(e) >= 0 ? t : e;
            }),
            (de.serialVersionUID.get = function() {
              return 0x6bee6404e9a25c00;
            }),
            (de.maximumPreciseValue.get = function() {
              return 9007199254740992;
            }),
            Object.defineProperties(fe, de);
          var ye = function t(e) {
              (this._name = e || null), t.nameToTypeMap.put(e, this);
            },
            ge = {
              serialVersionUID: { configurable: !0 },
              nameToTypeMap: { configurable: !0 }
            };
          (ye.prototype.readResolve = function() {
            return ye.nameToTypeMap.get(this._name);
          }),
            (ye.prototype.toString = function() {
              return this._name;
            }),
            (ye.prototype.interfaces_ = function() {
              return [e];
            }),
            (ye.prototype.getClass = function() {
              return ye;
            }),
            (ge.serialVersionUID.get = function() {
              return -552860263173159e4;
            }),
            (ge.nameToTypeMap.get = function() {
              return new pe();
            }),
            Object.defineProperties(ye, ge),
            (fe.Type = ye),
            (fe.FIXED = new ye("FIXED")),
            (fe.FLOATING = new ye("FLOATING")),
            (fe.FLOATING_SINGLE = new ye("FLOATING SINGLE"));
          var me = function t() {
              (this._precisionModel = new fe()),
                (this._SRID = 0),
                (this._coordinateSequenceFactory = t.getDefaultCoordinateSequenceFactory()),
                0 === arguments.length ||
                  (1 === arguments.length
                    ? O(arguments[0], E)
                      ? (this._coordinateSequenceFactory = arguments[0])
                      : arguments[0] instanceof fe &&
                        (this._precisionModel = arguments[0])
                    : 2 === arguments.length
                    ? ((this._precisionModel = arguments[0]),
                      (this._SRID = arguments[1]))
                    : 3 === arguments.length &&
                      ((this._precisionModel = arguments[0]),
                      (this._SRID = arguments[1]),
                      (this._coordinateSequenceFactory = arguments[2])));
            },
            ve = { serialVersionUID: { configurable: !0 } };
          (me.prototype.toGeometry = function(t) {
            return t.isNull()
              ? this.createPoint(null)
              : t.getMinX() === t.getMaxX() && t.getMinY() === t.getMaxY()
              ? this.createPoint(new w(t.getMinX(), t.getMinY()))
              : t.getMinX() === t.getMaxX() || t.getMinY() === t.getMaxY()
              ? this.createLineString([
                  new w(t.getMinX(), t.getMinY()),
                  new w(t.getMaxX(), t.getMaxY())
                ])
              : this.createPolygon(
                  this.createLinearRing([
                    new w(t.getMinX(), t.getMinY()),
                    new w(t.getMinX(), t.getMaxY()),
                    new w(t.getMaxX(), t.getMaxY()),
                    new w(t.getMaxX(), t.getMinY()),
                    new w(t.getMinX(), t.getMinY())
                  ]),
                  null
                );
          }),
            (me.prototype.createLineString = function(t) {
              return t
                ? t instanceof Array
                  ? new Jt(this.getCoordinateSequenceFactory().create(t), this)
                  : O(t, B)
                  ? new Jt(t, this)
                  : void 0
                : new Jt(this.getCoordinateSequenceFactory().create([]), this);
            }),
            (me.prototype.createMultiLineString = function() {
              return 0 === arguments.length
                ? new zt(null, this)
                : 1 === arguments.length
                ? new zt(arguments[0], this)
                : void 0;
            }),
            (me.prototype.buildGeometry = function(t) {
              for (
                var e = null, r = !1, n = !1, i = t.iterator();
                i.hasNext();

              ) {
                var o = i.next(),
                  s = o.getClass();
                null === e && (e = s),
                  s !== e && (r = !0),
                  o.isGeometryCollectionOrDerived() && (n = !0);
              }
              if (null === e) return this.createGeometryCollection();
              if (r || n)
                return this.createGeometryCollection(me.toGeometryArray(t));
              var a = t.iterator().next();
              if (t.size() > 1) {
                if (a instanceof Kt)
                  return this.createMultiPolygon(me.toPolygonArray(t));
                if (a instanceof Jt)
                  return this.createMultiLineString(me.toLineStringArray(t));
                if (a instanceof Qt)
                  return this.createMultiPoint(me.toPointArray(t));
                et.shouldNeverReachHere(
                  "Unhandled class: " + a.getClass().getName()
                );
              }
              return a;
            }),
            (me.prototype.createMultiPointFromCoords = function(t) {
              return this.createMultiPoint(
                null !== t
                  ? this.getCoordinateSequenceFactory().create(t)
                  : null
              );
            }),
            (me.prototype.createPoint = function() {
              if (0 === arguments.length)
                return this.createPoint(
                  this.getCoordinateSequenceFactory().create([])
                );
              if (1 === arguments.length) {
                if (arguments[0] instanceof w) {
                  var t = arguments[0];
                  return this.createPoint(
                    null !== t
                      ? this.getCoordinateSequenceFactory().create([t])
                      : null
                  );
                }
                if (O(arguments[0], B)) return new Qt(arguments[0], this);
              }
            }),
            (me.prototype.getCoordinateSequenceFactory = function() {
              return this._coordinateSequenceFactory;
            }),
            (me.prototype.createPolygon = function() {
              if (0 === arguments.length) return new Kt(null, null, this);
              if (1 === arguments.length) {
                if (O(arguments[0], B)) {
                  var t = arguments[0];
                  return this.createPolygon(this.createLinearRing(t));
                }
                if (arguments[0] instanceof Array) {
                  var e = arguments[0];
                  return this.createPolygon(this.createLinearRing(e));
                }
                if (arguments[0] instanceof ee) {
                  var r = arguments[0];
                  return this.createPolygon(r, null);
                }
              } else if (2 === arguments.length)
                return new Kt(arguments[0], arguments[1], this);
            }),
            (me.prototype.getSRID = function() {
              return this._SRID;
            }),
            (me.prototype.createGeometryCollection = function() {
              return 0 === arguments.length
                ? new qt(null, this)
                : 1 === arguments.length
                ? new qt(arguments[0], this)
                : void 0;
            }),
            (me.prototype.createGeometry = function(t) {
              return new ne(this).edit(t, {
                edit: function() {
                  if (2 === arguments.length) {
                    var t = arguments[0];
                    return this._coordinateSequenceFactory.create(t);
                  }
                }
              });
            }),
            (me.prototype.getPrecisionModel = function() {
              return this._precisionModel;
            }),
            (me.prototype.createLinearRing = function() {
              if (0 === arguments.length)
                return this.createLinearRing(
                  this.getCoordinateSequenceFactory().create([])
                );
              if (1 === arguments.length) {
                if (arguments[0] instanceof Array) {
                  var t = arguments[0];
                  return this.createLinearRing(
                    null !== t
                      ? this.getCoordinateSequenceFactory().create(t)
                      : null
                  );
                }
                if (O(arguments[0], B)) return new ee(arguments[0], this);
              }
            }),
            (me.prototype.createMultiPolygon = function() {
              return 0 === arguments.length
                ? new re(null, this)
                : 1 === arguments.length
                ? new re(arguments[0], this)
                : void 0;
            }),
            (me.prototype.createMultiPoint = function() {
              if (0 === arguments.length) return new te(null, this);
              if (1 === arguments.length) {
                if (arguments[0] instanceof Array)
                  return new te(arguments[0], this);
                if (arguments[0] instanceof Array) {
                  var t = arguments[0];
                  return this.createMultiPoint(
                    null !== t
                      ? this.getCoordinateSequenceFactory().create(t)
                      : null
                  );
                }
                if (O(arguments[0], B)) {
                  var e = arguments[0];
                  if (null === e)
                    return this.createMultiPoint(new Array(0).fill(null));
                  for (
                    var r = new Array(e.size()).fill(null), n = 0;
                    n < e.size();
                    n++
                  ) {
                    var i = this.getCoordinateSequenceFactory().create(
                      1,
                      e.getDimension()
                    );
                    Ht.copy(e, n, i, 0, 1), (r[n] = this.createPoint(i));
                  }
                  return this.createMultiPoint(r);
                }
              }
            }),
            (me.prototype.interfaces_ = function() {
              return [e];
            }),
            (me.prototype.getClass = function() {
              return me;
            }),
            (me.toMultiPolygonArray = function(t) {
              var e = new Array(t.size()).fill(null);
              return t.toArray(e);
            }),
            (me.toGeometryArray = function(t) {
              if (null === t) return null;
              var e = new Array(t.size()).fill(null);
              return t.toArray(e);
            }),
            (me.getDefaultCoordinateSequenceFactory = function() {
              return he.instance();
            }),
            (me.toMultiLineStringArray = function(t) {
              var e = new Array(t.size()).fill(null);
              return t.toArray(e);
            }),
            (me.toLineStringArray = function(t) {
              var e = new Array(t.size()).fill(null);
              return t.toArray(e);
            }),
            (me.toMultiPointArray = function(t) {
              var e = new Array(t.size()).fill(null);
              return t.toArray(e);
            }),
            (me.toLinearRingArray = function(t) {
              var e = new Array(t.size()).fill(null);
              return t.toArray(e);
            }),
            (me.toPointArray = function(t) {
              var e = new Array(t.size()).fill(null);
              return t.toArray(e);
            }),
            (me.toPolygonArray = function(t) {
              var e = new Array(t.size()).fill(null);
              return t.toArray(e);
            }),
            (me.createPointFromInternalCoord = function(t, e) {
              return (
                e.getPrecisionModel().makePrecise(t),
                e.getFactory().createPoint(t)
              );
            }),
            (ve.serialVersionUID.get = function() {
              return -0x5ea75f2051eeb400;
            }),
            Object.defineProperties(me, ve);
          var _e = [
              "Point",
              "MultiPoint",
              "LineString",
              "MultiLineString",
              "Polygon",
              "MultiPolygon"
            ],
            xe = function(t) {
              this.geometryFactory = t || new me();
            };
          (xe.prototype.read = function(t) {
            var e,
              r = (e = "string" == typeof t ? JSON.parse(t) : t).type;
            if (!be[r]) throw new Error("Unknown GeoJSON type: " + e.type);
            return -1 !== _e.indexOf(r)
              ? be[r].apply(this, [e.coordinates])
              : "GeometryCollection" === r
              ? be[r].apply(this, [e.geometries])
              : be[r].apply(this, [e]);
          }),
            (xe.prototype.write = function(t) {
              var e = t.getGeometryType();
              if (!Se[e]) throw new Error("Geometry is not supported");
              return Se[e].apply(this, [t]);
            });
          var be = {
              Feature: function(t) {
                var e = {};
                for (var r in t) e[r] = t[r];
                if (t.geometry) {
                  var n = t.geometry.type;
                  if (!be[n])
                    throw new Error("Unknown GeoJSON type: " + t.type);
                  e.geometry = this.read(t.geometry);
                }
                return t.bbox && (e.bbox = be.bbox.apply(this, [t.bbox])), e;
              },
              FeatureCollection: function(t) {
                var e = {};
                if (t.features) {
                  e.features = [];
                  for (var r = 0; r < t.features.length; ++r)
                    e.features.push(this.read(t.features[r]));
                }
                return (
                  t.bbox && (e.bbox = this.parse.bbox.apply(this, [t.bbox])), e
                );
              },
              coordinates: function(t) {
                for (var e = [], r = 0; r < t.length; ++r) {
                  var n = t[r];
                  e.push(new w(n[0], n[1]));
                }
                return e;
              },
              bbox: function(t) {
                return this.geometryFactory.createLinearRing([
                  new w(t[0], t[1]),
                  new w(t[2], t[1]),
                  new w(t[2], t[3]),
                  new w(t[0], t[3]),
                  new w(t[0], t[1])
                ]);
              },
              Point: function(t) {
                var e = new w(t[0], t[1]);
                return this.geometryFactory.createPoint(e);
              },
              MultiPoint: function(t) {
                for (var e = [], r = 0; r < t.length; ++r)
                  e.push(be.Point.apply(this, [t[r]]));
                return this.geometryFactory.createMultiPoint(e);
              },
              LineString: function(t) {
                var e = be.coordinates.apply(this, [t]);
                return this.geometryFactory.createLineString(e);
              },
              MultiLineString: function(t) {
                for (var e = [], r = 0; r < t.length; ++r)
                  e.push(be.LineString.apply(this, [t[r]]));
                return this.geometryFactory.createMultiLineString(e);
              },
              Polygon: function(t) {
                for (
                  var e = be.coordinates.apply(this, [t[0]]),
                    r = this.geometryFactory.createLinearRing(e),
                    n = [],
                    i = 1;
                  i < t.length;
                  ++i
                ) {
                  var o = t[i],
                    s = be.coordinates.apply(this, [o]),
                    a = this.geometryFactory.createLinearRing(s);
                  n.push(a);
                }
                return this.geometryFactory.createPolygon(r, n);
              },
              MultiPolygon: function(t) {
                for (var e = [], r = 0; r < t.length; ++r) {
                  var n = t[r];
                  e.push(be.Polygon.apply(this, [n]));
                }
                return this.geometryFactory.createMultiPolygon(e);
              },
              GeometryCollection: function(t) {
                for (var e = [], r = 0; r < t.length; ++r) {
                  var n = t[r];
                  e.push(this.read(n));
                }
                return this.geometryFactory.createGeometryCollection(e);
              }
            },
            Se = {
              coordinate: function(t) {
                return [t.x, t.y];
              },
              Point: function(t) {
                return {
                  type: "Point",
                  coordinates: Se.coordinate.apply(this, [t.getCoordinate()])
                };
              },
              MultiPoint: function(t) {
                for (var e = [], r = 0; r < t._geometries.length; ++r) {
                  var n = t._geometries[r],
                    i = Se.Point.apply(this, [n]);
                  e.push(i.coordinates);
                }
                return { type: "MultiPoint", coordinates: e };
              },
              LineString: function(t) {
                for (
                  var e = [], r = t.getCoordinates(), n = 0;
                  n < r.length;
                  ++n
                ) {
                  var i = r[n];
                  e.push(Se.coordinate.apply(this, [i]));
                }
                return { type: "LineString", coordinates: e };
              },
              MultiLineString: function(t) {
                for (var e = [], r = 0; r < t._geometries.length; ++r) {
                  var n = t._geometries[r],
                    i = Se.LineString.apply(this, [n]);
                  e.push(i.coordinates);
                }
                return { type: "MultiLineString", coordinates: e };
              },
              Polygon: function(t) {
                var e = [],
                  r = Se.LineString.apply(this, [t._shell]);
                e.push(r.coordinates);
                for (var n = 0; n < t._holes.length; ++n) {
                  var i = t._holes[n],
                    o = Se.LineString.apply(this, [i]);
                  e.push(o.coordinates);
                }
                return { type: "Polygon", coordinates: e };
              },
              MultiPolygon: function(t) {
                for (var e = [], r = 0; r < t._geometries.length; ++r) {
                  var n = t._geometries[r],
                    i = Se.Polygon.apply(this, [n]);
                  e.push(i.coordinates);
                }
                return { type: "MultiPolygon", coordinates: e };
              },
              GeometryCollection: function(t) {
                for (var e = [], r = 0; r < t._geometries.length; ++r) {
                  var n = t._geometries[r],
                    i = n.getGeometryType();
                  e.push(Se[i].apply(this, [n]));
                }
                return { type: "GeometryCollection", geometries: e };
              }
            },
            Ie = function(t) {
              (this.geometryFactory = t || new me()),
                (this.precisionModel = this.geometryFactory.getPrecisionModel()),
                (this.parser = new xe(this.geometryFactory));
            };
          (Ie.prototype.read = function(t) {
            var e = this.parser.read(t);
            return (
              this.precisionModel.getType() === fe.FIXED &&
                this.reducePrecision(e),
              e
            );
          }),
            (Ie.prototype.reducePrecision = function(t) {
              var e, r;
              if (t.coordinate) this.precisionModel.makePrecise(t.coordinate);
              else if (t.points)
                for (e = 0, r = t.points.length; e < r; e++)
                  this.precisionModel.makePrecise(t.points[e]);
              else if (t.geometries)
                for (e = 0, r = t.geometries.length; e < r; e++)
                  this.reducePrecision(t.geometries[e]);
            });
          var we = function() {
            this.parser = new xe(this.geometryFactory);
          };
          we.prototype.write = function(t) {
            return this.parser.write(t);
          };
          var Ne = function() {},
            Ce = {
              ON: { configurable: !0 },
              LEFT: { configurable: !0 },
              RIGHT: { configurable: !0 }
            };
          (Ne.prototype.interfaces_ = function() {
            return [];
          }),
            (Ne.prototype.getClass = function() {
              return Ne;
            }),
            (Ne.opposite = function(t) {
              return t === Ne.LEFT ? Ne.RIGHT : t === Ne.RIGHT ? Ne.LEFT : t;
            }),
            (Ce.ON.get = function() {
              return 0;
            }),
            (Ce.LEFT.get = function() {
              return 1;
            }),
            (Ce.RIGHT.get = function() {
              return 2;
            }),
            Object.defineProperties(Ne, Ce),
            ((y.prototype = new Error()).name = "EmptyStackException"),
            ((g.prototype = new St()).add = function(t) {
              return this.array_.push(t), !0;
            }),
            (g.prototype.get = function(t) {
              if (t < 0 || t >= this.size()) throw new Error();
              return this.array_[t];
            }),
            (g.prototype.push = function(t) {
              return this.array_.push(t), t;
            }),
            (g.prototype.pop = function(t) {
              if (0 === this.array_.length) throw new y();
              return this.array_.pop();
            }),
            (g.prototype.peek = function() {
              if (0 === this.array_.length) throw new y();
              return this.array_[this.array_.length - 1];
            }),
            (g.prototype.empty = function() {
              return 0 === this.array_.length;
            }),
            (g.prototype.isEmpty = function() {
              return this.empty();
            }),
            (g.prototype.search = function(t) {
              return this.array_.indexOf(t);
            }),
            (g.prototype.size = function() {
              return this.array_.length;
            }),
            (g.prototype.toArray = function() {
              for (var t = [], e = 0, r = this.array_.length; e < r; e++)
                t.push(this.array_[e]);
              return t;
            });
          var Ee = function() {
            (this._minIndex = -1),
              (this._minCoord = null),
              (this._minDe = null),
              (this._orientedDe = null);
          };
          (Ee.prototype.getCoordinate = function() {
            return this._minCoord;
          }),
            (Ee.prototype.getRightmostSide = function(t, e) {
              var r = this.getRightmostSideOfSegment(t, e);
              return (
                r < 0 && (r = this.getRightmostSideOfSegment(t, e - 1)),
                r < 0 &&
                  ((this._minCoord = null),
                  this.checkForRightmostCoordinate(t)),
                r
              );
            }),
            (Ee.prototype.findRightmostEdgeAtVertex = function() {
              var t = this._minDe.getEdge().getCoordinates();
              et.isTrue(
                this._minIndex > 0 && this._minIndex < t.length,
                "rightmost point expected to be interior vertex of edge"
              );
              var e = t[this._minIndex - 1],
                r = t[this._minIndex + 1],
                n = at.computeOrientation(this._minCoord, r, e),
                i = !1;
              ((e.y < this._minCoord.y &&
                r.y < this._minCoord.y &&
                n === at.COUNTERCLOCKWISE) ||
                (e.y > this._minCoord.y &&
                  r.y > this._minCoord.y &&
                  n === at.CLOCKWISE)) &&
                (i = !0),
                i && (this._minIndex = this._minIndex - 1);
            }),
            (Ee.prototype.getRightmostSideOfSegment = function(t, e) {
              var r = t.getEdge().getCoordinates();
              if (e < 0 || e + 1 >= r.length) return -1;
              if (r[e].y === r[e + 1].y) return -1;
              var n = Ne.LEFT;
              return r[e].y < r[e + 1].y && (n = Ne.RIGHT), n;
            }),
            (Ee.prototype.getEdge = function() {
              return this._orientedDe;
            }),
            (Ee.prototype.checkForRightmostCoordinate = function(t) {
              for (
                var e = t.getEdge().getCoordinates(), r = 0;
                r < e.length - 1;
                r++
              )
                (null === this._minCoord || e[r].x > this._minCoord.x) &&
                  ((this._minDe = t),
                  (this._minIndex = r),
                  (this._minCoord = e[r]));
            }),
            (Ee.prototype.findRightmostEdgeAtNode = function() {
              var t = this._minDe.getNode().getEdges();
              (this._minDe = t.getRightmostEdge()),
                this._minDe.isForward() ||
                  ((this._minDe = this._minDe.getSym()),
                  (this._minIndex =
                    this._minDe.getEdge().getCoordinates().length - 1));
            }),
            (Ee.prototype.findEdge = function(t) {
              for (var e = t.iterator(); e.hasNext(); ) {
                var r = e.next();
                r.isForward() && this.checkForRightmostCoordinate(r);
              }
              et.isTrue(
                0 !== this._minIndex ||
                  this._minCoord.equals(this._minDe.getCoordinate()),
                "inconsistency in rightmost processing"
              ),
                0 === this._minIndex
                  ? this.findRightmostEdgeAtNode()
                  : this.findRightmostEdgeAtVertex(),
                (this._orientedDe = this._minDe),
                this.getRightmostSide(this._minDe, this._minIndex) ===
                  Ne.LEFT && (this._orientedDe = this._minDe.getSym());
            }),
            (Ee.prototype.interfaces_ = function() {
              return [];
            }),
            (Ee.prototype.getClass = function() {
              return Ee;
            });
          var Me = (function(t) {
              function e(r, n) {
                t.call(this, e.msgWithCoord(r, n)),
                  (this.pt = n ? new w(n) : null),
                  (this.name = "TopologyException");
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.getCoordinate = function() {
                  return this.pt;
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (e.msgWithCoord = function(t, e) {
                  return e ? t : t + " [ " + e + " ]";
                }),
                e
              );
            })(K),
            Pe = function() {
              this.array_ = [];
            };
          (Pe.prototype.addLast = function(t) {
            this.array_.push(t);
          }),
            (Pe.prototype.removeFirst = function() {
              return this.array_.shift();
            }),
            (Pe.prototype.isEmpty = function() {
              return 0 === this.array_.length;
            });
          var Oe = function() {
            (this._finder = null),
              (this._dirEdgeList = new It()),
              (this._nodes = new It()),
              (this._rightMostCoord = null),
              (this._env = null),
              (this._finder = new Ee());
          };
          (Oe.prototype.clearVisitedEdges = function() {
            for (var t = this._dirEdgeList.iterator(); t.hasNext(); )
              t.next().setVisited(!1);
          }),
            (Oe.prototype.getRightmostCoordinate = function() {
              return this._rightMostCoord;
            }),
            (Oe.prototype.computeNodeDepth = function(t) {
              for (var e = null, r = t.getEdges().iterator(); r.hasNext(); ) {
                var n = r.next();
                if (n.isVisited() || n.getSym().isVisited()) {
                  e = n;
                  break;
                }
              }
              if (null === e)
                throw new Me(
                  "unable to find edge to compute depths at " +
                    t.getCoordinate()
                );
              t.getEdges().computeDepths(e);
              for (var i = t.getEdges().iterator(); i.hasNext(); ) {
                var o = i.next();
                o.setVisited(!0), this.copySymDepths(o);
              }
            }),
            (Oe.prototype.computeDepth = function(t) {
              this.clearVisitedEdges();
              var e = this._finder.getEdge();
              e.setEdgeDepths(Ne.RIGHT, t),
                this.copySymDepths(e),
                this.computeDepths(e);
            }),
            (Oe.prototype.create = function(t) {
              this.addReachable(t),
                this._finder.findEdge(this._dirEdgeList),
                (this._rightMostCoord = this._finder.getCoordinate());
            }),
            (Oe.prototype.findResultEdges = function() {
              for (var t = this._dirEdgeList.iterator(); t.hasNext(); ) {
                var e = t.next();
                e.getDepth(Ne.RIGHT) >= 1 &&
                  e.getDepth(Ne.LEFT) <= 0 &&
                  !e.isInteriorAreaEdge() &&
                  e.setInResult(!0);
              }
            }),
            (Oe.prototype.computeDepths = function(t) {
              var e = new Tt(),
                r = new Pe(),
                n = t.getNode();
              for (r.addLast(n), e.add(n), t.setVisited(!0); !r.isEmpty(); ) {
                var i = r.removeFirst();
                e.add(i), this.computeNodeDepth(i);
                for (var o = i.getEdges().iterator(); o.hasNext(); ) {
                  var s = o.next().getSym();
                  if (!s.isVisited()) {
                    var a = s.getNode();
                    e.contains(a) || (r.addLast(a), e.add(a));
                  }
                }
              }
            }),
            (Oe.prototype.compareTo = function(t) {
              var e = t;
              return this._rightMostCoord.x < e._rightMostCoord.x
                ? -1
                : this._rightMostCoord.x > e._rightMostCoord.x
                ? 1
                : 0;
            }),
            (Oe.prototype.getEnvelope = function() {
              if (null === this._env) {
                for (
                  var t = new X(), e = this._dirEdgeList.iterator();
                  e.hasNext();

                )
                  for (
                    var r = e
                        .next()
                        .getEdge()
                        .getCoordinates(),
                      n = 0;
                    n < r.length - 1;
                    n++
                  )
                    t.expandToInclude(r[n]);
                this._env = t;
              }
              return this._env;
            }),
            (Oe.prototype.addReachable = function(t) {
              var e = new g();
              for (e.add(t); !e.empty(); ) {
                var r = e.pop();
                this.add(r, e);
              }
            }),
            (Oe.prototype.copySymDepths = function(t) {
              var e = t.getSym();
              e.setDepth(Ne.LEFT, t.getDepth(Ne.RIGHT)),
                e.setDepth(Ne.RIGHT, t.getDepth(Ne.LEFT));
            }),
            (Oe.prototype.add = function(t, e) {
              t.setVisited(!0), this._nodes.add(t);
              for (var r = t.getEdges().iterator(); r.hasNext(); ) {
                var n = r.next();
                this._dirEdgeList.add(n);
                var i = n.getSym().getNode();
                i.isVisited() || e.push(i);
              }
            }),
            (Oe.prototype.getNodes = function() {
              return this._nodes;
            }),
            (Oe.prototype.getDirectedEdges = function() {
              return this._dirEdgeList;
            }),
            (Oe.prototype.interfaces_ = function() {
              return [b];
            }),
            (Oe.prototype.getClass = function() {
              return Oe;
            });
          var Le = function t() {
            if (((this.location = null), 1 === arguments.length)) {
              if (arguments[0] instanceof Array) {
                var e = arguments[0];
                this.init(e.length);
              } else if (Number.isInteger(arguments[0])) {
                var r = arguments[0];
                this.init(1), (this.location[Ne.ON] = r);
              } else if (arguments[0] instanceof t) {
                var n = arguments[0];
                if ((this.init(n.location.length), null !== n))
                  for (var i = 0; i < this.location.length; i++)
                    this.location[i] = n.location[i];
              }
            } else if (3 === arguments.length) {
              var o = arguments[0],
                s = arguments[1],
                a = arguments[2];
              this.init(3),
                (this.location[Ne.ON] = o),
                (this.location[Ne.LEFT] = s),
                (this.location[Ne.RIGHT] = a);
            }
          };
          (Le.prototype.setAllLocations = function(t) {
            for (var e = 0; e < this.location.length; e++) this.location[e] = t;
          }),
            (Le.prototype.isNull = function() {
              for (var t = 0; t < this.location.length; t++)
                if (this.location[t] !== M.NONE) return !1;
              return !0;
            }),
            (Le.prototype.setAllLocationsIfNull = function(t) {
              for (var e = 0; e < this.location.length; e++)
                this.location[e] === M.NONE && (this.location[e] = t);
            }),
            (Le.prototype.isLine = function() {
              return 1 === this.location.length;
            }),
            (Le.prototype.merge = function(t) {
              if (t.location.length > this.location.length) {
                var e = new Array(3).fill(null);
                (e[Ne.ON] = this.location[Ne.ON]),
                  (e[Ne.LEFT] = M.NONE),
                  (e[Ne.RIGHT] = M.NONE),
                  (this.location = e);
              }
              for (var r = 0; r < this.location.length; r++)
                this.location[r] === M.NONE &&
                  r < t.location.length &&
                  (this.location[r] = t.location[r]);
            }),
            (Le.prototype.getLocations = function() {
              return this.location;
            }),
            (Le.prototype.flip = function() {
              if (this.location.length <= 1) return null;
              var t = this.location[Ne.LEFT];
              (this.location[Ne.LEFT] = this.location[Ne.RIGHT]),
                (this.location[Ne.RIGHT] = t);
            }),
            (Le.prototype.toString = function() {
              var t = new A();
              return (
                this.location.length > 1 &&
                  t.append(M.toLocationSymbol(this.location[Ne.LEFT])),
                t.append(M.toLocationSymbol(this.location[Ne.ON])),
                this.location.length > 1 &&
                  t.append(M.toLocationSymbol(this.location[Ne.RIGHT])),
                t.toString()
              );
            }),
            (Le.prototype.setLocations = function(t, e, r) {
              (this.location[Ne.ON] = t),
                (this.location[Ne.LEFT] = e),
                (this.location[Ne.RIGHT] = r);
            }),
            (Le.prototype.get = function(t) {
              return t < this.location.length ? this.location[t] : M.NONE;
            }),
            (Le.prototype.isArea = function() {
              return this.location.length > 1;
            }),
            (Le.prototype.isAnyNull = function() {
              for (var t = 0; t < this.location.length; t++)
                if (this.location[t] === M.NONE) return !0;
              return !1;
            }),
            (Le.prototype.setLocation = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.setLocation(Ne.ON, t);
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                this.location[e] = r;
              }
            }),
            (Le.prototype.init = function(t) {
              (this.location = new Array(t).fill(null)),
                this.setAllLocations(M.NONE);
            }),
            (Le.prototype.isEqualOnSide = function(t, e) {
              return this.location[e] === t.location[e];
            }),
            (Le.prototype.allPositionsEqual = function(t) {
              for (var e = 0; e < this.location.length; e++)
                if (this.location[e] !== t) return !1;
              return !0;
            }),
            (Le.prototype.interfaces_ = function() {
              return [];
            }),
            (Le.prototype.getClass = function() {
              return Le;
            });
          var Te = function t() {
            if (
              ((this.elt = new Array(2).fill(null)), 1 === arguments.length)
            ) {
              if (Number.isInteger(arguments[0])) {
                var e = arguments[0];
                (this.elt[0] = new Le(e)), (this.elt[1] = new Le(e));
              } else if (arguments[0] instanceof t) {
                var r = arguments[0];
                (this.elt[0] = new Le(r.elt[0])),
                  (this.elt[1] = new Le(r.elt[1]));
              }
            } else if (2 === arguments.length) {
              var n = arguments[0],
                i = arguments[1];
              (this.elt[0] = new Le(M.NONE)),
                (this.elt[1] = new Le(M.NONE)),
                this.elt[n].setLocation(i);
            } else if (3 === arguments.length) {
              var o = arguments[0],
                s = arguments[1],
                a = arguments[2];
              (this.elt[0] = new Le(o, s, a)), (this.elt[1] = new Le(o, s, a));
            } else if (4 === arguments.length) {
              var l = arguments[0],
                u = arguments[1],
                h = arguments[2],
                c = arguments[3];
              (this.elt[0] = new Le(M.NONE, M.NONE, M.NONE)),
                (this.elt[1] = new Le(M.NONE, M.NONE, M.NONE)),
                this.elt[l].setLocations(u, h, c);
            }
          };
          (Te.prototype.getGeometryCount = function() {
            var t = 0;
            return this.elt[0].isNull() || t++, this.elt[1].isNull() || t++, t;
          }),
            (Te.prototype.setAllLocations = function(t, e) {
              this.elt[t].setAllLocations(e);
            }),
            (Te.prototype.isNull = function(t) {
              return this.elt[t].isNull();
            }),
            (Te.prototype.setAllLocationsIfNull = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.setAllLocationsIfNull(0, t),
                  this.setAllLocationsIfNull(1, t);
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                this.elt[e].setAllLocationsIfNull(r);
              }
            }),
            (Te.prototype.isLine = function(t) {
              return this.elt[t].isLine();
            }),
            (Te.prototype.merge = function(t) {
              for (var e = 0; e < 2; e++)
                null === this.elt[e] && null !== t.elt[e]
                  ? (this.elt[e] = new Le(t.elt[e]))
                  : this.elt[e].merge(t.elt[e]);
            }),
            (Te.prototype.flip = function() {
              this.elt[0].flip(), this.elt[1].flip();
            }),
            (Te.prototype.getLocation = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return this.elt[t].get(Ne.ON);
              }
              if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                return this.elt[e].get(r);
              }
            }),
            (Te.prototype.toString = function() {
              var t = new A();
              return (
                null !== this.elt[0] &&
                  (t.append("A:"), t.append(this.elt[0].toString())),
                null !== this.elt[1] &&
                  (t.append(" B:"), t.append(this.elt[1].toString())),
                t.toString()
              );
            }),
            (Te.prototype.isArea = function() {
              if (0 === arguments.length)
                return this.elt[0].isArea() || this.elt[1].isArea();
              if (1 === arguments.length) {
                var t = arguments[0];
                return this.elt[t].isArea();
              }
            }),
            (Te.prototype.isAnyNull = function(t) {
              return this.elt[t].isAnyNull();
            }),
            (Te.prototype.setLocation = function() {
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                this.elt[t].setLocation(Ne.ON, e);
              } else if (3 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1],
                  i = arguments[2];
                this.elt[r].setLocation(n, i);
              }
            }),
            (Te.prototype.isEqualOnSide = function(t, e) {
              return (
                this.elt[0].isEqualOnSide(t.elt[0], e) &&
                this.elt[1].isEqualOnSide(t.elt[1], e)
              );
            }),
            (Te.prototype.allPositionsEqual = function(t, e) {
              return this.elt[t].allPositionsEqual(e);
            }),
            (Te.prototype.toLine = function(t) {
              this.elt[t].isArea() &&
                (this.elt[t] = new Le(this.elt[t].location[0]));
            }),
            (Te.prototype.interfaces_ = function() {
              return [];
            }),
            (Te.prototype.getClass = function() {
              return Te;
            }),
            (Te.toLineLabel = function(t) {
              for (var e = new Te(M.NONE), r = 0; r < 2; r++)
                e.setLocation(r, t.getLocation(r));
              return e;
            });
          var Ae = function() {
            (this._startDe = null),
              (this._maxNodeDegree = -1),
              (this._edges = new It()),
              (this._pts = new It()),
              (this._label = new Te(M.NONE)),
              (this._ring = null),
              (this._isHole = null),
              (this._shell = null),
              (this._holes = new It()),
              (this._geometryFactory = null);
            var t = arguments[0],
              e = arguments[1];
            (this._geometryFactory = e),
              this.computePoints(t),
              this.computeRing();
          };
          (Ae.prototype.computeRing = function() {
            if (null !== this._ring) return null;
            for (
              var t = new Array(this._pts.size()).fill(null), e = 0;
              e < this._pts.size();
              e++
            )
              t[e] = this._pts.get(e);
            (this._ring = this._geometryFactory.createLinearRing(t)),
              (this._isHole = at.isCCW(this._ring.getCoordinates()));
          }),
            (Ae.prototype.isIsolated = function() {
              return 1 === this._label.getGeometryCount();
            }),
            (Ae.prototype.computePoints = function(t) {
              this._startDe = t;
              var e = t,
                r = !0;
              do {
                if (null === e) throw new Me("Found null DirectedEdge");
                if (e.getEdgeRing() === this)
                  throw new Me(
                    "Directed Edge visited twice during ring-building at " +
                      e.getCoordinate()
                  );
                this._edges.add(e);
                var n = e.getLabel();
                et.isTrue(n.isArea()),
                  this.mergeLabel(n),
                  this.addPoints(e.getEdge(), e.isForward(), r),
                  (r = !1),
                  this.setEdgeRing(e, this),
                  (e = this.getNext(e));
              } while (e !== this._startDe);
            }),
            (Ae.prototype.getLinearRing = function() {
              return this._ring;
            }),
            (Ae.prototype.getCoordinate = function(t) {
              return this._pts.get(t);
            }),
            (Ae.prototype.computeMaxNodeDegree = function() {
              this._maxNodeDegree = 0;
              var t = this._startDe;
              do {
                var e = t
                  .getNode()
                  .getEdges()
                  .getOutgoingDegree(this);
                e > this._maxNodeDegree && (this._maxNodeDegree = e),
                  (t = this.getNext(t));
              } while (t !== this._startDe);
              this._maxNodeDegree *= 2;
            }),
            (Ae.prototype.addPoints = function(t, e, r) {
              var n = t.getCoordinates();
              if (e) {
                var i = 1;
                r && (i = 0);
                for (var o = i; o < n.length; o++) this._pts.add(n[o]);
              } else {
                var s = n.length - 2;
                r && (s = n.length - 1);
                for (var a = s; a >= 0; a--) this._pts.add(n[a]);
              }
            }),
            (Ae.prototype.isHole = function() {
              return this._isHole;
            }),
            (Ae.prototype.setInResult = function() {
              var t = this._startDe;
              do {
                t.getEdge().setInResult(!0), (t = t.getNext());
              } while (t !== this._startDe);
            }),
            (Ae.prototype.containsPoint = function(t) {
              var e = this.getLinearRing();
              if (!e.getEnvelopeInternal().contains(t)) return !1;
              if (!at.isPointInRing(t, e.getCoordinates())) return !1;
              for (var r = this._holes.iterator(); r.hasNext(); )
                if (r.next().containsPoint(t)) return !1;
              return !0;
            }),
            (Ae.prototype.addHole = function(t) {
              this._holes.add(t);
            }),
            (Ae.prototype.isShell = function() {
              return null === this._shell;
            }),
            (Ae.prototype.getLabel = function() {
              return this._label;
            }),
            (Ae.prototype.getEdges = function() {
              return this._edges;
            }),
            (Ae.prototype.getMaxNodeDegree = function() {
              return (
                this._maxNodeDegree < 0 && this.computeMaxNodeDegree(),
                this._maxNodeDegree
              );
            }),
            (Ae.prototype.getShell = function() {
              return this._shell;
            }),
            (Ae.prototype.mergeLabel = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.mergeLabel(t, 0), this.mergeLabel(t, 1);
              } else if (2 === arguments.length) {
                var e = arguments[1],
                  r = arguments[0].getLocation(e, Ne.RIGHT);
                if (r === M.NONE) return null;
                if (this._label.getLocation(e) === M.NONE)
                  return this._label.setLocation(e, r), null;
              }
            }),
            (Ae.prototype.setShell = function(t) {
              (this._shell = t), null !== t && t.addHole(this);
            }),
            (Ae.prototype.toPolygon = function(t) {
              for (
                var e = new Array(this._holes.size()).fill(null), r = 0;
                r < this._holes.size();
                r++
              )
                e[r] = this._holes.get(r).getLinearRing();
              return t.createPolygon(this.getLinearRing(), e);
            }),
            (Ae.prototype.interfaces_ = function() {
              return [];
            }),
            (Ae.prototype.getClass = function() {
              return Ae;
            });
          var Re = (function(t) {
              function e() {
                var e = arguments[0],
                  r = arguments[1];
                t.call(this, e, r);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.setEdgeRing = function(t, e) {
                  t.setMinEdgeRing(e);
                }),
                (e.prototype.getNext = function(t) {
                  return t.getNextMin();
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(Ae),
            Fe = (function(t) {
              function e() {
                var e = arguments[0],
                  r = arguments[1];
                t.call(this, e, r);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.buildMinimalRings = function() {
                  var t = new It(),
                    e = this._startDe;
                  do {
                    if (null === e.getMinEdgeRing()) {
                      var r = new Re(e, this._geometryFactory);
                      t.add(r);
                    }
                    e = e.getNext();
                  } while (e !== this._startDe);
                  return t;
                }),
                (e.prototype.setEdgeRing = function(t, e) {
                  t.setEdgeRing(e);
                }),
                (e.prototype.linkDirectedEdgesForMinimalEdgeRings = function() {
                  var t = this._startDe;
                  do {
                    t
                      .getNode()
                      .getEdges()
                      .linkMinimalDirectedEdges(this),
                      (t = t.getNext());
                  } while (t !== this._startDe);
                }),
                (e.prototype.getNext = function(t) {
                  return t.getNext();
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(Ae),
            De = function() {
              if (
                ((this._label = null),
                (this._isInResult = !1),
                (this._isCovered = !1),
                (this._isCoveredSet = !1),
                (this._isVisited = !1),
                0 === arguments.length)
              );
              else if (1 === arguments.length) {
                var t = arguments[0];
                this._label = t;
              }
            };
          (De.prototype.setVisited = function(t) {
            this._isVisited = t;
          }),
            (De.prototype.setInResult = function(t) {
              this._isInResult = t;
            }),
            (De.prototype.isCovered = function() {
              return this._isCovered;
            }),
            (De.prototype.isCoveredSet = function() {
              return this._isCoveredSet;
            }),
            (De.prototype.setLabel = function(t) {
              this._label = t;
            }),
            (De.prototype.getLabel = function() {
              return this._label;
            }),
            (De.prototype.setCovered = function(t) {
              (this._isCovered = t), (this._isCoveredSet = !0);
            }),
            (De.prototype.updateIM = function(t) {
              et.isTrue(
                this._label.getGeometryCount() >= 2,
                "found partial label"
              ),
                this.computeIM(t);
            }),
            (De.prototype.isInResult = function() {
              return this._isInResult;
            }),
            (De.prototype.isVisited = function() {
              return this._isVisited;
            }),
            (De.prototype.interfaces_ = function() {
              return [];
            }),
            (De.prototype.getClass = function() {
              return De;
            });
          var je = (function(t) {
              function e() {
                t.call(this), (this._coord = null), (this._edges = null);
                var e = arguments[0],
                  r = arguments[1];
                (this._coord = e),
                  (this._edges = r),
                  (this._label = new Te(0, M.NONE));
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.isIncidentEdgeInResult = function() {
                  for (
                    var t = this.getEdges()
                      .getEdges()
                      .iterator();
                    t.hasNext();

                  )
                    if (
                      t
                        .next()
                        .getEdge()
                        .isInResult()
                    )
                      return !0;
                  return !1;
                }),
                (e.prototype.isIsolated = function() {
                  return 1 === this._label.getGeometryCount();
                }),
                (e.prototype.getCoordinate = function() {
                  return this._coord;
                }),
                (e.prototype.print = function(t) {
                  t.println("node " + this._coord + " lbl: " + this._label);
                }),
                (e.prototype.computeIM = function(t) {}),
                (e.prototype.computeMergedLocation = function(t, e) {
                  var r = M.NONE;
                  if (((r = this._label.getLocation(e)), !t.isNull(e))) {
                    var n = t.getLocation(e);
                    r !== M.BOUNDARY && (r = n);
                  }
                  return r;
                }),
                (e.prototype.setLabel = function() {
                  if (2 !== arguments.length)
                    return t.prototype.setLabel.apply(this, arguments);
                  var e = arguments[0],
                    r = arguments[1];
                  null === this._label
                    ? (this._label = new Te(e, r))
                    : this._label.setLocation(e, r);
                }),
                (e.prototype.getEdges = function() {
                  return this._edges;
                }),
                (e.prototype.mergeLabel = function() {
                  if (arguments[0] instanceof e) {
                    var t = arguments[0];
                    this.mergeLabel(t._label);
                  } else if (arguments[0] instanceof Te)
                    for (var r = arguments[0], n = 0; n < 2; n++) {
                      var i = this.computeMergedLocation(r, n);
                      this._label.getLocation(n) === M.NONE &&
                        this._label.setLocation(n, i);
                    }
                }),
                (e.prototype.add = function(t) {
                  this._edges.insert(t), t.setNode(this);
                }),
                (e.prototype.setLabelBoundary = function(t) {
                  if (null === this._label) return null;
                  var e = M.NONE;
                  null !== this._label && (e = this._label.getLocation(t));
                  var r = null;
                  if (e === M.BOUNDARY) r = M.INTERIOR;
                  else r = M.BOUNDARY;
                  this._label.setLocation(t, r);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(De),
            Ue = function() {
              (this.nodeMap = new c()), (this.nodeFact = null);
              var t = arguments[0];
              this.nodeFact = t;
            };
          (Ue.prototype.find = function(t) {
            return this.nodeMap.get(t);
          }),
            (Ue.prototype.addNode = function() {
              if (arguments[0] instanceof w) {
                var t = arguments[0],
                  e = this.nodeMap.get(t);
                return (
                  null === e &&
                    ((e = this.nodeFact.createNode(t)), this.nodeMap.put(t, e)),
                  e
                );
              }
              if (arguments[0] instanceof je) {
                var r = arguments[0],
                  n = this.nodeMap.get(r.getCoordinate());
                return null === n
                  ? (this.nodeMap.put(r.getCoordinate(), r), r)
                  : (n.mergeLabel(r), n);
              }
            }),
            (Ue.prototype.print = function(t) {
              for (var e = this.iterator(); e.hasNext(); ) e.next().print(t);
            }),
            (Ue.prototype.iterator = function() {
              return this.nodeMap.values().iterator();
            }),
            (Ue.prototype.values = function() {
              return this.nodeMap.values();
            }),
            (Ue.prototype.getBoundaryNodes = function(t) {
              for (var e = new It(), r = this.iterator(); r.hasNext(); ) {
                var n = r.next();
                n.getLabel().getLocation(t) === M.BOUNDARY && e.add(n);
              }
              return e;
            }),
            (Ue.prototype.add = function(t) {
              var e = t.getCoordinate();
              this.addNode(e).add(t);
            }),
            (Ue.prototype.interfaces_ = function() {
              return [];
            }),
            (Ue.prototype.getClass = function() {
              return Ue;
            });
          var Ge = function() {},
            Be = {
              NE: { configurable: !0 },
              NW: { configurable: !0 },
              SW: { configurable: !0 },
              SE: { configurable: !0 }
            };
          (Ge.prototype.interfaces_ = function() {
            return [];
          }),
            (Ge.prototype.getClass = function() {
              return Ge;
            }),
            (Ge.isNorthern = function(t) {
              return t === Ge.NE || t === Ge.NW;
            }),
            (Ge.isOpposite = function(t, e) {
              return t !== e && 2 == (t - e + 4) % 4;
            }),
            (Ge.commonHalfPlane = function(t, e) {
              if (t === e) return t;
              if (2 == (t - e + 4) % 4) return -1;
              var r = t < e ? t : e;
              return 0 === r && 3 === (t > e ? t : e) ? 3 : r;
            }),
            (Ge.isInHalfPlane = function(t, e) {
              return e === Ge.SE
                ? t === Ge.SE || t === Ge.SW
                : t === e || t === e + 1;
            }),
            (Ge.quadrant = function() {
              if (
                "number" == typeof arguments[0] &&
                "number" == typeof arguments[1]
              ) {
                var t = arguments[0],
                  e = arguments[1];
                if (0 === t && 0 === e)
                  throw new v(
                    "Cannot compute the quadrant for point ( " +
                      t +
                      ", " +
                      e +
                      " )"
                  );
                return t >= 0
                  ? e >= 0
                    ? Ge.NE
                    : Ge.SE
                  : e >= 0
                  ? Ge.NW
                  : Ge.SW;
              }
              if (arguments[0] instanceof w && arguments[1] instanceof w) {
                var r = arguments[0],
                  n = arguments[1];
                if (n.x === r.x && n.y === r.y)
                  throw new v(
                    "Cannot compute the quadrant for two identical points " + r
                  );
                return n.x >= r.x
                  ? n.y >= r.y
                    ? Ge.NE
                    : Ge.SE
                  : n.y >= r.y
                  ? Ge.NW
                  : Ge.SW;
              }
            }),
            (Be.NE.get = function() {
              return 0;
            }),
            (Be.NW.get = function() {
              return 1;
            }),
            (Be.SW.get = function() {
              return 2;
            }),
            (Be.SE.get = function() {
              return 3;
            }),
            Object.defineProperties(Ge, Be);
          var ke = function() {
            if (
              ((this._edge = null),
              (this._label = null),
              (this._node = null),
              (this._p0 = null),
              (this._p1 = null),
              (this._dx = null),
              (this._dy = null),
              (this._quadrant = null),
              1 === arguments.length)
            ) {
              var t = arguments[0];
              this._edge = t;
            } else if (3 === arguments.length) {
              var e = arguments[0],
                r = arguments[1],
                n = arguments[2];
              (this._edge = e), this.init(r, n), (this._label = null);
            } else if (4 === arguments.length) {
              var i = arguments[0],
                o = arguments[1],
                s = arguments[2],
                a = arguments[3];
              (this._edge = i), this.init(o, s), (this._label = a);
            }
          };
          (ke.prototype.compareDirection = function(t) {
            return this._dx === t._dx && this._dy === t._dy
              ? 0
              : this._quadrant > t._quadrant
              ? 1
              : this._quadrant < t._quadrant
              ? -1
              : at.computeOrientation(t._p0, t._p1, this._p1);
          }),
            (ke.prototype.getDy = function() {
              return this._dy;
            }),
            (ke.prototype.getCoordinate = function() {
              return this._p0;
            }),
            (ke.prototype.setNode = function(t) {
              this._node = t;
            }),
            (ke.prototype.print = function(t) {
              var e = Math.atan2(this._dy, this._dx),
                r = this.getClass().getName(),
                n = r.lastIndexOf("."),
                i = r.substring(n + 1);
              t.print(
                "  " +
                  i +
                  ": " +
                  this._p0 +
                  " - " +
                  this._p1 +
                  " " +
                  this._quadrant +
                  ":" +
                  e +
                  "   " +
                  this._label
              );
            }),
            (ke.prototype.compareTo = function(t) {
              var e = t;
              return this.compareDirection(e);
            }),
            (ke.prototype.getDirectedCoordinate = function() {
              return this._p1;
            }),
            (ke.prototype.getDx = function() {
              return this._dx;
            }),
            (ke.prototype.getLabel = function() {
              return this._label;
            }),
            (ke.prototype.getEdge = function() {
              return this._edge;
            }),
            (ke.prototype.getQuadrant = function() {
              return this._quadrant;
            }),
            (ke.prototype.getNode = function() {
              return this._node;
            }),
            (ke.prototype.toString = function() {
              var t = Math.atan2(this._dy, this._dx),
                e = this.getClass().getName(),
                r = e.lastIndexOf(".");
              return (
                "  " +
                e.substring(r + 1) +
                ": " +
                this._p0 +
                " - " +
                this._p1 +
                " " +
                this._quadrant +
                ":" +
                t +
                "   " +
                this._label
              );
            }),
            (ke.prototype.computeLabel = function(t) {}),
            (ke.prototype.init = function(t, e) {
              (this._p0 = t),
                (this._p1 = e),
                (this._dx = e.x - t.x),
                (this._dy = e.y - t.y),
                (this._quadrant = Ge.quadrant(this._dx, this._dy)),
                et.isTrue(
                  !(0 === this._dx && 0 === this._dy),
                  "EdgeEnd with identical endpoints found"
                );
            }),
            (ke.prototype.interfaces_ = function() {
              return [b];
            }),
            (ke.prototype.getClass = function() {
              return ke;
            });
          var qe = (function(t) {
              function e() {
                var e = arguments[0],
                  r = arguments[1];
                if (
                  (t.call(this, e),
                  (this._isForward = null),
                  (this._isInResult = !1),
                  (this._isVisited = !1),
                  (this._sym = null),
                  (this._next = null),
                  (this._nextMin = null),
                  (this._edgeRing = null),
                  (this._minEdgeRing = null),
                  (this._depth = [0, -999, -999]),
                  (this._isForward = r),
                  r)
                )
                  this.init(e.getCoordinate(0), e.getCoordinate(1));
                else {
                  var n = e.getNumPoints() - 1;
                  this.init(e.getCoordinate(n), e.getCoordinate(n - 1));
                }
                this.computeDirectedLabel();
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.getNextMin = function() {
                  return this._nextMin;
                }),
                (e.prototype.getDepth = function(t) {
                  return this._depth[t];
                }),
                (e.prototype.setVisited = function(t) {
                  this._isVisited = t;
                }),
                (e.prototype.computeDirectedLabel = function() {
                  (this._label = new Te(this._edge.getLabel())),
                    this._isForward || this._label.flip();
                }),
                (e.prototype.getNext = function() {
                  return this._next;
                }),
                (e.prototype.setDepth = function(t, e) {
                  if (-999 !== this._depth[t] && this._depth[t] !== e)
                    throw new Me(
                      "assigned depths do not match",
                      this.getCoordinate()
                    );
                  this._depth[t] = e;
                }),
                (e.prototype.isInteriorAreaEdge = function() {
                  for (var t = !0, e = 0; e < 2; e++)
                    (this._label.isArea(e) &&
                      this._label.getLocation(e, Ne.LEFT) === M.INTERIOR &&
                      this._label.getLocation(e, Ne.RIGHT) === M.INTERIOR) ||
                      (t = !1);
                  return t;
                }),
                (e.prototype.setNextMin = function(t) {
                  this._nextMin = t;
                }),
                (e.prototype.print = function(e) {
                  t.prototype.print.call(this, e),
                    e.print(
                      " " + this._depth[Ne.LEFT] + "/" + this._depth[Ne.RIGHT]
                    ),
                    e.print(" (" + this.getDepthDelta() + ")"),
                    this._isInResult && e.print(" inResult");
                }),
                (e.prototype.setMinEdgeRing = function(t) {
                  this._minEdgeRing = t;
                }),
                (e.prototype.isLineEdge = function() {
                  var t = this._label.isLine(0) || this._label.isLine(1),
                    e =
                      !this._label.isArea(0) ||
                      this._label.allPositionsEqual(0, M.EXTERIOR),
                    r =
                      !this._label.isArea(1) ||
                      this._label.allPositionsEqual(1, M.EXTERIOR);
                  return t && e && r;
                }),
                (e.prototype.setEdgeRing = function(t) {
                  this._edgeRing = t;
                }),
                (e.prototype.getMinEdgeRing = function() {
                  return this._minEdgeRing;
                }),
                (e.prototype.getDepthDelta = function() {
                  var t = this._edge.getDepthDelta();
                  return this._isForward || (t = -t), t;
                }),
                (e.prototype.setInResult = function(t) {
                  this._isInResult = t;
                }),
                (e.prototype.getSym = function() {
                  return this._sym;
                }),
                (e.prototype.isForward = function() {
                  return this._isForward;
                }),
                (e.prototype.getEdge = function() {
                  return this._edge;
                }),
                (e.prototype.printEdge = function(t) {
                  this.print(t),
                    t.print(" "),
                    this._isForward
                      ? this._edge.print(t)
                      : this._edge.printReverse(t);
                }),
                (e.prototype.setSym = function(t) {
                  this._sym = t;
                }),
                (e.prototype.setVisitedEdge = function(t) {
                  this.setVisited(t), this._sym.setVisited(t);
                }),
                (e.prototype.setEdgeDepths = function(t, e) {
                  var r = this.getEdge().getDepthDelta();
                  this._isForward || (r = -r);
                  var n = 1;
                  t === Ne.LEFT && (n = -1);
                  var i = Ne.opposite(t),
                    o = e + r * n;
                  this.setDepth(t, e), this.setDepth(i, o);
                }),
                (e.prototype.getEdgeRing = function() {
                  return this._edgeRing;
                }),
                (e.prototype.isInResult = function() {
                  return this._isInResult;
                }),
                (e.prototype.setNext = function(t) {
                  this._next = t;
                }),
                (e.prototype.isVisited = function() {
                  return this._isVisited;
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (e.depthFactor = function(t, e) {
                  return t === M.EXTERIOR && e === M.INTERIOR
                    ? 1
                    : t === M.INTERIOR && e === M.EXTERIOR
                    ? -1
                    : 0;
                }),
                e
              );
            })(ke),
            ze = function() {};
          (ze.prototype.createNode = function(t) {
            return new je(t, null);
          }),
            (ze.prototype.interfaces_ = function() {
              return [];
            }),
            (ze.prototype.getClass = function() {
              return ze;
            });
          var Ve = function() {
            if (
              ((this._edges = new It()),
              (this._nodes = null),
              (this._edgeEndList = new It()),
              0 === arguments.length)
            )
              this._nodes = new Ue(new ze());
            else if (1 === arguments.length) {
              var t = arguments[0];
              this._nodes = new Ue(t);
            }
          };
          (Ve.prototype.printEdges = function(t) {
            t.println("Edges:");
            for (var e = 0; e < this._edges.size(); e++) {
              t.println("edge " + e + ":");
              var r = this._edges.get(e);
              r.print(t), r.eiList.print(t);
            }
          }),
            (Ve.prototype.find = function(t) {
              return this._nodes.find(t);
            }),
            (Ve.prototype.addNode = function() {
              if (arguments[0] instanceof je) {
                var t = arguments[0];
                return this._nodes.addNode(t);
              }
              if (arguments[0] instanceof w) {
                var e = arguments[0];
                return this._nodes.addNode(e);
              }
            }),
            (Ve.prototype.getNodeIterator = function() {
              return this._nodes.iterator();
            }),
            (Ve.prototype.linkResultDirectedEdges = function() {
              for (var t = this._nodes.iterator(); t.hasNext(); )
                t.next()
                  .getEdges()
                  .linkResultDirectedEdges();
            }),
            (Ve.prototype.debugPrintln = function(t) {
              V.out.println(t);
            }),
            (Ve.prototype.isBoundaryNode = function(t, e) {
              var r = this._nodes.find(e);
              if (null === r) return !1;
              var n = r.getLabel();
              return null !== n && n.getLocation(t) === M.BOUNDARY;
            }),
            (Ve.prototype.linkAllDirectedEdges = function() {
              for (var t = this._nodes.iterator(); t.hasNext(); )
                t.next()
                  .getEdges()
                  .linkAllDirectedEdges();
            }),
            (Ve.prototype.matchInSameDirection = function(t, e, r, n) {
              return (
                !!t.equals(r) &&
                at.computeOrientation(t, e, n) === at.COLLINEAR &&
                Ge.quadrant(t, e) === Ge.quadrant(r, n)
              );
            }),
            (Ve.prototype.getEdgeEnds = function() {
              return this._edgeEndList;
            }),
            (Ve.prototype.debugPrint = function(t) {
              V.out.print(t);
            }),
            (Ve.prototype.getEdgeIterator = function() {
              return this._edges.iterator();
            }),
            (Ve.prototype.findEdgeInSameDirection = function(t, e) {
              for (var r = 0; r < this._edges.size(); r++) {
                var n = this._edges.get(r),
                  i = n.getCoordinates();
                if (this.matchInSameDirection(t, e, i[0], i[1])) return n;
                if (
                  this.matchInSameDirection(
                    t,
                    e,
                    i[i.length - 1],
                    i[i.length - 2]
                  )
                )
                  return n;
              }
              return null;
            }),
            (Ve.prototype.insertEdge = function(t) {
              this._edges.add(t);
            }),
            (Ve.prototype.findEdgeEnd = function(t) {
              for (var e = this.getEdgeEnds().iterator(); e.hasNext(); ) {
                var r = e.next();
                if (r.getEdge() === t) return r;
              }
              return null;
            }),
            (Ve.prototype.addEdges = function(t) {
              for (var e = t.iterator(); e.hasNext(); ) {
                var r = e.next();
                this._edges.add(r);
                var n = new qe(r, !0),
                  i = new qe(r, !1);
                n.setSym(i), i.setSym(n), this.add(n), this.add(i);
              }
            }),
            (Ve.prototype.add = function(t) {
              this._nodes.add(t), this._edgeEndList.add(t);
            }),
            (Ve.prototype.getNodes = function() {
              return this._nodes.values();
            }),
            (Ve.prototype.findEdge = function(t, e) {
              for (var r = 0; r < this._edges.size(); r++) {
                var n = this._edges.get(r),
                  i = n.getCoordinates();
                if (t.equals(i[0]) && e.equals(i[1])) return n;
              }
              return null;
            }),
            (Ve.prototype.interfaces_ = function() {
              return [];
            }),
            (Ve.prototype.getClass = function() {
              return Ve;
            }),
            (Ve.linkResultDirectedEdges = function(t) {
              for (var e = t.iterator(); e.hasNext(); )
                e.next()
                  .getEdges()
                  .linkResultDirectedEdges();
            });
          var We = function() {
            (this._geometryFactory = null), (this._shellList = new It());
            var t = arguments[0];
            this._geometryFactory = t;
          };
          (We.prototype.sortShellsAndHoles = function(t, e, r) {
            for (var n = t.iterator(); n.hasNext(); ) {
              var i = n.next();
              i.isHole() ? r.add(i) : e.add(i);
            }
          }),
            (We.prototype.computePolygons = function(t) {
              for (var e = new It(), r = t.iterator(); r.hasNext(); ) {
                var n = r.next().toPolygon(this._geometryFactory);
                e.add(n);
              }
              return e;
            }),
            (We.prototype.placeFreeHoles = function(t, e) {
              for (var r = e.iterator(); r.hasNext(); ) {
                var n = r.next();
                if (null === n.getShell()) {
                  var i = this.findEdgeRingContaining(n, t);
                  if (null === i)
                    throw new Me(
                      "unable to assign hole to a shell",
                      n.getCoordinate(0)
                    );
                  n.setShell(i);
                }
              }
            }),
            (We.prototype.buildMinimalEdgeRings = function(t, e, r) {
              for (var n = new It(), i = t.iterator(); i.hasNext(); ) {
                var o = i.next();
                if (o.getMaxNodeDegree() > 2) {
                  o.linkDirectedEdgesForMinimalEdgeRings();
                  var s = o.buildMinimalRings(),
                    a = this.findShell(s);
                  null !== a
                    ? (this.placePolygonHoles(a, s), e.add(a))
                    : r.addAll(s);
                } else n.add(o);
              }
              return n;
            }),
            (We.prototype.containsPoint = function(t) {
              for (var e = this._shellList.iterator(); e.hasNext(); )
                if (e.next().containsPoint(t)) return !0;
              return !1;
            }),
            (We.prototype.buildMaximalEdgeRings = function(t) {
              for (var e = new It(), r = t.iterator(); r.hasNext(); ) {
                var n = r.next();
                if (
                  n.isInResult() &&
                  n.getLabel().isArea() &&
                  null === n.getEdgeRing()
                ) {
                  var i = new Fe(n, this._geometryFactory);
                  e.add(i), i.setInResult();
                }
              }
              return e;
            }),
            (We.prototype.placePolygonHoles = function(t, e) {
              for (var r = e.iterator(); r.hasNext(); ) {
                var n = r.next();
                n.isHole() && n.setShell(t);
              }
            }),
            (We.prototype.getPolygons = function() {
              return this.computePolygons(this._shellList);
            }),
            (We.prototype.findEdgeRingContaining = function(t, e) {
              for (
                var r = t.getLinearRing(),
                  n = r.getEnvelopeInternal(),
                  i = r.getCoordinateN(0),
                  o = null,
                  s = null,
                  a = e.iterator();
                a.hasNext();

              ) {
                var l = a.next(),
                  u = l.getLinearRing(),
                  h = u.getEnvelopeInternal();
                null !== o && (s = o.getLinearRing().getEnvelopeInternal());
                var c = !1;
                h.contains(n) &&
                  at.isPointInRing(i, u.getCoordinates()) &&
                  (c = !0),
                  c && (null === o || s.contains(h)) && (o = l);
              }
              return o;
            }),
            (We.prototype.findShell = function(t) {
              for (var e = 0, r = null, n = t.iterator(); n.hasNext(); ) {
                var i = n.next();
                i.isHole() || ((r = i), e++);
              }
              return (
                et.isTrue(e <= 1, "found two shells in MinimalEdgeRing list"), r
              );
            }),
            (We.prototype.add = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.add(t.getEdgeEnds(), t.getNodes());
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                Ve.linkResultDirectedEdges(r);
                var n = this.buildMaximalEdgeRings(e),
                  i = new It(),
                  o = this.buildMinimalEdgeRings(n, this._shellList, i);
                this.sortShellsAndHoles(o, this._shellList, i),
                  this.placeFreeHoles(this._shellList, i);
              }
            }),
            (We.prototype.interfaces_ = function() {
              return [];
            }),
            (We.prototype.getClass = function() {
              return We;
            });
          var Xe = function() {};
          (Xe.prototype.getBounds = function() {}),
            (Xe.prototype.interfaces_ = function() {
              return [];
            }),
            (Xe.prototype.getClass = function() {
              return Xe;
            });
          var Ye = function() {
            (this._bounds = null), (this._item = null);
            var t = arguments[0],
              e = arguments[1];
            (this._bounds = t), (this._item = e);
          };
          (Ye.prototype.getItem = function() {
            return this._item;
          }),
            (Ye.prototype.getBounds = function() {
              return this._bounds;
            }),
            (Ye.prototype.interfaces_ = function() {
              return [Xe, e];
            }),
            (Ye.prototype.getClass = function() {
              return Ye;
            });
          var He = function() {
            (this._size = null),
              (this._items = null),
              (this._size = 0),
              (this._items = new It()),
              this._items.add(null);
          };
          (He.prototype.poll = function() {
            if (this.isEmpty()) return null;
            var t = this._items.get(1);
            return (
              this._items.set(1, this._items.get(this._size)),
              (this._size -= 1),
              this.reorder(1),
              t
            );
          }),
            (He.prototype.size = function() {
              return this._size;
            }),
            (He.prototype.reorder = function(t) {
              for (
                var e = null, r = this._items.get(t);
                2 * t <= this._size &&
                ((e = 2 * t) !== this._size &&
                  this._items.get(e + 1).compareTo(this._items.get(e)) < 0 &&
                  e++,
                this._items.get(e).compareTo(r) < 0);
                t = e
              )
                this._items.set(t, this._items.get(e));
              this._items.set(t, r);
            }),
            (He.prototype.clear = function() {
              (this._size = 0), this._items.clear();
            }),
            (He.prototype.isEmpty = function() {
              return 0 === this._size;
            }),
            (He.prototype.add = function(t) {
              this._items.add(null), (this._size += 1);
              var e = this._size;
              for (
                this._items.set(0, t);
                t.compareTo(this._items.get(Math.trunc(e / 2))) < 0;
                e /= 2
              )
                this._items.set(e, this._items.get(Math.trunc(e / 2)));
              this._items.set(e, t);
            }),
            (He.prototype.interfaces_ = function() {
              return [];
            }),
            (He.prototype.getClass = function() {
              return He;
            });
          var Je = function() {};
          (Je.prototype.visitItem = function(t) {}),
            (Je.prototype.interfaces_ = function() {
              return [];
            }),
            (Je.prototype.getClass = function() {
              return Je;
            });
          var $e = function() {};
          ($e.prototype.insert = function(t, e) {}),
            ($e.prototype.remove = function(t, e) {}),
            ($e.prototype.query = function() {}),
            ($e.prototype.interfaces_ = function() {
              return [];
            }),
            ($e.prototype.getClass = function() {
              return $e;
            });
          var Qe = function() {
              if (
                ((this._childBoundables = new It()),
                (this._bounds = null),
                (this._level = null),
                0 === arguments.length)
              );
              else if (1 === arguments.length) {
                var t = arguments[0];
                this._level = t;
              }
            },
            Ze = { serialVersionUID: { configurable: !0 } };
          (Qe.prototype.getLevel = function() {
            return this._level;
          }),
            (Qe.prototype.size = function() {
              return this._childBoundables.size();
            }),
            (Qe.prototype.getChildBoundables = function() {
              return this._childBoundables;
            }),
            (Qe.prototype.addChildBoundable = function(t) {
              et.isTrue(null === this._bounds), this._childBoundables.add(t);
            }),
            (Qe.prototype.isEmpty = function() {
              return this._childBoundables.isEmpty();
            }),
            (Qe.prototype.getBounds = function() {
              return (
                null === this._bounds && (this._bounds = this.computeBounds()),
                this._bounds
              );
            }),
            (Qe.prototype.interfaces_ = function() {
              return [Xe, e];
            }),
            (Qe.prototype.getClass = function() {
              return Qe;
            }),
            (Ze.serialVersionUID.get = function() {
              return 0x5a1e55ec41369800;
            }),
            Object.defineProperties(Qe, Ze);
          var Ke = function() {};
          (Ke.reverseOrder = function() {
            return {
              compare: function(t, e) {
                return e.compareTo(t);
              }
            };
          }),
            (Ke.min = function(t) {
              return Ke.sort(t), t.get(0);
            }),
            (Ke.sort = function(t, e) {
              var r = t.toArray();
              e ? jt.sort(r, e) : jt.sort(r);
              for (var n = t.iterator(), i = 0, o = r.length; i < o; i++)
                n.next(), n.set(r[i]);
            }),
            (Ke.singletonList = function(t) {
              var e = new It();
              return e.add(t), e;
            });
          var tr = function() {
            (this._boundable1 = null),
              (this._boundable2 = null),
              (this._distance = null),
              (this._itemDistance = null);
            var t = arguments[0],
              e = arguments[1],
              r = arguments[2];
            (this._boundable1 = t),
              (this._boundable2 = e),
              (this._itemDistance = r),
              (this._distance = this.distance());
          };
          (tr.prototype.expandToQueue = function(t, e) {
            var r = tr.isComposite(this._boundable1),
              n = tr.isComposite(this._boundable2);
            if (r && n)
              return tr.area(this._boundable1) > tr.area(this._boundable2)
                ? (this.expand(this._boundable1, this._boundable2, t, e), null)
                : (this.expand(this._boundable2, this._boundable1, t, e), null);
            if (r)
              return (
                this.expand(this._boundable1, this._boundable2, t, e), null
              );
            if (n)
              return (
                this.expand(this._boundable2, this._boundable1, t, e), null
              );
            throw new v("neither boundable is composite");
          }),
            (tr.prototype.isLeaves = function() {
              return !(
                tr.isComposite(this._boundable1) ||
                tr.isComposite(this._boundable2)
              );
            }),
            (tr.prototype.compareTo = function(t) {
              var e = t;
              return this._distance < e._distance
                ? -1
                : this._distance > e._distance
                ? 1
                : 0;
            }),
            (tr.prototype.expand = function(t, e, r, n) {
              for (var i = t.getChildBoundables().iterator(); i.hasNext(); ) {
                var o = i.next(),
                  s = new tr(o, e, this._itemDistance);
                s.getDistance() < n && r.add(s);
              }
            }),
            (tr.prototype.getBoundable = function(t) {
              return 0 === t ? this._boundable1 : this._boundable2;
            }),
            (tr.prototype.getDistance = function() {
              return this._distance;
            }),
            (tr.prototype.distance = function() {
              return this.isLeaves()
                ? this._itemDistance.distance(
                    this._boundable1,
                    this._boundable2
                  )
                : this._boundable1
                    .getBounds()
                    .distance(this._boundable2.getBounds());
            }),
            (tr.prototype.interfaces_ = function() {
              return [b];
            }),
            (tr.prototype.getClass = function() {
              return tr;
            }),
            (tr.area = function(t) {
              return t.getBounds().getArea();
            }),
            (tr.isComposite = function(t) {
              return t instanceof Qe;
            });
          var er = function t() {
              if (
                ((this._root = null),
                (this._built = !1),
                (this._itemBoundables = new It()),
                (this._nodeCapacity = null),
                0 === arguments.length)
              ) {
                var e = t.DEFAULT_NODE_CAPACITY;
                this._nodeCapacity = e;
              } else if (1 === arguments.length) {
                var r = arguments[0];
                et.isTrue(r > 1, "Node capacity must be greater than 1"),
                  (this._nodeCapacity = r);
              }
            },
            rr = {
              IntersectsOp: { configurable: !0 },
              serialVersionUID: { configurable: !0 },
              DEFAULT_NODE_CAPACITY: { configurable: !0 }
            };
          (er.prototype.getNodeCapacity = function() {
            return this._nodeCapacity;
          }),
            (er.prototype.lastNode = function(t) {
              return t.get(t.size() - 1);
            }),
            (er.prototype.size = function() {
              if (0 === arguments.length)
                return this.isEmpty()
                  ? 0
                  : (this.build(), this.size(this._root));
              if (1 === arguments.length) {
                for (
                  var t = 0, e = arguments[0].getChildBoundables().iterator();
                  e.hasNext();

                ) {
                  var r = e.next();
                  r instanceof Qe
                    ? (t += this.size(r))
                    : r instanceof Ye && (t += 1);
                }
                return t;
              }
            }),
            (er.prototype.removeItem = function(t, e) {
              for (
                var r = null, n = t.getChildBoundables().iterator();
                n.hasNext();

              ) {
                var i = n.next();
                i instanceof Ye && i.getItem() === e && (r = i);
              }
              return null !== r && (t.getChildBoundables().remove(r), !0);
            }),
            (er.prototype.itemsTree = function() {
              if (0 === arguments.length) {
                this.build();
                var t = this.itemsTree(this._root);
                return null === t ? new It() : t;
              }
              if (1 === arguments.length) {
                for (
                  var e = arguments[0],
                    r = new It(),
                    n = e.getChildBoundables().iterator();
                  n.hasNext();

                ) {
                  var i = n.next();
                  if (i instanceof Qe) {
                    var o = this.itemsTree(i);
                    null !== o && r.add(o);
                  } else
                    i instanceof Ye
                      ? r.add(i.getItem())
                      : et.shouldNeverReachHere();
                }
                return r.size() <= 0 ? null : r;
              }
            }),
            (er.prototype.insert = function(t, e) {
              et.isTrue(
                !this._built,
                "Cannot insert items into an STR packed R-tree after it has been built."
              ),
                this._itemBoundables.add(new Ye(t, e));
            }),
            (er.prototype.boundablesAtLevel = function() {
              if (1 === arguments.length) {
                var t = arguments[0],
                  e = new It();
                return this.boundablesAtLevel(t, this._root, e), e;
              }
              if (3 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1],
                  i = arguments[2];
                if ((et.isTrue(r > -2), n.getLevel() === r))
                  return i.add(n), null;
                for (var o = n.getChildBoundables().iterator(); o.hasNext(); ) {
                  var s = o.next();
                  s instanceof Qe
                    ? this.boundablesAtLevel(r, s, i)
                    : (et.isTrue(s instanceof Ye), -1 === r && i.add(s));
                }
                return null;
              }
            }),
            (er.prototype.query = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.build();
                var e = new It();
                return (
                  this.isEmpty() ||
                    (this.getIntersectsOp().intersects(
                      this._root.getBounds(),
                      t
                    ) &&
                      this.query(t, this._root, e)),
                  e
                );
              }
              if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                if ((this.build(), this.isEmpty())) return null;
                this.getIntersectsOp().intersects(this._root.getBounds(), r) &&
                  this.query(r, this._root, n);
              } else if (3 === arguments.length)
                if (
                  O(arguments[2], Je) &&
                  arguments[0] instanceof Object &&
                  arguments[1] instanceof Qe
                )
                  for (
                    var i = arguments[0],
                      o = arguments[2],
                      s = arguments[1].getChildBoundables(),
                      a = 0;
                    a < s.size();
                    a++
                  ) {
                    var l = s.get(a);
                    this.getIntersectsOp().intersects(l.getBounds(), i) &&
                      (l instanceof Qe
                        ? this.query(i, l, o)
                        : l instanceof Ye
                        ? o.visitItem(l.getItem())
                        : et.shouldNeverReachHere());
                  }
                else if (
                  O(arguments[2], St) &&
                  arguments[0] instanceof Object &&
                  arguments[1] instanceof Qe
                )
                  for (
                    var u = arguments[0],
                      h = arguments[2],
                      c = arguments[1].getChildBoundables(),
                      p = 0;
                    p < c.size();
                    p++
                  ) {
                    var f = c.get(p);
                    this.getIntersectsOp().intersects(f.getBounds(), u) &&
                      (f instanceof Qe
                        ? this.query(u, f, h)
                        : f instanceof Ye
                        ? h.add(f.getItem())
                        : et.shouldNeverReachHere());
                  }
            }),
            (er.prototype.build = function() {
              if (this._built) return null;
              (this._root = this._itemBoundables.isEmpty()
                ? this.createNode(0)
                : this.createHigherLevels(this._itemBoundables, -1)),
                (this._itemBoundables = null),
                (this._built = !0);
            }),
            (er.prototype.getRoot = function() {
              return this.build(), this._root;
            }),
            (er.prototype.remove = function() {
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                return (
                  this.build(),
                  !!this.getIntersectsOp().intersects(
                    this._root.getBounds(),
                    t
                  ) && this.remove(t, this._root, e)
                );
              }
              if (3 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1],
                  i = arguments[2],
                  o = this.removeItem(n, i);
                if (o) return !0;
                for (
                  var s = null, a = n.getChildBoundables().iterator();
                  a.hasNext();

                ) {
                  var l = a.next();
                  if (
                    this.getIntersectsOp().intersects(l.getBounds(), r) &&
                    l instanceof Qe &&
                    (o = this.remove(r, l, i))
                  ) {
                    s = l;
                    break;
                  }
                }
                return (
                  null !== s &&
                    s.getChildBoundables().isEmpty() &&
                    n.getChildBoundables().remove(s),
                  o
                );
              }
            }),
            (er.prototype.createHigherLevels = function(t, e) {
              et.isTrue(!t.isEmpty());
              var r = this.createParentBoundables(t, e + 1);
              return 1 === r.size()
                ? r.get(0)
                : this.createHigherLevels(r, e + 1);
            }),
            (er.prototype.depth = function() {
              if (0 === arguments.length)
                return this.isEmpty()
                  ? 0
                  : (this.build(), this.depth(this._root));
              if (1 === arguments.length) {
                for (
                  var t = 0, e = arguments[0].getChildBoundables().iterator();
                  e.hasNext();

                ) {
                  var r = e.next();
                  if (r instanceof Qe) {
                    var n = this.depth(r);
                    n > t && (t = n);
                  }
                }
                return t + 1;
              }
            }),
            (er.prototype.createParentBoundables = function(t, e) {
              et.isTrue(!t.isEmpty());
              var r = new It();
              r.add(this.createNode(e));
              var n = new It(t);
              Ke.sort(n, this.getComparator());
              for (var i = n.iterator(); i.hasNext(); ) {
                var o = i.next();
                this.lastNode(r)
                  .getChildBoundables()
                  .size() === this.getNodeCapacity() &&
                  r.add(this.createNode(e)),
                  this.lastNode(r).addChildBoundable(o);
              }
              return r;
            }),
            (er.prototype.isEmpty = function() {
              return this._built
                ? this._root.isEmpty()
                : this._itemBoundables.isEmpty();
            }),
            (er.prototype.interfaces_ = function() {
              return [e];
            }),
            (er.prototype.getClass = function() {
              return er;
            }),
            (er.compareDoubles = function(t, e) {
              return t > e ? 1 : t < e ? -1 : 0;
            }),
            (rr.IntersectsOp.get = function() {
              return nr;
            }),
            (rr.serialVersionUID.get = function() {
              return -0x35ef64c82d4c5400;
            }),
            (rr.DEFAULT_NODE_CAPACITY.get = function() {
              return 10;
            }),
            Object.defineProperties(er, rr);
          var nr = function() {},
            ir = function() {};
          (ir.prototype.distance = function(t, e) {}),
            (ir.prototype.interfaces_ = function() {
              return [];
            }),
            (ir.prototype.getClass = function() {
              return ir;
            });
          var or = (function(t) {
              function r(e) {
                (e = e || r.DEFAULT_NODE_CAPACITY), t.call(this, e);
              }
              t && (r.__proto__ = t),
                ((r.prototype = Object.create(
                  t && t.prototype
                )).constructor = r);
              var n = {
                STRtreeNode: { configurable: !0 },
                serialVersionUID: { configurable: !0 },
                xComparator: { configurable: !0 },
                yComparator: { configurable: !0 },
                intersectsOp: { configurable: !0 },
                DEFAULT_NODE_CAPACITY: { configurable: !0 }
              };
              return (
                (r.prototype.createParentBoundablesFromVerticalSlices = function(
                  t,
                  e
                ) {
                  et.isTrue(t.length > 0);
                  for (var r = new It(), n = 0; n < t.length; n++)
                    r.addAll(
                      this.createParentBoundablesFromVerticalSlice(t[n], e)
                    );
                  return r;
                }),
                (r.prototype.createNode = function(t) {
                  return new sr(t);
                }),
                (r.prototype.size = function() {
                  return 0 === arguments.length
                    ? t.prototype.size.call(this)
                    : t.prototype.size.apply(this, arguments);
                }),
                (r.prototype.insert = function() {
                  if (2 !== arguments.length)
                    return t.prototype.insert.apply(this, arguments);
                  var e = arguments[0],
                    r = arguments[1];
                  if (e.isNull()) return null;
                  t.prototype.insert.call(this, e, r);
                }),
                (r.prototype.getIntersectsOp = function() {
                  return r.intersectsOp;
                }),
                (r.prototype.verticalSlices = function(t, e) {
                  for (
                    var r = Math.trunc(Math.ceil(t.size() / e)),
                      n = new Array(e).fill(null),
                      i = t.iterator(),
                      o = 0;
                    o < e;
                    o++
                  ) {
                    n[o] = new It();
                    for (var s = 0; i.hasNext() && s < r; ) {
                      var a = i.next();
                      n[o].add(a), s++;
                    }
                  }
                  return n;
                }),
                (r.prototype.query = function() {
                  if (1 === arguments.length) {
                    var e = arguments[0];
                    return t.prototype.query.call(this, e);
                  }
                  if (2 === arguments.length) {
                    var r = arguments[0],
                      n = arguments[1];
                    t.prototype.query.call(this, r, n);
                  } else if (3 === arguments.length)
                    if (
                      O(arguments[2], Je) &&
                      arguments[0] instanceof Object &&
                      arguments[1] instanceof Qe
                    ) {
                      var i = arguments[0],
                        o = arguments[1],
                        s = arguments[2];
                      t.prototype.query.call(this, i, o, s);
                    } else if (
                      O(arguments[2], St) &&
                      arguments[0] instanceof Object &&
                      arguments[1] instanceof Qe
                    ) {
                      var a = arguments[0],
                        l = arguments[1],
                        u = arguments[2];
                      t.prototype.query.call(this, a, l, u);
                    }
                }),
                (r.prototype.getComparator = function() {
                  return r.yComparator;
                }),
                (r.prototype.createParentBoundablesFromVerticalSlice = function(
                  e,
                  r
                ) {
                  return t.prototype.createParentBoundables.call(this, e, r);
                }),
                (r.prototype.remove = function() {
                  if (2 === arguments.length) {
                    var e = arguments[0],
                      r = arguments[1];
                    return t.prototype.remove.call(this, e, r);
                  }
                  return t.prototype.remove.apply(this, arguments);
                }),
                (r.prototype.depth = function() {
                  return 0 === arguments.length
                    ? t.prototype.depth.call(this)
                    : t.prototype.depth.apply(this, arguments);
                }),
                (r.prototype.createParentBoundables = function(t, e) {
                  et.isTrue(!t.isEmpty());
                  var n = Math.trunc(
                      Math.ceil(t.size() / this.getNodeCapacity())
                    ),
                    i = new It(t);
                  Ke.sort(i, r.xComparator);
                  var o = this.verticalSlices(
                    i,
                    Math.trunc(Math.ceil(Math.sqrt(n)))
                  );
                  return this.createParentBoundablesFromVerticalSlices(o, e);
                }),
                (r.prototype.nearestNeighbour = function() {
                  if (1 === arguments.length) {
                    if (O(arguments[0], ir)) {
                      var t = arguments[0],
                        e = new tr(this.getRoot(), this.getRoot(), t);
                      return this.nearestNeighbour(e);
                    }
                    if (arguments[0] instanceof tr) {
                      var n = arguments[0];
                      return this.nearestNeighbour(n, _.POSITIVE_INFINITY);
                    }
                  } else if (2 === arguments.length) {
                    if (arguments[0] instanceof r && O(arguments[1], ir)) {
                      var i = arguments[0],
                        o = arguments[1],
                        s = new tr(this.getRoot(), i.getRoot(), o);
                      return this.nearestNeighbour(s);
                    }
                    if (
                      arguments[0] instanceof tr &&
                      "number" == typeof arguments[1]
                    ) {
                      var a = arguments[0],
                        l = arguments[1],
                        u = null,
                        h = new He();
                      for (h.add(a); !h.isEmpty() && l > 0; ) {
                        var c = h.poll(),
                          p = c.getDistance();
                        if (p >= l) break;
                        c.isLeaves()
                          ? ((l = p), (u = c))
                          : c.expandToQueue(h, l);
                      }
                      return [
                        u.getBoundable(0).getItem(),
                        u.getBoundable(1).getItem()
                      ];
                    }
                  } else if (3 === arguments.length) {
                    var f = arguments[2],
                      d = new Ye(arguments[0], arguments[1]),
                      y = new tr(this.getRoot(), d, f);
                    return this.nearestNeighbour(y)[0];
                  }
                }),
                (r.prototype.interfaces_ = function() {
                  return [$e, e];
                }),
                (r.prototype.getClass = function() {
                  return r;
                }),
                (r.centreX = function(t) {
                  return r.avg(t.getMinX(), t.getMaxX());
                }),
                (r.avg = function(t, e) {
                  return (t + e) / 2;
                }),
                (r.centreY = function(t) {
                  return r.avg(t.getMinY(), t.getMaxY());
                }),
                (n.STRtreeNode.get = function() {
                  return sr;
                }),
                (n.serialVersionUID.get = function() {
                  return 0x39920f7d5f261e0;
                }),
                (n.xComparator.get = function() {
                  return {
                    interfaces_: function() {
                      return [I];
                    },
                    compare: function(e, n) {
                      return t.compareDoubles(
                        r.centreX(e.getBounds()),
                        r.centreX(n.getBounds())
                      );
                    }
                  };
                }),
                (n.yComparator.get = function() {
                  return {
                    interfaces_: function() {
                      return [I];
                    },
                    compare: function(e, n) {
                      return t.compareDoubles(
                        r.centreY(e.getBounds()),
                        r.centreY(n.getBounds())
                      );
                    }
                  };
                }),
                (n.intersectsOp.get = function() {
                  return {
                    interfaces_: function() {
                      return [t.IntersectsOp];
                    },
                    intersects: function(t, e) {
                      return t.intersects(e);
                    }
                  };
                }),
                (n.DEFAULT_NODE_CAPACITY.get = function() {
                  return 10;
                }),
                Object.defineProperties(r, n),
                r
              );
            })(er),
            sr = (function(t) {
              function e() {
                var e = arguments[0];
                t.call(this, e);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.computeBounds = function() {
                  for (
                    var t = null, e = this.getChildBoundables().iterator();
                    e.hasNext();

                  ) {
                    var r = e.next();
                    null === t
                      ? (t = new X(r.getBounds()))
                      : t.expandToInclude(r.getBounds());
                  }
                  return t;
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(Qe),
            ar = function() {};
          (ar.prototype.interfaces_ = function() {
            return [];
          }),
            (ar.prototype.getClass = function() {
              return ar;
            }),
            (ar.relativeSign = function(t, e) {
              return t < e ? -1 : t > e ? 1 : 0;
            }),
            (ar.compare = function(t, e, r) {
              if (e.equals2D(r)) return 0;
              var n = ar.relativeSign(e.x, r.x),
                i = ar.relativeSign(e.y, r.y);
              switch (t) {
                case 0:
                  return ar.compareValue(n, i);
                case 1:
                  return ar.compareValue(i, n);
                case 2:
                  return ar.compareValue(i, -n);
                case 3:
                  return ar.compareValue(-n, i);
                case 4:
                  return ar.compareValue(-n, -i);
                case 5:
                  return ar.compareValue(-i, -n);
                case 6:
                  return ar.compareValue(-i, n);
                case 7:
                  return ar.compareValue(n, -i);
              }
              return et.shouldNeverReachHere("invalid octant value"), 0;
            }),
            (ar.compareValue = function(t, e) {
              return t < 0 ? -1 : t > 0 ? 1 : e < 0 ? -1 : e > 0 ? 1 : 0;
            });
          var lr = function() {
            (this._segString = null),
              (this.coord = null),
              (this.segmentIndex = null),
              (this._segmentOctant = null),
              (this._isInterior = null);
            var t = arguments[0],
              e = arguments[1],
              r = arguments[2],
              n = arguments[3];
            (this._segString = t),
              (this.coord = new w(e)),
              (this.segmentIndex = r),
              (this._segmentOctant = n),
              (this._isInterior = !e.equals2D(t.getCoordinate(r)));
          };
          (lr.prototype.getCoordinate = function() {
            return this.coord;
          }),
            (lr.prototype.print = function(t) {
              t.print(this.coord), t.print(" seg # = " + this.segmentIndex);
            }),
            (lr.prototype.compareTo = function(t) {
              var e = t;
              return this.segmentIndex < e.segmentIndex
                ? -1
                : this.segmentIndex > e.segmentIndex
                ? 1
                : this.coord.equals2D(e.coord)
                ? 0
                : ar.compare(this._segmentOctant, this.coord, e.coord);
            }),
            (lr.prototype.isEndPoint = function(t) {
              return (
                (0 === this.segmentIndex && !this._isInterior) ||
                this.segmentIndex === t
              );
            }),
            (lr.prototype.isInterior = function() {
              return this._isInterior;
            }),
            (lr.prototype.interfaces_ = function() {
              return [b];
            }),
            (lr.prototype.getClass = function() {
              return lr;
            });
          var ur = function() {
            (this._nodeMap = new c()), (this._edge = null);
            var t = arguments[0];
            this._edge = t;
          };
          (ur.prototype.getSplitCoordinates = function() {
            var t = new Nt();
            this.addEndpoints();
            for (var e = this.iterator(), r = e.next(); e.hasNext(); ) {
              var n = e.next();
              this.addEdgeCoordinates(r, n, t), (r = n);
            }
            return t.toCoordinateArray();
          }),
            (ur.prototype.addCollapsedNodes = function() {
              var t = new It();
              this.findCollapsesFromInsertedNodes(t),
                this.findCollapsesFromExistingVertices(t);
              for (var e = t.iterator(); e.hasNext(); ) {
                var r = e.next().intValue();
                this.add(this._edge.getCoordinate(r), r);
              }
            }),
            (ur.prototype.print = function(t) {
              t.println("Intersections:");
              for (var e = this.iterator(); e.hasNext(); ) e.next().print(t);
            }),
            (ur.prototype.findCollapsesFromExistingVertices = function(t) {
              for (var e = 0; e < this._edge.size() - 2; e++) {
                var r = this._edge.getCoordinate(e),
                  n = this._edge.getCoordinate(e + 2);
                r.equals2D(n) && t.add(new R(e + 1));
              }
            }),
            (ur.prototype.addEdgeCoordinates = function(t, e, r) {
              var n = this._edge.getCoordinate(e.segmentIndex),
                i = e.isInterior() || !e.coord.equals2D(n);
              r.add(new w(t.coord), !1);
              for (var o = t.segmentIndex + 1; o <= e.segmentIndex; o++)
                r.add(this._edge.getCoordinate(o));
              i && r.add(new w(e.coord));
            }),
            (ur.prototype.iterator = function() {
              return this._nodeMap.values().iterator();
            }),
            (ur.prototype.addSplitEdges = function(t) {
              this.addEndpoints(), this.addCollapsedNodes();
              for (var e = this.iterator(), r = e.next(); e.hasNext(); ) {
                var n = e.next(),
                  i = this.createSplitEdge(r, n);
                t.add(i), (r = n);
              }
            }),
            (ur.prototype.findCollapseIndex = function(t, e, r) {
              if (!t.coord.equals2D(e.coord)) return !1;
              var n = e.segmentIndex - t.segmentIndex;
              return (
                e.isInterior() || n--,
                1 === n && ((r[0] = t.segmentIndex + 1), !0)
              );
            }),
            (ur.prototype.findCollapsesFromInsertedNodes = function(t) {
              for (
                var e = new Array(1).fill(null),
                  r = this.iterator(),
                  n = r.next();
                r.hasNext();

              ) {
                var i = r.next();
                this.findCollapseIndex(n, i, e) && t.add(new R(e[0])), (n = i);
              }
            }),
            (ur.prototype.getEdge = function() {
              return this._edge;
            }),
            (ur.prototype.addEndpoints = function() {
              var t = this._edge.size() - 1;
              this.add(this._edge.getCoordinate(0), 0),
                this.add(this._edge.getCoordinate(t), t);
            }),
            (ur.prototype.createSplitEdge = function(t, e) {
              var r = e.segmentIndex - t.segmentIndex + 2,
                n = this._edge.getCoordinate(e.segmentIndex),
                i = e.isInterior() || !e.coord.equals2D(n);
              i || r--;
              var o = new Array(r).fill(null),
                s = 0;
              o[s++] = new w(t.coord);
              for (var a = t.segmentIndex + 1; a <= e.segmentIndex; a++)
                o[s++] = this._edge.getCoordinate(a);
              return (
                i && (o[s] = new w(e.coord)), new fr(o, this._edge.getData())
              );
            }),
            (ur.prototype.add = function(t, e) {
              var r = new lr(this._edge, t, e, this._edge.getSegmentOctant(e)),
                n = this._nodeMap.get(r);
              return null !== n
                ? (et.isTrue(
                    n.coord.equals2D(t),
                    "Found equal nodes with different coordinates"
                  ),
                  n)
                : (this._nodeMap.put(r, r), r);
            }),
            (ur.prototype.checkSplitEdgesCorrectness = function(t) {
              var e = this._edge.getCoordinates(),
                r = t.get(0).getCoordinate(0);
              if (!r.equals2D(e[0]))
                throw new K("bad split edge start point at " + r);
              var n = t.get(t.size() - 1).getCoordinates(),
                i = n[n.length - 1];
              if (!i.equals2D(e[e.length - 1]))
                throw new K("bad split edge end point at " + i);
            }),
            (ur.prototype.interfaces_ = function() {
              return [];
            }),
            (ur.prototype.getClass = function() {
              return ur;
            });
          var hr = function() {};
          (hr.prototype.interfaces_ = function() {
            return [];
          }),
            (hr.prototype.getClass = function() {
              return hr;
            }),
            (hr.octant = function() {
              if (
                "number" == typeof arguments[0] &&
                "number" == typeof arguments[1]
              ) {
                var t = arguments[0],
                  e = arguments[1];
                if (0 === t && 0 === e)
                  throw new v(
                    "Cannot compute the octant for point ( " +
                      t +
                      ", " +
                      e +
                      " )"
                  );
                var r = Math.abs(t),
                  n = Math.abs(e);
                return t >= 0
                  ? e >= 0
                    ? r >= n
                      ? 0
                      : 1
                    : r >= n
                    ? 7
                    : 6
                  : e >= 0
                  ? r >= n
                    ? 3
                    : 2
                  : r >= n
                  ? 4
                  : 5;
              }
              if (arguments[0] instanceof w && arguments[1] instanceof w) {
                var i = arguments[0],
                  o = arguments[1],
                  s = o.x - i.x,
                  a = o.y - i.y;
                if (0 === s && 0 === a)
                  throw new v(
                    "Cannot compute the octant for two identical points " + i
                  );
                return hr.octant(s, a);
              }
            });
          var cr = function() {};
          (cr.prototype.getCoordinates = function() {}),
            (cr.prototype.size = function() {}),
            (cr.prototype.getCoordinate = function(t) {}),
            (cr.prototype.isClosed = function() {}),
            (cr.prototype.setData = function(t) {}),
            (cr.prototype.getData = function() {}),
            (cr.prototype.interfaces_ = function() {
              return [];
            }),
            (cr.prototype.getClass = function() {
              return cr;
            });
          var pr = function() {};
          (pr.prototype.addIntersection = function(t, e) {}),
            (pr.prototype.interfaces_ = function() {
              return [cr];
            }),
            (pr.prototype.getClass = function() {
              return pr;
            });
          var fr = function() {
            (this._nodeList = new ur(this)),
              (this._pts = null),
              (this._data = null);
            var t = arguments[0],
              e = arguments[1];
            (this._pts = t), (this._data = e);
          };
          (fr.prototype.getCoordinates = function() {
            return this._pts;
          }),
            (fr.prototype.size = function() {
              return this._pts.length;
            }),
            (fr.prototype.getCoordinate = function(t) {
              return this._pts[t];
            }),
            (fr.prototype.isClosed = function() {
              return this._pts[0].equals(this._pts[this._pts.length - 1]);
            }),
            (fr.prototype.getSegmentOctant = function(t) {
              return t === this._pts.length - 1
                ? -1
                : this.safeOctant(
                    this.getCoordinate(t),
                    this.getCoordinate(t + 1)
                  );
            }),
            (fr.prototype.setData = function(t) {
              this._data = t;
            }),
            (fr.prototype.safeOctant = function(t, e) {
              return t.equals2D(e) ? 0 : hr.octant(t, e);
            }),
            (fr.prototype.getData = function() {
              return this._data;
            }),
            (fr.prototype.addIntersection = function() {
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                this.addIntersectionNode(t, e);
              } else if (4 === arguments.length) {
                var r = arguments[1],
                  n = arguments[3],
                  i = new w(arguments[0].getIntersection(n));
                this.addIntersection(i, r);
              }
            }),
            (fr.prototype.toString = function() {
              return Z.toLineString(new le(this._pts));
            }),
            (fr.prototype.getNodeList = function() {
              return this._nodeList;
            }),
            (fr.prototype.addIntersectionNode = function(t, e) {
              var r = e,
                n = r + 1;
              if (n < this._pts.length) {
                var i = this._pts[n];
                t.equals2D(i) && (r = n);
              }
              return this._nodeList.add(t, r);
            }),
            (fr.prototype.addIntersections = function(t, e, r) {
              for (var n = 0; n < t.getIntersectionNum(); n++)
                this.addIntersection(t, e, r, n);
            }),
            (fr.prototype.interfaces_ = function() {
              return [pr];
            }),
            (fr.prototype.getClass = function() {
              return fr;
            }),
            (fr.getNodedSubstrings = function() {
              if (1 === arguments.length) {
                var t = arguments[0],
                  e = new It();
                return fr.getNodedSubstrings(t, e), e;
              }
              if (2 === arguments.length)
                for (
                  var r = arguments[1], n = arguments[0].iterator();
                  n.hasNext();

                )
                  n.next()
                    .getNodeList()
                    .addSplitEdges(r);
            });
          var dr = function() {
              if (((this.p0 = null), (this.p1 = null), 0 === arguments.length))
                (this.p0 = new w()), (this.p1 = new w());
              else if (1 === arguments.length) {
                var t = arguments[0];
                (this.p0 = new w(t.p0)), (this.p1 = new w(t.p1));
              } else if (2 === arguments.length)
                (this.p0 = arguments[0]), (this.p1 = arguments[1]);
              else if (4 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1],
                  n = arguments[2],
                  i = arguments[3];
                (this.p0 = new w(e, r)), (this.p1 = new w(n, i));
              }
            },
            yr = { serialVersionUID: { configurable: !0 } };
          (dr.prototype.minX = function() {
            return Math.min(this.p0.x, this.p1.x);
          }),
            (dr.prototype.orientationIndex = function() {
              if (arguments[0] instanceof dr) {
                var t = arguments[0],
                  e = at.orientationIndex(this.p0, this.p1, t.p0),
                  r = at.orientationIndex(this.p0, this.p1, t.p1);
                return (e >= 0 && r >= 0) || (e <= 0 && r <= 0)
                  ? Math.max(e, r)
                  : 0;
              }
              if (arguments[0] instanceof w) {
                var n = arguments[0];
                return at.orientationIndex(this.p0, this.p1, n);
              }
            }),
            (dr.prototype.toGeometry = function(t) {
              return t.createLineString([this.p0, this.p1]);
            }),
            (dr.prototype.isVertical = function() {
              return this.p0.x === this.p1.x;
            }),
            (dr.prototype.equals = function(t) {
              if (!(t instanceof dr)) return !1;
              var e = t;
              return this.p0.equals(e.p0) && this.p1.equals(e.p1);
            }),
            (dr.prototype.intersection = function(t) {
              var e = new it();
              return (
                e.computeIntersection(this.p0, this.p1, t.p0, t.p1),
                e.hasIntersection() ? e.getIntersection(0) : null
              );
            }),
            (dr.prototype.project = function() {
              if (arguments[0] instanceof w) {
                var t = arguments[0];
                if (t.equals(this.p0) || t.equals(this.p1)) return new w(t);
                var e = this.projectionFactor(t),
                  r = new w();
                return (
                  (r.x = this.p0.x + e * (this.p1.x - this.p0.x)),
                  (r.y = this.p0.y + e * (this.p1.y - this.p0.y)),
                  r
                );
              }
              if (arguments[0] instanceof dr) {
                var n = arguments[0],
                  i = this.projectionFactor(n.p0),
                  o = this.projectionFactor(n.p1);
                if (i >= 1 && o >= 1) return null;
                if (i <= 0 && o <= 0) return null;
                var s = this.project(n.p0);
                i < 0 && (s = this.p0), i > 1 && (s = this.p1);
                var a = this.project(n.p1);
                return (
                  o < 0 && (a = this.p0), o > 1 && (a = this.p1), new dr(s, a)
                );
              }
            }),
            (dr.prototype.normalize = function() {
              this.p1.compareTo(this.p0) < 0 && this.reverse();
            }),
            (dr.prototype.angle = function() {
              return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);
            }),
            (dr.prototype.getCoordinate = function(t) {
              return 0 === t ? this.p0 : this.p1;
            }),
            (dr.prototype.distancePerpendicular = function(t) {
              return at.distancePointLinePerpendicular(t, this.p0, this.p1);
            }),
            (dr.prototype.minY = function() {
              return Math.min(this.p0.y, this.p1.y);
            }),
            (dr.prototype.midPoint = function() {
              return dr.midPoint(this.p0, this.p1);
            }),
            (dr.prototype.projectionFactor = function(t) {
              if (t.equals(this.p0)) return 0;
              if (t.equals(this.p1)) return 1;
              var e = this.p1.x - this.p0.x,
                r = this.p1.y - this.p0.y,
                n = e * e + r * r;
              return n <= 0
                ? _.NaN
                : ((t.x - this.p0.x) * e + (t.y - this.p0.y) * r) / n;
            }),
            (dr.prototype.closestPoints = function(t) {
              var e = this.intersection(t);
              if (null !== e) return [e, e];
              var r = new Array(2).fill(null),
                n = _.MAX_VALUE,
                i = null,
                o = this.closestPoint(t.p0);
              (n = o.distance(t.p0)), (r[0] = o), (r[1] = t.p0);
              var s = this.closestPoint(t.p1);
              (i = s.distance(t.p1)) < n &&
                ((n = i), (r[0] = s), (r[1] = t.p1));
              var a = t.closestPoint(this.p0);
              (i = a.distance(this.p0)) < n &&
                ((n = i), (r[0] = this.p0), (r[1] = a));
              var l = t.closestPoint(this.p1);
              return (
                (i = l.distance(this.p1)) < n &&
                  ((n = i), (r[0] = this.p1), (r[1] = l)),
                r
              );
            }),
            (dr.prototype.closestPoint = function(t) {
              var e = this.projectionFactor(t);
              return e > 0 && e < 1
                ? this.project(t)
                : this.p0.distance(t) < this.p1.distance(t)
                ? this.p0
                : this.p1;
            }),
            (dr.prototype.maxX = function() {
              return Math.max(this.p0.x, this.p1.x);
            }),
            (dr.prototype.getLength = function() {
              return this.p0.distance(this.p1);
            }),
            (dr.prototype.compareTo = function(t) {
              var e = t,
                r = this.p0.compareTo(e.p0);
              return 0 !== r ? r : this.p1.compareTo(e.p1);
            }),
            (dr.prototype.reverse = function() {
              var t = this.p0;
              (this.p0 = this.p1), (this.p1 = t);
            }),
            (dr.prototype.equalsTopo = function(t) {
              return (
                this.p0.equals(t.p0) &&
                (this.p1.equals(t.p1) || this.p0.equals(t.p1)) &&
                this.p1.equals(t.p0)
              );
            }),
            (dr.prototype.lineIntersection = function(t) {
              try {
                return W.intersection(this.p0, this.p1, t.p0, t.p1);
              } catch (t) {
                if (!(t instanceof z)) throw t;
              }
              return null;
            }),
            (dr.prototype.maxY = function() {
              return Math.max(this.p0.y, this.p1.y);
            }),
            (dr.prototype.pointAlongOffset = function(t, e) {
              var r = this.p0.x + t * (this.p1.x - this.p0.x),
                n = this.p0.y + t * (this.p1.y - this.p0.y),
                i = this.p1.x - this.p0.x,
                o = this.p1.y - this.p0.y,
                s = Math.sqrt(i * i + o * o),
                a = 0,
                l = 0;
              if (0 !== e) {
                if (s <= 0)
                  throw new Error(
                    "Cannot compute offset from zero-length line segment"
                  );
                (a = (e * i) / s), (l = (e * o) / s);
              }
              return new w(r - l, n + a);
            }),
            (dr.prototype.setCoordinates = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.setCoordinates(t.p0, t.p1);
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                (this.p0.x = e.x),
                  (this.p0.y = e.y),
                  (this.p1.x = r.x),
                  (this.p1.y = r.y);
              }
            }),
            (dr.prototype.segmentFraction = function(t) {
              var e = this.projectionFactor(t);
              return e < 0 ? (e = 0) : (e > 1 || _.isNaN(e)) && (e = 1), e;
            }),
            (dr.prototype.toString = function() {
              return (
                "LINESTRING( " +
                this.p0.x +
                " " +
                this.p0.y +
                ", " +
                this.p1.x +
                " " +
                this.p1.y +
                ")"
              );
            }),
            (dr.prototype.isHorizontal = function() {
              return this.p0.y === this.p1.y;
            }),
            (dr.prototype.distance = function() {
              if (arguments[0] instanceof dr) {
                var t = arguments[0];
                return at.distanceLineLine(this.p0, this.p1, t.p0, t.p1);
              }
              if (arguments[0] instanceof w) {
                var e = arguments[0];
                return at.distancePointLine(e, this.p0, this.p1);
              }
            }),
            (dr.prototype.pointAlong = function(t) {
              var e = new w();
              return (
                (e.x = this.p0.x + t * (this.p1.x - this.p0.x)),
                (e.y = this.p0.y + t * (this.p1.y - this.p0.y)),
                e
              );
            }),
            (dr.prototype.hashCode = function() {
              var t = _.doubleToLongBits(this.p0.x);
              t ^= 31 * _.doubleToLongBits(this.p0.y);
              var e = Math.trunc(t) ^ Math.trunc(t >> 32),
                r = _.doubleToLongBits(this.p1.x);
              return (
                (r ^= 31 * _.doubleToLongBits(this.p1.y)),
                e ^ Math.trunc(r) ^ Math.trunc(r >> 32)
              );
            }),
            (dr.prototype.interfaces_ = function() {
              return [b, e];
            }),
            (dr.prototype.getClass = function() {
              return dr;
            }),
            (dr.midPoint = function(t, e) {
              return new w((t.x + e.x) / 2, (t.y + e.y) / 2);
            }),
            (yr.serialVersionUID.get = function() {
              return 0x2d2172135f411c00;
            }),
            Object.defineProperties(dr, yr);
          var gr = function() {
            (this.tempEnv1 = new X()),
              (this.tempEnv2 = new X()),
              (this._overlapSeg1 = new dr()),
              (this._overlapSeg2 = new dr());
          };
          (gr.prototype.overlap = function() {
            if (2 === arguments.length);
            else if (4 === arguments.length) {
              var t = arguments[1],
                e = arguments[2],
                r = arguments[3];
              arguments[0].getLineSegment(t, this._overlapSeg1),
                e.getLineSegment(r, this._overlapSeg2),
                this.overlap(this._overlapSeg1, this._overlapSeg2);
            }
          }),
            (gr.prototype.interfaces_ = function() {
              return [];
            }),
            (gr.prototype.getClass = function() {
              return gr;
            });
          var mr = function() {
            (this._pts = null),
              (this._start = null),
              (this._end = null),
              (this._env = null),
              (this._context = null),
              (this._id = null);
            var t = arguments[0],
              e = arguments[1],
              r = arguments[2],
              n = arguments[3];
            (this._pts = t),
              (this._start = e),
              (this._end = r),
              (this._context = n);
          };
          (mr.prototype.getLineSegment = function(t, e) {
            (e.p0 = this._pts[t]), (e.p1 = this._pts[t + 1]);
          }),
            (mr.prototype.computeSelect = function(t, e, r, n) {
              var i = this._pts[e],
                o = this._pts[r];
              if ((n.tempEnv1.init(i, o), r - e == 1))
                return n.select(this, e), null;
              if (!t.intersects(n.tempEnv1)) return null;
              var s = Math.trunc((e + r) / 2);
              e < s && this.computeSelect(t, e, s, n),
                s < r && this.computeSelect(t, s, r, n);
            }),
            (mr.prototype.getCoordinates = function() {
              for (
                var t = new Array(this._end - this._start + 1).fill(null),
                  e = 0,
                  r = this._start;
                r <= this._end;
                r++
              )
                t[e++] = this._pts[r];
              return t;
            }),
            (mr.prototype.computeOverlaps = function(t, e) {
              this.computeOverlapsInternal(
                this._start,
                this._end,
                t,
                t._start,
                t._end,
                e
              );
            }),
            (mr.prototype.setId = function(t) {
              this._id = t;
            }),
            (mr.prototype.select = function(t, e) {
              this.computeSelect(t, this._start, this._end, e);
            }),
            (mr.prototype.getEnvelope = function() {
              if (null === this._env) {
                var t = this._pts[this._start],
                  e = this._pts[this._end];
                this._env = new X(t, e);
              }
              return this._env;
            }),
            (mr.prototype.getEndIndex = function() {
              return this._end;
            }),
            (mr.prototype.getStartIndex = function() {
              return this._start;
            }),
            (mr.prototype.getContext = function() {
              return this._context;
            }),
            (mr.prototype.getId = function() {
              return this._id;
            }),
            (mr.prototype.computeOverlapsInternal = function(t, e, r, n, i, o) {
              var s = this._pts[t],
                a = this._pts[e],
                l = r._pts[n],
                u = r._pts[i];
              if (e - t == 1 && i - n == 1)
                return o.overlap(this, t, r, n), null;
              if (
                (o.tempEnv1.init(s, a),
                o.tempEnv2.init(l, u),
                !o.tempEnv1.intersects(o.tempEnv2))
              )
                return null;
              var h = Math.trunc((t + e) / 2),
                c = Math.trunc((n + i) / 2);
              t < h &&
                (n < c && this.computeOverlapsInternal(t, h, r, n, c, o),
                c < i && this.computeOverlapsInternal(t, h, r, c, i, o)),
                h < e &&
                  (n < c && this.computeOverlapsInternal(h, e, r, n, c, o),
                  c < i && this.computeOverlapsInternal(h, e, r, c, i, o));
            }),
            (mr.prototype.interfaces_ = function() {
              return [];
            }),
            (mr.prototype.getClass = function() {
              return mr;
            });
          var vr = function() {};
          (vr.prototype.interfaces_ = function() {
            return [];
          }),
            (vr.prototype.getClass = function() {
              return vr;
            }),
            (vr.getChainStartIndices = function(t) {
              var e = 0,
                r = new It();
              r.add(new R(e));
              do {
                var n = vr.findChainEnd(t, e);
                r.add(new R(n)), (e = n);
              } while (e < t.length - 1);
              return vr.toIntArray(r);
            }),
            (vr.findChainEnd = function(t, e) {
              for (var r = e; r < t.length - 1 && t[r].equals2D(t[r + 1]); )
                r++;
              if (r >= t.length - 1) return t.length - 1;
              for (
                var n = Ge.quadrant(t[r], t[r + 1]), i = e + 1;
                i < t.length &&
                (t[i - 1].equals2D(t[i]) || Ge.quadrant(t[i - 1], t[i]) === n);

              )
                i++;
              return i - 1;
            }),
            (vr.getChains = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return vr.getChains(t, null);
              }
              if (2 === arguments.length) {
                for (
                  var e = arguments[0],
                    r = arguments[1],
                    n = new It(),
                    i = vr.getChainStartIndices(e),
                    o = 0;
                  o < i.length - 1;
                  o++
                ) {
                  var s = new mr(e, i[o], i[o + 1], r);
                  n.add(s);
                }
                return n;
              }
            }),
            (vr.toIntArray = function(t) {
              for (
                var e = new Array(t.size()).fill(null), r = 0;
                r < e.length;
                r++
              )
                e[r] = t.get(r).intValue();
              return e;
            });
          var _r = function() {};
          (_r.prototype.computeNodes = function(t) {}),
            (_r.prototype.getNodedSubstrings = function() {}),
            (_r.prototype.interfaces_ = function() {
              return [];
            }),
            (_r.prototype.getClass = function() {
              return _r;
            });
          var xr = function() {
            if (((this._segInt = null), 0 === arguments.length));
            else if (1 === arguments.length) {
              var t = arguments[0];
              this.setSegmentIntersector(t);
            }
          };
          (xr.prototype.setSegmentIntersector = function(t) {
            this._segInt = t;
          }),
            (xr.prototype.interfaces_ = function() {
              return [_r];
            }),
            (xr.prototype.getClass = function() {
              return xr;
            });
          var br = (function(t) {
              function e(e) {
                e ? t.call(this, e) : t.call(this),
                  (this._monoChains = new It()),
                  (this._index = new or()),
                  (this._idCounter = 0),
                  (this._nodedSegStrings = null),
                  (this._nOverlaps = 0);
              }
              t && (e.__proto__ = t),
                ((e.prototype = Object.create(
                  t && t.prototype
                )).constructor = e);
              var r = { SegmentOverlapAction: { configurable: !0 } };
              return (
                (e.prototype.getMonotoneChains = function() {
                  return this._monoChains;
                }),
                (e.prototype.getNodedSubstrings = function() {
                  return fr.getNodedSubstrings(this._nodedSegStrings);
                }),
                (e.prototype.getIndex = function() {
                  return this._index;
                }),
                (e.prototype.add = function(t) {
                  for (
                    var e = vr.getChains(t.getCoordinates(), t).iterator();
                    e.hasNext();

                  ) {
                    var r = e.next();
                    r.setId(this._idCounter++),
                      this._index.insert(r.getEnvelope(), r),
                      this._monoChains.add(r);
                  }
                }),
                (e.prototype.computeNodes = function(t) {
                  this._nodedSegStrings = t;
                  for (var e = t.iterator(); e.hasNext(); ) this.add(e.next());
                  this.intersectChains();
                }),
                (e.prototype.intersectChains = function() {
                  for (
                    var t = new Sr(this._segInt),
                      e = this._monoChains.iterator();
                    e.hasNext();

                  )
                    for (
                      var r = e.next(),
                        n = this._index.query(r.getEnvelope()).iterator();
                      n.hasNext();

                    ) {
                      var i = n.next();
                      if (
                        (i.getId() > r.getId() &&
                          (r.computeOverlaps(i, t), this._nOverlaps++),
                        this._segInt.isDone())
                      )
                        return null;
                    }
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (r.SegmentOverlapAction.get = function() {
                  return Sr;
                }),
                Object.defineProperties(e, r),
                e
              );
            })(xr),
            Sr = (function(t) {
              function e() {
                t.call(this), (this._si = null);
                var e = arguments[0];
                this._si = e;
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.overlap = function() {
                  if (4 !== arguments.length)
                    return t.prototype.overlap.apply(this, arguments);
                  var e = arguments[1],
                    r = arguments[2],
                    n = arguments[3],
                    i = arguments[0].getContext(),
                    o = r.getContext();
                  this._si.processIntersections(i, e, o, n);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(gr),
            Ir = function t() {
              if (
                ((this._quadrantSegments = t.DEFAULT_QUADRANT_SEGMENTS),
                (this._endCapStyle = t.CAP_ROUND),
                (this._joinStyle = t.JOIN_ROUND),
                (this._mitreLimit = t.DEFAULT_MITRE_LIMIT),
                (this._isSingleSided = !1),
                (this._simplifyFactor = t.DEFAULT_SIMPLIFY_FACTOR),
                0 === arguments.length)
              );
              else if (1 === arguments.length) {
                var e = arguments[0];
                this.setQuadrantSegments(e);
              } else if (2 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1];
                this.setQuadrantSegments(r), this.setEndCapStyle(n);
              } else if (4 === arguments.length) {
                var i = arguments[0],
                  o = arguments[1],
                  s = arguments[2],
                  a = arguments[3];
                this.setQuadrantSegments(i),
                  this.setEndCapStyle(o),
                  this.setJoinStyle(s),
                  this.setMitreLimit(a);
              }
            },
            wr = {
              CAP_ROUND: { configurable: !0 },
              CAP_FLAT: { configurable: !0 },
              CAP_SQUARE: { configurable: !0 },
              JOIN_ROUND: { configurable: !0 },
              JOIN_MITRE: { configurable: !0 },
              JOIN_BEVEL: { configurable: !0 },
              DEFAULT_QUADRANT_SEGMENTS: { configurable: !0 },
              DEFAULT_MITRE_LIMIT: { configurable: !0 },
              DEFAULT_SIMPLIFY_FACTOR: { configurable: !0 }
            };
          (Ir.prototype.getEndCapStyle = function() {
            return this._endCapStyle;
          }),
            (Ir.prototype.isSingleSided = function() {
              return this._isSingleSided;
            }),
            (Ir.prototype.setQuadrantSegments = function(t) {
              (this._quadrantSegments = t),
                0 === this._quadrantSegments &&
                  (this._joinStyle = Ir.JOIN_BEVEL),
                this._quadrantSegments < 0 &&
                  ((this._joinStyle = Ir.JOIN_MITRE),
                  (this._mitreLimit = Math.abs(this._quadrantSegments))),
                t <= 0 && (this._quadrantSegments = 1),
                this._joinStyle !== Ir.JOIN_ROUND &&
                  (this._quadrantSegments = Ir.DEFAULT_QUADRANT_SEGMENTS);
            }),
            (Ir.prototype.getJoinStyle = function() {
              return this._joinStyle;
            }),
            (Ir.prototype.setJoinStyle = function(t) {
              this._joinStyle = t;
            }),
            (Ir.prototype.setSimplifyFactor = function(t) {
              this._simplifyFactor = t < 0 ? 0 : t;
            }),
            (Ir.prototype.getSimplifyFactor = function() {
              return this._simplifyFactor;
            }),
            (Ir.prototype.getQuadrantSegments = function() {
              return this._quadrantSegments;
            }),
            (Ir.prototype.setEndCapStyle = function(t) {
              this._endCapStyle = t;
            }),
            (Ir.prototype.getMitreLimit = function() {
              return this._mitreLimit;
            }),
            (Ir.prototype.setMitreLimit = function(t) {
              this._mitreLimit = t;
            }),
            (Ir.prototype.setSingleSided = function(t) {
              this._isSingleSided = t;
            }),
            (Ir.prototype.interfaces_ = function() {
              return [];
            }),
            (Ir.prototype.getClass = function() {
              return Ir;
            }),
            (Ir.bufferDistanceError = function(t) {
              var e = Math.PI / 2 / t;
              return 1 - Math.cos(e / 2);
            }),
            (wr.CAP_ROUND.get = function() {
              return 1;
            }),
            (wr.CAP_FLAT.get = function() {
              return 2;
            }),
            (wr.CAP_SQUARE.get = function() {
              return 3;
            }),
            (wr.JOIN_ROUND.get = function() {
              return 1;
            }),
            (wr.JOIN_MITRE.get = function() {
              return 2;
            }),
            (wr.JOIN_BEVEL.get = function() {
              return 3;
            }),
            (wr.DEFAULT_QUADRANT_SEGMENTS.get = function() {
              return 8;
            }),
            (wr.DEFAULT_MITRE_LIMIT.get = function() {
              return 5;
            }),
            (wr.DEFAULT_SIMPLIFY_FACTOR.get = function() {
              return 0.01;
            }),
            Object.defineProperties(Ir, wr);
          var Nr = function(t) {
              (this._distanceTol = null),
                (this._isDeleted = null),
                (this._angleOrientation = at.COUNTERCLOCKWISE),
                (this._inputLine = t || null);
            },
            Cr = {
              INIT: { configurable: !0 },
              DELETE: { configurable: !0 },
              KEEP: { configurable: !0 },
              NUM_PTS_TO_CHECK: { configurable: !0 }
            };
          (Nr.prototype.isDeletable = function(t, e, r, n) {
            var i = this._inputLine[t],
              o = this._inputLine[e],
              s = this._inputLine[r];
            return (
              !!this.isConcave(i, o, s) &&
              !!this.isShallow(i, o, s, n) &&
              this.isShallowSampled(i, o, t, r, n)
            );
          }),
            (Nr.prototype.deleteShallowConcavities = function() {
              for (
                var t = 1,
                  e = this.findNextNonDeletedIndex(t),
                  r = this.findNextNonDeletedIndex(e),
                  n = !1;
                r < this._inputLine.length;

              ) {
                var i = !1;
                this.isDeletable(t, e, r, this._distanceTol) &&
                  ((this._isDeleted[e] = Nr.DELETE), (i = !0), (n = !0)),
                  (t = i ? r : e),
                  (e = this.findNextNonDeletedIndex(t)),
                  (r = this.findNextNonDeletedIndex(e));
              }
              return n;
            }),
            (Nr.prototype.isShallowConcavity = function(t, e, r, n) {
              return (
                at.computeOrientation(t, e, r) === this._angleOrientation &&
                at.distancePointLine(e, t, r) < n
              );
            }),
            (Nr.prototype.isShallowSampled = function(t, e, r, n, i) {
              var o = Math.trunc((n - r) / Nr.NUM_PTS_TO_CHECK);
              o <= 0 && (o = 1);
              for (var s = r; s < n; s += o)
                if (!this.isShallow(t, e, this._inputLine[s], i)) return !1;
              return !0;
            }),
            (Nr.prototype.isConcave = function(t, e, r) {
              return at.computeOrientation(t, e, r) === this._angleOrientation;
            }),
            (Nr.prototype.simplify = function(t) {
              (this._distanceTol = Math.abs(t)),
                t < 0 && (this._angleOrientation = at.CLOCKWISE),
                (this._isDeleted = new Array(this._inputLine.length).fill(
                  null
                ));
              var e = !1;
              do {
                e = this.deleteShallowConcavities();
              } while (e);
              return this.collapseLine();
            }),
            (Nr.prototype.findNextNonDeletedIndex = function(t) {
              for (
                var e = t + 1;
                e < this._inputLine.length && this._isDeleted[e] === Nr.DELETE;

              )
                e++;
              return e;
            }),
            (Nr.prototype.isShallow = function(t, e, r, n) {
              return at.distancePointLine(e, t, r) < n;
            }),
            (Nr.prototype.collapseLine = function() {
              for (var t = new Nt(), e = 0; e < this._inputLine.length; e++)
                this._isDeleted[e] !== Nr.DELETE && t.add(this._inputLine[e]);
              return t.toCoordinateArray();
            }),
            (Nr.prototype.interfaces_ = function() {
              return [];
            }),
            (Nr.prototype.getClass = function() {
              return Nr;
            }),
            (Nr.simplify = function(t, e) {
              return new Nr(t).simplify(e);
            }),
            (Cr.INIT.get = function() {
              return 0;
            }),
            (Cr.DELETE.get = function() {
              return 1;
            }),
            (Cr.KEEP.get = function() {
              return 1;
            }),
            (Cr.NUM_PTS_TO_CHECK.get = function() {
              return 10;
            }),
            Object.defineProperties(Nr, Cr);
          var Er = function() {
              (this._ptList = null),
                (this._precisionModel = null),
                (this._minimimVertexDistance = 0),
                (this._ptList = new It());
            },
            Mr = { COORDINATE_ARRAY_TYPE: { configurable: !0 } };
          (Er.prototype.getCoordinates = function() {
            return this._ptList.toArray(Er.COORDINATE_ARRAY_TYPE);
          }),
            (Er.prototype.setPrecisionModel = function(t) {
              this._precisionModel = t;
            }),
            (Er.prototype.addPt = function(t) {
              var e = new w(t);
              if ((this._precisionModel.makePrecise(e), this.isRedundant(e)))
                return null;
              this._ptList.add(e);
            }),
            (Er.prototype.revere = function() {}),
            (Er.prototype.addPts = function(t, e) {
              if (e) for (var r = 0; r < t.length; r++) this.addPt(t[r]);
              else for (var n = t.length - 1; n >= 0; n--) this.addPt(t[n]);
            }),
            (Er.prototype.isRedundant = function(t) {
              if (this._ptList.size() < 1) return !1;
              var e = this._ptList.get(this._ptList.size() - 1);
              return t.distance(e) < this._minimimVertexDistance;
            }),
            (Er.prototype.toString = function() {
              return new me()
                .createLineString(this.getCoordinates())
                .toString();
            }),
            (Er.prototype.closeRing = function() {
              if (this._ptList.size() < 1) return null;
              var t = new w(this._ptList.get(0)),
                e = this._ptList.get(this._ptList.size() - 1);
              if (t.equals(e)) return null;
              this._ptList.add(t);
            }),
            (Er.prototype.setMinimumVertexDistance = function(t) {
              this._minimimVertexDistance = t;
            }),
            (Er.prototype.interfaces_ = function() {
              return [];
            }),
            (Er.prototype.getClass = function() {
              return Er;
            }),
            (Mr.COORDINATE_ARRAY_TYPE.get = function() {
              return new Array(0).fill(null);
            }),
            Object.defineProperties(Er, Mr);
          var Pr = function() {},
            Or = {
              PI_TIMES_2: { configurable: !0 },
              PI_OVER_2: { configurable: !0 },
              PI_OVER_4: { configurable: !0 },
              COUNTERCLOCKWISE: { configurable: !0 },
              CLOCKWISE: { configurable: !0 },
              NONE: { configurable: !0 }
            };
          (Pr.prototype.interfaces_ = function() {
            return [];
          }),
            (Pr.prototype.getClass = function() {
              return Pr;
            }),
            (Pr.toDegrees = function(t) {
              return (180 * t) / Math.PI;
            }),
            (Pr.normalize = function(t) {
              for (; t > Math.PI; ) t -= Pr.PI_TIMES_2;
              for (; t <= -Math.PI; ) t += Pr.PI_TIMES_2;
              return t;
            }),
            (Pr.angle = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return Math.atan2(t.y, t.x);
              }
              if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1],
                  n = r.x - e.x,
                  i = r.y - e.y;
                return Math.atan2(i, n);
              }
            }),
            (Pr.isAcute = function(t, e, r) {
              var n = t.x - e.x,
                i = t.y - e.y;
              return n * (r.x - e.x) + i * (r.y - e.y) > 0;
            }),
            (Pr.isObtuse = function(t, e, r) {
              var n = t.x - e.x,
                i = t.y - e.y;
              return n * (r.x - e.x) + i * (r.y - e.y) < 0;
            }),
            (Pr.interiorAngle = function(t, e, r) {
              var n = Pr.angle(e, t),
                i = Pr.angle(e, r);
              return Math.abs(i - n);
            }),
            (Pr.normalizePositive = function(t) {
              if (t < 0) {
                for (; t < 0; ) t += Pr.PI_TIMES_2;
                t >= Pr.PI_TIMES_2 && (t = 0);
              } else {
                for (; t >= Pr.PI_TIMES_2; ) t -= Pr.PI_TIMES_2;
                t < 0 && (t = 0);
              }
              return t;
            }),
            (Pr.angleBetween = function(t, e, r) {
              var n = Pr.angle(e, t),
                i = Pr.angle(e, r);
              return Pr.diff(n, i);
            }),
            (Pr.diff = function(t, e) {
              var r = null;
              return (
                (r = t < e ? e - t : t - e) > Math.PI && (r = 2 * Math.PI - r),
                r
              );
            }),
            (Pr.toRadians = function(t) {
              return (t * Math.PI) / 180;
            }),
            (Pr.getTurn = function(t, e) {
              var r = Math.sin(e - t);
              return r > 0
                ? Pr.COUNTERCLOCKWISE
                : r < 0
                ? Pr.CLOCKWISE
                : Pr.NONE;
            }),
            (Pr.angleBetweenOriented = function(t, e, r) {
              var n = Pr.angle(e, t),
                i = Pr.angle(e, r) - n;
              return i <= -Math.PI
                ? i + Pr.PI_TIMES_2
                : i > Math.PI
                ? i - Pr.PI_TIMES_2
                : i;
            }),
            (Or.PI_TIMES_2.get = function() {
              return 2 * Math.PI;
            }),
            (Or.PI_OVER_2.get = function() {
              return Math.PI / 2;
            }),
            (Or.PI_OVER_4.get = function() {
              return Math.PI / 4;
            }),
            (Or.COUNTERCLOCKWISE.get = function() {
              return at.COUNTERCLOCKWISE;
            }),
            (Or.CLOCKWISE.get = function() {
              return at.CLOCKWISE;
            }),
            (Or.NONE.get = function() {
              return at.COLLINEAR;
            }),
            Object.defineProperties(Pr, Or);
          var Lr = function t() {
              (this._maxCurveSegmentError = 0),
                (this._filletAngleQuantum = null),
                (this._closingSegLengthFactor = 1),
                (this._segList = null),
                (this._distance = 0),
                (this._precisionModel = null),
                (this._bufParams = null),
                (this._li = null),
                (this._s0 = null),
                (this._s1 = null),
                (this._s2 = null),
                (this._seg0 = new dr()),
                (this._seg1 = new dr()),
                (this._offset0 = new dr()),
                (this._offset1 = new dr()),
                (this._side = 0),
                (this._hasNarrowConcaveAngle = !1);
              var e = arguments[0],
                r = arguments[1],
                n = arguments[2];
              (this._precisionModel = e),
                (this._bufParams = r),
                (this._li = new it()),
                (this._filletAngleQuantum =
                  Math.PI / 2 / r.getQuadrantSegments()),
                r.getQuadrantSegments() >= 8 &&
                  r.getJoinStyle() === Ir.JOIN_ROUND &&
                  (this._closingSegLengthFactor = t.MAX_CLOSING_SEG_LEN_FACTOR),
                this.init(n);
            },
            Tr = {
              OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: !0 },
              INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: !0 },
              CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: !0 },
              MAX_CLOSING_SEG_LEN_FACTOR: { configurable: !0 }
            };
          (Lr.prototype.addNextSegment = function(t, e) {
            if (
              ((this._s0 = this._s1),
              (this._s1 = this._s2),
              (this._s2 = t),
              this._seg0.setCoordinates(this._s0, this._s1),
              this.computeOffsetSegment(
                this._seg0,
                this._side,
                this._distance,
                this._offset0
              ),
              this._seg1.setCoordinates(this._s1, this._s2),
              this.computeOffsetSegment(
                this._seg1,
                this._side,
                this._distance,
                this._offset1
              ),
              this._s1.equals(this._s2))
            )
              return null;
            var r = at.computeOrientation(this._s0, this._s1, this._s2),
              n =
                (r === at.CLOCKWISE && this._side === Ne.LEFT) ||
                (r === at.COUNTERCLOCKWISE && this._side === Ne.RIGHT);
            0 === r
              ? this.addCollinear(e)
              : n
              ? this.addOutsideTurn(r, e)
              : this.addInsideTurn(r, e);
          }),
            (Lr.prototype.addLineEndCap = function(t, e) {
              var r = new dr(t, e),
                n = new dr();
              this.computeOffsetSegment(r, Ne.LEFT, this._distance, n);
              var i = new dr();
              this.computeOffsetSegment(r, Ne.RIGHT, this._distance, i);
              var o = e.x - t.x,
                s = e.y - t.y,
                a = Math.atan2(s, o);
              switch (this._bufParams.getEndCapStyle()) {
                case Ir.CAP_ROUND:
                  this._segList.addPt(n.p1),
                    this.addFilletArc(
                      e,
                      a + Math.PI / 2,
                      a - Math.PI / 2,
                      at.CLOCKWISE,
                      this._distance
                    ),
                    this._segList.addPt(i.p1);
                  break;
                case Ir.CAP_FLAT:
                  this._segList.addPt(n.p1), this._segList.addPt(i.p1);
                  break;
                case Ir.CAP_SQUARE:
                  var l = new w();
                  (l.x = Math.abs(this._distance) * Math.cos(a)),
                    (l.y = Math.abs(this._distance) * Math.sin(a));
                  var u = new w(n.p1.x + l.x, n.p1.y + l.y),
                    h = new w(i.p1.x + l.x, i.p1.y + l.y);
                  this._segList.addPt(u), this._segList.addPt(h);
              }
            }),
            (Lr.prototype.getCoordinates = function() {
              return this._segList.getCoordinates();
            }),
            (Lr.prototype.addMitreJoin = function(t, e, r, n) {
              var i = !0,
                o = null;
              try {
                (o = W.intersection(e.p0, e.p1, r.p0, r.p1)),
                  (n <= 0 ? 1 : o.distance(t) / Math.abs(n)) >
                    this._bufParams.getMitreLimit() && (i = !1);
              } catch (t) {
                if (!(t instanceof z)) throw t;
                (o = new w(0, 0)), (i = !1);
              }
              i
                ? this._segList.addPt(o)
                : this.addLimitedMitreJoin(
                    e,
                    r,
                    n,
                    this._bufParams.getMitreLimit()
                  );
            }),
            (Lr.prototype.addFilletCorner = function(t, e, r, n, i) {
              var o = e.x - t.x,
                s = e.y - t.y,
                a = Math.atan2(s, o),
                l = r.x - t.x,
                u = r.y - t.y,
                h = Math.atan2(u, l);
              n === at.CLOCKWISE
                ? a <= h && (a += 2 * Math.PI)
                : a >= h && (a -= 2 * Math.PI),
                this._segList.addPt(e),
                this.addFilletArc(t, a, h, n, i),
                this._segList.addPt(r);
            }),
            (Lr.prototype.addOutsideTurn = function(t, e) {
              if (
                this._offset0.p1.distance(this._offset1.p0) <
                this._distance * Lr.OFFSET_SEGMENT_SEPARATION_FACTOR
              )
                return this._segList.addPt(this._offset0.p1), null;
              this._bufParams.getJoinStyle() === Ir.JOIN_MITRE
                ? this.addMitreJoin(
                    this._s1,
                    this._offset0,
                    this._offset1,
                    this._distance
                  )
                : this._bufParams.getJoinStyle() === Ir.JOIN_BEVEL
                ? this.addBevelJoin(this._offset0, this._offset1)
                : (e && this._segList.addPt(this._offset0.p1),
                  this.addFilletCorner(
                    this._s1,
                    this._offset0.p1,
                    this._offset1.p0,
                    t,
                    this._distance
                  ),
                  this._segList.addPt(this._offset1.p0));
            }),
            (Lr.prototype.createSquare = function(t) {
              this._segList.addPt(
                new w(t.x + this._distance, t.y + this._distance)
              ),
                this._segList.addPt(
                  new w(t.x + this._distance, t.y - this._distance)
                ),
                this._segList.addPt(
                  new w(t.x - this._distance, t.y - this._distance)
                ),
                this._segList.addPt(
                  new w(t.x - this._distance, t.y + this._distance)
                ),
                this._segList.closeRing();
            }),
            (Lr.prototype.addSegments = function(t, e) {
              this._segList.addPts(t, e);
            }),
            (Lr.prototype.addFirstSegment = function() {
              this._segList.addPt(this._offset1.p0);
            }),
            (Lr.prototype.addLastSegment = function() {
              this._segList.addPt(this._offset1.p1);
            }),
            (Lr.prototype.initSideSegments = function(t, e, r) {
              (this._s1 = t),
                (this._s2 = e),
                (this._side = r),
                this._seg1.setCoordinates(t, e),
                this.computeOffsetSegment(
                  this._seg1,
                  r,
                  this._distance,
                  this._offset1
                );
            }),
            (Lr.prototype.addLimitedMitreJoin = function(t, e, r, n) {
              var i = this._seg0.p1,
                o = Pr.angle(i, this._seg0.p0),
                s =
                  Pr.angleBetweenOriented(this._seg0.p0, i, this._seg1.p1) / 2,
                a = Pr.normalize(o + s),
                l = Pr.normalize(a + Math.PI),
                u = n * r,
                h = r - u * Math.abs(Math.sin(s)),
                c = i.x + u * Math.cos(l),
                p = i.y + u * Math.sin(l),
                f = new w(c, p),
                d = new dr(i, f),
                y = d.pointAlongOffset(1, h),
                g = d.pointAlongOffset(1, -h);
              this._side === Ne.LEFT
                ? (this._segList.addPt(y), this._segList.addPt(g))
                : (this._segList.addPt(g), this._segList.addPt(y));
            }),
            (Lr.prototype.computeOffsetSegment = function(t, e, r, n) {
              var i = e === Ne.LEFT ? 1 : -1,
                o = t.p1.x - t.p0.x,
                s = t.p1.y - t.p0.y,
                a = Math.sqrt(o * o + s * s),
                l = (i * r * o) / a,
                u = (i * r * s) / a;
              (n.p0.x = t.p0.x - u),
                (n.p0.y = t.p0.y + l),
                (n.p1.x = t.p1.x - u),
                (n.p1.y = t.p1.y + l);
            }),
            (Lr.prototype.addFilletArc = function(t, e, r, n, i) {
              var o = n === at.CLOCKWISE ? -1 : 1,
                s = Math.abs(e - r),
                a = Math.trunc(s / this._filletAngleQuantum + 0.5);
              if (a < 1) return null;
              for (var l = s / a, u = 0, h = new w(); u < s; ) {
                var c = e + o * u;
                (h.x = t.x + i * Math.cos(c)),
                  (h.y = t.y + i * Math.sin(c)),
                  this._segList.addPt(h),
                  (u += l);
              }
            }),
            (Lr.prototype.addInsideTurn = function(t, e) {
              if (
                (this._li.computeIntersection(
                  this._offset0.p0,
                  this._offset0.p1,
                  this._offset1.p0,
                  this._offset1.p1
                ),
                this._li.hasIntersection())
              )
                this._segList.addPt(this._li.getIntersection(0));
              else if (
                ((this._hasNarrowConcaveAngle = !0),
                this._offset0.p1.distance(this._offset1.p0) <
                  this._distance * Lr.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)
              )
                this._segList.addPt(this._offset0.p1);
              else {
                if (
                  (this._segList.addPt(this._offset0.p1),
                  this._closingSegLengthFactor > 0)
                ) {
                  var r = new w(
                    (this._closingSegLengthFactor * this._offset0.p1.x +
                      this._s1.x) /
                      (this._closingSegLengthFactor + 1),
                    (this._closingSegLengthFactor * this._offset0.p1.y +
                      this._s1.y) /
                      (this._closingSegLengthFactor + 1)
                  );
                  this._segList.addPt(r);
                  var n = new w(
                    (this._closingSegLengthFactor * this._offset1.p0.x +
                      this._s1.x) /
                      (this._closingSegLengthFactor + 1),
                    (this._closingSegLengthFactor * this._offset1.p0.y +
                      this._s1.y) /
                      (this._closingSegLengthFactor + 1)
                  );
                  this._segList.addPt(n);
                } else this._segList.addPt(this._s1);
                this._segList.addPt(this._offset1.p0);
              }
            }),
            (Lr.prototype.createCircle = function(t) {
              var e = new w(t.x + this._distance, t.y);
              this._segList.addPt(e),
                this.addFilletArc(t, 0, 2 * Math.PI, -1, this._distance),
                this._segList.closeRing();
            }),
            (Lr.prototype.addBevelJoin = function(t, e) {
              this._segList.addPt(t.p1), this._segList.addPt(e.p0);
            }),
            (Lr.prototype.init = function(t) {
              (this._distance = t),
                (this._maxCurveSegmentError =
                  t * (1 - Math.cos(this._filletAngleQuantum / 2))),
                (this._segList = new Er()),
                this._segList.setPrecisionModel(this._precisionModel),
                this._segList.setMinimumVertexDistance(
                  t * Lr.CURVE_VERTEX_SNAP_DISTANCE_FACTOR
                );
            }),
            (Lr.prototype.addCollinear = function(t) {
              this._li.computeIntersection(
                this._s0,
                this._s1,
                this._s1,
                this._s2
              ),
                this._li.getIntersectionNum() >= 2 &&
                  (this._bufParams.getJoinStyle() === Ir.JOIN_BEVEL ||
                  this._bufParams.getJoinStyle() === Ir.JOIN_MITRE
                    ? (t && this._segList.addPt(this._offset0.p1),
                      this._segList.addPt(this._offset1.p0))
                    : this.addFilletCorner(
                        this._s1,
                        this._offset0.p1,
                        this._offset1.p0,
                        at.CLOCKWISE,
                        this._distance
                      ));
            }),
            (Lr.prototype.closeRing = function() {
              this._segList.closeRing();
            }),
            (Lr.prototype.hasNarrowConcaveAngle = function() {
              return this._hasNarrowConcaveAngle;
            }),
            (Lr.prototype.interfaces_ = function() {
              return [];
            }),
            (Lr.prototype.getClass = function() {
              return Lr;
            }),
            (Tr.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function() {
              return 0.001;
            }),
            (Tr.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function() {
              return 0.001;
            }),
            (Tr.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function() {
              return 1e-6;
            }),
            (Tr.MAX_CLOSING_SEG_LEN_FACTOR.get = function() {
              return 80;
            }),
            Object.defineProperties(Lr, Tr);
          var Ar = function() {
            (this._distance = 0),
              (this._precisionModel = null),
              (this._bufParams = null);
            var t = arguments[0],
              e = arguments[1];
            (this._precisionModel = t), (this._bufParams = e);
          };
          (Ar.prototype.getOffsetCurve = function(t, e) {
            if (((this._distance = e), 0 === e)) return null;
            var r = e < 0,
              n = Math.abs(e),
              i = this.getSegGen(n);
            t.length <= 1
              ? this.computePointCurve(t[0], i)
              : this.computeOffsetCurve(t, r, i);
            var o = i.getCoordinates();
            return r && Ct.reverse(o), o;
          }),
            (Ar.prototype.computeSingleSidedBufferCurve = function(t, e, r) {
              var n = this.simplifyTolerance(this._distance);
              if (e) {
                r.addSegments(t, !0);
                var i = Nr.simplify(t, -n),
                  o = i.length - 1;
                r.initSideSegments(i[o], i[o - 1], Ne.LEFT),
                  r.addFirstSegment();
                for (var s = o - 2; s >= 0; s--) r.addNextSegment(i[s], !0);
              } else {
                r.addSegments(t, !1);
                var a = Nr.simplify(t, n),
                  l = a.length - 1;
                r.initSideSegments(a[0], a[1], Ne.LEFT), r.addFirstSegment();
                for (var u = 2; u <= l; u++) r.addNextSegment(a[u], !0);
              }
              r.addLastSegment(), r.closeRing();
            }),
            (Ar.prototype.computeRingBufferCurve = function(t, e, r) {
              var n = this.simplifyTolerance(this._distance);
              e === Ne.RIGHT && (n = -n);
              var i = Nr.simplify(t, n),
                o = i.length - 1;
              r.initSideSegments(i[o - 1], i[0], e);
              for (var s = 1; s <= o; s++) {
                var a = 1 !== s;
                r.addNextSegment(i[s], a);
              }
              r.closeRing();
            }),
            (Ar.prototype.computeLineBufferCurve = function(t, e) {
              var r = this.simplifyTolerance(this._distance),
                n = Nr.simplify(t, r),
                i = n.length - 1;
              e.initSideSegments(n[0], n[1], Ne.LEFT);
              for (var o = 2; o <= i; o++) e.addNextSegment(n[o], !0);
              e.addLastSegment(), e.addLineEndCap(n[i - 1], n[i]);
              var s = Nr.simplify(t, -r),
                a = s.length - 1;
              e.initSideSegments(s[a], s[a - 1], Ne.LEFT);
              for (var l = a - 2; l >= 0; l--) e.addNextSegment(s[l], !0);
              e.addLastSegment(), e.addLineEndCap(s[1], s[0]), e.closeRing();
            }),
            (Ar.prototype.computePointCurve = function(t, e) {
              switch (this._bufParams.getEndCapStyle()) {
                case Ir.CAP_ROUND:
                  e.createCircle(t);
                  break;
                case Ir.CAP_SQUARE:
                  e.createSquare(t);
              }
            }),
            (Ar.prototype.getLineCurve = function(t, e) {
              if (
                ((this._distance = e),
                e < 0 && !this._bufParams.isSingleSided())
              )
                return null;
              if (0 === e) return null;
              var r = Math.abs(e),
                n = this.getSegGen(r);
              if (t.length <= 1) this.computePointCurve(t[0], n);
              else if (this._bufParams.isSingleSided()) {
                var i = e < 0;
                this.computeSingleSidedBufferCurve(t, i, n);
              } else this.computeLineBufferCurve(t, n);
              return n.getCoordinates();
            }),
            (Ar.prototype.getBufferParameters = function() {
              return this._bufParams;
            }),
            (Ar.prototype.simplifyTolerance = function(t) {
              return t * this._bufParams.getSimplifyFactor();
            }),
            (Ar.prototype.getRingCurve = function(t, e, r) {
              if (((this._distance = r), t.length <= 2))
                return this.getLineCurve(t, r);
              if (0 === r) return Ar.copyCoordinates(t);
              var n = this.getSegGen(r);
              return this.computeRingBufferCurve(t, e, n), n.getCoordinates();
            }),
            (Ar.prototype.computeOffsetCurve = function(t, e, r) {
              var n = this.simplifyTolerance(this._distance);
              if (e) {
                var i = Nr.simplify(t, -n),
                  o = i.length - 1;
                r.initSideSegments(i[o], i[o - 1], Ne.LEFT),
                  r.addFirstSegment();
                for (var s = o - 2; s >= 0; s--) r.addNextSegment(i[s], !0);
              } else {
                var a = Nr.simplify(t, n),
                  l = a.length - 1;
                r.initSideSegments(a[0], a[1], Ne.LEFT), r.addFirstSegment();
                for (var u = 2; u <= l; u++) r.addNextSegment(a[u], !0);
              }
              r.addLastSegment();
            }),
            (Ar.prototype.getSegGen = function(t) {
              return new Lr(this._precisionModel, this._bufParams, t);
            }),
            (Ar.prototype.interfaces_ = function() {
              return [];
            }),
            (Ar.prototype.getClass = function() {
              return Ar;
            }),
            (Ar.copyCoordinates = function(t) {
              for (
                var e = new Array(t.length).fill(null), r = 0;
                r < e.length;
                r++
              )
                e[r] = new w(t[r]);
              return e;
            });
          var Rr = function() {
              (this._subgraphs = null),
                (this._seg = new dr()),
                (this._cga = new at());
              var t = arguments[0];
              this._subgraphs = t;
            },
            Fr = { DepthSegment: { configurable: !0 } };
          (Rr.prototype.findStabbedSegments = function() {
            if (1 === arguments.length) {
              for (
                var t = arguments[0],
                  e = new It(),
                  r = this._subgraphs.iterator();
                r.hasNext();

              ) {
                var n = r.next(),
                  i = n.getEnvelope();
                t.y < i.getMinY() ||
                  t.y > i.getMaxY() ||
                  this.findStabbedSegments(t, n.getDirectedEdges(), e);
              }
              return e;
            }
            if (3 === arguments.length)
              if (
                O(arguments[2], St) &&
                arguments[0] instanceof w &&
                arguments[1] instanceof qe
              ) {
                for (
                  var o = arguments[0],
                    s = arguments[1],
                    a = arguments[2],
                    l = s.getEdge().getCoordinates(),
                    u = 0;
                  u < l.length - 1;
                  u++
                )
                  if (
                    ((this._seg.p0 = l[u]),
                    (this._seg.p1 = l[u + 1]),
                    this._seg.p0.y > this._seg.p1.y && this._seg.reverse(),
                    !(
                      Math.max(this._seg.p0.x, this._seg.p1.x) < o.x ||
                      this._seg.isHorizontal() ||
                      o.y < this._seg.p0.y ||
                      o.y > this._seg.p1.y ||
                      at.computeOrientation(this._seg.p0, this._seg.p1, o) ===
                        at.RIGHT
                    ))
                  ) {
                    var h = s.getDepth(Ne.LEFT);
                    this._seg.p0.equals(l[u]) || (h = s.getDepth(Ne.RIGHT));
                    var c = new Dr(this._seg, h);
                    a.add(c);
                  }
              } else if (
                O(arguments[2], St) &&
                arguments[0] instanceof w &&
                O(arguments[1], St)
              )
                for (
                  var p = arguments[0],
                    f = arguments[2],
                    d = arguments[1].iterator();
                  d.hasNext();

                ) {
                  var y = d.next();
                  y.isForward() && this.findStabbedSegments(p, y, f);
                }
          }),
            (Rr.prototype.getDepth = function(t) {
              var e = this.findStabbedSegments(t);
              return 0 === e.size() ? 0 : Ke.min(e)._leftDepth;
            }),
            (Rr.prototype.interfaces_ = function() {
              return [];
            }),
            (Rr.prototype.getClass = function() {
              return Rr;
            }),
            (Fr.DepthSegment.get = function() {
              return Dr;
            }),
            Object.defineProperties(Rr, Fr);
          var Dr = function() {
            (this._upwardSeg = null), (this._leftDepth = null);
            var t = arguments[0],
              e = arguments[1];
            (this._upwardSeg = new dr(t)), (this._leftDepth = e);
          };
          (Dr.prototype.compareTo = function(t) {
            var e = t;
            if (this._upwardSeg.minX() >= e._upwardSeg.maxX()) return 1;
            if (this._upwardSeg.maxX() <= e._upwardSeg.minX()) return -1;
            var r = this._upwardSeg.orientationIndex(e._upwardSeg);
            return 0 !== r ||
              0 != (r = -1 * e._upwardSeg.orientationIndex(this._upwardSeg))
              ? r
              : this._upwardSeg.compareTo(e._upwardSeg);
          }),
            (Dr.prototype.compareX = function(t, e) {
              var r = t.p0.compareTo(e.p0);
              return 0 !== r ? r : t.p1.compareTo(e.p1);
            }),
            (Dr.prototype.toString = function() {
              return this._upwardSeg.toString();
            }),
            (Dr.prototype.interfaces_ = function() {
              return [b];
            }),
            (Dr.prototype.getClass = function() {
              return Dr;
            });
          var jr = function(t, e, r) {
            (this.p0 = t || null), (this.p1 = e || null), (this.p2 = r || null);
          };
          (jr.prototype.area = function() {
            return jr.area(this.p0, this.p1, this.p2);
          }),
            (jr.prototype.signedArea = function() {
              return jr.signedArea(this.p0, this.p1, this.p2);
            }),
            (jr.prototype.interpolateZ = function(t) {
              if (null === t) throw new v("Supplied point is null.");
              return jr.interpolateZ(t, this.p0, this.p1, this.p2);
            }),
            (jr.prototype.longestSideLength = function() {
              return jr.longestSideLength(this.p0, this.p1, this.p2);
            }),
            (jr.prototype.isAcute = function() {
              return jr.isAcute(this.p0, this.p1, this.p2);
            }),
            (jr.prototype.circumcentre = function() {
              return jr.circumcentre(this.p0, this.p1, this.p2);
            }),
            (jr.prototype.area3D = function() {
              return jr.area3D(this.p0, this.p1, this.p2);
            }),
            (jr.prototype.centroid = function() {
              return jr.centroid(this.p0, this.p1, this.p2);
            }),
            (jr.prototype.inCentre = function() {
              return jr.inCentre(this.p0, this.p1, this.p2);
            }),
            (jr.prototype.interfaces_ = function() {
              return [];
            }),
            (jr.prototype.getClass = function() {
              return jr;
            }),
            (jr.area = function(t, e, r) {
              return Math.abs(
                ((r.x - t.x) * (e.y - t.y) - (e.x - t.x) * (r.y - t.y)) / 2
              );
            }),
            (jr.signedArea = function(t, e, r) {
              return (
                ((r.x - t.x) * (e.y - t.y) - (e.x - t.x) * (r.y - t.y)) / 2
              );
            }),
            (jr.det = function(t, e, r, n) {
              return t * n - e * r;
            }),
            (jr.interpolateZ = function(t, e, r, n) {
              var i = e.x,
                o = e.y,
                s = r.x - i,
                a = n.x - i,
                l = r.y - o,
                u = n.y - o,
                h = s * u - a * l,
                c = t.x - i,
                p = t.y - o,
                f = (u * c - a * p) / h,
                d = (-l * c + s * p) / h;
              return e.z + f * (r.z - e.z) + d * (n.z - e.z);
            }),
            (jr.longestSideLength = function(t, e, r) {
              var n = t.distance(e),
                i = e.distance(r),
                o = r.distance(t),
                s = n;
              return i > s && (s = i), o > s && (s = o), s;
            }),
            (jr.isAcute = function(t, e, r) {
              return (
                !!Pr.isAcute(t, e, r) &&
                !!Pr.isAcute(e, r, t) &&
                !!Pr.isAcute(r, t, e)
              );
            }),
            (jr.circumcentre = function(t, e, r) {
              var n = r.x,
                i = r.y,
                o = t.x - n,
                s = t.y - i,
                a = e.x - n,
                l = e.y - i,
                u = 2 * jr.det(o, s, a, l),
                h = jr.det(s, o * o + s * s, l, a * a + l * l),
                c = jr.det(o, o * o + s * s, a, a * a + l * l);
              return new w(n - h / u, i + c / u);
            }),
            (jr.perpendicularBisector = function(t, e) {
              var r = e.x - t.x,
                n = e.y - t.y,
                i = new W(t.x + r / 2, t.y + n / 2, 1),
                o = new W(t.x - n + r / 2, t.y + r + n / 2, 1);
              return new W(i, o);
            }),
            (jr.angleBisector = function(t, e, r) {
              var n = e.distance(t),
                i = n / (n + e.distance(r)),
                o = r.x - t.x,
                s = r.y - t.y;
              return new w(t.x + i * o, t.y + i * s);
            }),
            (jr.area3D = function(t, e, r) {
              var n = e.x - t.x,
                i = e.y - t.y,
                o = e.z - t.z,
                s = r.x - t.x,
                a = r.y - t.y,
                l = r.z - t.z,
                u = i * l - o * a,
                h = o * s - n * l,
                c = n * a - i * s,
                p = u * u + h * h + c * c;
              return Math.sqrt(p) / 2;
            }),
            (jr.centroid = function(t, e, r) {
              var n = (t.x + e.x + r.x) / 3,
                i = (t.y + e.y + r.y) / 3;
              return new w(n, i);
            }),
            (jr.inCentre = function(t, e, r) {
              var n = e.distance(r),
                i = t.distance(r),
                o = t.distance(e),
                s = n + i + o,
                a = (n * t.x + i * e.x + o * r.x) / s,
                l = (n * t.y + i * e.y + o * r.y) / s;
              return new w(a, l);
            });
          var Ur = function() {
            (this._inputGeom = null),
              (this._distance = null),
              (this._curveBuilder = null),
              (this._curveList = new It());
            var t = arguments[0],
              e = arguments[1],
              r = arguments[2];
            (this._inputGeom = t),
              (this._distance = e),
              (this._curveBuilder = r);
          };
          (Ur.prototype.addPoint = function(t) {
            if (this._distance <= 0) return null;
            var e = t.getCoordinates(),
              r = this._curveBuilder.getLineCurve(e, this._distance);
            this.addCurve(r, M.EXTERIOR, M.INTERIOR);
          }),
            (Ur.prototype.addPolygon = function(t) {
              var e = this._distance,
                r = Ne.LEFT;
              this._distance < 0 && ((e = -this._distance), (r = Ne.RIGHT));
              var n = t.getExteriorRing(),
                i = Ct.removeRepeatedPoints(n.getCoordinates());
              if (
                this._distance < 0 &&
                this.isErodedCompletely(n, this._distance)
              )
                return null;
              if (this._distance <= 0 && i.length < 3) return null;
              this.addPolygonRing(i, e, r, M.EXTERIOR, M.INTERIOR);
              for (var o = 0; o < t.getNumInteriorRing(); o++) {
                var s = t.getInteriorRingN(o),
                  a = Ct.removeRepeatedPoints(s.getCoordinates());
                (this._distance > 0 &&
                  this.isErodedCompletely(s, -this._distance)) ||
                  this.addPolygonRing(
                    a,
                    e,
                    Ne.opposite(r),
                    M.INTERIOR,
                    M.EXTERIOR
                  );
              }
            }),
            (Ur.prototype.isTriangleErodedCompletely = function(t, e) {
              var r = new jr(t[0], t[1], t[2]),
                n = r.inCentre();
              return at.distancePointLine(n, r.p0, r.p1) < Math.abs(e);
            }),
            (Ur.prototype.addLineString = function(t) {
              if (
                this._distance <= 0 &&
                !this._curveBuilder.getBufferParameters().isSingleSided()
              )
                return null;
              var e = Ct.removeRepeatedPoints(t.getCoordinates()),
                r = this._curveBuilder.getLineCurve(e, this._distance);
              this.addCurve(r, M.EXTERIOR, M.INTERIOR);
            }),
            (Ur.prototype.addCurve = function(t, e, r) {
              if (null === t || t.length < 2) return null;
              var n = new fr(t, new Te(0, M.BOUNDARY, e, r));
              this._curveList.add(n);
            }),
            (Ur.prototype.getCurves = function() {
              return this.add(this._inputGeom), this._curveList;
            }),
            (Ur.prototype.addPolygonRing = function(t, e, r, n, i) {
              if (0 === e && t.length < ee.MINIMUM_VALID_SIZE) return null;
              var o = n,
                s = i;
              t.length >= ee.MINIMUM_VALID_SIZE &&
                at.isCCW(t) &&
                ((o = i), (s = n), (r = Ne.opposite(r)));
              var a = this._curveBuilder.getRingCurve(t, r, e);
              this.addCurve(a, o, s);
            }),
            (Ur.prototype.add = function(t) {
              if (t.isEmpty()) return null;
              t instanceof Kt
                ? this.addPolygon(t)
                : t instanceof Jt
                ? this.addLineString(t)
                : t instanceof Qt
                ? this.addPoint(t)
                : (t instanceof te ||
                    t instanceof zt ||
                    t instanceof re ||
                    t instanceof qt) &&
                  this.addCollection(t);
            }),
            (Ur.prototype.isErodedCompletely = function(t, e) {
              var r = t.getCoordinates();
              if (r.length < 4) return e < 0;
              if (4 === r.length) return this.isTriangleErodedCompletely(r, e);
              var n = t.getEnvelopeInternal(),
                i = Math.min(n.getHeight(), n.getWidth());
              return e < 0 && 2 * Math.abs(e) > i;
            }),
            (Ur.prototype.addCollection = function(t) {
              for (var e = 0; e < t.getNumGeometries(); e++) {
                var r = t.getGeometryN(e);
                this.add(r);
              }
            }),
            (Ur.prototype.interfaces_ = function() {
              return [];
            }),
            (Ur.prototype.getClass = function() {
              return Ur;
            });
          var Gr = function() {};
          (Gr.prototype.locate = function(t) {}),
            (Gr.prototype.interfaces_ = function() {
              return [];
            }),
            (Gr.prototype.getClass = function() {
              return Gr;
            });
          var Br = function() {
            (this._parent = null),
              (this._atStart = null),
              (this._max = null),
              (this._index = null),
              (this._subcollectionIterator = null);
            var t = arguments[0];
            (this._parent = t),
              (this._atStart = !0),
              (this._index = 0),
              (this._max = t.getNumGeometries());
          };
          (Br.prototype.next = function() {
            if (this._atStart)
              return (
                (this._atStart = !1),
                Br.isAtomic(this._parent) && this._index++,
                this._parent
              );
            if (null !== this._subcollectionIterator) {
              if (this._subcollectionIterator.hasNext())
                return this._subcollectionIterator.next();
              this._subcollectionIterator = null;
            }
            if (this._index >= this._max) throw new n();
            var t = this._parent.getGeometryN(this._index++);
            return t instanceof qt
              ? ((this._subcollectionIterator = new Br(t)),
                this._subcollectionIterator.next())
              : t;
          }),
            (Br.prototype.remove = function() {
              throw new Error(this.getClass().getName());
            }),
            (Br.prototype.hasNext = function() {
              if (this._atStart) return !0;
              if (null !== this._subcollectionIterator) {
                if (this._subcollectionIterator.hasNext()) return !0;
                this._subcollectionIterator = null;
              }
              return !(this._index >= this._max);
            }),
            (Br.prototype.interfaces_ = function() {
              return [bt];
            }),
            (Br.prototype.getClass = function() {
              return Br;
            }),
            (Br.isAtomic = function(t) {
              return !(t instanceof qt);
            });
          var kr = function() {
            this._geom = null;
            var t = arguments[0];
            this._geom = t;
          };
          (kr.prototype.locate = function(t) {
            return kr.locate(t, this._geom);
          }),
            (kr.prototype.interfaces_ = function() {
              return [Gr];
            }),
            (kr.prototype.getClass = function() {
              return kr;
            }),
            (kr.isPointInRing = function(t, e) {
              return (
                !!e.getEnvelopeInternal().intersects(t) &&
                at.isPointInRing(t, e.getCoordinates())
              );
            }),
            (kr.containsPointInPolygon = function(t, e) {
              if (e.isEmpty()) return !1;
              var r = e.getExteriorRing();
              if (!kr.isPointInRing(t, r)) return !1;
              for (var n = 0; n < e.getNumInteriorRing(); n++) {
                var i = e.getInteriorRingN(n);
                if (kr.isPointInRing(t, i)) return !1;
              }
              return !0;
            }),
            (kr.containsPoint = function(t, e) {
              if (e instanceof Kt) return kr.containsPointInPolygon(t, e);
              if (e instanceof qt)
                for (var r = new Br(e); r.hasNext(); ) {
                  var n = r.next();
                  if (n !== e && kr.containsPoint(t, n)) return !0;
                }
              return !1;
            }),
            (kr.locate = function(t, e) {
              return e.isEmpty()
                ? M.EXTERIOR
                : kr.containsPoint(t, e)
                ? M.INTERIOR
                : M.EXTERIOR;
            });
          var qr = function() {
            (this._edgeMap = new c()),
              (this._edgeList = null),
              (this._ptInAreaLocation = [M.NONE, M.NONE]);
          };
          (qr.prototype.getNextCW = function(t) {
            this.getEdges();
            var e = this._edgeList.indexOf(t),
              r = e - 1;
            return (
              0 === e && (r = this._edgeList.size() - 1), this._edgeList.get(r)
            );
          }),
            (qr.prototype.propagateSideLabels = function(t) {
              for (var e = M.NONE, r = this.iterator(); r.hasNext(); ) {
                var n = r.next().getLabel();
                n.isArea(t) &&
                  n.getLocation(t, Ne.LEFT) !== M.NONE &&
                  (e = n.getLocation(t, Ne.LEFT));
              }
              if (e === M.NONE) return null;
              for (var i = e, o = this.iterator(); o.hasNext(); ) {
                var s = o.next(),
                  a = s.getLabel();
                if (
                  (a.getLocation(t, Ne.ON) === M.NONE &&
                    a.setLocation(t, Ne.ON, i),
                  a.isArea(t))
                ) {
                  var l = a.getLocation(t, Ne.LEFT),
                    u = a.getLocation(t, Ne.RIGHT);
                  if (u !== M.NONE) {
                    if (u !== i)
                      throw new Me("side location conflict", s.getCoordinate());
                    l === M.NONE &&
                      et.shouldNeverReachHere(
                        "found single null side (at " + s.getCoordinate() + ")"
                      ),
                      (i = l);
                  } else
                    et.isTrue(
                      a.getLocation(t, Ne.LEFT) === M.NONE,
                      "found single null side"
                    ),
                      a.setLocation(t, Ne.RIGHT, i),
                      a.setLocation(t, Ne.LEFT, i);
                }
              }
            }),
            (qr.prototype.getCoordinate = function() {
              var t = this.iterator();
              return t.hasNext() ? t.next().getCoordinate() : null;
            }),
            (qr.prototype.print = function(t) {
              V.out.println("EdgeEndStar:   " + this.getCoordinate());
              for (var e = this.iterator(); e.hasNext(); ) e.next().print(t);
            }),
            (qr.prototype.isAreaLabelsConsistent = function(t) {
              return (
                this.computeEdgeEndLabels(t.getBoundaryNodeRule()),
                this.checkAreaLabelsConsistent(0)
              );
            }),
            (qr.prototype.checkAreaLabelsConsistent = function(t) {
              var e = this.getEdges();
              if (e.size() <= 0) return !0;
              var r = e.size() - 1,
                n = e
                  .get(r)
                  .getLabel()
                  .getLocation(t, Ne.LEFT);
              et.isTrue(n !== M.NONE, "Found unlabelled area edge");
              for (var i = n, o = this.iterator(); o.hasNext(); ) {
                var s = o.next().getLabel();
                et.isTrue(s.isArea(t), "Found non-area edge");
                var a = s.getLocation(t, Ne.LEFT),
                  l = s.getLocation(t, Ne.RIGHT);
                if (a === l) return !1;
                if (l !== i) return !1;
                i = a;
              }
              return !0;
            }),
            (qr.prototype.findIndex = function(t) {
              this.iterator();
              for (var e = 0; e < this._edgeList.size(); e++)
                if (this._edgeList.get(e) === t) return e;
              return -1;
            }),
            (qr.prototype.iterator = function() {
              return this.getEdges().iterator();
            }),
            (qr.prototype.getEdges = function() {
              return (
                null === this._edgeList &&
                  (this._edgeList = new It(this._edgeMap.values())),
                this._edgeList
              );
            }),
            (qr.prototype.getLocation = function(t, e, r) {
              return (
                this._ptInAreaLocation[t] === M.NONE &&
                  (this._ptInAreaLocation[t] = kr.locate(
                    e,
                    r[t].getGeometry()
                  )),
                this._ptInAreaLocation[t]
              );
            }),
            (qr.prototype.toString = function() {
              var t = new A();
              t.append("EdgeEndStar:   " + this.getCoordinate()),
                t.append("\n");
              for (var e = this.iterator(); e.hasNext(); ) {
                var r = e.next();
                t.append(r), t.append("\n");
              }
              return t.toString();
            }),
            (qr.prototype.computeEdgeEndLabels = function(t) {
              for (var e = this.iterator(); e.hasNext(); )
                e.next().computeLabel(t);
            }),
            (qr.prototype.computeLabelling = function(t) {
              this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),
                this.propagateSideLabels(0),
                this.propagateSideLabels(1);
              for (var e = [!1, !1], r = this.iterator(); r.hasNext(); )
                for (var n = r.next().getLabel(), i = 0; i < 2; i++)
                  n.isLine(i) && n.getLocation(i) === M.BOUNDARY && (e[i] = !0);
              for (var o = this.iterator(); o.hasNext(); )
                for (var s = o.next(), a = s.getLabel(), l = 0; l < 2; l++)
                  if (a.isAnyNull(l)) {
                    var u = M.NONE;
                    if (e[l]) u = M.EXTERIOR;
                    else {
                      var h = s.getCoordinate();
                      u = this.getLocation(l, h, t);
                    }
                    a.setAllLocationsIfNull(l, u);
                  }
            }),
            (qr.prototype.getDegree = function() {
              return this._edgeMap.size();
            }),
            (qr.prototype.insertEdgeEnd = function(t, e) {
              this._edgeMap.put(t, e), (this._edgeList = null);
            }),
            (qr.prototype.interfaces_ = function() {
              return [];
            }),
            (qr.prototype.getClass = function() {
              return qr;
            });
          var zr = (function(t) {
              function e() {
                t.call(this),
                  (this._resultAreaEdgeList = null),
                  (this._label = null),
                  (this._SCANNING_FOR_INCOMING = 1),
                  (this._LINKING_TO_OUTGOING = 2);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.linkResultDirectedEdges = function() {
                  this.getResultAreaEdges();
                  for (
                    var t = null,
                      e = null,
                      r = this._SCANNING_FOR_INCOMING,
                      n = 0;
                    n < this._resultAreaEdgeList.size();
                    n++
                  ) {
                    var i = this._resultAreaEdgeList.get(n),
                      o = i.getSym();
                    if (i.getLabel().isArea())
                      switch ((null === t && i.isInResult() && (t = i), r)) {
                        case this._SCANNING_FOR_INCOMING:
                          if (!o.isInResult()) continue;
                          (e = o), (r = this._LINKING_TO_OUTGOING);
                          break;
                        case this._LINKING_TO_OUTGOING:
                          if (!i.isInResult()) continue;
                          e.setNext(i), (r = this._SCANNING_FOR_INCOMING);
                      }
                  }
                  if (r === this._LINKING_TO_OUTGOING) {
                    if (null === t)
                      throw new Me(
                        "no outgoing dirEdge found",
                        this.getCoordinate()
                      );
                    et.isTrue(
                      t.isInResult(),
                      "unable to link last incoming dirEdge"
                    ),
                      e.setNext(t);
                  }
                }),
                (e.prototype.insert = function(t) {
                  var e = t;
                  this.insertEdgeEnd(e, e);
                }),
                (e.prototype.getRightmostEdge = function() {
                  var t = this.getEdges(),
                    e = t.size();
                  if (e < 1) return null;
                  var r = t.get(0);
                  if (1 === e) return r;
                  var n = t.get(e - 1),
                    i = r.getQuadrant(),
                    o = n.getQuadrant();
                  return Ge.isNorthern(i) && Ge.isNorthern(o)
                    ? r
                    : Ge.isNorthern(i) || Ge.isNorthern(o)
                    ? 0 !== r.getDy()
                      ? r
                      : 0 !== n.getDy()
                      ? n
                      : (et.shouldNeverReachHere(
                          "found two horizontal edges incident on node"
                        ),
                        null)
                    : n;
                }),
                (e.prototype.print = function(t) {
                  V.out.println("DirectedEdgeStar: " + this.getCoordinate());
                  for (var e = this.iterator(); e.hasNext(); ) {
                    var r = e.next();
                    t.print("out "),
                      r.print(t),
                      t.println(),
                      t.print("in "),
                      r.getSym().print(t),
                      t.println();
                  }
                }),
                (e.prototype.getResultAreaEdges = function() {
                  if (null !== this._resultAreaEdgeList)
                    return this._resultAreaEdgeList;
                  this._resultAreaEdgeList = new It();
                  for (var t = this.iterator(); t.hasNext(); ) {
                    var e = t.next();
                    (e.isInResult() || e.getSym().isInResult()) &&
                      this._resultAreaEdgeList.add(e);
                  }
                  return this._resultAreaEdgeList;
                }),
                (e.prototype.updateLabelling = function(t) {
                  for (var e = this.iterator(); e.hasNext(); ) {
                    var r = e.next().getLabel();
                    r.setAllLocationsIfNull(0, t.getLocation(0)),
                      r.setAllLocationsIfNull(1, t.getLocation(1));
                  }
                }),
                (e.prototype.linkAllDirectedEdges = function() {
                  this.getEdges();
                  for (
                    var t = null, e = null, r = this._edgeList.size() - 1;
                    r >= 0;
                    r--
                  ) {
                    var n = this._edgeList.get(r),
                      i = n.getSym();
                    null === e && (e = i), null !== t && i.setNext(t), (t = n);
                  }
                  e.setNext(t);
                }),
                (e.prototype.computeDepths = function() {
                  if (1 === arguments.length) {
                    var t = arguments[0],
                      e = this.findIndex(t),
                      r = t.getDepth(Ne.LEFT),
                      n = t.getDepth(Ne.RIGHT),
                      i = this.computeDepths(e + 1, this._edgeList.size(), r);
                    if (this.computeDepths(0, e, i) !== n)
                      throw new Me("depth mismatch at " + t.getCoordinate());
                  } else if (3 === arguments.length) {
                    for (
                      var o = arguments[1], s = arguments[2], a = arguments[0];
                      a < o;
                      a++
                    ) {
                      var l = this._edgeList.get(a);
                      l.setEdgeDepths(Ne.RIGHT, s), (s = l.getDepth(Ne.LEFT));
                    }
                    return s;
                  }
                }),
                (e.prototype.mergeSymLabels = function() {
                  for (var t = this.iterator(); t.hasNext(); ) {
                    var e = t.next();
                    e.getLabel().merge(e.getSym().getLabel());
                  }
                }),
                (e.prototype.linkMinimalDirectedEdges = function(t) {
                  for (
                    var e = null,
                      r = null,
                      n = this._SCANNING_FOR_INCOMING,
                      i = this._resultAreaEdgeList.size() - 1;
                    i >= 0;
                    i--
                  ) {
                    var o = this._resultAreaEdgeList.get(i),
                      s = o.getSym();
                    switch (
                      (null === e && o.getEdgeRing() === t && (e = o), n)
                    ) {
                      case this._SCANNING_FOR_INCOMING:
                        if (s.getEdgeRing() !== t) continue;
                        (r = s), (n = this._LINKING_TO_OUTGOING);
                        break;
                      case this._LINKING_TO_OUTGOING:
                        if (o.getEdgeRing() !== t) continue;
                        r.setNextMin(o), (n = this._SCANNING_FOR_INCOMING);
                    }
                  }
                  n === this._LINKING_TO_OUTGOING &&
                    (et.isTrue(
                      null !== e,
                      "found null for first outgoing dirEdge"
                    ),
                    et.isTrue(
                      e.getEdgeRing() === t,
                      "unable to link last incoming dirEdge"
                    ),
                    r.setNextMin(e));
                }),
                (e.prototype.getOutgoingDegree = function() {
                  if (0 === arguments.length) {
                    for (var t = 0, e = this.iterator(); e.hasNext(); )
                      e.next().isInResult() && t++;
                    return t;
                  }
                  if (1 === arguments.length) {
                    for (
                      var r = arguments[0], n = 0, i = this.iterator();
                      i.hasNext();

                    )
                      i.next().getEdgeRing() === r && n++;
                    return n;
                  }
                }),
                (e.prototype.getLabel = function() {
                  return this._label;
                }),
                (e.prototype.findCoveredLineEdges = function() {
                  for (var t = M.NONE, e = this.iterator(); e.hasNext(); ) {
                    var r = e.next(),
                      n = r.getSym();
                    if (!r.isLineEdge()) {
                      if (r.isInResult()) {
                        t = M.INTERIOR;
                        break;
                      }
                      if (n.isInResult()) {
                        t = M.EXTERIOR;
                        break;
                      }
                    }
                  }
                  if (t === M.NONE) return null;
                  for (var i = t, o = this.iterator(); o.hasNext(); ) {
                    var s = o.next(),
                      a = s.getSym();
                    s.isLineEdge()
                      ? s.getEdge().setCovered(i === M.INTERIOR)
                      : (s.isInResult() && (i = M.EXTERIOR),
                        a.isInResult() && (i = M.INTERIOR));
                  }
                }),
                (e.prototype.computeLabelling = function(e) {
                  t.prototype.computeLabelling.call(this, e),
                    (this._label = new Te(M.NONE));
                  for (var r = this.iterator(); r.hasNext(); )
                    for (
                      var n = r
                          .next()
                          .getEdge()
                          .getLabel(),
                        i = 0;
                      i < 2;
                      i++
                    ) {
                      var o = n.getLocation(i);
                      (o !== M.INTERIOR && o !== M.BOUNDARY) ||
                        this._label.setLocation(i, M.INTERIOR);
                    }
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(qr),
            Vr = (function(t) {
              function e() {
                t.apply(this, arguments);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.createNode = function(t) {
                  return new je(t, new zr());
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(ze),
            Wr = function t() {
              (this._pts = null), (this._orientation = null);
              var e = arguments[0];
              (this._pts = e), (this._orientation = t.orientation(e));
            };
          (Wr.prototype.compareTo = function(t) {
            var e = t;
            return Wr.compareOriented(
              this._pts,
              this._orientation,
              e._pts,
              e._orientation
            );
          }),
            (Wr.prototype.interfaces_ = function() {
              return [b];
            }),
            (Wr.prototype.getClass = function() {
              return Wr;
            }),
            (Wr.orientation = function(t) {
              return 1 === Ct.increasingDirection(t);
            }),
            (Wr.compareOriented = function(t, e, r, n) {
              for (
                var i = e ? 1 : -1,
                  o = n ? 1 : -1,
                  s = e ? t.length : -1,
                  a = n ? r.length : -1,
                  l = e ? 0 : t.length - 1,
                  u = n ? 0 : r.length - 1;
                ;

              ) {
                var h = t[l].compareTo(r[u]);
                if (0 !== h) return h;
                var c = (l += i) === s,
                  p = (u += o) === a;
                if (c && !p) return -1;
                if (!c && p) return 1;
                if (c && p) return 0;
              }
            });
          var Xr = function() {
            (this._edges = new It()), (this._ocaMap = new c());
          };
          (Xr.prototype.print = function(t) {
            t.print("MULTILINESTRING ( ");
            for (var e = 0; e < this._edges.size(); e++) {
              var r = this._edges.get(e);
              e > 0 && t.print(","), t.print("(");
              for (var n = r.getCoordinates(), i = 0; i < n.length; i++)
                i > 0 && t.print(","), t.print(n[i].x + " " + n[i].y);
              t.println(")");
            }
            t.print(")  ");
          }),
            (Xr.prototype.addAll = function(t) {
              for (var e = t.iterator(); e.hasNext(); ) this.add(e.next());
            }),
            (Xr.prototype.findEdgeIndex = function(t) {
              for (var e = 0; e < this._edges.size(); e++)
                if (this._edges.get(e).equals(t)) return e;
              return -1;
            }),
            (Xr.prototype.iterator = function() {
              return this._edges.iterator();
            }),
            (Xr.prototype.getEdges = function() {
              return this._edges;
            }),
            (Xr.prototype.get = function(t) {
              return this._edges.get(t);
            }),
            (Xr.prototype.findEqualEdge = function(t) {
              var e = new Wr(t.getCoordinates());
              return this._ocaMap.get(e);
            }),
            (Xr.prototype.add = function(t) {
              this._edges.add(t);
              var e = new Wr(t.getCoordinates());
              this._ocaMap.put(e, t);
            }),
            (Xr.prototype.interfaces_ = function() {
              return [];
            }),
            (Xr.prototype.getClass = function() {
              return Xr;
            });
          var Yr = function() {};
          (Yr.prototype.processIntersections = function(t, e, r, n) {}),
            (Yr.prototype.isDone = function() {}),
            (Yr.prototype.interfaces_ = function() {
              return [];
            }),
            (Yr.prototype.getClass = function() {
              return Yr;
            });
          var Hr = function() {
            (this._hasIntersection = !1),
              (this._hasProper = !1),
              (this._hasProperInterior = !1),
              (this._hasInterior = !1),
              (this._properIntersectionPoint = null),
              (this._li = null),
              (this._isSelfIntersection = null),
              (this.numIntersections = 0),
              (this.numInteriorIntersections = 0),
              (this.numProperIntersections = 0),
              (this.numTests = 0);
            var t = arguments[0];
            this._li = t;
          };
          (Hr.prototype.isTrivialIntersection = function(t, e, r, n) {
            if (t === r && 1 === this._li.getIntersectionNum()) {
              if (Hr.isAdjacentSegments(e, n)) return !0;
              if (t.isClosed()) {
                var i = t.size() - 1;
                if ((0 === e && n === i) || (0 === n && e === i)) return !0;
              }
            }
            return !1;
          }),
            (Hr.prototype.getProperIntersectionPoint = function() {
              return this._properIntersectionPoint;
            }),
            (Hr.prototype.hasProperInteriorIntersection = function() {
              return this._hasProperInterior;
            }),
            (Hr.prototype.getLineIntersector = function() {
              return this._li;
            }),
            (Hr.prototype.hasProperIntersection = function() {
              return this._hasProper;
            }),
            (Hr.prototype.processIntersections = function(t, e, r, n) {
              if (t === r && e === n) return null;
              this.numTests++;
              var i = t.getCoordinates()[e],
                o = t.getCoordinates()[e + 1],
                s = r.getCoordinates()[n],
                a = r.getCoordinates()[n + 1];
              this._li.computeIntersection(i, o, s, a),
                this._li.hasIntersection() &&
                  (this.numIntersections++,
                  this._li.isInteriorIntersection() &&
                    (this.numInteriorIntersections++, (this._hasInterior = !0)),
                  this.isTrivialIntersection(t, e, r, n) ||
                    ((this._hasIntersection = !0),
                    t.addIntersections(this._li, e, 0),
                    r.addIntersections(this._li, n, 1),
                    this._li.isProper() &&
                      (this.numProperIntersections++,
                      (this._hasProper = !0),
                      (this._hasProperInterior = !0))));
            }),
            (Hr.prototype.hasIntersection = function() {
              return this._hasIntersection;
            }),
            (Hr.prototype.isDone = function() {
              return !1;
            }),
            (Hr.prototype.hasInteriorIntersection = function() {
              return this._hasInterior;
            }),
            (Hr.prototype.interfaces_ = function() {
              return [Yr];
            }),
            (Hr.prototype.getClass = function() {
              return Hr;
            }),
            (Hr.isAdjacentSegments = function(t, e) {
              return 1 === Math.abs(t - e);
            });
          var Jr = function() {
            (this.coord = null), (this.segmentIndex = null), (this.dist = null);
            var t = arguments[0],
              e = arguments[1],
              r = arguments[2];
            (this.coord = new w(t)), (this.segmentIndex = e), (this.dist = r);
          };
          (Jr.prototype.getSegmentIndex = function() {
            return this.segmentIndex;
          }),
            (Jr.prototype.getCoordinate = function() {
              return this.coord;
            }),
            (Jr.prototype.print = function(t) {
              t.print(this.coord),
                t.print(" seg # = " + this.segmentIndex),
                t.println(" dist = " + this.dist);
            }),
            (Jr.prototype.compareTo = function(t) {
              var e = t;
              return this.compare(e.segmentIndex, e.dist);
            }),
            (Jr.prototype.isEndPoint = function(t) {
              return (
                (0 === this.segmentIndex && 0 === this.dist) ||
                this.segmentIndex === t
              );
            }),
            (Jr.prototype.toString = function() {
              return (
                this.coord +
                " seg # = " +
                this.segmentIndex +
                " dist = " +
                this.dist
              );
            }),
            (Jr.prototype.getDistance = function() {
              return this.dist;
            }),
            (Jr.prototype.compare = function(t, e) {
              return this.segmentIndex < t
                ? -1
                : this.segmentIndex > t
                ? 1
                : this.dist < e
                ? -1
                : this.dist > e
                ? 1
                : 0;
            }),
            (Jr.prototype.interfaces_ = function() {
              return [b];
            }),
            (Jr.prototype.getClass = function() {
              return Jr;
            });
          var $r = function() {
            (this._nodeMap = new c()), (this.edge = null);
            var t = arguments[0];
            this.edge = t;
          };
          ($r.prototype.print = function(t) {
            t.println("Intersections:");
            for (var e = this.iterator(); e.hasNext(); ) e.next().print(t);
          }),
            ($r.prototype.iterator = function() {
              return this._nodeMap.values().iterator();
            }),
            ($r.prototype.addSplitEdges = function(t) {
              this.addEndpoints();
              for (var e = this.iterator(), r = e.next(); e.hasNext(); ) {
                var n = e.next(),
                  i = this.createSplitEdge(r, n);
                t.add(i), (r = n);
              }
            }),
            ($r.prototype.addEndpoints = function() {
              var t = this.edge.pts.length - 1;
              this.add(this.edge.pts[0], 0, 0),
                this.add(this.edge.pts[t], t, 0);
            }),
            ($r.prototype.createSplitEdge = function(t, e) {
              var r = e.segmentIndex - t.segmentIndex + 2,
                n = this.edge.pts[e.segmentIndex],
                i = e.dist > 0 || !e.coord.equals2D(n);
              i || r--;
              var o = new Array(r).fill(null),
                s = 0;
              o[s++] = new w(t.coord);
              for (var a = t.segmentIndex + 1; a <= e.segmentIndex; a++)
                o[s++] = this.edge.pts[a];
              return i && (o[s] = e.coord), new en(o, new Te(this.edge._label));
            }),
            ($r.prototype.add = function(t, e, r) {
              var n = new Jr(t, e, r),
                i = this._nodeMap.get(n);
              return null !== i ? i : (this._nodeMap.put(n, n), n);
            }),
            ($r.prototype.isIntersection = function(t) {
              for (var e = this.iterator(); e.hasNext(); )
                if (e.next().coord.equals(t)) return !0;
              return !1;
            }),
            ($r.prototype.interfaces_ = function() {
              return [];
            }),
            ($r.prototype.getClass = function() {
              return $r;
            });
          var Qr = function() {};
          (Qr.prototype.getChainStartIndices = function(t) {
            var e = 0,
              r = new It();
            r.add(new R(e));
            do {
              var n = this.findChainEnd(t, e);
              r.add(new R(n)), (e = n);
            } while (e < t.length - 1);
            return Qr.toIntArray(r);
          }),
            (Qr.prototype.findChainEnd = function(t, e) {
              for (
                var r = Ge.quadrant(t[e], t[e + 1]), n = e + 1;
                n < t.length && Ge.quadrant(t[n - 1], t[n]) === r;

              )
                n++;
              return n - 1;
            }),
            (Qr.prototype.interfaces_ = function() {
              return [];
            }),
            (Qr.prototype.getClass = function() {
              return Qr;
            }),
            (Qr.toIntArray = function(t) {
              for (
                var e = new Array(t.size()).fill(null), r = 0;
                r < e.length;
                r++
              )
                e[r] = t.get(r).intValue();
              return e;
            });
          var Zr = function() {
            (this.e = null),
              (this.pts = null),
              (this.startIndex = null),
              (this.env1 = new X()),
              (this.env2 = new X());
            var t = arguments[0];
            (this.e = t), (this.pts = t.getCoordinates());
            var e = new Qr();
            this.startIndex = e.getChainStartIndices(this.pts);
          };
          (Zr.prototype.getCoordinates = function() {
            return this.pts;
          }),
            (Zr.prototype.getMaxX = function(t) {
              var e = this.pts[this.startIndex[t]].x,
                r = this.pts[this.startIndex[t + 1]].x;
              return e > r ? e : r;
            }),
            (Zr.prototype.getMinX = function(t) {
              var e = this.pts[this.startIndex[t]].x,
                r = this.pts[this.startIndex[t + 1]].x;
              return e < r ? e : r;
            }),
            (Zr.prototype.computeIntersectsForChain = function() {
              if (4 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1],
                  r = arguments[2],
                  n = arguments[3];
                this.computeIntersectsForChain(
                  this.startIndex[t],
                  this.startIndex[t + 1],
                  e,
                  e.startIndex[r],
                  e.startIndex[r + 1],
                  n
                );
              } else if (6 === arguments.length) {
                var i = arguments[0],
                  o = arguments[1],
                  s = arguments[2],
                  a = arguments[3],
                  l = arguments[4],
                  u = arguments[5],
                  h = this.pts[i],
                  c = this.pts[o],
                  p = s.pts[a],
                  f = s.pts[l];
                if (o - i == 1 && l - a == 1)
                  return u.addIntersections(this.e, i, s.e, a), null;
                if (
                  (this.env1.init(h, c),
                  this.env2.init(p, f),
                  !this.env1.intersects(this.env2))
                )
                  return null;
                var d = Math.trunc((i + o) / 2),
                  y = Math.trunc((a + l) / 2);
                i < d &&
                  (a < y && this.computeIntersectsForChain(i, d, s, a, y, u),
                  y < l && this.computeIntersectsForChain(i, d, s, y, l, u)),
                  d < o &&
                    (a < y && this.computeIntersectsForChain(d, o, s, a, y, u),
                    y < l && this.computeIntersectsForChain(d, o, s, y, l, u));
              }
            }),
            (Zr.prototype.getStartIndexes = function() {
              return this.startIndex;
            }),
            (Zr.prototype.computeIntersects = function(t, e) {
              for (var r = 0; r < this.startIndex.length - 1; r++)
                for (var n = 0; n < t.startIndex.length - 1; n++)
                  this.computeIntersectsForChain(r, t, n, e);
            }),
            (Zr.prototype.interfaces_ = function() {
              return [];
            }),
            (Zr.prototype.getClass = function() {
              return Zr;
            });
          var Kr = function t() {
              this._depth = Array(2)
                .fill()
                .map(function() {
                  return Array(3);
                });
              for (var e = 0; e < 2; e++)
                for (var r = 0; r < 3; r++) this._depth[e][r] = t.NULL_VALUE;
            },
            tn = { NULL_VALUE: { configurable: !0 } };
          (Kr.prototype.getDepth = function(t, e) {
            return this._depth[t][e];
          }),
            (Kr.prototype.setDepth = function(t, e, r) {
              this._depth[t][e] = r;
            }),
            (Kr.prototype.isNull = function() {
              if (0 === arguments.length) {
                for (var t = 0; t < 2; t++)
                  for (var e = 0; e < 3; e++)
                    if (this._depth[t][e] !== Kr.NULL_VALUE) return !1;
                return !0;
              }
              if (1 === arguments.length) {
                var r = arguments[0];
                return this._depth[r][1] === Kr.NULL_VALUE;
              }
              if (2 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1];
                return this._depth[n][i] === Kr.NULL_VALUE;
              }
            }),
            (Kr.prototype.normalize = function() {
              for (var t = 0; t < 2; t++)
                if (!this.isNull(t)) {
                  var e = this._depth[t][1];
                  this._depth[t][2] < e && (e = this._depth[t][2]),
                    e < 0 && (e = 0);
                  for (var r = 1; r < 3; r++) {
                    var n = 0;
                    this._depth[t][r] > e && (n = 1), (this._depth[t][r] = n);
                  }
                }
            }),
            (Kr.prototype.getDelta = function(t) {
              return this._depth[t][Ne.RIGHT] - this._depth[t][Ne.LEFT];
            }),
            (Kr.prototype.getLocation = function(t, e) {
              return this._depth[t][e] <= 0 ? M.EXTERIOR : M.INTERIOR;
            }),
            (Kr.prototype.toString = function() {
              return (
                "A: " +
                this._depth[0][1] +
                "," +
                this._depth[0][2] +
                " B: " +
                this._depth[1][1] +
                "," +
                this._depth[1][2]
              );
            }),
            (Kr.prototype.add = function() {
              if (1 === arguments.length)
                for (var t = arguments[0], e = 0; e < 2; e++)
                  for (var r = 1; r < 3; r++) {
                    var n = t.getLocation(e, r);
                    (n !== M.EXTERIOR && n !== M.INTERIOR) ||
                      (this.isNull(e, r)
                        ? (this._depth[e][r] = Kr.depthAtLocation(n))
                        : (this._depth[e][r] += Kr.depthAtLocation(n)));
                  }
              else if (3 === arguments.length) {
                var i = arguments[0],
                  o = arguments[1];
                arguments[2] === M.INTERIOR && this._depth[i][o]++;
              }
            }),
            (Kr.prototype.interfaces_ = function() {
              return [];
            }),
            (Kr.prototype.getClass = function() {
              return Kr;
            }),
            (Kr.depthAtLocation = function(t) {
              return t === M.EXTERIOR
                ? 0
                : t === M.INTERIOR
                ? 1
                : Kr.NULL_VALUE;
            }),
            (tn.NULL_VALUE.get = function() {
              return -1;
            }),
            Object.defineProperties(Kr, tn);
          var en = (function(t) {
              function e() {
                if (
                  (t.call(this),
                  (this.pts = null),
                  (this._env = null),
                  (this.eiList = new $r(this)),
                  (this._name = null),
                  (this._mce = null),
                  (this._isIsolated = !0),
                  (this._depth = new Kr()),
                  (this._depthDelta = 0),
                  1 === arguments.length)
                ) {
                  var r = arguments[0];
                  e.call(this, r, null);
                } else if (2 === arguments.length) {
                  var n = arguments[0],
                    i = arguments[1];
                  (this.pts = n), (this._label = i);
                }
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.getDepth = function() {
                  return this._depth;
                }),
                (e.prototype.getCollapsedEdge = function() {
                  var t = new Array(2).fill(null);
                  return (
                    (t[0] = this.pts[0]),
                    (t[1] = this.pts[1]),
                    new e(t, Te.toLineLabel(this._label))
                  );
                }),
                (e.prototype.isIsolated = function() {
                  return this._isIsolated;
                }),
                (e.prototype.getCoordinates = function() {
                  return this.pts;
                }),
                (e.prototype.setIsolated = function(t) {
                  this._isIsolated = t;
                }),
                (e.prototype.setName = function(t) {
                  this._name = t;
                }),
                (e.prototype.equals = function(t) {
                  if (!(t instanceof e)) return !1;
                  var r = t;
                  if (this.pts.length !== r.pts.length) return !1;
                  for (
                    var n = !0, i = !0, o = this.pts.length, s = 0;
                    s < this.pts.length;
                    s++
                  )
                    if (
                      (this.pts[s].equals2D(r.pts[s]) || (n = !1),
                      this.pts[s].equals2D(r.pts[--o]) || (i = !1),
                      !n && !i)
                    )
                      return !1;
                  return !0;
                }),
                (e.prototype.getCoordinate = function() {
                  if (0 === arguments.length)
                    return this.pts.length > 0 ? this.pts[0] : null;
                  if (1 === arguments.length) {
                    var t = arguments[0];
                    return this.pts[t];
                  }
                }),
                (e.prototype.print = function(t) {
                  t.print("edge " + this._name + ": "), t.print("LINESTRING (");
                  for (var e = 0; e < this.pts.length; e++)
                    e > 0 && t.print(","),
                      t.print(this.pts[e].x + " " + this.pts[e].y);
                  t.print(")  " + this._label + " " + this._depthDelta);
                }),
                (e.prototype.computeIM = function(t) {
                  e.updateIM(this._label, t);
                }),
                (e.prototype.isCollapsed = function() {
                  return (
                    !!this._label.isArea() &&
                    3 === this.pts.length &&
                    !!this.pts[0].equals(this.pts[2])
                  );
                }),
                (e.prototype.isClosed = function() {
                  return this.pts[0].equals(this.pts[this.pts.length - 1]);
                }),
                (e.prototype.getMaximumSegmentIndex = function() {
                  return this.pts.length - 1;
                }),
                (e.prototype.getDepthDelta = function() {
                  return this._depthDelta;
                }),
                (e.prototype.getNumPoints = function() {
                  return this.pts.length;
                }),
                (e.prototype.printReverse = function(t) {
                  t.print("edge " + this._name + ": ");
                  for (var e = this.pts.length - 1; e >= 0; e--)
                    t.print(this.pts[e] + " ");
                  t.println("");
                }),
                (e.prototype.getMonotoneChainEdge = function() {
                  return (
                    null === this._mce && (this._mce = new Zr(this)), this._mce
                  );
                }),
                (e.prototype.getEnvelope = function() {
                  if (null === this._env) {
                    this._env = new X();
                    for (var t = 0; t < this.pts.length; t++)
                      this._env.expandToInclude(this.pts[t]);
                  }
                  return this._env;
                }),
                (e.prototype.addIntersection = function(t, e, r, n) {
                  var i = new w(t.getIntersection(n)),
                    o = e,
                    s = t.getEdgeDistance(r, n),
                    a = o + 1;
                  if (a < this.pts.length) {
                    var l = this.pts[a];
                    i.equals2D(l) && ((o = a), (s = 0));
                  }
                  this.eiList.add(i, o, s);
                }),
                (e.prototype.toString = function() {
                  var t = new A();
                  t.append("edge " + this._name + ": "),
                    t.append("LINESTRING (");
                  for (var e = 0; e < this.pts.length; e++)
                    e > 0 && t.append(","),
                      t.append(this.pts[e].x + " " + this.pts[e].y);
                  return (
                    t.append(")  " + this._label + " " + this._depthDelta),
                    t.toString()
                  );
                }),
                (e.prototype.isPointwiseEqual = function(t) {
                  if (this.pts.length !== t.pts.length) return !1;
                  for (var e = 0; e < this.pts.length; e++)
                    if (!this.pts[e].equals2D(t.pts[e])) return !1;
                  return !0;
                }),
                (e.prototype.setDepthDelta = function(t) {
                  this._depthDelta = t;
                }),
                (e.prototype.getEdgeIntersectionList = function() {
                  return this.eiList;
                }),
                (e.prototype.addIntersections = function(t, e, r) {
                  for (var n = 0; n < t.getIntersectionNum(); n++)
                    this.addIntersection(t, e, r, n);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (e.updateIM = function() {
                  if (2 !== arguments.length)
                    return t.prototype.updateIM.apply(this, arguments);
                  var e = arguments[0],
                    r = arguments[1];
                  r.setAtLeastIfValid(
                    e.getLocation(0, Ne.ON),
                    e.getLocation(1, Ne.ON),
                    1
                  ),
                    e.isArea() &&
                      (r.setAtLeastIfValid(
                        e.getLocation(0, Ne.LEFT),
                        e.getLocation(1, Ne.LEFT),
                        2
                      ),
                      r.setAtLeastIfValid(
                        e.getLocation(0, Ne.RIGHT),
                        e.getLocation(1, Ne.RIGHT),
                        2
                      ));
                }),
                e
              );
            })(De),
            rn = function(t) {
              (this._workingPrecisionModel = null),
                (this._workingNoder = null),
                (this._geomFact = null),
                (this._graph = null),
                (this._edgeList = new Xr()),
                (this._bufParams = t || null);
            };
          (rn.prototype.setWorkingPrecisionModel = function(t) {
            this._workingPrecisionModel = t;
          }),
            (rn.prototype.insertUniqueEdge = function(t) {
              var e = this._edgeList.findEqualEdge(t);
              if (null !== e) {
                var r = e.getLabel(),
                  n = t.getLabel();
                e.isPointwiseEqual(t) || (n = new Te(t.getLabel())).flip(),
                  r.merge(n);
                var i = rn.depthDelta(n),
                  o = e.getDepthDelta() + i;
                e.setDepthDelta(o);
              } else
                this._edgeList.add(t),
                  t.setDepthDelta(rn.depthDelta(t.getLabel()));
            }),
            (rn.prototype.buildSubgraphs = function(t, e) {
              for (var r = new It(), n = t.iterator(); n.hasNext(); ) {
                var i = n.next(),
                  o = i.getRightmostCoordinate(),
                  s = new Rr(r).getDepth(o);
                i.computeDepth(s),
                  i.findResultEdges(),
                  r.add(i),
                  e.add(i.getDirectedEdges(), i.getNodes());
              }
            }),
            (rn.prototype.createSubgraphs = function(t) {
              for (
                var e = new It(), r = t.getNodes().iterator();
                r.hasNext();

              ) {
                var n = r.next();
                if (!n.isVisited()) {
                  var i = new Oe();
                  i.create(n), e.add(i);
                }
              }
              return Ke.sort(e, Ke.reverseOrder()), e;
            }),
            (rn.prototype.createEmptyResultGeometry = function() {
              return this._geomFact.createPolygon();
            }),
            (rn.prototype.getNoder = function(t) {
              if (null !== this._workingNoder) return this._workingNoder;
              var e = new br(),
                r = new it();
              return (
                r.setPrecisionModel(t), e.setSegmentIntersector(new Hr(r)), e
              );
            }),
            (rn.prototype.buffer = function(t, e) {
              var r = this._workingPrecisionModel;
              null === r && (r = t.getPrecisionModel()),
                (this._geomFact = t.getFactory());
              var n = new Ar(r, this._bufParams),
                i = new Ur(t, e, n).getCurves();
              if (i.size() <= 0) return this.createEmptyResultGeometry();
              this.computeNodedEdges(i, r),
                (this._graph = new Ve(new Vr())),
                this._graph.addEdges(this._edgeList.getEdges());
              var o = this.createSubgraphs(this._graph),
                s = new We(this._geomFact);
              this.buildSubgraphs(o, s);
              var a = s.getPolygons();
              return a.size() <= 0
                ? this.createEmptyResultGeometry()
                : this._geomFact.buildGeometry(a);
            }),
            (rn.prototype.computeNodedEdges = function(t, e) {
              var r = this.getNoder(e);
              r.computeNodes(t);
              for (var n = r.getNodedSubstrings().iterator(); n.hasNext(); ) {
                var i = n.next(),
                  o = i.getCoordinates();
                if (2 !== o.length || !o[0].equals2D(o[1])) {
                  var s = i.getData(),
                    a = new en(i.getCoordinates(), new Te(s));
                  this.insertUniqueEdge(a);
                }
              }
            }),
            (rn.prototype.setNoder = function(t) {
              this._workingNoder = t;
            }),
            (rn.prototype.interfaces_ = function() {
              return [];
            }),
            (rn.prototype.getClass = function() {
              return rn;
            }),
            (rn.depthDelta = function(t) {
              var e = t.getLocation(0, Ne.LEFT),
                r = t.getLocation(0, Ne.RIGHT);
              return e === M.INTERIOR && r === M.EXTERIOR
                ? 1
                : e === M.EXTERIOR && r === M.INTERIOR
                ? -1
                : 0;
            }),
            (rn.convertSegStrings = function(t) {
              for (var e = new me(), r = new It(); t.hasNext(); ) {
                var n = t.next(),
                  i = e.createLineString(n.getCoordinates());
                r.add(i);
              }
              return e.buildGeometry(r);
            });
          var nn = function() {
            if (
              ((this._noder = null),
              (this._scaleFactor = null),
              (this._offsetX = null),
              (this._offsetY = null),
              (this._isScaled = !1),
              2 === arguments.length)
            ) {
              var t = arguments[0],
                e = arguments[1];
              (this._noder = t),
                (this._scaleFactor = e),
                (this._offsetX = 0),
                (this._offsetY = 0),
                (this._isScaled = !this.isIntegerPrecision());
            } else if (4 === arguments.length) {
              var r = arguments[0],
                n = arguments[1],
                i = arguments[2],
                o = arguments[3];
              (this._noder = r),
                (this._scaleFactor = n),
                (this._offsetX = i),
                (this._offsetY = o),
                (this._isScaled = !this.isIntegerPrecision());
            }
          };
          (nn.prototype.rescale = function() {
            if (O(arguments[0], xt))
              for (var t = arguments[0].iterator(); t.hasNext(); ) {
                var e = t.next();
                this.rescale(e.getCoordinates());
              }
            else if (arguments[0] instanceof Array) {
              for (var r = arguments[0], n = 0; n < r.length; n++)
                (r[n].x = r[n].x / this._scaleFactor + this._offsetX),
                  (r[n].y = r[n].y / this._scaleFactor + this._offsetY);
              2 === r.length && r[0].equals2D(r[1]) && V.out.println(r);
            }
          }),
            (nn.prototype.scale = function() {
              if (O(arguments[0], xt)) {
                for (
                  var t = arguments[0], e = new It(), r = t.iterator();
                  r.hasNext();

                ) {
                  var n = r.next();
                  e.add(new fr(this.scale(n.getCoordinates()), n.getData()));
                }
                return e;
              }
              if (arguments[0] instanceof Array) {
                for (
                  var i = arguments[0],
                    o = new Array(i.length).fill(null),
                    s = 0;
                  s < i.length;
                  s++
                )
                  o[s] = new w(
                    Math.round((i[s].x - this._offsetX) * this._scaleFactor),
                    Math.round((i[s].y - this._offsetY) * this._scaleFactor),
                    i[s].z
                  );
                return Ct.removeRepeatedPoints(o);
              }
            }),
            (nn.prototype.isIntegerPrecision = function() {
              return 1 === this._scaleFactor;
            }),
            (nn.prototype.getNodedSubstrings = function() {
              var t = this._noder.getNodedSubstrings();
              return this._isScaled && this.rescale(t), t;
            }),
            (nn.prototype.computeNodes = function(t) {
              var e = t;
              this._isScaled && (e = this.scale(t)),
                this._noder.computeNodes(e);
            }),
            (nn.prototype.interfaces_ = function() {
              return [_r];
            }),
            (nn.prototype.getClass = function() {
              return nn;
            });
          var on = function() {
              (this._li = new it()), (this._segStrings = null);
              var t = arguments[0];
              this._segStrings = t;
            },
            sn = { fact: { configurable: !0 } };
          (on.prototype.checkEndPtVertexIntersections = function() {
            if (0 === arguments.length)
              for (var t = this._segStrings.iterator(); t.hasNext(); ) {
                var e = t.next().getCoordinates();
                this.checkEndPtVertexIntersections(e[0], this._segStrings),
                  this.checkEndPtVertexIntersections(
                    e[e.length - 1],
                    this._segStrings
                  );
              }
            else if (2 === arguments.length)
              for (
                var r = arguments[0], n = arguments[1].iterator();
                n.hasNext();

              )
                for (
                  var i = n.next().getCoordinates(), o = 1;
                  o < i.length - 1;
                  o++
                )
                  if (i[o].equals(r))
                    throw new K(
                      "found endpt/interior pt intersection at index " +
                        o +
                        " :pt " +
                        r
                    );
          }),
            (on.prototype.checkInteriorIntersections = function() {
              if (0 === arguments.length)
                for (var t = this._segStrings.iterator(); t.hasNext(); )
                  for (
                    var e = t.next(), r = this._segStrings.iterator();
                    r.hasNext();

                  ) {
                    var n = r.next();
                    this.checkInteriorIntersections(e, n);
                  }
              else if (2 === arguments.length)
                for (
                  var i = arguments[0],
                    o = arguments[1],
                    s = i.getCoordinates(),
                    a = o.getCoordinates(),
                    l = 0;
                  l < s.length - 1;
                  l++
                )
                  for (var u = 0; u < a.length - 1; u++)
                    this.checkInteriorIntersections(i, l, o, u);
              else if (4 === arguments.length) {
                var h = arguments[0],
                  c = arguments[1],
                  p = arguments[2],
                  f = arguments[3];
                if (h === p && c === f) return null;
                var d = h.getCoordinates()[c],
                  y = h.getCoordinates()[c + 1],
                  g = p.getCoordinates()[f],
                  m = p.getCoordinates()[f + 1];
                if (
                  (this._li.computeIntersection(d, y, g, m),
                  this._li.hasIntersection() &&
                    (this._li.isProper() ||
                      this.hasInteriorIntersection(this._li, d, y) ||
                      this.hasInteriorIntersection(this._li, g, m)))
                )
                  throw new K(
                    "found non-noded intersection at " +
                      d +
                      "-" +
                      y +
                      " and " +
                      g +
                      "-" +
                      m
                  );
              }
            }),
            (on.prototype.checkValid = function() {
              this.checkEndPtVertexIntersections(),
                this.checkInteriorIntersections(),
                this.checkCollapses();
            }),
            (on.prototype.checkCollapses = function() {
              if (0 === arguments.length)
                for (var t = this._segStrings.iterator(); t.hasNext(); ) {
                  var e = t.next();
                  this.checkCollapses(e);
                }
              else if (1 === arguments.length)
                for (
                  var r = arguments[0].getCoordinates(), n = 0;
                  n < r.length - 2;
                  n++
                )
                  this.checkCollapse(r[n], r[n + 1], r[n + 2]);
            }),
            (on.prototype.hasInteriorIntersection = function(t, e, r) {
              for (var n = 0; n < t.getIntersectionNum(); n++) {
                var i = t.getIntersection(n);
                if (!i.equals(e) && !i.equals(r)) return !0;
              }
              return !1;
            }),
            (on.prototype.checkCollapse = function(t, e, r) {
              if (t.equals(r))
                throw new K(
                  "found non-noded collapse at " +
                    on.fact.createLineString([t, e, r])
                );
            }),
            (on.prototype.interfaces_ = function() {
              return [];
            }),
            (on.prototype.getClass = function() {
              return on;
            }),
            (sn.fact.get = function() {
              return new me();
            }),
            Object.defineProperties(on, sn);
          var an = function() {
              (this._li = null),
                (this._pt = null),
                (this._originalPt = null),
                (this._ptScaled = null),
                (this._p0Scaled = null),
                (this._p1Scaled = null),
                (this._scaleFactor = null),
                (this._minx = null),
                (this._maxx = null),
                (this._miny = null),
                (this._maxy = null),
                (this._corner = new Array(4).fill(null)),
                (this._safeEnv = null);
              var t = arguments[0],
                e = arguments[1],
                r = arguments[2];
              if (
                ((this._originalPt = t),
                (this._pt = t),
                (this._scaleFactor = e),
                (this._li = r),
                e <= 0)
              )
                throw new v("Scale factor must be non-zero");
              1 !== e &&
                ((this._pt = new w(this.scale(t.x), this.scale(t.y))),
                (this._p0Scaled = new w()),
                (this._p1Scaled = new w())),
                this.initCorners(this._pt);
            },
            ln = { SAFE_ENV_EXPANSION_FACTOR: { configurable: !0 } };
          (an.prototype.intersectsScaled = function(t, e) {
            var r = Math.min(t.x, e.x),
              n = Math.max(t.x, e.x),
              i = Math.min(t.y, e.y),
              o = Math.max(t.y, e.y),
              s =
                this._maxx < r ||
                this._minx > n ||
                this._maxy < i ||
                this._miny > o;
            if (s) return !1;
            var a = this.intersectsToleranceSquare(t, e);
            return et.isTrue(!(s && a), "Found bad envelope test"), a;
          }),
            (an.prototype.initCorners = function(t) {
              (this._minx = t.x - 0.5),
                (this._maxx = t.x + 0.5),
                (this._miny = t.y - 0.5),
                (this._maxy = t.y + 0.5),
                (this._corner[0] = new w(this._maxx, this._maxy)),
                (this._corner[1] = new w(this._minx, this._maxy)),
                (this._corner[2] = new w(this._minx, this._miny)),
                (this._corner[3] = new w(this._maxx, this._miny));
            }),
            (an.prototype.intersects = function(t, e) {
              return 1 === this._scaleFactor
                ? this.intersectsScaled(t, e)
                : (this.copyScaled(t, this._p0Scaled),
                  this.copyScaled(e, this._p1Scaled),
                  this.intersectsScaled(this._p0Scaled, this._p1Scaled));
            }),
            (an.prototype.scale = function(t) {
              return Math.round(t * this._scaleFactor);
            }),
            (an.prototype.getCoordinate = function() {
              return this._originalPt;
            }),
            (an.prototype.copyScaled = function(t, e) {
              (e.x = this.scale(t.x)), (e.y = this.scale(t.y));
            }),
            (an.prototype.getSafeEnvelope = function() {
              if (null === this._safeEnv) {
                var t = an.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;
                this._safeEnv = new X(
                  this._originalPt.x - t,
                  this._originalPt.x + t,
                  this._originalPt.y - t,
                  this._originalPt.y + t
                );
              }
              return this._safeEnv;
            }),
            (an.prototype.intersectsPixelClosure = function(t, e) {
              return (
                this._li.computeIntersection(
                  t,
                  e,
                  this._corner[0],
                  this._corner[1]
                ),
                !!(
                  this._li.hasIntersection() ||
                  (this._li.computeIntersection(
                    t,
                    e,
                    this._corner[1],
                    this._corner[2]
                  ),
                  this._li.hasIntersection() ||
                    (this._li.computeIntersection(
                      t,
                      e,
                      this._corner[2],
                      this._corner[3]
                    ),
                    this._li.hasIntersection() ||
                      (this._li.computeIntersection(
                        t,
                        e,
                        this._corner[3],
                        this._corner[0]
                      ),
                      this._li.hasIntersection())))
                )
              );
            }),
            (an.prototype.intersectsToleranceSquare = function(t, e) {
              var r = !1,
                n = !1;
              return (
                this._li.computeIntersection(
                  t,
                  e,
                  this._corner[0],
                  this._corner[1]
                ),
                !!(
                  this._li.isProper() ||
                  (this._li.computeIntersection(
                    t,
                    e,
                    this._corner[1],
                    this._corner[2]
                  ),
                  this._li.isProper() ||
                    (this._li.hasIntersection() && (r = !0),
                    this._li.computeIntersection(
                      t,
                      e,
                      this._corner[2],
                      this._corner[3]
                    ),
                    this._li.isProper() ||
                      (this._li.hasIntersection() && (n = !0),
                      this._li.computeIntersection(
                        t,
                        e,
                        this._corner[3],
                        this._corner[0]
                      ),
                      this._li.isProper() ||
                        (r && n) ||
                        t.equals(this._pt) ||
                        e.equals(this._pt))))
                )
              );
            }),
            (an.prototype.addSnappedNode = function(t, e) {
              var r = t.getCoordinate(e),
                n = t.getCoordinate(e + 1);
              return (
                !!this.intersects(r, n) &&
                (t.addIntersection(this.getCoordinate(), e), !0)
              );
            }),
            (an.prototype.interfaces_ = function() {
              return [];
            }),
            (an.prototype.getClass = function() {
              return an;
            }),
            (ln.SAFE_ENV_EXPANSION_FACTOR.get = function() {
              return 0.75;
            }),
            Object.defineProperties(an, ln);
          var un = function() {
            (this.tempEnv1 = new X()), (this.selectedSegment = new dr());
          };
          (un.prototype.select = function() {
            if (1 === arguments.length);
            else if (2 === arguments.length) {
              var t = arguments[1];
              arguments[0].getLineSegment(t, this.selectedSegment),
                this.select(this.selectedSegment);
            }
          }),
            (un.prototype.interfaces_ = function() {
              return [];
            }),
            (un.prototype.getClass = function() {
              return un;
            });
          var hn = function() {
              this._index = null;
              var t = arguments[0];
              this._index = t;
            },
            cn = { HotPixelSnapAction: { configurable: !0 } };
          (hn.prototype.snap = function() {
            if (1 === arguments.length) {
              var t = arguments[0];
              return this.snap(t, null, -1);
            }
            if (3 === arguments.length) {
              var e = arguments[0],
                r = arguments[1],
                n = arguments[2],
                i = e.getSafeEnvelope(),
                o = new pn(e, r, n);
              return (
                this._index.query(i, {
                  interfaces_: function() {
                    return [Je];
                  },
                  visitItem: function(t) {
                    t.select(i, o);
                  }
                }),
                o.isNodeAdded()
              );
            }
          }),
            (hn.prototype.interfaces_ = function() {
              return [];
            }),
            (hn.prototype.getClass = function() {
              return hn;
            }),
            (cn.HotPixelSnapAction.get = function() {
              return pn;
            }),
            Object.defineProperties(hn, cn);
          var pn = (function(t) {
              function e() {
                t.call(this),
                  (this._hotPixel = null),
                  (this._parentEdge = null),
                  (this._hotPixelVertexIndex = null),
                  (this._isNodeAdded = !1);
                var e = arguments[0],
                  r = arguments[1],
                  n = arguments[2];
                (this._hotPixel = e),
                  (this._parentEdge = r),
                  (this._hotPixelVertexIndex = n);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.isNodeAdded = function() {
                  return this._isNodeAdded;
                }),
                (e.prototype.select = function() {
                  if (2 !== arguments.length)
                    return t.prototype.select.apply(this, arguments);
                  var e = arguments[1],
                    r = arguments[0].getContext();
                  if (
                    null !== this._parentEdge &&
                    r === this._parentEdge &&
                    e === this._hotPixelVertexIndex
                  )
                    return null;
                  this._isNodeAdded = this._hotPixel.addSnappedNode(r, e);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(un),
            fn = function() {
              (this._li = null), (this._interiorIntersections = null);
              var t = arguments[0];
              (this._li = t), (this._interiorIntersections = new It());
            };
          (fn.prototype.processIntersections = function(t, e, r, n) {
            if (t === r && e === n) return null;
            var i = t.getCoordinates()[e],
              o = t.getCoordinates()[e + 1],
              s = r.getCoordinates()[n],
              a = r.getCoordinates()[n + 1];
            if (
              (this._li.computeIntersection(i, o, s, a),
              this._li.hasIntersection() && this._li.isInteriorIntersection())
            ) {
              for (var l = 0; l < this._li.getIntersectionNum(); l++)
                this._interiorIntersections.add(this._li.getIntersection(l));
              t.addIntersections(this._li, e, 0),
                r.addIntersections(this._li, n, 1);
            }
          }),
            (fn.prototype.isDone = function() {
              return !1;
            }),
            (fn.prototype.getInteriorIntersections = function() {
              return this._interiorIntersections;
            }),
            (fn.prototype.interfaces_ = function() {
              return [Yr];
            }),
            (fn.prototype.getClass = function() {
              return fn;
            });
          var dn = function() {
            (this._pm = null),
              (this._li = null),
              (this._scaleFactor = null),
              (this._noder = null),
              (this._pointSnapper = null),
              (this._nodedSegStrings = null);
            var t = arguments[0];
            (this._pm = t),
              (this._li = new it()),
              this._li.setPrecisionModel(t),
              (this._scaleFactor = t.getScale());
          };
          (dn.prototype.checkCorrectness = function(t) {
            var e = fr.getNodedSubstrings(t),
              r = new on(e);
            try {
              r.checkValid();
            } catch (t) {
              if (!(t instanceof q)) throw t;
              t.printStackTrace();
            }
          }),
            (dn.prototype.getNodedSubstrings = function() {
              return fr.getNodedSubstrings(this._nodedSegStrings);
            }),
            (dn.prototype.snapRound = function(t, e) {
              var r = this.findInteriorIntersections(t, e);
              this.computeIntersectionSnaps(r), this.computeVertexSnaps(t);
            }),
            (dn.prototype.findInteriorIntersections = function(t, e) {
              var r = new fn(e);
              return (
                this._noder.setSegmentIntersector(r),
                this._noder.computeNodes(t),
                r.getInteriorIntersections()
              );
            }),
            (dn.prototype.computeVertexSnaps = function() {
              if (O(arguments[0], xt))
                for (var t = arguments[0].iterator(); t.hasNext(); ) {
                  var e = t.next();
                  this.computeVertexSnaps(e);
                }
              else if (arguments[0] instanceof fr)
                for (
                  var r = arguments[0], n = r.getCoordinates(), i = 0;
                  i < n.length;
                  i++
                ) {
                  var o = new an(n[i], this._scaleFactor, this._li);
                  this._pointSnapper.snap(o, r, i) &&
                    r.addIntersection(n[i], i);
                }
            }),
            (dn.prototype.computeNodes = function(t) {
              (this._nodedSegStrings = t),
                (this._noder = new br()),
                (this._pointSnapper = new hn(this._noder.getIndex())),
                this.snapRound(t, this._li);
            }),
            (dn.prototype.computeIntersectionSnaps = function(t) {
              for (var e = t.iterator(); e.hasNext(); ) {
                var r = e.next(),
                  n = new an(r, this._scaleFactor, this._li);
                this._pointSnapper.snap(n);
              }
            }),
            (dn.prototype.interfaces_ = function() {
              return [_r];
            }),
            (dn.prototype.getClass = function() {
              return dn;
            });
          var yn = function() {
              if (
                ((this._argGeom = null),
                (this._distance = null),
                (this._bufParams = new Ir()),
                (this._resultGeometry = null),
                (this._saveException = null),
                1 === arguments.length)
              ) {
                var t = arguments[0];
                this._argGeom = t;
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                (this._argGeom = e), (this._bufParams = r);
              }
            },
            gn = {
              CAP_ROUND: { configurable: !0 },
              CAP_BUTT: { configurable: !0 },
              CAP_FLAT: { configurable: !0 },
              CAP_SQUARE: { configurable: !0 },
              MAX_PRECISION_DIGITS: { configurable: !0 }
            };
          (yn.prototype.bufferFixedPrecision = function(t) {
            var e = new nn(new dn(new fe(1)), t.getScale()),
              r = new rn(this._bufParams);
            r.setWorkingPrecisionModel(t),
              r.setNoder(e),
              (this._resultGeometry = r.buffer(this._argGeom, this._distance));
          }),
            (yn.prototype.bufferReducedPrecision = function() {
              var t = this;
              if (0 === arguments.length) {
                for (var e = yn.MAX_PRECISION_DIGITS; e >= 0; e--) {
                  try {
                    t.bufferReducedPrecision(e);
                  } catch (e) {
                    if (!(e instanceof Me)) throw e;
                    t._saveException = e;
                  }
                  if (null !== t._resultGeometry) return null;
                }
                throw this._saveException;
              }
              if (1 === arguments.length) {
                var r = arguments[0],
                  n = yn.precisionScaleFactor(this._argGeom, this._distance, r),
                  i = new fe(n);
                this.bufferFixedPrecision(i);
              }
            }),
            (yn.prototype.computeGeometry = function() {
              if (
                (this.bufferOriginalPrecision(), null !== this._resultGeometry)
              )
                return null;
              var t = this._argGeom.getFactory().getPrecisionModel();
              t.getType() === fe.FIXED
                ? this.bufferFixedPrecision(t)
                : this.bufferReducedPrecision();
            }),
            (yn.prototype.setQuadrantSegments = function(t) {
              this._bufParams.setQuadrantSegments(t);
            }),
            (yn.prototype.bufferOriginalPrecision = function() {
              try {
                var t = new rn(this._bufParams);
                this._resultGeometry = t.buffer(this._argGeom, this._distance);
              } catch (t) {
                if (!(t instanceof K)) throw t;
                this._saveException = t;
              }
            }),
            (yn.prototype.getResultGeometry = function(t) {
              return (
                (this._distance = t),
                this.computeGeometry(),
                this._resultGeometry
              );
            }),
            (yn.prototype.setEndCapStyle = function(t) {
              this._bufParams.setEndCapStyle(t);
            }),
            (yn.prototype.interfaces_ = function() {
              return [];
            }),
            (yn.prototype.getClass = function() {
              return yn;
            }),
            (yn.bufferOp = function() {
              if (2 === arguments.length) {
                var t = arguments[1];
                return new yn(arguments[0]).getResultGeometry(t);
              }
              if (3 === arguments.length) {
                if (
                  Number.isInteger(arguments[2]) &&
                  arguments[0] instanceof ht &&
                  "number" == typeof arguments[1]
                ) {
                  var e = arguments[1],
                    r = arguments[2],
                    n = new yn(arguments[0]);
                  return n.setQuadrantSegments(r), n.getResultGeometry(e);
                }
                if (
                  arguments[2] instanceof Ir &&
                  arguments[0] instanceof ht &&
                  "number" == typeof arguments[1]
                ) {
                  var i = arguments[1];
                  return new yn(arguments[0], arguments[2]).getResultGeometry(
                    i
                  );
                }
              } else if (4 === arguments.length) {
                var o = arguments[1],
                  s = arguments[2],
                  a = arguments[3],
                  l = new yn(arguments[0]);
                return (
                  l.setQuadrantSegments(s),
                  l.setEndCapStyle(a),
                  l.getResultGeometry(o)
                );
              }
            }),
            (yn.precisionScaleFactor = function(t, e, r) {
              var n = t.getEnvelopeInternal(),
                i =
                  L.max(
                    Math.abs(n.getMaxX()),
                    Math.abs(n.getMaxY()),
                    Math.abs(n.getMinX()),
                    Math.abs(n.getMinY())
                  ) +
                  2 * (e > 0 ? e : 0),
                o = r - Math.trunc(Math.log(i) / Math.log(10) + 1);
              return Math.pow(10, o);
            }),
            (gn.CAP_ROUND.get = function() {
              return Ir.CAP_ROUND;
            }),
            (gn.CAP_BUTT.get = function() {
              return Ir.CAP_FLAT;
            }),
            (gn.CAP_FLAT.get = function() {
              return Ir.CAP_FLAT;
            }),
            (gn.CAP_SQUARE.get = function() {
              return Ir.CAP_SQUARE;
            }),
            (gn.MAX_PRECISION_DIGITS.get = function() {
              return 12;
            }),
            Object.defineProperties(yn, gn);
          var mn = function() {
            (this._pt = [new w(), new w()]),
              (this._distance = _.NaN),
              (this._isNull = !0);
          };
          (mn.prototype.getCoordinates = function() {
            return this._pt;
          }),
            (mn.prototype.getCoordinate = function(t) {
              return this._pt[t];
            }),
            (mn.prototype.setMinimum = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.setMinimum(t._pt[0], t._pt[1]);
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                if (this._isNull) return this.initialize(e, r), null;
                var n = e.distance(r);
                n < this._distance && this.initialize(e, r, n);
              }
            }),
            (mn.prototype.initialize = function() {
              if (0 === arguments.length) this._isNull = !0;
              else if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                this._pt[0].setCoordinate(t),
                  this._pt[1].setCoordinate(e),
                  (this._distance = t.distance(e)),
                  (this._isNull = !1);
              } else if (3 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1],
                  i = arguments[2];
                this._pt[0].setCoordinate(r),
                  this._pt[1].setCoordinate(n),
                  (this._distance = i),
                  (this._isNull = !1);
              }
            }),
            (mn.prototype.getDistance = function() {
              return this._distance;
            }),
            (mn.prototype.setMaximum = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.setMaximum(t._pt[0], t._pt[1]);
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                if (this._isNull) return this.initialize(e, r), null;
                var n = e.distance(r);
                n > this._distance && this.initialize(e, r, n);
              }
            }),
            (mn.prototype.interfaces_ = function() {
              return [];
            }),
            (mn.prototype.getClass = function() {
              return mn;
            });
          var vn = function() {};
          (vn.prototype.interfaces_ = function() {
            return [];
          }),
            (vn.prototype.getClass = function() {
              return vn;
            }),
            (vn.computeDistance = function() {
              if (
                arguments[2] instanceof mn &&
                arguments[0] instanceof Jt &&
                arguments[1] instanceof w
              )
                for (
                  var t = arguments[1],
                    e = arguments[2],
                    r = arguments[0].getCoordinates(),
                    n = new dr(),
                    i = 0;
                  i < r.length - 1;
                  i++
                ) {
                  n.setCoordinates(r[i], r[i + 1]);
                  var o = n.closestPoint(t);
                  e.setMinimum(o, t);
                }
              else if (
                arguments[2] instanceof mn &&
                arguments[0] instanceof Kt &&
                arguments[1] instanceof w
              ) {
                var s = arguments[0],
                  a = arguments[1],
                  l = arguments[2];
                vn.computeDistance(s.getExteriorRing(), a, l);
                for (var u = 0; u < s.getNumInteriorRing(); u++)
                  vn.computeDistance(s.getInteriorRingN(u), a, l);
              } else if (
                arguments[2] instanceof mn &&
                arguments[0] instanceof ht &&
                arguments[1] instanceof w
              ) {
                var h = arguments[0],
                  c = arguments[1],
                  p = arguments[2];
                if (h instanceof Jt) vn.computeDistance(h, c, p);
                else if (h instanceof Kt) vn.computeDistance(h, c, p);
                else if (h instanceof qt)
                  for (var f = h, d = 0; d < f.getNumGeometries(); d++) {
                    var y = f.getGeometryN(d);
                    vn.computeDistance(y, c, p);
                  }
                else p.setMinimum(h.getCoordinate(), c);
              } else if (
                arguments[2] instanceof mn &&
                arguments[0] instanceof dr &&
                arguments[1] instanceof w
              ) {
                var g = arguments[1],
                  m = arguments[2],
                  v = arguments[0].closestPoint(g);
                m.setMinimum(v, g);
              }
            });
          var _n = function(t) {
              (this._maxPtDist = new mn()), (this._inputGeom = t || null);
            },
            xn = {
              MaxPointDistanceFilter: { configurable: !0 },
              MaxMidpointDistanceFilter: { configurable: !0 }
            };
          (_n.prototype.computeMaxMidpointDistance = function(t) {
            var e = new Sn(this._inputGeom);
            t.apply(e), this._maxPtDist.setMaximum(e.getMaxPointDistance());
          }),
            (_n.prototype.computeMaxVertexDistance = function(t) {
              var e = new bn(this._inputGeom);
              t.apply(e), this._maxPtDist.setMaximum(e.getMaxPointDistance());
            }),
            (_n.prototype.findDistance = function(t) {
              return (
                this.computeMaxVertexDistance(t),
                this.computeMaxMidpointDistance(t),
                this._maxPtDist.getDistance()
              );
            }),
            (_n.prototype.getDistancePoints = function() {
              return this._maxPtDist;
            }),
            (_n.prototype.interfaces_ = function() {
              return [];
            }),
            (_n.prototype.getClass = function() {
              return _n;
            }),
            (xn.MaxPointDistanceFilter.get = function() {
              return bn;
            }),
            (xn.MaxMidpointDistanceFilter.get = function() {
              return Sn;
            }),
            Object.defineProperties(_n, xn);
          var bn = function(t) {
            (this._maxPtDist = new mn()),
              (this._minPtDist = new mn()),
              (this._geom = t || null);
          };
          (bn.prototype.filter = function(t) {
            this._minPtDist.initialize(),
              vn.computeDistance(this._geom, t, this._minPtDist),
              this._maxPtDist.setMaximum(this._minPtDist);
          }),
            (bn.prototype.getMaxPointDistance = function() {
              return this._maxPtDist;
            }),
            (bn.prototype.interfaces_ = function() {
              return [ft];
            }),
            (bn.prototype.getClass = function() {
              return bn;
            });
          var Sn = function(t) {
            (this._maxPtDist = new mn()),
              (this._minPtDist = new mn()),
              (this._geom = t || null);
          };
          (Sn.prototype.filter = function(t, e) {
            if (0 === e) return null;
            var r = t.getCoordinate(e - 1),
              n = t.getCoordinate(e),
              i = new w((r.x + n.x) / 2, (r.y + n.y) / 2);
            this._minPtDist.initialize(),
              vn.computeDistance(this._geom, i, this._minPtDist),
              this._maxPtDist.setMaximum(this._minPtDist);
          }),
            (Sn.prototype.isDone = function() {
              return !1;
            }),
            (Sn.prototype.isGeometryChanged = function() {
              return !1;
            }),
            (Sn.prototype.getMaxPointDistance = function() {
              return this._maxPtDist;
            }),
            (Sn.prototype.interfaces_ = function() {
              return [kt];
            }),
            (Sn.prototype.getClass = function() {
              return Sn;
            });
          var In = function(t) {
            this._comps = t || null;
          };
          (In.prototype.filter = function(t) {
            t instanceof Kt && this._comps.add(t);
          }),
            (In.prototype.interfaces_ = function() {
              return [Bt];
            }),
            (In.prototype.getClass = function() {
              return In;
            }),
            (In.getPolygons = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return In.getPolygons(t, new It());
              }
              if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                return (
                  e instanceof Kt
                    ? r.add(e)
                    : e instanceof qt && e.apply(new In(r)),
                  r
                );
              }
            });
          var wn = function() {
            if (
              ((this._lines = null),
              (this._isForcedToLineString = !1),
              1 === arguments.length)
            ) {
              var t = arguments[0];
              this._lines = t;
            } else if (2 === arguments.length) {
              var e = arguments[0],
                r = arguments[1];
              (this._lines = e), (this._isForcedToLineString = r);
            }
          };
          (wn.prototype.filter = function(t) {
            if (this._isForcedToLineString && t instanceof ee) {
              var e = t
                .getFactory()
                .createLineString(t.getCoordinateSequence());
              return this._lines.add(e), null;
            }
            t instanceof Jt && this._lines.add(t);
          }),
            (wn.prototype.setForceToLineString = function(t) {
              this._isForcedToLineString = t;
            }),
            (wn.prototype.interfaces_ = function() {
              return [ut];
            }),
            (wn.prototype.getClass = function() {
              return wn;
            }),
            (wn.getGeometry = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return t.getFactory().buildGeometry(wn.getLines(t));
              }
              if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                return e.getFactory().buildGeometry(wn.getLines(e, r));
              }
            }),
            (wn.getLines = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return wn.getLines(t, !1);
              }
              if (2 === arguments.length) {
                if (O(arguments[0], xt) && O(arguments[1], xt)) {
                  for (
                    var e = arguments[1], r = arguments[0].iterator();
                    r.hasNext();

                  ) {
                    var n = r.next();
                    wn.getLines(n, e);
                  }
                  return e;
                }
                if (
                  arguments[0] instanceof ht &&
                  "boolean" == typeof arguments[1]
                ) {
                  var i = arguments[0],
                    o = arguments[1],
                    s = new It();
                  return i.apply(new wn(s, o)), s;
                }
                if (arguments[0] instanceof ht && O(arguments[1], xt)) {
                  var a = arguments[0],
                    l = arguments[1];
                  return a instanceof Jt ? l.add(a) : a.apply(new wn(l)), l;
                }
              } else if (3 === arguments.length) {
                if (
                  "boolean" == typeof arguments[2] &&
                  O(arguments[0], xt) &&
                  O(arguments[1], xt)
                ) {
                  for (
                    var u = arguments[1],
                      h = arguments[2],
                      c = arguments[0].iterator();
                    c.hasNext();

                  ) {
                    var p = c.next();
                    wn.getLines(p, u, h);
                  }
                  return u;
                }
                if (
                  "boolean" == typeof arguments[2] &&
                  arguments[0] instanceof ht &&
                  O(arguments[1], xt)
                ) {
                  var f = arguments[1],
                    d = arguments[2];
                  return arguments[0].apply(new wn(f, d)), f;
                }
              }
            });
          var Nn = function() {
            if (
              ((this._boundaryRule = dt.OGC_SFS_BOUNDARY_RULE),
              (this._isIn = null),
              (this._numBoundaries = null),
              0 === arguments.length)
            );
            else if (1 === arguments.length) {
              var t = arguments[0];
              if (null === t) throw new v("Rule must be non-null");
              this._boundaryRule = t;
            }
          };
          (Nn.prototype.locateInternal = function() {
            if (arguments[0] instanceof w && arguments[1] instanceof Kt) {
              var t = arguments[0],
                e = arguments[1];
              if (e.isEmpty()) return M.EXTERIOR;
              var r = e.getExteriorRing(),
                n = this.locateInPolygonRing(t, r);
              if (n === M.EXTERIOR) return M.EXTERIOR;
              if (n === M.BOUNDARY) return M.BOUNDARY;
              for (var i = 0; i < e.getNumInteriorRing(); i++) {
                var o = e.getInteriorRingN(i),
                  s = this.locateInPolygonRing(t, o);
                if (s === M.INTERIOR) return M.EXTERIOR;
                if (s === M.BOUNDARY) return M.BOUNDARY;
              }
              return M.INTERIOR;
            }
            if (arguments[0] instanceof w && arguments[1] instanceof Jt) {
              var a = arguments[0],
                l = arguments[1];
              if (!l.getEnvelopeInternal().intersects(a)) return M.EXTERIOR;
              var u = l.getCoordinates();
              return l.isClosed() ||
                (!a.equals(u[0]) && !a.equals(u[u.length - 1]))
                ? at.isOnLine(a, u)
                  ? M.INTERIOR
                  : M.EXTERIOR
                : M.BOUNDARY;
            }
            if (arguments[0] instanceof w && arguments[1] instanceof Qt) {
              var h = arguments[0];
              return arguments[1].getCoordinate().equals2D(h)
                ? M.INTERIOR
                : M.EXTERIOR;
            }
          }),
            (Nn.prototype.locateInPolygonRing = function(t, e) {
              return e.getEnvelopeInternal().intersects(t)
                ? at.locatePointInRing(t, e.getCoordinates())
                : M.EXTERIOR;
            }),
            (Nn.prototype.intersects = function(t, e) {
              return this.locate(t, e) !== M.EXTERIOR;
            }),
            (Nn.prototype.updateLocationInfo = function(t) {
              t === M.INTERIOR && (this._isIn = !0),
                t === M.BOUNDARY && this._numBoundaries++;
            }),
            (Nn.prototype.computeLocation = function(t, e) {
              if (
                (e instanceof Qt &&
                  this.updateLocationInfo(this.locateInternal(t, e)),
                e instanceof Jt)
              )
                this.updateLocationInfo(this.locateInternal(t, e));
              else if (e instanceof Kt)
                this.updateLocationInfo(this.locateInternal(t, e));
              else if (e instanceof zt)
                for (var r = e, n = 0; n < r.getNumGeometries(); n++) {
                  var i = r.getGeometryN(n);
                  this.updateLocationInfo(this.locateInternal(t, i));
                }
              else if (e instanceof re)
                for (var o = e, s = 0; s < o.getNumGeometries(); s++) {
                  var a = o.getGeometryN(s);
                  this.updateLocationInfo(this.locateInternal(t, a));
                }
              else if (e instanceof qt)
                for (var l = new Br(e); l.hasNext(); ) {
                  var u = l.next();
                  u !== e && this.computeLocation(t, u);
                }
            }),
            (Nn.prototype.locate = function(t, e) {
              return e.isEmpty()
                ? M.EXTERIOR
                : e instanceof Jt || e instanceof Kt
                ? this.locateInternal(t, e)
                : ((this._isIn = !1),
                  (this._numBoundaries = 0),
                  this.computeLocation(t, e),
                  this._boundaryRule.isInBoundary(this._numBoundaries)
                    ? M.BOUNDARY
                    : this._numBoundaries > 0 || this._isIn
                    ? M.INTERIOR
                    : M.EXTERIOR);
            }),
            (Nn.prototype.interfaces_ = function() {
              return [];
            }),
            (Nn.prototype.getClass = function() {
              return Nn;
            });
          var Cn = function t() {
              if (
                ((this._component = null),
                (this._segIndex = null),
                (this._pt = null),
                2 === arguments.length)
              )
                t.call(this, arguments[0], t.INSIDE_AREA, arguments[1]);
              else if (3 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1],
                  n = arguments[2];
                (this._component = e), (this._segIndex = r), (this._pt = n);
              }
            },
            En = { INSIDE_AREA: { configurable: !0 } };
          (Cn.prototype.isInsideArea = function() {
            return this._segIndex === Cn.INSIDE_AREA;
          }),
            (Cn.prototype.getCoordinate = function() {
              return this._pt;
            }),
            (Cn.prototype.getGeometryComponent = function() {
              return this._component;
            }),
            (Cn.prototype.getSegmentIndex = function() {
              return this._segIndex;
            }),
            (Cn.prototype.interfaces_ = function() {
              return [];
            }),
            (Cn.prototype.getClass = function() {
              return Cn;
            }),
            (En.INSIDE_AREA.get = function() {
              return -1;
            }),
            Object.defineProperties(Cn, En);
          var Mn = function(t) {
            this._pts = t || null;
          };
          (Mn.prototype.filter = function(t) {
            t instanceof Qt && this._pts.add(t);
          }),
            (Mn.prototype.interfaces_ = function() {
              return [Bt];
            }),
            (Mn.prototype.getClass = function() {
              return Mn;
            }),
            (Mn.getPoints = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return t instanceof Qt
                  ? Ke.singletonList(t)
                  : Mn.getPoints(t, new It());
              }
              if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                return (
                  e instanceof Qt
                    ? r.add(e)
                    : e instanceof qt && e.apply(new Mn(r)),
                  r
                );
              }
            });
          var Pn = function() {
            this._locations = null;
            var t = arguments[0];
            this._locations = t;
          };
          (Pn.prototype.filter = function(t) {
            (t instanceof Qt || t instanceof Jt || t instanceof Kt) &&
              this._locations.add(new Cn(t, 0, t.getCoordinate()));
          }),
            (Pn.prototype.interfaces_ = function() {
              return [Bt];
            }),
            (Pn.prototype.getClass = function() {
              return Pn;
            }),
            (Pn.getLocations = function(t) {
              var e = new It();
              return t.apply(new Pn(e)), e;
            });
          var On = function() {
            if (
              ((this._geom = null),
              (this._terminateDistance = 0),
              (this._ptLocator = new Nn()),
              (this._minDistanceLocation = null),
              (this._minDistance = _.MAX_VALUE),
              2 === arguments.length)
            ) {
              var t = arguments[0],
                e = arguments[1];
              (this._geom = [t, e]), (this._terminateDistance = 0);
            } else if (3 === arguments.length) {
              var r = arguments[0],
                n = arguments[1],
                i = arguments[2];
              (this._geom = new Array(2).fill(null)),
                (this._geom[0] = r),
                (this._geom[1] = n),
                (this._terminateDistance = i);
            }
          };
          (On.prototype.computeContainmentDistance = function() {
            if (0 === arguments.length) {
              var t = new Array(2).fill(null);
              if (
                (this.computeContainmentDistance(0, t),
                this._minDistance <= this._terminateDistance)
              )
                return null;
              this.computeContainmentDistance(1, t);
            } else if (2 === arguments.length) {
              var e = arguments[0],
                r = arguments[1],
                n = 1 - e,
                i = In.getPolygons(this._geom[e]);
              if (i.size() > 0) {
                var o = Pn.getLocations(this._geom[n]);
                if (
                  (this.computeContainmentDistance(o, i, r),
                  this._minDistance <= this._terminateDistance)
                )
                  return (
                    (this._minDistanceLocation[n] = r[0]),
                    (this._minDistanceLocation[e] = r[1]),
                    null
                  );
              }
            } else if (3 === arguments.length)
              if (
                arguments[2] instanceof Array &&
                O(arguments[0], St) &&
                O(arguments[1], St)
              ) {
                for (
                  var s = arguments[0],
                    a = arguments[1],
                    l = arguments[2],
                    u = 0;
                  u < s.size();
                  u++
                )
                  for (var h = s.get(u), c = 0; c < a.size(); c++)
                    if (
                      (this.computeContainmentDistance(h, a.get(c), l),
                      this._minDistance <= this._terminateDistance)
                    )
                      return null;
              } else if (
                arguments[2] instanceof Array &&
                arguments[0] instanceof Cn &&
                arguments[1] instanceof Kt
              ) {
                var p = arguments[0],
                  f = arguments[1],
                  d = arguments[2],
                  y = p.getCoordinate();
                if (M.EXTERIOR !== this._ptLocator.locate(y, f))
                  return (
                    (this._minDistance = 0),
                    (d[0] = p),
                    (d[1] = new Cn(f, y)),
                    null
                  );
              }
          }),
            (On.prototype.computeMinDistanceLinesPoints = function(t, e, r) {
              for (var n = 0; n < t.size(); n++)
                for (var i = t.get(n), o = 0; o < e.size(); o++) {
                  var s = e.get(o);
                  if (
                    (this.computeMinDistance(i, s, r),
                    this._minDistance <= this._terminateDistance)
                  )
                    return null;
                }
            }),
            (On.prototype.computeFacetDistance = function() {
              var t = new Array(2).fill(null),
                e = wn.getLines(this._geom[0]),
                r = wn.getLines(this._geom[1]),
                n = Mn.getPoints(this._geom[0]),
                i = Mn.getPoints(this._geom[1]);
              return (
                this.computeMinDistanceLines(e, r, t),
                this.updateMinDistance(t, !1),
                this._minDistance <= this._terminateDistance
                  ? null
                  : ((t[0] = null),
                    (t[1] = null),
                    this.computeMinDistanceLinesPoints(e, i, t),
                    this.updateMinDistance(t, !1),
                    this._minDistance <= this._terminateDistance
                      ? null
                      : ((t[0] = null),
                        (t[1] = null),
                        this.computeMinDistanceLinesPoints(r, n, t),
                        this.updateMinDistance(t, !0),
                        this._minDistance <= this._terminateDistance
                          ? null
                          : ((t[0] = null),
                            (t[1] = null),
                            this.computeMinDistancePoints(n, i, t),
                            void this.updateMinDistance(t, !1))))
              );
            }),
            (On.prototype.nearestLocations = function() {
              return this.computeMinDistance(), this._minDistanceLocation;
            }),
            (On.prototype.updateMinDistance = function(t, e) {
              if (null === t[0]) return null;
              e
                ? ((this._minDistanceLocation[0] = t[1]),
                  (this._minDistanceLocation[1] = t[0]))
                : ((this._minDistanceLocation[0] = t[0]),
                  (this._minDistanceLocation[1] = t[1]));
            }),
            (On.prototype.nearestPoints = function() {
              return (
                this.computeMinDistance(),
                [
                  this._minDistanceLocation[0].getCoordinate(),
                  this._minDistanceLocation[1].getCoordinate()
                ]
              );
            }),
            (On.prototype.computeMinDistance = function() {
              if (0 === arguments.length) {
                if (null !== this._minDistanceLocation) return null;
                if (
                  ((this._minDistanceLocation = new Array(2).fill(null)),
                  this.computeContainmentDistance(),
                  this._minDistance <= this._terminateDistance)
                )
                  return null;
                this.computeFacetDistance();
              } else if (3 === arguments.length)
                if (
                  arguments[2] instanceof Array &&
                  arguments[0] instanceof Jt &&
                  arguments[1] instanceof Qt
                ) {
                  var t = arguments[0],
                    e = arguments[1],
                    r = arguments[2];
                  if (
                    t.getEnvelopeInternal().distance(e.getEnvelopeInternal()) >
                    this._minDistance
                  )
                    return null;
                  for (
                    var n = t.getCoordinates(), i = e.getCoordinate(), o = 0;
                    o < n.length - 1;
                    o++
                  ) {
                    var s = at.distancePointLine(i, n[o], n[o + 1]);
                    if (s < this._minDistance) {
                      this._minDistance = s;
                      var a = new dr(n[o], n[o + 1]).closestPoint(i);
                      (r[0] = new Cn(t, o, a)), (r[1] = new Cn(e, 0, i));
                    }
                    if (this._minDistance <= this._terminateDistance)
                      return null;
                  }
                } else if (
                  arguments[2] instanceof Array &&
                  arguments[0] instanceof Jt &&
                  arguments[1] instanceof Jt
                ) {
                  var l = arguments[0],
                    u = arguments[1],
                    h = arguments[2];
                  if (
                    l.getEnvelopeInternal().distance(u.getEnvelopeInternal()) >
                    this._minDistance
                  )
                    return null;
                  for (
                    var c = l.getCoordinates(), p = u.getCoordinates(), f = 0;
                    f < c.length - 1;
                    f++
                  )
                    for (var d = 0; d < p.length - 1; d++) {
                      var y = at.distanceLineLine(
                        c[f],
                        c[f + 1],
                        p[d],
                        p[d + 1]
                      );
                      if (y < this._minDistance) {
                        this._minDistance = y;
                        var g = new dr(c[f], c[f + 1]),
                          m = new dr(p[d], p[d + 1]),
                          v = g.closestPoints(m);
                        (h[0] = new Cn(l, f, v[0])),
                          (h[1] = new Cn(u, d, v[1]));
                      }
                      if (this._minDistance <= this._terminateDistance)
                        return null;
                    }
                }
            }),
            (On.prototype.computeMinDistancePoints = function(t, e, r) {
              for (var n = 0; n < t.size(); n++)
                for (var i = t.get(n), o = 0; o < e.size(); o++) {
                  var s = e.get(o),
                    a = i.getCoordinate().distance(s.getCoordinate());
                  if (
                    (a < this._minDistance &&
                      ((this._minDistance = a),
                      (r[0] = new Cn(i, 0, i.getCoordinate())),
                      (r[1] = new Cn(s, 0, s.getCoordinate()))),
                    this._minDistance <= this._terminateDistance)
                  )
                    return null;
                }
            }),
            (On.prototype.distance = function() {
              if (null === this._geom[0] || null === this._geom[1])
                throw new v("null geometries are not supported");
              return this._geom[0].isEmpty() || this._geom[1].isEmpty()
                ? 0
                : (this.computeMinDistance(), this._minDistance);
            }),
            (On.prototype.computeMinDistanceLines = function(t, e, r) {
              for (var n = 0; n < t.size(); n++)
                for (var i = t.get(n), o = 0; o < e.size(); o++) {
                  var s = e.get(o);
                  if (
                    (this.computeMinDistance(i, s, r),
                    this._minDistance <= this._terminateDistance)
                  )
                    return null;
                }
            }),
            (On.prototype.interfaces_ = function() {
              return [];
            }),
            (On.prototype.getClass = function() {
              return On;
            }),
            (On.distance = function(t, e) {
              return new On(t, e).distance();
            }),
            (On.isWithinDistance = function(t, e, r) {
              return new On(t, e, r).distance() <= r;
            }),
            (On.nearestPoints = function(t, e) {
              return new On(t, e).nearestPoints();
            });
          var Ln = function() {
            (this._pt = [new w(), new w()]),
              (this._distance = _.NaN),
              (this._isNull = !0);
          };
          (Ln.prototype.getCoordinates = function() {
            return this._pt;
          }),
            (Ln.prototype.getCoordinate = function(t) {
              return this._pt[t];
            }),
            (Ln.prototype.setMinimum = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.setMinimum(t._pt[0], t._pt[1]);
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                if (this._isNull) return this.initialize(e, r), null;
                var n = e.distance(r);
                n < this._distance && this.initialize(e, r, n);
              }
            }),
            (Ln.prototype.initialize = function() {
              if (0 === arguments.length) this._isNull = !0;
              else if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                this._pt[0].setCoordinate(t),
                  this._pt[1].setCoordinate(e),
                  (this._distance = t.distance(e)),
                  (this._isNull = !1);
              } else if (3 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1],
                  i = arguments[2];
                this._pt[0].setCoordinate(r),
                  this._pt[1].setCoordinate(n),
                  (this._distance = i),
                  (this._isNull = !1);
              }
            }),
            (Ln.prototype.toString = function() {
              return Z.toLineString(this._pt[0], this._pt[1]);
            }),
            (Ln.prototype.getDistance = function() {
              return this._distance;
            }),
            (Ln.prototype.setMaximum = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                this.setMaximum(t._pt[0], t._pt[1]);
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                if (this._isNull) return this.initialize(e, r), null;
                var n = e.distance(r);
                n > this._distance && this.initialize(e, r, n);
              }
            }),
            (Ln.prototype.interfaces_ = function() {
              return [];
            }),
            (Ln.prototype.getClass = function() {
              return Ln;
            });
          var Tn = function() {};
          (Tn.prototype.interfaces_ = function() {
            return [];
          }),
            (Tn.prototype.getClass = function() {
              return Tn;
            }),
            (Tn.computeDistance = function() {
              if (
                arguments[2] instanceof Ln &&
                arguments[0] instanceof Jt &&
                arguments[1] instanceof w
              )
                for (
                  var t = arguments[0],
                    e = arguments[1],
                    r = arguments[2],
                    n = new dr(),
                    i = t.getCoordinates(),
                    o = 0;
                  o < i.length - 1;
                  o++
                ) {
                  n.setCoordinates(i[o], i[o + 1]);
                  var s = n.closestPoint(e);
                  r.setMinimum(s, e);
                }
              else if (
                arguments[2] instanceof Ln &&
                arguments[0] instanceof Kt &&
                arguments[1] instanceof w
              ) {
                var a = arguments[0],
                  l = arguments[1],
                  u = arguments[2];
                Tn.computeDistance(a.getExteriorRing(), l, u);
                for (var h = 0; h < a.getNumInteriorRing(); h++)
                  Tn.computeDistance(a.getInteriorRingN(h), l, u);
              } else if (
                arguments[2] instanceof Ln &&
                arguments[0] instanceof ht &&
                arguments[1] instanceof w
              ) {
                var c = arguments[0],
                  p = arguments[1],
                  f = arguments[2];
                if (c instanceof Jt) Tn.computeDistance(c, p, f);
                else if (c instanceof Kt) Tn.computeDistance(c, p, f);
                else if (c instanceof qt)
                  for (var d = c, y = 0; y < d.getNumGeometries(); y++) {
                    var g = d.getGeometryN(y);
                    Tn.computeDistance(g, p, f);
                  }
                else f.setMinimum(c.getCoordinate(), p);
              } else if (
                arguments[2] instanceof Ln &&
                arguments[0] instanceof dr &&
                arguments[1] instanceof w
              ) {
                var m = arguments[1],
                  v = arguments[2],
                  _ = arguments[0].closestPoint(m);
                v.setMinimum(_, m);
              }
            });
          var An = function() {
              (this._g0 = null),
                (this._g1 = null),
                (this._ptDist = new Ln()),
                (this._densifyFrac = 0);
              var t = arguments[0],
                e = arguments[1];
              (this._g0 = t), (this._g1 = e);
            },
            Rn = {
              MaxPointDistanceFilter: { configurable: !0 },
              MaxDensifiedByFractionDistanceFilter: { configurable: !0 }
            };
          (An.prototype.getCoordinates = function() {
            return this._ptDist.getCoordinates();
          }),
            (An.prototype.setDensifyFraction = function(t) {
              if (t > 1 || t <= 0)
                throw new v("Fraction is not in range (0.0 - 1.0]");
              this._densifyFrac = t;
            }),
            (An.prototype.compute = function(t, e) {
              this.computeOrientedDistance(t, e, this._ptDist),
                this.computeOrientedDistance(e, t, this._ptDist);
            }),
            (An.prototype.distance = function() {
              return (
                this.compute(this._g0, this._g1), this._ptDist.getDistance()
              );
            }),
            (An.prototype.computeOrientedDistance = function(t, e, r) {
              var n = new Fn(e);
              if (
                (t.apply(n),
                r.setMaximum(n.getMaxPointDistance()),
                this._densifyFrac > 0)
              ) {
                var i = new Dn(e, this._densifyFrac);
                t.apply(i), r.setMaximum(i.getMaxPointDistance());
              }
            }),
            (An.prototype.orientedDistance = function() {
              return (
                this.computeOrientedDistance(this._g0, this._g1, this._ptDist),
                this._ptDist.getDistance()
              );
            }),
            (An.prototype.interfaces_ = function() {
              return [];
            }),
            (An.prototype.getClass = function() {
              return An;
            }),
            (An.distance = function() {
              if (2 === arguments.length)
                return new An(arguments[0], arguments[1]).distance();
              if (3 === arguments.length) {
                var t = arguments[2],
                  e = new An(arguments[0], arguments[1]);
                return e.setDensifyFraction(t), e.distance();
              }
            }),
            (Rn.MaxPointDistanceFilter.get = function() {
              return Fn;
            }),
            (Rn.MaxDensifiedByFractionDistanceFilter.get = function() {
              return Dn;
            }),
            Object.defineProperties(An, Rn);
          var Fn = function() {
            (this._maxPtDist = new Ln()),
              (this._minPtDist = new Ln()),
              (this._euclideanDist = new Tn()),
              (this._geom = null);
            var t = arguments[0];
            this._geom = t;
          };
          (Fn.prototype.filter = function(t) {
            this._minPtDist.initialize(),
              Tn.computeDistance(this._geom, t, this._minPtDist),
              this._maxPtDist.setMaximum(this._minPtDist);
          }),
            (Fn.prototype.getMaxPointDistance = function() {
              return this._maxPtDist;
            }),
            (Fn.prototype.interfaces_ = function() {
              return [ft];
            }),
            (Fn.prototype.getClass = function() {
              return Fn;
            });
          var Dn = function() {
            (this._maxPtDist = new Ln()),
              (this._minPtDist = new Ln()),
              (this._geom = null),
              (this._numSubSegs = 0);
            var t = arguments[0],
              e = arguments[1];
            (this._geom = t),
              (this._numSubSegs = Math.trunc(Math.round(1 / e)));
          };
          (Dn.prototype.filter = function(t, e) {
            if (0 === e) return null;
            for (
              var r = t.getCoordinate(e - 1),
                n = t.getCoordinate(e),
                i = (n.x - r.x) / this._numSubSegs,
                o = (n.y - r.y) / this._numSubSegs,
                s = 0;
              s < this._numSubSegs;
              s++
            ) {
              var a = r.x + s * i,
                l = r.y + s * o,
                u = new w(a, l);
              this._minPtDist.initialize(),
                Tn.computeDistance(this._geom, u, this._minPtDist),
                this._maxPtDist.setMaximum(this._minPtDist);
            }
          }),
            (Dn.prototype.isDone = function() {
              return !1;
            }),
            (Dn.prototype.isGeometryChanged = function() {
              return !1;
            }),
            (Dn.prototype.getMaxPointDistance = function() {
              return this._maxPtDist;
            }),
            (Dn.prototype.interfaces_ = function() {
              return [kt];
            }),
            (Dn.prototype.getClass = function() {
              return Dn;
            });
          var jn = function(t, e, r) {
              (this._minValidDistance = null),
                (this._maxValidDistance = null),
                (this._minDistanceFound = null),
                (this._maxDistanceFound = null),
                (this._isValid = !0),
                (this._errMsg = null),
                (this._errorLocation = null),
                (this._errorIndicator = null),
                (this._input = t || null),
                (this._bufDistance = e || null),
                (this._result = r || null);
            },
            Un = {
              VERBOSE: { configurable: !0 },
              MAX_DISTANCE_DIFF_FRAC: { configurable: !0 }
            };
          (jn.prototype.checkMaximumDistance = function(t, e, r) {
            var n = new An(e, t);
            if (
              (n.setDensifyFraction(0.25),
              (this._maxDistanceFound = n.orientedDistance()),
              this._maxDistanceFound > r)
            ) {
              this._isValid = !1;
              var i = n.getCoordinates();
              (this._errorLocation = i[1]),
                (this._errorIndicator = t.getFactory().createLineString(i)),
                (this._errMsg =
                  "Distance between buffer curve and input is too large (" +
                  this._maxDistanceFound +
                  " at " +
                  Z.toLineString(i[0], i[1]) +
                  ")");
            }
          }),
            (jn.prototype.isValid = function() {
              var t = Math.abs(this._bufDistance),
                e = jn.MAX_DISTANCE_DIFF_FRAC * t;
              return (
                (this._minValidDistance = t - e),
                (this._maxValidDistance = t + e),
                !(!this._input.isEmpty() && !this._result.isEmpty()) ||
                  (this._bufDistance > 0
                    ? this.checkPositiveValid()
                    : this.checkNegativeValid(),
                  jn.VERBOSE &&
                    V.out.println(
                      "Min Dist= " +
                        this._minDistanceFound +
                        "  err= " +
                        (1 - this._minDistanceFound / this._bufDistance) +
                        "  Max Dist= " +
                        this._maxDistanceFound +
                        "  err= " +
                        (this._maxDistanceFound / this._bufDistance - 1)
                    ),
                  this._isValid)
              );
            }),
            (jn.prototype.checkNegativeValid = function() {
              if (
                !(
                  this._input instanceof Kt ||
                  this._input instanceof re ||
                  this._input instanceof qt
                )
              )
                return null;
              var t = this.getPolygonLines(this._input);
              if (
                (this.checkMinimumDistance(
                  t,
                  this._result,
                  this._minValidDistance
                ),
                !this._isValid)
              )
                return null;
              this.checkMaximumDistance(
                t,
                this._result,
                this._maxValidDistance
              );
            }),
            (jn.prototype.getErrorIndicator = function() {
              return this._errorIndicator;
            }),
            (jn.prototype.checkMinimumDistance = function(t, e, r) {
              var n = new On(t, e, r);
              if (
                ((this._minDistanceFound = n.distance()),
                this._minDistanceFound < r)
              ) {
                this._isValid = !1;
                var i = n.nearestPoints();
                (this._errorLocation = n.nearestPoints()[1]),
                  (this._errorIndicator = t.getFactory().createLineString(i)),
                  (this._errMsg =
                    "Distance between buffer curve and input is too small (" +
                    this._minDistanceFound +
                    " at " +
                    Z.toLineString(i[0], i[1]) +
                    " )");
              }
            }),
            (jn.prototype.checkPositiveValid = function() {
              var t = this._result.getBoundary();
              if (
                (this.checkMinimumDistance(
                  this._input,
                  t,
                  this._minValidDistance
                ),
                !this._isValid)
              )
                return null;
              this.checkMaximumDistance(this._input, t, this._maxValidDistance);
            }),
            (jn.prototype.getErrorLocation = function() {
              return this._errorLocation;
            }),
            (jn.prototype.getPolygonLines = function(t) {
              for (
                var e = new It(),
                  r = new wn(e),
                  n = In.getPolygons(t).iterator();
                n.hasNext();

              )
                n.next().apply(r);
              return t.getFactory().buildGeometry(e);
            }),
            (jn.prototype.getErrorMessage = function() {
              return this._errMsg;
            }),
            (jn.prototype.interfaces_ = function() {
              return [];
            }),
            (jn.prototype.getClass = function() {
              return jn;
            }),
            (Un.VERBOSE.get = function() {
              return !1;
            }),
            (Un.MAX_DISTANCE_DIFF_FRAC.get = function() {
              return 0.012;
            }),
            Object.defineProperties(jn, Un);
          var Gn = function(t, e, r) {
              (this._isValid = !0),
                (this._errorMsg = null),
                (this._errorLocation = null),
                (this._errorIndicator = null),
                (this._input = t || null),
                (this._distance = e || null),
                (this._result = r || null);
            },
            Bn = {
              VERBOSE: { configurable: !0 },
              MAX_ENV_DIFF_FRAC: { configurable: !0 }
            };
          (Gn.prototype.isValid = function() {
            return (
              this.checkPolygonal(),
              this._isValid
                ? (this.checkExpectedEmpty(),
                  this._isValid
                    ? (this.checkEnvelope(),
                      this._isValid
                        ? (this.checkArea(),
                          this._isValid
                            ? (this.checkDistance(), this._isValid)
                            : this._isValid)
                        : this._isValid)
                    : this._isValid)
                : this._isValid
            );
          }),
            (Gn.prototype.checkEnvelope = function() {
              if (this._distance < 0) return null;
              var t = this._distance * Gn.MAX_ENV_DIFF_FRAC;
              0 === t && (t = 0.001);
              var e = new X(this._input.getEnvelopeInternal());
              e.expandBy(this._distance);
              var r = new X(this._result.getEnvelopeInternal());
              r.expandBy(t),
                r.contains(e) ||
                  ((this._isValid = !1),
                  (this._errorMsg = "Buffer envelope is incorrect"),
                  (this._errorIndicator = this._input
                    .getFactory()
                    .toGeometry(r))),
                this.report("Envelope");
            }),
            (Gn.prototype.checkDistance = function() {
              var t = new jn(this._input, this._distance, this._result);
              t.isValid() ||
                ((this._isValid = !1),
                (this._errorMsg = t.getErrorMessage()),
                (this._errorLocation = t.getErrorLocation()),
                (this._errorIndicator = t.getErrorIndicator())),
                this.report("Distance");
            }),
            (Gn.prototype.checkArea = function() {
              var t = this._input.getArea(),
                e = this._result.getArea();
              this._distance > 0 &&
                t > e &&
                ((this._isValid = !1),
                (this._errorMsg =
                  "Area of positive buffer is smaller than input"),
                (this._errorIndicator = this._result)),
                this._distance < 0 &&
                  t < e &&
                  ((this._isValid = !1),
                  (this._errorMsg =
                    "Area of negative buffer is larger than input"),
                  (this._errorIndicator = this._result)),
                this.report("Area");
            }),
            (Gn.prototype.checkPolygonal = function() {
              this._result instanceof Kt ||
                this._result instanceof re ||
                (this._isValid = !1),
                (this._errorMsg = "Result is not polygonal"),
                (this._errorIndicator = this._result),
                this.report("Polygonal");
            }),
            (Gn.prototype.getErrorIndicator = function() {
              return this._errorIndicator;
            }),
            (Gn.prototype.getErrorLocation = function() {
              return this._errorLocation;
            }),
            (Gn.prototype.checkExpectedEmpty = function() {
              return this._input.getDimension() >= 2 || this._distance > 0
                ? null
                : (this._result.isEmpty() ||
                    ((this._isValid = !1),
                    (this._errorMsg = "Result is non-empty"),
                    (this._errorIndicator = this._result)),
                  void this.report("ExpectedEmpty"));
            }),
            (Gn.prototype.report = function(t) {
              if (!Gn.VERBOSE) return null;
              V.out.println(
                "Check " + t + ": " + (this._isValid ? "passed" : "FAILED")
              );
            }),
            (Gn.prototype.getErrorMessage = function() {
              return this._errorMsg;
            }),
            (Gn.prototype.interfaces_ = function() {
              return [];
            }),
            (Gn.prototype.getClass = function() {
              return Gn;
            }),
            (Gn.isValidMsg = function(t, e, r) {
              var n = new Gn(t, e, r);
              return n.isValid() ? null : n.getErrorMessage();
            }),
            (Gn.isValid = function(t, e, r) {
              return !!new Gn(t, e, r).isValid();
            }),
            (Bn.VERBOSE.get = function() {
              return !1;
            }),
            (Bn.MAX_ENV_DIFF_FRAC.get = function() {
              return 0.012;
            }),
            Object.defineProperties(Gn, Bn);
          var kn = function() {
            (this._pts = null), (this._data = null);
            var t = arguments[0],
              e = arguments[1];
            (this._pts = t), (this._data = e);
          };
          (kn.prototype.getCoordinates = function() {
            return this._pts;
          }),
            (kn.prototype.size = function() {
              return this._pts.length;
            }),
            (kn.prototype.getCoordinate = function(t) {
              return this._pts[t];
            }),
            (kn.prototype.isClosed = function() {
              return this._pts[0].equals(this._pts[this._pts.length - 1]);
            }),
            (kn.prototype.getSegmentOctant = function(t) {
              return t === this._pts.length - 1
                ? -1
                : hr.octant(this.getCoordinate(t), this.getCoordinate(t + 1));
            }),
            (kn.prototype.setData = function(t) {
              this._data = t;
            }),
            (kn.prototype.getData = function() {
              return this._data;
            }),
            (kn.prototype.toString = function() {
              return Z.toLineString(new le(this._pts));
            }),
            (kn.prototype.interfaces_ = function() {
              return [cr];
            }),
            (kn.prototype.getClass = function() {
              return kn;
            });
          var qn = function() {
            (this._findAllIntersections = !1),
              (this._isCheckEndSegmentsOnly = !1),
              (this._li = null),
              (this._interiorIntersection = null),
              (this._intSegments = null),
              (this._intersections = new It()),
              (this._intersectionCount = 0),
              (this._keepIntersections = !0);
            var t = arguments[0];
            (this._li = t), (this._interiorIntersection = null);
          };
          (qn.prototype.getInteriorIntersection = function() {
            return this._interiorIntersection;
          }),
            (qn.prototype.setCheckEndSegmentsOnly = function(t) {
              this._isCheckEndSegmentsOnly = t;
            }),
            (qn.prototype.getIntersectionSegments = function() {
              return this._intSegments;
            }),
            (qn.prototype.count = function() {
              return this._intersectionCount;
            }),
            (qn.prototype.getIntersections = function() {
              return this._intersections;
            }),
            (qn.prototype.setFindAllIntersections = function(t) {
              this._findAllIntersections = t;
            }),
            (qn.prototype.setKeepIntersections = function(t) {
              this._keepIntersections = t;
            }),
            (qn.prototype.processIntersections = function(t, e, r, n) {
              if (!this._findAllIntersections && this.hasIntersection())
                return null;
              if (t === r && e === n) return null;
              if (
                this._isCheckEndSegmentsOnly &&
                !this.isEndSegment(t, e) &&
                !this.isEndSegment(r, n)
              )
                return null;
              var i = t.getCoordinates()[e],
                o = t.getCoordinates()[e + 1],
                s = r.getCoordinates()[n],
                a = r.getCoordinates()[n + 1];
              this._li.computeIntersection(i, o, s, a),
                this._li.hasIntersection() &&
                  this._li.isInteriorIntersection() &&
                  ((this._intSegments = new Array(4).fill(null)),
                  (this._intSegments[0] = i),
                  (this._intSegments[1] = o),
                  (this._intSegments[2] = s),
                  (this._intSegments[3] = a),
                  (this._interiorIntersection = this._li.getIntersection(0)),
                  this._keepIntersections &&
                    this._intersections.add(this._interiorIntersection),
                  this._intersectionCount++);
            }),
            (qn.prototype.isEndSegment = function(t, e) {
              return 0 === e || e >= t.size() - 2;
            }),
            (qn.prototype.hasIntersection = function() {
              return null !== this._interiorIntersection;
            }),
            (qn.prototype.isDone = function() {
              return (
                !this._findAllIntersections &&
                null !== this._interiorIntersection
              );
            }),
            (qn.prototype.interfaces_ = function() {
              return [Yr];
            }),
            (qn.prototype.getClass = function() {
              return qn;
            }),
            (qn.createAllIntersectionsFinder = function(t) {
              var e = new qn(t);
              return e.setFindAllIntersections(!0), e;
            }),
            (qn.createAnyIntersectionFinder = function(t) {
              return new qn(t);
            }),
            (qn.createIntersectionCounter = function(t) {
              var e = new qn(t);
              return (
                e.setFindAllIntersections(!0), e.setKeepIntersections(!1), e
              );
            });
          var zn = function() {
            (this._li = new it()),
              (this._segStrings = null),
              (this._findAllIntersections = !1),
              (this._segInt = null),
              (this._isValid = !0);
            var t = arguments[0];
            this._segStrings = t;
          };
          (zn.prototype.execute = function() {
            if (null !== this._segInt) return null;
            this.checkInteriorIntersections();
          }),
            (zn.prototype.getIntersections = function() {
              return this._segInt.getIntersections();
            }),
            (zn.prototype.isValid = function() {
              return this.execute(), this._isValid;
            }),
            (zn.prototype.setFindAllIntersections = function(t) {
              this._findAllIntersections = t;
            }),
            (zn.prototype.checkInteriorIntersections = function() {
              (this._isValid = !0),
                (this._segInt = new qn(this._li)),
                this._segInt.setFindAllIntersections(
                  this._findAllIntersections
                );
              var t = new br();
              if (
                (t.setSegmentIntersector(this._segInt),
                t.computeNodes(this._segStrings),
                this._segInt.hasIntersection())
              )
                return (this._isValid = !1), null;
            }),
            (zn.prototype.checkValid = function() {
              if ((this.execute(), !this._isValid))
                throw new Me(
                  this.getErrorMessage(),
                  this._segInt.getInteriorIntersection()
                );
            }),
            (zn.prototype.getErrorMessage = function() {
              if (this._isValid) return "no intersections found";
              var t = this._segInt.getIntersectionSegments();
              return (
                "found non-noded intersection between " +
                Z.toLineString(t[0], t[1]) +
                " and " +
                Z.toLineString(t[2], t[3])
              );
            }),
            (zn.prototype.interfaces_ = function() {
              return [];
            }),
            (zn.prototype.getClass = function() {
              return zn;
            }),
            (zn.computeIntersections = function(t) {
              var e = new zn(t);
              return (
                e.setFindAllIntersections(!0), e.isValid(), e.getIntersections()
              );
            });
          var Vn = function t() {
            this._nv = null;
            var e = arguments[0];
            this._nv = new zn(t.toSegmentStrings(e));
          };
          (Vn.prototype.checkValid = function() {
            this._nv.checkValid();
          }),
            (Vn.prototype.interfaces_ = function() {
              return [];
            }),
            (Vn.prototype.getClass = function() {
              return Vn;
            }),
            (Vn.toSegmentStrings = function(t) {
              for (var e = new It(), r = t.iterator(); r.hasNext(); ) {
                var n = r.next();
                e.add(new kn(n.getCoordinates(), n));
              }
              return e;
            }),
            (Vn.checkValid = function(t) {
              new Vn(t).checkValid();
            });
          var Wn = function(t) {
            this._mapOp = t;
          };
          (Wn.prototype.map = function(t) {
            for (var e = new It(), r = 0; r < t.getNumGeometries(); r++) {
              var n = this._mapOp.map(t.getGeometryN(r));
              n.isEmpty() || e.add(n);
            }
            return t
              .getFactory()
              .createGeometryCollection(me.toGeometryArray(e));
          }),
            (Wn.prototype.interfaces_ = function() {
              return [];
            }),
            (Wn.prototype.getClass = function() {
              return Wn;
            }),
            (Wn.map = function(t, e) {
              return new Wn(e).map(t);
            });
          var Xn = function() {
            (this._op = null),
              (this._geometryFactory = null),
              (this._ptLocator = null),
              (this._lineEdgesList = new It()),
              (this._resultLineList = new It());
            var t = arguments[0],
              e = arguments[1],
              r = arguments[2];
            (this._op = t), (this._geometryFactory = e), (this._ptLocator = r);
          };
          (Xn.prototype.collectLines = function(t) {
            for (
              var e = this._op
                .getGraph()
                .getEdgeEnds()
                .iterator();
              e.hasNext();

            ) {
              var r = e.next();
              this.collectLineEdge(r, t, this._lineEdgesList),
                this.collectBoundaryTouchEdge(r, t, this._lineEdgesList);
            }
          }),
            (Xn.prototype.labelIsolatedLine = function(t, e) {
              var r = this._ptLocator.locate(
                t.getCoordinate(),
                this._op.getArgGeometry(e)
              );
              t.getLabel().setLocation(e, r);
            }),
            (Xn.prototype.build = function(t) {
              return (
                this.findCoveredLineEdges(),
                this.collectLines(t),
                this.buildLines(t),
                this._resultLineList
              );
            }),
            (Xn.prototype.collectLineEdge = function(t, e, r) {
              var n = t.getLabel(),
                i = t.getEdge();
              t.isLineEdge() &&
                (t.isVisited() ||
                  !Ci.isResultOfOp(n, e) ||
                  i.isCovered() ||
                  (r.add(i), t.setVisitedEdge(!0)));
            }),
            (Xn.prototype.findCoveredLineEdges = function() {
              for (
                var t = this._op
                  .getGraph()
                  .getNodes()
                  .iterator();
                t.hasNext();

              )
                t.next()
                  .getEdges()
                  .findCoveredLineEdges();
              for (
                var e = this._op
                  .getGraph()
                  .getEdgeEnds()
                  .iterator();
                e.hasNext();

              ) {
                var r = e.next(),
                  n = r.getEdge();
                if (r.isLineEdge() && !n.isCoveredSet()) {
                  var i = this._op.isCoveredByA(r.getCoordinate());
                  n.setCovered(i);
                }
              }
            }),
            (Xn.prototype.labelIsolatedLines = function(t) {
              for (var e = t.iterator(); e.hasNext(); ) {
                var r = e.next(),
                  n = r.getLabel();
                r.isIsolated() &&
                  (n.isNull(0)
                    ? this.labelIsolatedLine(r, 0)
                    : this.labelIsolatedLine(r, 1));
              }
            }),
            (Xn.prototype.buildLines = function(t) {
              for (var e = this._lineEdgesList.iterator(); e.hasNext(); ) {
                var r = e.next(),
                  n = this._geometryFactory.createLineString(
                    r.getCoordinates()
                  );
                this._resultLineList.add(n), r.setInResult(!0);
              }
            }),
            (Xn.prototype.collectBoundaryTouchEdge = function(t, e, r) {
              var n = t.getLabel();
              return t.isLineEdge() ||
                t.isVisited() ||
                t.isInteriorAreaEdge() ||
                t.getEdge().isInResult()
                ? null
                : (et.isTrue(
                    !(t.isInResult() || t.getSym().isInResult()) ||
                      !t.getEdge().isInResult()
                  ),
                  void (
                    Ci.isResultOfOp(n, e) &&
                    e === Ci.INTERSECTION &&
                    (r.add(t.getEdge()), t.setVisitedEdge(!0))
                  ));
            }),
            (Xn.prototype.interfaces_ = function() {
              return [];
            }),
            (Xn.prototype.getClass = function() {
              return Xn;
            });
          var Yn = function() {
            (this._op = null),
              (this._geometryFactory = null),
              (this._resultPointList = new It());
            var t = arguments[0],
              e = arguments[1];
            (this._op = t), (this._geometryFactory = e);
          };
          (Yn.prototype.filterCoveredNodeToPoint = function(t) {
            var e = t.getCoordinate();
            if (!this._op.isCoveredByLA(e)) {
              var r = this._geometryFactory.createPoint(e);
              this._resultPointList.add(r);
            }
          }),
            (Yn.prototype.extractNonCoveredResultNodes = function(t) {
              for (
                var e = this._op
                  .getGraph()
                  .getNodes()
                  .iterator();
                e.hasNext();

              ) {
                var r = e.next();
                if (
                  !(
                    r.isInResult() ||
                    r.isIncidentEdgeInResult() ||
                    (0 !== r.getEdges().getDegree() && t !== Ci.INTERSECTION)
                  )
                ) {
                  var n = r.getLabel();
                  Ci.isResultOfOp(n, t) && this.filterCoveredNodeToPoint(r);
                }
              }
            }),
            (Yn.prototype.build = function(t) {
              return (
                this.extractNonCoveredResultNodes(t), this._resultPointList
              );
            }),
            (Yn.prototype.interfaces_ = function() {
              return [];
            }),
            (Yn.prototype.getClass = function() {
              return Yn;
            });
          var Hn = function() {
            (this._inputGeom = null),
              (this._factory = null),
              (this._pruneEmptyGeometry = !0),
              (this._preserveGeometryCollectionType = !0),
              (this._preserveCollections = !1),
              (this._preserveType = !1);
          };
          (Hn.prototype.transformPoint = function(t, e) {
            return this._factory.createPoint(
              this.transformCoordinates(t.getCoordinateSequence(), t)
            );
          }),
            (Hn.prototype.transformPolygon = function(t, e) {
              var r = !0,
                n = this.transformLinearRing(t.getExteriorRing(), t);
              (null !== n && n instanceof ee && !n.isEmpty()) || (r = !1);
              for (var i = new It(), o = 0; o < t.getNumInteriorRing(); o++) {
                var s = this.transformLinearRing(t.getInteriorRingN(o), t);
                null === s ||
                  s.isEmpty() ||
                  (s instanceof ee || (r = !1), i.add(s));
              }
              if (r) return this._factory.createPolygon(n, i.toArray([]));
              var a = new It();
              return (
                null !== n && a.add(n),
                a.addAll(i),
                this._factory.buildGeometry(a)
              );
            }),
            (Hn.prototype.createCoordinateSequence = function(t) {
              return this._factory.getCoordinateSequenceFactory().create(t);
            }),
            (Hn.prototype.getInputGeometry = function() {
              return this._inputGeom;
            }),
            (Hn.prototype.transformMultiLineString = function(t, e) {
              for (var r = new It(), n = 0; n < t.getNumGeometries(); n++) {
                var i = this.transformLineString(t.getGeometryN(n), t);
                null !== i && (i.isEmpty() || r.add(i));
              }
              return this._factory.buildGeometry(r);
            }),
            (Hn.prototype.transformCoordinates = function(t, e) {
              return this.copy(t);
            }),
            (Hn.prototype.transformLineString = function(t, e) {
              return this._factory.createLineString(
                this.transformCoordinates(t.getCoordinateSequence(), t)
              );
            }),
            (Hn.prototype.transformMultiPoint = function(t, e) {
              for (var r = new It(), n = 0; n < t.getNumGeometries(); n++) {
                var i = this.transformPoint(t.getGeometryN(n), t);
                null !== i && (i.isEmpty() || r.add(i));
              }
              return this._factory.buildGeometry(r);
            }),
            (Hn.prototype.transformMultiPolygon = function(t, e) {
              for (var r = new It(), n = 0; n < t.getNumGeometries(); n++) {
                var i = this.transformPolygon(t.getGeometryN(n), t);
                null !== i && (i.isEmpty() || r.add(i));
              }
              return this._factory.buildGeometry(r);
            }),
            (Hn.prototype.copy = function(t) {
              return t.copy();
            }),
            (Hn.prototype.transformGeometryCollection = function(t, e) {
              for (var r = new It(), n = 0; n < t.getNumGeometries(); n++) {
                var i = this.transform(t.getGeometryN(n));
                null !== i &&
                  ((this._pruneEmptyGeometry && i.isEmpty()) || r.add(i));
              }
              return this._preserveGeometryCollectionType
                ? this._factory.createGeometryCollection(me.toGeometryArray(r))
                : this._factory.buildGeometry(r);
            }),
            (Hn.prototype.transform = function(t) {
              if (
                ((this._inputGeom = t),
                (this._factory = t.getFactory()),
                t instanceof Qt)
              )
                return this.transformPoint(t, null);
              if (t instanceof te) return this.transformMultiPoint(t, null);
              if (t instanceof ee) return this.transformLinearRing(t, null);
              if (t instanceof Jt) return this.transformLineString(t, null);
              if (t instanceof zt)
                return this.transformMultiLineString(t, null);
              if (t instanceof Kt) return this.transformPolygon(t, null);
              if (t instanceof re) return this.transformMultiPolygon(t, null);
              if (t instanceof qt)
                return this.transformGeometryCollection(t, null);
              throw new v(
                "Unknown Geometry subtype: " + t.getClass().getName()
              );
            }),
            (Hn.prototype.transformLinearRing = function(t, e) {
              var r = this.transformCoordinates(t.getCoordinateSequence(), t);
              if (null === r) return this._factory.createLinearRing(null);
              var n = r.size();
              return n > 0 && n < 4 && !this._preserveType
                ? this._factory.createLineString(r)
                : this._factory.createLinearRing(r);
            }),
            (Hn.prototype.interfaces_ = function() {
              return [];
            }),
            (Hn.prototype.getClass = function() {
              return Hn;
            });
          var Jn = function t() {
            if (
              ((this._snapTolerance = 0),
              (this._srcPts = null),
              (this._seg = new dr()),
              (this._allowSnappingToSourceVertices = !1),
              (this._isClosed = !1),
              arguments[0] instanceof Jt && "number" == typeof arguments[1])
            ) {
              var e = arguments[1];
              t.call(this, arguments[0].getCoordinates(), e);
            } else if (
              arguments[0] instanceof Array &&
              "number" == typeof arguments[1]
            ) {
              var r = arguments[0],
                n = arguments[1];
              (this._srcPts = r),
                (this._isClosed = t.isClosed(r)),
                (this._snapTolerance = n);
            }
          };
          (Jn.prototype.snapVertices = function(t, e) {
            for (
              var r = this._isClosed ? t.size() - 1 : t.size(), n = 0;
              n < r;
              n++
            ) {
              var i = t.get(n),
                o = this.findSnapForVertex(i, e);
              null !== o &&
                (t.set(n, new w(o)),
                0 === n && this._isClosed && t.set(t.size() - 1, new w(o)));
            }
          }),
            (Jn.prototype.findSnapForVertex = function(t, e) {
              for (var r = 0; r < e.length; r++) {
                if (t.equals2D(e[r])) return null;
                if (t.distance(e[r]) < this._snapTolerance) return e[r];
              }
              return null;
            }),
            (Jn.prototype.snapTo = function(t) {
              var e = new Nt(this._srcPts);
              return (
                this.snapVertices(e, t),
                this.snapSegments(e, t),
                e.toCoordinateArray()
              );
            }),
            (Jn.prototype.snapSegments = function(t, e) {
              if (0 === e.length) return null;
              var r = e.length;
              e[0].equals2D(e[e.length - 1]) && (r = e.length - 1);
              for (var n = 0; n < r; n++) {
                var i = e[n],
                  o = this.findSegmentIndexToSnap(i, t);
                o >= 0 && t.add(o + 1, new w(i), !1);
              }
            }),
            (Jn.prototype.findSegmentIndexToSnap = function(t, e) {
              for (var r = _.MAX_VALUE, n = -1, i = 0; i < e.size() - 1; i++) {
                if (
                  ((this._seg.p0 = e.get(i)),
                  (this._seg.p1 = e.get(i + 1)),
                  this._seg.p0.equals2D(t) || this._seg.p1.equals2D(t))
                ) {
                  if (this._allowSnappingToSourceVertices) continue;
                  return -1;
                }
                var o = this._seg.distance(t);
                o < this._snapTolerance && o < r && ((r = o), (n = i));
              }
              return n;
            }),
            (Jn.prototype.setAllowSnappingToSourceVertices = function(t) {
              this._allowSnappingToSourceVertices = t;
            }),
            (Jn.prototype.interfaces_ = function() {
              return [];
            }),
            (Jn.prototype.getClass = function() {
              return Jn;
            }),
            (Jn.isClosed = function(t) {
              return !(t.length <= 1) && t[0].equals2D(t[t.length - 1]);
            });
          var $n = function(t) {
              this._srcGeom = t || null;
            },
            Qn = { SNAP_PRECISION_FACTOR: { configurable: !0 } };
          ($n.prototype.snapTo = function(t, e) {
            var r = this.extractTargetCoordinates(t);
            return new Zn(e, r).transform(this._srcGeom);
          }),
            ($n.prototype.snapToSelf = function(t, e) {
              var r = this.extractTargetCoordinates(this._srcGeom),
                n = new Zn(t, r, !0).transform(this._srcGeom),
                i = n;
              return e && O(i, Zt) && (i = n.buffer(0)), i;
            }),
            ($n.prototype.computeSnapTolerance = function(t) {
              return this.computeMinimumSegmentLength(t) / 10;
            }),
            ($n.prototype.extractTargetCoordinates = function(t) {
              for (
                var e = new f(), r = t.getCoordinates(), n = 0;
                n < r.length;
                n++
              )
                e.add(r[n]);
              return e.toArray(new Array(0).fill(null));
            }),
            ($n.prototype.computeMinimumSegmentLength = function(t) {
              for (var e = _.MAX_VALUE, r = 0; r < t.length - 1; r++) {
                var n = t[r].distance(t[r + 1]);
                n < e && (e = n);
              }
              return e;
            }),
            ($n.prototype.interfaces_ = function() {
              return [];
            }),
            ($n.prototype.getClass = function() {
              return $n;
            }),
            ($n.snap = function(t, e, r) {
              var n = new Array(2).fill(null),
                i = new $n(t);
              n[0] = i.snapTo(e, r);
              var o = new $n(e);
              return (n[1] = o.snapTo(n[0], r)), n;
            }),
            ($n.computeOverlaySnapTolerance = function() {
              if (1 === arguments.length) {
                var t = arguments[0],
                  e = $n.computeSizeBasedSnapTolerance(t),
                  r = t.getPrecisionModel();
                if (r.getType() === fe.FIXED) {
                  var n = ((1 / r.getScale()) * 2) / 1.415;
                  n > e && (e = n);
                }
                return e;
              }
              if (2 === arguments.length) {
                var i = arguments[0],
                  o = arguments[1];
                return Math.min(
                  $n.computeOverlaySnapTolerance(i),
                  $n.computeOverlaySnapTolerance(o)
                );
              }
            }),
            ($n.computeSizeBasedSnapTolerance = function(t) {
              var e = t.getEnvelopeInternal();
              return (
                Math.min(e.getHeight(), e.getWidth()) * $n.SNAP_PRECISION_FACTOR
              );
            }),
            ($n.snapToSelf = function(t, e, r) {
              return new $n(t).snapToSelf(e, r);
            }),
            (Qn.SNAP_PRECISION_FACTOR.get = function() {
              return 1e-9;
            }),
            Object.defineProperties($n, Qn);
          var Zn = (function(t) {
              function e(e, r, n) {
                t.call(this),
                  (this._snapTolerance = e || null),
                  (this._snapPts = r || null),
                  (this._isSelfSnap = void 0 !== n && n);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.snapLine = function(t, e) {
                  var r = new Jn(t, this._snapTolerance);
                  return (
                    r.setAllowSnappingToSourceVertices(this._isSelfSnap),
                    r.snapTo(e)
                  );
                }),
                (e.prototype.transformCoordinates = function(t, e) {
                  var r = t.toCoordinateArray(),
                    n = this.snapLine(r, this._snapPts);
                  return this._factory.getCoordinateSequenceFactory().create(n);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(Hn),
            Kn = function() {
              (this._isFirst = !0),
                (this._commonMantissaBitsCount = 53),
                (this._commonBits = 0),
                (this._commonSignExp = null);
            };
          (Kn.prototype.getCommon = function() {
            return _.longBitsToDouble(this._commonBits);
          }),
            (Kn.prototype.add = function(t) {
              var e = _.doubleToLongBits(t);
              return this._isFirst
                ? ((this._commonBits = e),
                  (this._commonSignExp = Kn.signExpBits(this._commonBits)),
                  (this._isFirst = !1),
                  null)
                : Kn.signExpBits(e) !== this._commonSignExp
                ? ((this._commonBits = 0), null)
                : ((this._commonMantissaBitsCount = Kn.numCommonMostSigMantissaBits(
                    this._commonBits,
                    e
                  )),
                  void (this._commonBits = Kn.zeroLowerBits(
                    this._commonBits,
                    64 - (12 + this._commonMantissaBitsCount)
                  )));
            }),
            (Kn.prototype.toString = function() {
              if (1 === arguments.length) {
                var t = arguments[0],
                  e = _.longBitsToDouble(t),
                  r =
                    "0000000000000000000000000000000000000000000000000000000000000000" +
                    _.toBinaryString(t),
                  n = r.substring(r.length - 64);
                return (
                  n.substring(0, 1) +
                  "  " +
                  n.substring(1, 12) +
                  "(exp) " +
                  n.substring(12) +
                  " [ " +
                  e +
                  " ]"
                );
              }
            }),
            (Kn.prototype.interfaces_ = function() {
              return [];
            }),
            (Kn.prototype.getClass = function() {
              return Kn;
            }),
            (Kn.getBit = function(t, e) {
              return 0 != (t & (1 << e)) ? 1 : 0;
            }),
            (Kn.signExpBits = function(t) {
              return t >> 52;
            }),
            (Kn.zeroLowerBits = function(t, e) {
              return t & ~((1 << e) - 1);
            }),
            (Kn.numCommonMostSigMantissaBits = function(t, e) {
              for (var r = 0, n = 52; n >= 0; n--) {
                if (Kn.getBit(t, n) !== Kn.getBit(e, n)) return r;
                r++;
              }
              return 52;
            });
          var ti = function() {
              (this._commonCoord = null), (this._ccFilter = new ri());
            },
            ei = {
              CommonCoordinateFilter: { configurable: !0 },
              Translater: { configurable: !0 }
            };
          (ti.prototype.addCommonBits = function(t) {
            var e = new ni(this._commonCoord);
            t.apply(e), t.geometryChanged();
          }),
            (ti.prototype.removeCommonBits = function(t) {
              if (0 === this._commonCoord.x && 0 === this._commonCoord.y)
                return t;
              var e = new w(this._commonCoord);
              (e.x = -e.x), (e.y = -e.y);
              var r = new ni(e);
              return t.apply(r), t.geometryChanged(), t;
            }),
            (ti.prototype.getCommonCoordinate = function() {
              return this._commonCoord;
            }),
            (ti.prototype.add = function(t) {
              t.apply(this._ccFilter),
                (this._commonCoord = this._ccFilter.getCommonCoordinate());
            }),
            (ti.prototype.interfaces_ = function() {
              return [];
            }),
            (ti.prototype.getClass = function() {
              return ti;
            }),
            (ei.CommonCoordinateFilter.get = function() {
              return ri;
            }),
            (ei.Translater.get = function() {
              return ni;
            }),
            Object.defineProperties(ti, ei);
          var ri = function() {
            (this._commonBitsX = new Kn()), (this._commonBitsY = new Kn());
          };
          (ri.prototype.filter = function(t) {
            this._commonBitsX.add(t.x), this._commonBitsY.add(t.y);
          }),
            (ri.prototype.getCommonCoordinate = function() {
              return new w(
                this._commonBitsX.getCommon(),
                this._commonBitsY.getCommon()
              );
            }),
            (ri.prototype.interfaces_ = function() {
              return [ft];
            }),
            (ri.prototype.getClass = function() {
              return ri;
            });
          var ni = function() {
            this.trans = null;
            var t = arguments[0];
            this.trans = t;
          };
          (ni.prototype.filter = function(t, e) {
            var r = t.getOrdinate(e, 0) + this.trans.x,
              n = t.getOrdinate(e, 1) + this.trans.y;
            t.setOrdinate(e, 0, r), t.setOrdinate(e, 1, n);
          }),
            (ni.prototype.isDone = function() {
              return !1;
            }),
            (ni.prototype.isGeometryChanged = function() {
              return !0;
            }),
            (ni.prototype.interfaces_ = function() {
              return [kt];
            }),
            (ni.prototype.getClass = function() {
              return ni;
            });
          var ii = function(t, e) {
            (this._geom = new Array(2).fill(null)),
              (this._snapTolerance = null),
              (this._cbr = null),
              (this._geom[0] = t),
              (this._geom[1] = e),
              this.computeSnapTolerance();
          };
          (ii.prototype.selfSnap = function(t) {
            return new $n(t).snapTo(t, this._snapTolerance);
          }),
            (ii.prototype.removeCommonBits = function(t) {
              (this._cbr = new ti()), this._cbr.add(t[0]), this._cbr.add(t[1]);
              var e = new Array(2).fill(null);
              return (
                (e[0] = this._cbr.removeCommonBits(t[0].copy())),
                (e[1] = this._cbr.removeCommonBits(t[1].copy())),
                e
              );
            }),
            (ii.prototype.prepareResult = function(t) {
              return this._cbr.addCommonBits(t), t;
            }),
            (ii.prototype.getResultGeometry = function(t) {
              var e = this.snap(this._geom),
                r = Ci.overlayOp(e[0], e[1], t);
              return this.prepareResult(r);
            }),
            (ii.prototype.checkValid = function(t) {
              t.isValid() || V.out.println("Snapped geometry is invalid");
            }),
            (ii.prototype.computeSnapTolerance = function() {
              this._snapTolerance = $n.computeOverlaySnapTolerance(
                this._geom[0],
                this._geom[1]
              );
            }),
            (ii.prototype.snap = function(t) {
              var e = this.removeCommonBits(t);
              return $n.snap(e[0], e[1], this._snapTolerance);
            }),
            (ii.prototype.interfaces_ = function() {
              return [];
            }),
            (ii.prototype.getClass = function() {
              return ii;
            }),
            (ii.overlayOp = function(t, e, r) {
              return new ii(t, e).getResultGeometry(r);
            }),
            (ii.union = function(t, e) {
              return ii.overlayOp(t, e, Ci.UNION);
            }),
            (ii.intersection = function(t, e) {
              return ii.overlayOp(t, e, Ci.INTERSECTION);
            }),
            (ii.symDifference = function(t, e) {
              return ii.overlayOp(t, e, Ci.SYMDIFFERENCE);
            }),
            (ii.difference = function(t, e) {
              return ii.overlayOp(t, e, Ci.DIFFERENCE);
            });
          var oi = function(t, e) {
            (this._geom = new Array(2).fill(null)),
              (this._geom[0] = t),
              (this._geom[1] = e);
          };
          (oi.prototype.getResultGeometry = function(t) {
            var e = null,
              r = !1,
              n = null;
            try {
              (e = Ci.overlayOp(this._geom[0], this._geom[1], t)), (r = !0);
            } catch (t) {
              if (!(t instanceof K)) throw t;
              n = t;
            }
            if (!r)
              try {
                e = ii.overlayOp(this._geom[0], this._geom[1], t);
              } catch (t) {
                throw t instanceof K ? n : t;
              }
            return e;
          }),
            (oi.prototype.interfaces_ = function() {
              return [];
            }),
            (oi.prototype.getClass = function() {
              return oi;
            }),
            (oi.overlayOp = function(t, e, r) {
              return new oi(t, e).getResultGeometry(r);
            }),
            (oi.union = function(t, e) {
              return oi.overlayOp(t, e, Ci.UNION);
            }),
            (oi.intersection = function(t, e) {
              return oi.overlayOp(t, e, Ci.INTERSECTION);
            }),
            (oi.symDifference = function(t, e) {
              return oi.overlayOp(t, e, Ci.SYMDIFFERENCE);
            }),
            (oi.difference = function(t, e) {
              return oi.overlayOp(t, e, Ci.DIFFERENCE);
            });
          var si = function() {
            (this.mce = null), (this.chainIndex = null);
            var t = arguments[0],
              e = arguments[1];
            (this.mce = t), (this.chainIndex = e);
          };
          (si.prototype.computeIntersections = function(t, e) {
            this.mce.computeIntersectsForChain(
              this.chainIndex,
              t.mce,
              t.chainIndex,
              e
            );
          }),
            (si.prototype.interfaces_ = function() {
              return [];
            }),
            (si.prototype.getClass = function() {
              return si;
            });
          var ai = function t() {
              if (
                ((this._label = null),
                (this._xValue = null),
                (this._eventType = null),
                (this._insertEvent = null),
                (this._deleteEventIndex = null),
                (this._obj = null),
                2 === arguments.length)
              ) {
                var e = arguments[0],
                  r = arguments[1];
                (this._eventType = t.DELETE),
                  (this._xValue = e),
                  (this._insertEvent = r);
              } else if (3 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1],
                  o = arguments[2];
                (this._eventType = t.INSERT),
                  (this._label = n),
                  (this._xValue = i),
                  (this._obj = o);
              }
            },
            li = { INSERT: { configurable: !0 }, DELETE: { configurable: !0 } };
          (ai.prototype.isDelete = function() {
            return this._eventType === ai.DELETE;
          }),
            (ai.prototype.setDeleteEventIndex = function(t) {
              this._deleteEventIndex = t;
            }),
            (ai.prototype.getObject = function() {
              return this._obj;
            }),
            (ai.prototype.compareTo = function(t) {
              var e = t;
              return this._xValue < e._xValue
                ? -1
                : this._xValue > e._xValue
                ? 1
                : this._eventType < e._eventType
                ? -1
                : this._eventType > e._eventType
                ? 1
                : 0;
            }),
            (ai.prototype.getInsertEvent = function() {
              return this._insertEvent;
            }),
            (ai.prototype.isInsert = function() {
              return this._eventType === ai.INSERT;
            }),
            (ai.prototype.isSameLabel = function(t) {
              return null !== this._label && this._label === t._label;
            }),
            (ai.prototype.getDeleteEventIndex = function() {
              return this._deleteEventIndex;
            }),
            (ai.prototype.interfaces_ = function() {
              return [b];
            }),
            (ai.prototype.getClass = function() {
              return ai;
            }),
            (li.INSERT.get = function() {
              return 1;
            }),
            (li.DELETE.get = function() {
              return 2;
            }),
            Object.defineProperties(ai, li);
          var ui = function() {};
          (ui.prototype.interfaces_ = function() {
            return [];
          }),
            (ui.prototype.getClass = function() {
              return ui;
            });
          var hi = function() {
            (this._hasIntersection = !1),
              (this._hasProper = !1),
              (this._hasProperInterior = !1),
              (this._properIntersectionPoint = null),
              (this._li = null),
              (this._includeProper = null),
              (this._recordIsolated = null),
              (this._isSelfIntersection = null),
              (this._numIntersections = 0),
              (this.numTests = 0),
              (this._bdyNodes = null),
              (this._isDone = !1),
              (this._isDoneWhenProperInt = !1);
            var t = arguments[0],
              e = arguments[1],
              r = arguments[2];
            (this._li = t),
              (this._includeProper = e),
              (this._recordIsolated = r);
          };
          (hi.prototype.isTrivialIntersection = function(t, e, r, n) {
            if (t === r && 1 === this._li.getIntersectionNum()) {
              if (hi.isAdjacentSegments(e, n)) return !0;
              if (t.isClosed()) {
                var i = t.getNumPoints() - 1;
                if ((0 === e && n === i) || (0 === n && e === i)) return !0;
              }
            }
            return !1;
          }),
            (hi.prototype.getProperIntersectionPoint = function() {
              return this._properIntersectionPoint;
            }),
            (hi.prototype.setIsDoneIfProperInt = function(t) {
              this._isDoneWhenProperInt = t;
            }),
            (hi.prototype.hasProperInteriorIntersection = function() {
              return this._hasProperInterior;
            }),
            (hi.prototype.isBoundaryPointInternal = function(t, e) {
              for (var r = e.iterator(); r.hasNext(); ) {
                var n = r.next().getCoordinate();
                if (t.isIntersection(n)) return !0;
              }
              return !1;
            }),
            (hi.prototype.hasProperIntersection = function() {
              return this._hasProper;
            }),
            (hi.prototype.hasIntersection = function() {
              return this._hasIntersection;
            }),
            (hi.prototype.isDone = function() {
              return this._isDone;
            }),
            (hi.prototype.isBoundaryPoint = function(t, e) {
              return !(
                null === e ||
                (!this.isBoundaryPointInternal(t, e[0]) &&
                  !this.isBoundaryPointInternal(t, e[1]))
              );
            }),
            (hi.prototype.setBoundaryNodes = function(t, e) {
              (this._bdyNodes = new Array(2).fill(null)),
                (this._bdyNodes[0] = t),
                (this._bdyNodes[1] = e);
            }),
            (hi.prototype.addIntersections = function(t, e, r, n) {
              if (t === r && e === n) return null;
              this.numTests++;
              var i = t.getCoordinates()[e],
                o = t.getCoordinates()[e + 1],
                s = r.getCoordinates()[n],
                a = r.getCoordinates()[n + 1];
              this._li.computeIntersection(i, o, s, a),
                this._li.hasIntersection() &&
                  (this._recordIsolated &&
                    (t.setIsolated(!1), r.setIsolated(!1)),
                  this._numIntersections++,
                  this.isTrivialIntersection(t, e, r, n) ||
                    ((this._hasIntersection = !0),
                    (!this._includeProper && this._li.isProper()) ||
                      (t.addIntersections(this._li, e, 0),
                      r.addIntersections(this._li, n, 1)),
                    this._li.isProper() &&
                      ((this._properIntersectionPoint = this._li
                        .getIntersection(0)
                        .copy()),
                      (this._hasProper = !0),
                      this._isDoneWhenProperInt && (this._isDone = !0),
                      this.isBoundaryPoint(this._li, this._bdyNodes) ||
                        (this._hasProperInterior = !0))));
            }),
            (hi.prototype.interfaces_ = function() {
              return [];
            }),
            (hi.prototype.getClass = function() {
              return hi;
            }),
            (hi.isAdjacentSegments = function(t, e) {
              return 1 === Math.abs(t - e);
            });
          var ci = (function(t) {
              function e() {
                t.call(this), (this.events = new It()), (this.nOverlaps = null);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.prepareEvents = function() {
                  Ke.sort(this.events);
                  for (var t = 0; t < this.events.size(); t++) {
                    var e = this.events.get(t);
                    e.isDelete() && e.getInsertEvent().setDeleteEventIndex(t);
                  }
                }),
                (e.prototype.computeIntersections = function() {
                  if (1 === arguments.length) {
                    var t = arguments[0];
                    (this.nOverlaps = 0), this.prepareEvents();
                    for (var e = 0; e < this.events.size(); e++) {
                      var r = this.events.get(e);
                      if (
                        (r.isInsert() &&
                          this.processOverlaps(
                            e,
                            r.getDeleteEventIndex(),
                            r,
                            t
                          ),
                        t.isDone())
                      )
                        break;
                    }
                  } else if (3 === arguments.length)
                    if (
                      arguments[2] instanceof hi &&
                      O(arguments[0], St) &&
                      O(arguments[1], St)
                    ) {
                      var n = arguments[0],
                        i = arguments[1],
                        o = arguments[2];
                      this.addEdges(n, n),
                        this.addEdges(i, i),
                        this.computeIntersections(o);
                    } else if (
                      "boolean" == typeof arguments[2] &&
                      O(arguments[0], St) &&
                      arguments[1] instanceof hi
                    ) {
                      var s = arguments[0],
                        a = arguments[1];
                      arguments[2] ? this.addEdges(s, null) : this.addEdges(s),
                        this.computeIntersections(a);
                    }
                }),
                (e.prototype.addEdge = function(t, e) {
                  for (
                    var r = t.getMonotoneChainEdge(),
                      n = r.getStartIndexes(),
                      i = 0;
                    i < n.length - 1;
                    i++
                  ) {
                    var o = new si(r, i),
                      s = new ai(e, r.getMinX(i), o);
                    this.events.add(s),
                      this.events.add(new ai(r.getMaxX(i), s));
                  }
                }),
                (e.prototype.processOverlaps = function(t, e, r, n) {
                  for (var i = r.getObject(), o = t; o < e; o++) {
                    var s = this.events.get(o);
                    if (s.isInsert()) {
                      var a = s.getObject();
                      r.isSameLabel(s) ||
                        (i.computeIntersections(a, n), this.nOverlaps++);
                    }
                  }
                }),
                (e.prototype.addEdges = function() {
                  if (1 === arguments.length)
                    for (var t = arguments[0].iterator(); t.hasNext(); ) {
                      var e = t.next();
                      this.addEdge(e, e);
                    }
                  else if (2 === arguments.length)
                    for (
                      var r = arguments[1], n = arguments[0].iterator();
                      n.hasNext();

                    ) {
                      var i = n.next();
                      this.addEdge(i, r);
                    }
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(ui),
            pi = function() {
              (this._min = _.POSITIVE_INFINITY),
                (this._max = _.NEGATIVE_INFINITY);
            },
            fi = { NodeComparator: { configurable: !0 } };
          (pi.prototype.getMin = function() {
            return this._min;
          }),
            (pi.prototype.intersects = function(t, e) {
              return !(this._min > e || this._max < t);
            }),
            (pi.prototype.getMax = function() {
              return this._max;
            }),
            (pi.prototype.toString = function() {
              return Z.toLineString(new w(this._min, 0), new w(this._max, 0));
            }),
            (pi.prototype.interfaces_ = function() {
              return [];
            }),
            (pi.prototype.getClass = function() {
              return pi;
            }),
            (fi.NodeComparator.get = function() {
              return di;
            }),
            Object.defineProperties(pi, fi);
          var di = function() {};
          (di.prototype.compare = function(t, e) {
            var r = t,
              n = e,
              i = (r._min + r._max) / 2,
              o = (n._min + n._max) / 2;
            return i < o ? -1 : i > o ? 1 : 0;
          }),
            (di.prototype.interfaces_ = function() {
              return [I];
            }),
            (di.prototype.getClass = function() {
              return di;
            });
          var yi = (function(t) {
              function e() {
                t.call(this), (this._item = null);
                var e = arguments[0],
                  r = arguments[1],
                  n = arguments[2];
                (this._min = e), (this._max = r), (this._item = n);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.query = function(t, e, r) {
                  if (!this.intersects(t, e)) return null;
                  r.visitItem(this._item);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(pi),
            gi = (function(t) {
              function e() {
                t.call(this), (this._node1 = null), (this._node2 = null);
                var e = arguments[0],
                  r = arguments[1];
                (this._node1 = e),
                  (this._node2 = r),
                  this.buildExtent(this._node1, this._node2);
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.buildExtent = function(t, e) {
                  (this._min = Math.min(t._min, e._min)),
                    (this._max = Math.max(t._max, e._max));
                }),
                (e.prototype.query = function(t, e, r) {
                  if (!this.intersects(t, e)) return null;
                  null !== this._node1 && this._node1.query(t, e, r),
                    null !== this._node2 && this._node2.query(t, e, r);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                e
              );
            })(pi),
            mi = function() {
              (this._leaves = new It()), (this._root = null), (this._level = 0);
            };
          (mi.prototype.buildTree = function() {
            Ke.sort(this._leaves, new pi.NodeComparator());
            for (var t = this._leaves, e = null, r = new It(); ; ) {
              if ((this.buildLevel(t, r), 1 === r.size())) return r.get(0);
              (e = t), (t = r), (r = e);
            }
          }),
            (mi.prototype.insert = function(t, e, r) {
              if (null !== this._root)
                throw new Error(
                  "Index cannot be added to once it has been queried"
                );
              this._leaves.add(new yi(t, e, r));
            }),
            (mi.prototype.query = function(t, e, r) {
              this.init(), this._root.query(t, e, r);
            }),
            (mi.prototype.buildRoot = function() {
              if (null !== this._root) return null;
              this._root = this.buildTree();
            }),
            (mi.prototype.printNode = function(t) {
              V.out.println(
                Z.toLineString(
                  new w(t._min, this._level),
                  new w(t._max, this._level)
                )
              );
            }),
            (mi.prototype.init = function() {
              if (null !== this._root) return null;
              this.buildRoot();
            }),
            (mi.prototype.buildLevel = function(t, e) {
              this._level++, e.clear();
              for (var r = 0; r < t.size(); r += 2) {
                var n = t.get(r);
                if (null === (r + 1 < t.size() ? t.get(r) : null)) e.add(n);
                else {
                  var i = new gi(t.get(r), t.get(r + 1));
                  e.add(i);
                }
              }
            }),
            (mi.prototype.interfaces_ = function() {
              return [];
            }),
            (mi.prototype.getClass = function() {
              return mi;
            });
          var vi = function() {
            this._items = new It();
          };
          (vi.prototype.visitItem = function(t) {
            this._items.add(t);
          }),
            (vi.prototype.getItems = function() {
              return this._items;
            }),
            (vi.prototype.interfaces_ = function() {
              return [Je];
            }),
            (vi.prototype.getClass = function() {
              return vi;
            });
          var _i = function() {
              this._index = null;
              var t = arguments[0];
              if (!O(t, Zt)) throw new v("Argument must be Polygonal");
              this._index = new Si(t);
            },
            xi = {
              SegmentVisitor: { configurable: !0 },
              IntervalIndexedGeometry: { configurable: !0 }
            };
          (_i.prototype.locate = function(t) {
            var e = new st(t),
              r = new bi(e);
            return this._index.query(t.y, t.y, r), e.getLocation();
          }),
            (_i.prototype.interfaces_ = function() {
              return [Gr];
            }),
            (_i.prototype.getClass = function() {
              return _i;
            }),
            (xi.SegmentVisitor.get = function() {
              return bi;
            }),
            (xi.IntervalIndexedGeometry.get = function() {
              return Si;
            }),
            Object.defineProperties(_i, xi);
          var bi = function() {
            this._counter = null;
            var t = arguments[0];
            this._counter = t;
          };
          (bi.prototype.visitItem = function(t) {
            var e = t;
            this._counter.countSegment(e.getCoordinate(0), e.getCoordinate(1));
          }),
            (bi.prototype.interfaces_ = function() {
              return [Je];
            }),
            (bi.prototype.getClass = function() {
              return bi;
            });
          var Si = function() {
            this._index = new mi();
            var t = arguments[0];
            this.init(t);
          };
          (Si.prototype.init = function(t) {
            for (var e = wn.getLines(t).iterator(); e.hasNext(); ) {
              var r = e.next().getCoordinates();
              this.addLine(r);
            }
          }),
            (Si.prototype.addLine = function(t) {
              for (var e = 1; e < t.length; e++) {
                var r = new dr(t[e - 1], t[e]),
                  n = Math.min(r.p0.y, r.p1.y),
                  i = Math.max(r.p0.y, r.p1.y);
                this._index.insert(n, i, r);
              }
            }),
            (Si.prototype.query = function() {
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1],
                  r = new vi();
                return this._index.query(t, e, r), r.getItems();
              }
              if (3 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1],
                  o = arguments[2];
                this._index.query(n, i, o);
              }
            }),
            (Si.prototype.interfaces_ = function() {
              return [];
            }),
            (Si.prototype.getClass = function() {
              return Si;
            });
          var Ii = (function(t) {
              function e() {
                if (
                  (t.call(this),
                  (this._parentGeom = null),
                  (this._lineEdgeMap = new pe()),
                  (this._boundaryNodeRule = null),
                  (this._useBoundaryDeterminationRule = !0),
                  (this._argIndex = null),
                  (this._boundaryNodes = null),
                  (this._hasTooFewPoints = !1),
                  (this._invalidPoint = null),
                  (this._areaPtLocator = null),
                  (this._ptLocator = new Nn()),
                  2 === arguments.length)
                ) {
                  var e = arguments[0],
                    r = arguments[1],
                    n = dt.OGC_SFS_BOUNDARY_RULE;
                  (this._argIndex = e),
                    (this._parentGeom = r),
                    (this._boundaryNodeRule = n),
                    null !== r && this.add(r);
                } else if (3 === arguments.length) {
                  var i = arguments[0],
                    o = arguments[1],
                    s = arguments[2];
                  (this._argIndex = i),
                    (this._parentGeom = o),
                    (this._boundaryNodeRule = s),
                    null !== o && this.add(o);
                }
              }
              return (
                t && (e.__proto__ = t),
                (e.prototype = Object.create(t && t.prototype)),
                (e.prototype.constructor = e),
                (e.prototype.insertBoundaryPoint = function(t, r) {
                  var n = this._nodes.addNode(r).getLabel(),
                    i = 1;
                  n.getLocation(t, Ne.ON) === M.BOUNDARY && i++;
                  var o = e.determineBoundary(this._boundaryNodeRule, i);
                  n.setLocation(t, o);
                }),
                (e.prototype.computeSelfNodes = function() {
                  if (2 === arguments.length) {
                    var t = arguments[0],
                      e = arguments[1];
                    return this.computeSelfNodes(t, e, !1);
                  }
                  if (3 === arguments.length) {
                    var r = arguments[1],
                      n = arguments[2],
                      i = new hi(arguments[0], !0, !1);
                    i.setIsDoneIfProperInt(n);
                    var o = this.createEdgeSetIntersector(),
                      s =
                        this._parentGeom instanceof ee ||
                        this._parentGeom instanceof Kt ||
                        this._parentGeom instanceof re,
                      a = r || !s;
                    return (
                      o.computeIntersections(this._edges, i, a),
                      this.addSelfIntersectionNodes(this._argIndex),
                      i
                    );
                  }
                }),
                (e.prototype.computeSplitEdges = function(t) {
                  for (var e = this._edges.iterator(); e.hasNext(); )
                    e.next().eiList.addSplitEdges(t);
                }),
                (e.prototype.computeEdgeIntersections = function(t, e, r) {
                  var n = new hi(e, r, !0);
                  return (
                    n.setBoundaryNodes(
                      this.getBoundaryNodes(),
                      t.getBoundaryNodes()
                    ),
                    this.createEdgeSetIntersector().computeIntersections(
                      this._edges,
                      t._edges,
                      n
                    ),
                    n
                  );
                }),
                (e.prototype.getGeometry = function() {
                  return this._parentGeom;
                }),
                (e.prototype.getBoundaryNodeRule = function() {
                  return this._boundaryNodeRule;
                }),
                (e.prototype.hasTooFewPoints = function() {
                  return this._hasTooFewPoints;
                }),
                (e.prototype.addPoint = function() {
                  if (arguments[0] instanceof Qt) {
                    var t = arguments[0].getCoordinate();
                    this.insertPoint(this._argIndex, t, M.INTERIOR);
                  } else if (arguments[0] instanceof w) {
                    var e = arguments[0];
                    this.insertPoint(this._argIndex, e, M.INTERIOR);
                  }
                }),
                (e.prototype.addPolygon = function(t) {
                  this.addPolygonRing(
                    t.getExteriorRing(),
                    M.EXTERIOR,
                    M.INTERIOR
                  );
                  for (var e = 0; e < t.getNumInteriorRing(); e++) {
                    var r = t.getInteriorRingN(e);
                    this.addPolygonRing(r, M.INTERIOR, M.EXTERIOR);
                  }
                }),
                (e.prototype.addEdge = function(t) {
                  this.insertEdge(t);
                  var e = t.getCoordinates();
                  this.insertPoint(this._argIndex, e[0], M.BOUNDARY),
                    this.insertPoint(
                      this._argIndex,
                      e[e.length - 1],
                      M.BOUNDARY
                    );
                }),
                (e.prototype.addLineString = function(t) {
                  var e = Ct.removeRepeatedPoints(t.getCoordinates());
                  if (e.length < 2)
                    return (
                      (this._hasTooFewPoints = !0),
                      (this._invalidPoint = e[0]),
                      null
                    );
                  var r = new en(e, new Te(this._argIndex, M.INTERIOR));
                  this._lineEdgeMap.put(t, r),
                    this.insertEdge(r),
                    et.isTrue(
                      e.length >= 2,
                      "found LineString with single point"
                    ),
                    this.insertBoundaryPoint(this._argIndex, e[0]),
                    this.insertBoundaryPoint(this._argIndex, e[e.length - 1]);
                }),
                (e.prototype.getInvalidPoint = function() {
                  return this._invalidPoint;
                }),
                (e.prototype.getBoundaryPoints = function() {
                  for (
                    var t = this.getBoundaryNodes(),
                      e = new Array(t.size()).fill(null),
                      r = 0,
                      n = t.iterator();
                    n.hasNext();

                  ) {
                    var i = n.next();
                    e[r++] = i.getCoordinate().copy();
                  }
                  return e;
                }),
                (e.prototype.getBoundaryNodes = function() {
                  return (
                    null === this._boundaryNodes &&
                      (this._boundaryNodes = this._nodes.getBoundaryNodes(
                        this._argIndex
                      )),
                    this._boundaryNodes
                  );
                }),
                (e.prototype.addSelfIntersectionNode = function(t, e, r) {
                  if (this.isBoundaryNode(t, e)) return null;
                  r === M.BOUNDARY && this._useBoundaryDeterminationRule
                    ? this.insertBoundaryPoint(t, e)
                    : this.insertPoint(t, e, r);
                }),
                (e.prototype.addPolygonRing = function(t, e, r) {
                  if (t.isEmpty()) return null;
                  var n = Ct.removeRepeatedPoints(t.getCoordinates());
                  if (n.length < 4)
                    return (
                      (this._hasTooFewPoints = !0),
                      (this._invalidPoint = n[0]),
                      null
                    );
                  var i = e,
                    o = r;
                  at.isCCW(n) && ((i = r), (o = e));
                  var s = new en(n, new Te(this._argIndex, M.BOUNDARY, i, o));
                  this._lineEdgeMap.put(t, s),
                    this.insertEdge(s),
                    this.insertPoint(this._argIndex, n[0], M.BOUNDARY);
                }),
                (e.prototype.insertPoint = function(t, e, r) {
                  var n = this._nodes.addNode(e),
                    i = n.getLabel();
                  null === i ? (n._label = new Te(t, r)) : i.setLocation(t, r);
                }),
                (e.prototype.createEdgeSetIntersector = function() {
                  return new ci();
                }),
                (e.prototype.addSelfIntersectionNodes = function(t) {
                  for (var e = this._edges.iterator(); e.hasNext(); )
                    for (
                      var r = e.next(),
                        n = r.getLabel().getLocation(t),
                        i = r.eiList.iterator();
                      i.hasNext();

                    ) {
                      var o = i.next();
                      this.addSelfIntersectionNode(t, o.coord, n);
                    }
                }),
                (e.prototype.add = function() {
                  if (1 !== arguments.length)
                    return t.prototype.add.apply(this, arguments);
                  var e = arguments[0];
                  if (e.isEmpty()) return null;
                  if (
                    (e instanceof re &&
                      (this._useBoundaryDeterminationRule = !1),
                    e instanceof Kt)
                  )
                    this.addPolygon(e);
                  else if (e instanceof Jt) this.addLineString(e);
                  else if (e instanceof Qt) this.addPoint(e);
                  else if (e instanceof te) this.addCollection(e);
                  else if (e instanceof zt) this.addCollection(e);
                  else if (e instanceof re) this.addCollection(e);
                  else {
                    if (!(e instanceof qt))
                      throw new Error(e.getClass().getName());
                    this.addCollection(e);
                  }
                }),
                (e.prototype.addCollection = function(t) {
                  for (var e = 0; e < t.getNumGeometries(); e++) {
                    var r = t.getGeometryN(e);
                    this.add(r);
                  }
                }),
                (e.prototype.locate = function(t) {
                  return O(this._parentGeom, Zt) &&
                    this._parentGeom.getNumGeometries() > 50
                    ? (null === this._areaPtLocator &&
                        (this._areaPtLocator = new _i(this._parentGeom)),
                      this._areaPtLocator.locate(t))
                    : this._ptLocator.locate(t, this._parentGeom);
                }),
                (e.prototype.findEdge = function() {
                  if (1 === arguments.length) {
                    var e = arguments[0];
                    return this._lineEdgeMap.get(e);
                  }
                  return t.prototype.findEdge.apply(this, arguments);
                }),
                (e.prototype.interfaces_ = function() {
                  return [];
                }),
                (e.prototype.getClass = function() {
                  return e;
                }),
                (e.determineBoundary = function(t, e) {
                  return t.isInBoundary(e) ? M.BOUNDARY : M.INTERIOR;
                }),
                e
              );
            })(Ve),
            wi = function() {
              if (
                ((this._li = new it()),
                (this._resultPrecisionModel = null),
                (this._arg = null),
                1 === arguments.length)
              ) {
                var t = arguments[0];
                this.setComputationPrecision(t.getPrecisionModel()),
                  (this._arg = new Array(1).fill(null)),
                  (this._arg[0] = new Ii(0, t));
              } else if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1],
                  n = dt.OGC_SFS_BOUNDARY_RULE;
                e.getPrecisionModel().compareTo(r.getPrecisionModel()) >= 0
                  ? this.setComputationPrecision(e.getPrecisionModel())
                  : this.setComputationPrecision(r.getPrecisionModel()),
                  (this._arg = new Array(2).fill(null)),
                  (this._arg[0] = new Ii(0, e, n)),
                  (this._arg[1] = new Ii(1, r, n));
              } else if (3 === arguments.length) {
                var i = arguments[0],
                  o = arguments[1],
                  s = arguments[2];
                i.getPrecisionModel().compareTo(o.getPrecisionModel()) >= 0
                  ? this.setComputationPrecision(i.getPrecisionModel())
                  : this.setComputationPrecision(o.getPrecisionModel()),
                  (this._arg = new Array(2).fill(null)),
                  (this._arg[0] = new Ii(0, i, s)),
                  (this._arg[1] = new Ii(1, o, s));
              }
            };
          (wi.prototype.getArgGeometry = function(t) {
            return this._arg[t].getGeometry();
          }),
            (wi.prototype.setComputationPrecision = function(t) {
              (this._resultPrecisionModel = t),
                this._li.setPrecisionModel(this._resultPrecisionModel);
            }),
            (wi.prototype.interfaces_ = function() {
              return [];
            }),
            (wi.prototype.getClass = function() {
              return wi;
            });
          var Ni = function() {};
          (Ni.prototype.interfaces_ = function() {
            return [];
          }),
            (Ni.prototype.getClass = function() {
              return Ni;
            }),
            (Ni.map = function() {
              if (arguments[0] instanceof ht && O(arguments[1], Ni.MapOp)) {
                for (
                  var t = arguments[0], e = arguments[1], r = new It(), n = 0;
                  n < t.getNumGeometries();
                  n++
                ) {
                  var i = e.map(t.getGeometryN(n));
                  null !== i && r.add(i);
                }
                return t.getFactory().buildGeometry(r);
              }
              if (O(arguments[0], xt) && O(arguments[1], Ni.MapOp)) {
                for (
                  var o = arguments[0],
                    s = arguments[1],
                    a = new It(),
                    l = o.iterator();
                  l.hasNext();

                ) {
                  var u = l.next(),
                    h = s.map(u);
                  null !== h && a.add(h);
                }
                return a;
              }
            }),
            (Ni.MapOp = function() {});
          var Ci = (function(t) {
            function e() {
              var e = arguments[0],
                r = arguments[1];
              t.call(this, e, r),
                (this._ptLocator = new Nn()),
                (this._geomFact = null),
                (this._resultGeom = null),
                (this._graph = null),
                (this._edgeList = new Xr()),
                (this._resultPolyList = new It()),
                (this._resultLineList = new It()),
                (this._resultPointList = new It()),
                (this._graph = new Ve(new Vr())),
                (this._geomFact = e.getFactory());
            }
            return (
              t && (e.__proto__ = t),
              (e.prototype = Object.create(t && t.prototype)),
              (e.prototype.constructor = e),
              (e.prototype.insertUniqueEdge = function(t) {
                var e = this._edgeList.findEqualEdge(t);
                if (null !== e) {
                  var r = e.getLabel(),
                    n = t.getLabel();
                  e.isPointwiseEqual(t) || (n = new Te(t.getLabel())).flip();
                  var i = e.getDepth();
                  i.isNull() && i.add(r), i.add(n), r.merge(n);
                } else this._edgeList.add(t);
              }),
              (e.prototype.getGraph = function() {
                return this._graph;
              }),
              (e.prototype.cancelDuplicateResultEdges = function() {
                for (
                  var t = this._graph.getEdgeEnds().iterator();
                  t.hasNext();

                ) {
                  var e = t.next(),
                    r = e.getSym();
                  e.isInResult() &&
                    r.isInResult() &&
                    (e.setInResult(!1), r.setInResult(!1));
                }
              }),
              (e.prototype.isCoveredByLA = function(t) {
                return (
                  !!this.isCovered(t, this._resultLineList) ||
                  !!this.isCovered(t, this._resultPolyList)
                );
              }),
              (e.prototype.computeGeometry = function(t, r, n, i) {
                var o = new It();
                return (
                  o.addAll(t),
                  o.addAll(r),
                  o.addAll(n),
                  o.isEmpty()
                    ? e.createEmptyResult(
                        i,
                        this._arg[0].getGeometry(),
                        this._arg[1].getGeometry(),
                        this._geomFact
                      )
                    : this._geomFact.buildGeometry(o)
                );
              }),
              (e.prototype.mergeSymLabels = function() {
                for (var t = this._graph.getNodes().iterator(); t.hasNext(); )
                  t.next()
                    .getEdges()
                    .mergeSymLabels();
              }),
              (e.prototype.isCovered = function(t, e) {
                for (var r = e.iterator(); r.hasNext(); ) {
                  var n = r.next();
                  if (this._ptLocator.locate(t, n) !== M.EXTERIOR) return !0;
                }
                return !1;
              }),
              (e.prototype.replaceCollapsedEdges = function() {
                for (
                  var t = new It(), e = this._edgeList.iterator();
                  e.hasNext();

                ) {
                  var r = e.next();
                  r.isCollapsed() && (e.remove(), t.add(r.getCollapsedEdge()));
                }
                this._edgeList.addAll(t);
              }),
              (e.prototype.updateNodeLabelling = function() {
                for (var t = this._graph.getNodes().iterator(); t.hasNext(); ) {
                  var e = t.next(),
                    r = e.getEdges().getLabel();
                  e.getLabel().merge(r);
                }
              }),
              (e.prototype.getResultGeometry = function(t) {
                return this.computeOverlay(t), this._resultGeom;
              }),
              (e.prototype.insertUniqueEdges = function(t) {
                for (var e = t.iterator(); e.hasNext(); ) {
                  var r = e.next();
                  this.insertUniqueEdge(r);
                }
              }),
              (e.prototype.computeOverlay = function(t) {
                this.copyPoints(0),
                  this.copyPoints(1),
                  this._arg[0].computeSelfNodes(this._li, !1),
                  this._arg[1].computeSelfNodes(this._li, !1),
                  this._arg[0].computeEdgeIntersections(
                    this._arg[1],
                    this._li,
                    !0
                  );
                var e = new It();
                this._arg[0].computeSplitEdges(e),
                  this._arg[1].computeSplitEdges(e),
                  this.insertUniqueEdges(e),
                  this.computeLabelsFromDepths(),
                  this.replaceCollapsedEdges(),
                  Vn.checkValid(this._edgeList.getEdges()),
                  this._graph.addEdges(this._edgeList.getEdges()),
                  this.computeLabelling(),
                  this.labelIncompleteNodes(),
                  this.findResultAreaEdges(t),
                  this.cancelDuplicateResultEdges();
                var r = new We(this._geomFact);
                r.add(this._graph), (this._resultPolyList = r.getPolygons());
                var n = new Xn(this, this._geomFact, this._ptLocator);
                this._resultLineList = n.build(t);
                var i = new Yn(this, this._geomFact, this._ptLocator);
                (this._resultPointList = i.build(t)),
                  (this._resultGeom = this.computeGeometry(
                    this._resultPointList,
                    this._resultLineList,
                    this._resultPolyList,
                    t
                  ));
              }),
              (e.prototype.labelIncompleteNode = function(t, e) {
                var r = this._ptLocator.locate(
                  t.getCoordinate(),
                  this._arg[e].getGeometry()
                );
                t.getLabel().setLocation(e, r);
              }),
              (e.prototype.copyPoints = function(t) {
                for (var e = this._arg[t].getNodeIterator(); e.hasNext(); ) {
                  var r = e.next();
                  this._graph
                    .addNode(r.getCoordinate())
                    .setLabel(t, r.getLabel().getLocation(t));
                }
              }),
              (e.prototype.findResultAreaEdges = function(t) {
                for (
                  var r = this._graph.getEdgeEnds().iterator();
                  r.hasNext();

                ) {
                  var n = r.next(),
                    i = n.getLabel();
                  i.isArea() &&
                    !n.isInteriorAreaEdge() &&
                    e.isResultOfOp(
                      i.getLocation(0, Ne.RIGHT),
                      i.getLocation(1, Ne.RIGHT),
                      t
                    ) &&
                    n.setInResult(!0);
                }
              }),
              (e.prototype.computeLabelsFromDepths = function() {
                for (var t = this._edgeList.iterator(); t.hasNext(); ) {
                  var e = t.next(),
                    r = e.getLabel(),
                    n = e.getDepth();
                  if (!n.isNull()) {
                    n.normalize();
                    for (var i = 0; i < 2; i++)
                      r.isNull(i) ||
                        !r.isArea() ||
                        n.isNull(i) ||
                        (0 === n.getDelta(i)
                          ? r.toLine(i)
                          : (et.isTrue(
                              !n.isNull(i, Ne.LEFT),
                              "depth of LEFT side has not been initialized"
                            ),
                            r.setLocation(
                              i,
                              Ne.LEFT,
                              n.getLocation(i, Ne.LEFT)
                            ),
                            et.isTrue(
                              !n.isNull(i, Ne.RIGHT),
                              "depth of RIGHT side has not been initialized"
                            ),
                            r.setLocation(
                              i,
                              Ne.RIGHT,
                              n.getLocation(i, Ne.RIGHT)
                            )));
                  }
                }
              }),
              (e.prototype.computeLabelling = function() {
                for (var t = this._graph.getNodes().iterator(); t.hasNext(); )
                  t.next()
                    .getEdges()
                    .computeLabelling(this._arg);
                this.mergeSymLabels(), this.updateNodeLabelling();
              }),
              (e.prototype.labelIncompleteNodes = function() {
                for (var t = this._graph.getNodes().iterator(); t.hasNext(); ) {
                  var e = t.next(),
                    r = e.getLabel();
                  e.isIsolated() &&
                    (r.isNull(0)
                      ? this.labelIncompleteNode(e, 0)
                      : this.labelIncompleteNode(e, 1)),
                    e.getEdges().updateLabelling(r);
                }
              }),
              (e.prototype.isCoveredByA = function(t) {
                return !!this.isCovered(t, this._resultPolyList);
              }),
              (e.prototype.interfaces_ = function() {
                return [];
              }),
              (e.prototype.getClass = function() {
                return e;
              }),
              e
            );
          })(wi);
          (Ci.overlayOp = function(t, e, r) {
            return new Ci(t, e).getResultGeometry(r);
          }),
            (Ci.intersection = function(t, e) {
              if (t.isEmpty() || e.isEmpty())
                return Ci.createEmptyResult(
                  Ci.INTERSECTION,
                  t,
                  e,
                  t.getFactory()
                );
              if (t.isGeometryCollection()) {
                var r = e;
                return Wn.map(t, {
                  interfaces_: function() {
                    return [Ni.MapOp];
                  },
                  map: function(t) {
                    return t.intersection(r);
                  }
                });
              }
              return (
                t.checkNotGeometryCollection(t),
                t.checkNotGeometryCollection(e),
                oi.overlayOp(t, e, Ci.INTERSECTION)
              );
            }),
            (Ci.symDifference = function(t, e) {
              if (t.isEmpty() || e.isEmpty()) {
                if (t.isEmpty() && e.isEmpty())
                  return Ci.createEmptyResult(
                    Ci.SYMDIFFERENCE,
                    t,
                    e,
                    t.getFactory()
                  );
                if (t.isEmpty()) return e.copy();
                if (e.isEmpty()) return t.copy();
              }
              return (
                t.checkNotGeometryCollection(t),
                t.checkNotGeometryCollection(e),
                oi.overlayOp(t, e, Ci.SYMDIFFERENCE)
              );
            }),
            (Ci.resultDimension = function(t, e, r) {
              var n = e.getDimension(),
                i = r.getDimension(),
                o = -1;
              switch (t) {
                case Ci.INTERSECTION:
                  o = Math.min(n, i);
                  break;
                case Ci.UNION:
                  o = Math.max(n, i);
                  break;
                case Ci.DIFFERENCE:
                  o = n;
                  break;
                case Ci.SYMDIFFERENCE:
                  o = Math.max(n, i);
              }
              return o;
            }),
            (Ci.createEmptyResult = function(t, e, r, n) {
              var i = null;
              switch (Ci.resultDimension(t, e, r)) {
                case -1:
                  i = n.createGeometryCollection(new Array(0).fill(null));
                  break;
                case 0:
                  i = n.createPoint();
                  break;
                case 1:
                  i = n.createLineString();
                  break;
                case 2:
                  i = n.createPolygon();
              }
              return i;
            }),
            (Ci.difference = function(t, e) {
              return t.isEmpty()
                ? Ci.createEmptyResult(Ci.DIFFERENCE, t, e, t.getFactory())
                : e.isEmpty()
                ? t.copy()
                : (t.checkNotGeometryCollection(t),
                  t.checkNotGeometryCollection(e),
                  oi.overlayOp(t, e, Ci.DIFFERENCE));
            }),
            (Ci.isResultOfOp = function() {
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1],
                  r = t.getLocation(0),
                  n = t.getLocation(1);
                return Ci.isResultOfOp(r, n, e);
              }
              if (3 === arguments.length) {
                var i = arguments[0],
                  o = arguments[1],
                  s = arguments[2];
                switch (
                  (i === M.BOUNDARY && (i = M.INTERIOR),
                  o === M.BOUNDARY && (o = M.INTERIOR),
                  s)
                ) {
                  case Ci.INTERSECTION:
                    return i === M.INTERIOR && o === M.INTERIOR;
                  case Ci.UNION:
                    return i === M.INTERIOR || o === M.INTERIOR;
                  case Ci.DIFFERENCE:
                    return i === M.INTERIOR && o !== M.INTERIOR;
                  case Ci.SYMDIFFERENCE:
                    return (
                      (i === M.INTERIOR && o !== M.INTERIOR) ||
                      (i !== M.INTERIOR && o === M.INTERIOR)
                    );
                }
                return !1;
              }
            }),
            (Ci.INTERSECTION = 1),
            (Ci.UNION = 2),
            (Ci.DIFFERENCE = 3),
            (Ci.SYMDIFFERENCE = 4);
          var Ei = function() {
            (this._g = null),
              (this._boundaryDistanceTolerance = null),
              (this._linework = null),
              (this._ptLocator = new Nn()),
              (this._seg = new dr());
            var t = arguments[0],
              e = arguments[1];
            (this._g = t),
              (this._boundaryDistanceTolerance = e),
              (this._linework = this.extractLinework(t));
          };
          (Ei.prototype.isWithinToleranceOfBoundary = function(t) {
            for (var e = 0; e < this._linework.getNumGeometries(); e++)
              for (
                var r = this._linework.getGeometryN(e).getCoordinateSequence(),
                  n = 0;
                n < r.size() - 1;
                n++
              )
                if (
                  (r.getCoordinate(n, this._seg.p0),
                  r.getCoordinate(n + 1, this._seg.p1),
                  this._seg.distance(t) <= this._boundaryDistanceTolerance)
                )
                  return !0;
            return !1;
          }),
            (Ei.prototype.getLocation = function(t) {
              return this.isWithinToleranceOfBoundary(t)
                ? M.BOUNDARY
                : this._ptLocator.locate(t, this._g);
            }),
            (Ei.prototype.extractLinework = function(t) {
              var e = new Mi();
              t.apply(e);
              var r = e.getLinework(),
                n = me.toLineStringArray(r);
              return t.getFactory().createMultiLineString(n);
            }),
            (Ei.prototype.interfaces_ = function() {
              return [];
            }),
            (Ei.prototype.getClass = function() {
              return Ei;
            });
          var Mi = function() {
            (this._linework = null), (this._linework = new It());
          };
          (Mi.prototype.getLinework = function() {
            return this._linework;
          }),
            (Mi.prototype.filter = function(t) {
              if (t instanceof Kt) {
                var e = t;
                this._linework.add(e.getExteriorRing());
                for (var r = 0; r < e.getNumInteriorRing(); r++)
                  this._linework.add(e.getInteriorRingN(r));
              }
            }),
            (Mi.prototype.interfaces_ = function() {
              return [Bt];
            }),
            (Mi.prototype.getClass = function() {
              return Mi;
            });
          var Pi = function() {
            (this._g = null), (this._doLeft = !0), (this._doRight = !0);
            var t = arguments[0];
            this._g = t;
          };
          (Pi.prototype.extractPoints = function(t, e, r) {
            for (var n = t.getCoordinates(), i = 0; i < n.length - 1; i++)
              this.computeOffsetPoints(n[i], n[i + 1], e, r);
          }),
            (Pi.prototype.setSidesToGenerate = function(t, e) {
              (this._doLeft = t), (this._doRight = e);
            }),
            (Pi.prototype.getPoints = function(t) {
              for (
                var e = new It(), r = wn.getLines(this._g).iterator();
                r.hasNext();

              ) {
                var n = r.next();
                this.extractPoints(n, t, e);
              }
              return e;
            }),
            (Pi.prototype.computeOffsetPoints = function(t, e, r, n) {
              var i = e.x - t.x,
                o = e.y - t.y,
                s = Math.sqrt(i * i + o * o),
                a = (r * i) / s,
                l = (r * o) / s,
                u = (e.x + t.x) / 2,
                h = (e.y + t.y) / 2;
              if (this._doLeft) {
                var c = new w(u - l, h + a);
                n.add(c);
              }
              if (this._doRight) {
                var p = new w(u + l, h - a);
                n.add(p);
              }
            }),
            (Pi.prototype.interfaces_ = function() {
              return [];
            }),
            (Pi.prototype.getClass = function() {
              return Pi;
            });
          var Oi = function t() {
              (this._geom = null),
                (this._locFinder = null),
                (this._location = new Array(3).fill(null)),
                (this._invalidLocation = null),
                (this._boundaryDistanceTolerance = t.TOLERANCE),
                (this._testCoords = new It());
              var e = arguments[0],
                r = arguments[1],
                n = arguments[2];
              (this._boundaryDistanceTolerance = t.computeBoundaryDistanceTolerance(
                e,
                r
              )),
                (this._geom = [e, r, n]),
                (this._locFinder = [
                  new Ei(this._geom[0], this._boundaryDistanceTolerance),
                  new Ei(this._geom[1], this._boundaryDistanceTolerance),
                  new Ei(this._geom[2], this._boundaryDistanceTolerance)
                ]);
            },
            Li = { TOLERANCE: { configurable: !0 } };
          (Oi.prototype.reportResult = function(t, e, r) {
            V.out.println(
              "Overlay result invalid - A:" +
                M.toLocationSymbol(e[0]) +
                " B:" +
                M.toLocationSymbol(e[1]) +
                " expected:" +
                (r ? "i" : "e") +
                " actual:" +
                M.toLocationSymbol(e[2])
            );
          }),
            (Oi.prototype.isValid = function(t) {
              return (
                this.addTestPts(this._geom[0]),
                this.addTestPts(this._geom[1]),
                this.checkValid(t)
              );
            }),
            (Oi.prototype.checkValid = function() {
              if (1 === arguments.length) {
                for (
                  var t = arguments[0], e = 0;
                  e < this._testCoords.size();
                  e++
                ) {
                  var r = this._testCoords.get(e);
                  if (!this.checkValid(t, r))
                    return (this._invalidLocation = r), !1;
                }
                return !0;
              }
              if (2 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1];
                return (
                  (this._location[0] = this._locFinder[0].getLocation(i)),
                  (this._location[1] = this._locFinder[1].getLocation(i)),
                  (this._location[2] = this._locFinder[2].getLocation(i)),
                  !!Oi.hasLocation(this._location, M.BOUNDARY) ||
                    this.isValidResult(n, this._location)
                );
              }
            }),
            (Oi.prototype.addTestPts = function(t) {
              var e = new Pi(t);
              this._testCoords.addAll(
                e.getPoints(5 * this._boundaryDistanceTolerance)
              );
            }),
            (Oi.prototype.isValidResult = function(t, e) {
              var r = Ci.isResultOfOp(e[0], e[1], t),
                n = !(r ^ (e[2] === M.INTERIOR));
              return n || this.reportResult(t, e, r), n;
            }),
            (Oi.prototype.getInvalidLocation = function() {
              return this._invalidLocation;
            }),
            (Oi.prototype.interfaces_ = function() {
              return [];
            }),
            (Oi.prototype.getClass = function() {
              return Oi;
            }),
            (Oi.hasLocation = function(t, e) {
              for (var r = 0; r < 3; r++) if (t[r] === e) return !0;
              return !1;
            }),
            (Oi.computeBoundaryDistanceTolerance = function(t, e) {
              return Math.min(
                $n.computeSizeBasedSnapTolerance(t),
                $n.computeSizeBasedSnapTolerance(e)
              );
            }),
            (Oi.isValid = function(t, e, r, n) {
              return new Oi(t, e, n).isValid(r);
            }),
            (Li.TOLERANCE.get = function() {
              return 1e-6;
            }),
            Object.defineProperties(Oi, Li);
          var Ti = function t(e) {
            (this._geomFactory = null),
              (this._skipEmpty = !1),
              (this._inputGeoms = null),
              (this._geomFactory = t.extractFactory(e)),
              (this._inputGeoms = e);
          };
          (Ti.prototype.extractElements = function(t, e) {
            if (null === t) return null;
            for (var r = 0; r < t.getNumGeometries(); r++) {
              var n = t.getGeometryN(r);
              (this._skipEmpty && n.isEmpty()) || e.add(n);
            }
          }),
            (Ti.prototype.combine = function() {
              for (
                var t = new It(), e = this._inputGeoms.iterator();
                e.hasNext();

              ) {
                var r = e.next();
                this.extractElements(r, t);
              }
              return 0 === t.size()
                ? null !== this._geomFactory
                  ? this._geomFactory.createGeometryCollection(null)
                  : null
                : this._geomFactory.buildGeometry(t);
            }),
            (Ti.prototype.interfaces_ = function() {
              return [];
            }),
            (Ti.prototype.getClass = function() {
              return Ti;
            }),
            (Ti.combine = function() {
              if (1 === arguments.length) return new Ti(arguments[0]).combine();
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1];
                return new Ti(Ti.createList(t, e)).combine();
              }
              if (3 === arguments.length) {
                var r = arguments[0],
                  n = arguments[1],
                  i = arguments[2];
                return new Ti(Ti.createList(r, n, i)).combine();
              }
            }),
            (Ti.extractFactory = function(t) {
              return t.isEmpty()
                ? null
                : t
                    .iterator()
                    .next()
                    .getFactory();
            }),
            (Ti.createList = function() {
              if (2 === arguments.length) {
                var t = arguments[0],
                  e = arguments[1],
                  r = new It();
                return r.add(t), r.add(e), r;
              }
              if (3 === arguments.length) {
                var n = arguments[0],
                  i = arguments[1],
                  o = arguments[2],
                  s = new It();
                return s.add(n), s.add(i), s.add(o), s;
              }
            });
          var Ai = function() {
              (this._inputPolys = null), (this._geomFactory = null);
              var t = arguments[0];
              (this._inputPolys = t),
                null === this._inputPolys && (this._inputPolys = new It());
            },
            Ri = { STRTREE_NODE_CAPACITY: { configurable: !0 } };
          (Ai.prototype.reduceToGeometries = function(t) {
            for (var e = new It(), r = t.iterator(); r.hasNext(); ) {
              var n = r.next(),
                i = null;
              O(n, St) ? (i = this.unionTree(n)) : n instanceof ht && (i = n),
                e.add(i);
            }
            return e;
          }),
            (Ai.prototype.extractByEnvelope = function(t, e, r) {
              for (var n = new It(), i = 0; i < e.getNumGeometries(); i++) {
                var o = e.getGeometryN(i);
                o.getEnvelopeInternal().intersects(t) ? n.add(o) : r.add(o);
              }
              return this._geomFactory.buildGeometry(n);
            }),
            (Ai.prototype.unionOptimized = function(t, e) {
              var r = t.getEnvelopeInternal(),
                n = e.getEnvelopeInternal();
              if (!r.intersects(n)) return Ti.combine(t, e);
              if (t.getNumGeometries() <= 1 && e.getNumGeometries() <= 1)
                return this.unionActual(t, e);
              var i = r.intersection(n);
              return this.unionUsingEnvelopeIntersection(t, e, i);
            }),
            (Ai.prototype.union = function() {
              if (null === this._inputPolys)
                throw new Error("union() method cannot be called twice");
              if (this._inputPolys.isEmpty()) return null;
              this._geomFactory = this._inputPolys
                .iterator()
                .next()
                .getFactory();
              for (
                var t = new or(Ai.STRTREE_NODE_CAPACITY),
                  e = this._inputPolys.iterator();
                e.hasNext();

              ) {
                var r = e.next();
                t.insert(r.getEnvelopeInternal(), r);
              }
              this._inputPolys = null;
              var n = t.itemsTree();
              return this.unionTree(n);
            }),
            (Ai.prototype.binaryUnion = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return this.binaryUnion(t, 0, t.size());
              }
              if (3 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1],
                  n = arguments[2];
                if (n - r <= 1) {
                  var i = Ai.getGeometry(e, r);
                  return this.unionSafe(i, null);
                }
                if (n - r == 2)
                  return this.unionSafe(
                    Ai.getGeometry(e, r),
                    Ai.getGeometry(e, r + 1)
                  );
                var o = Math.trunc((n + r) / 2),
                  s = this.binaryUnion(e, r, o),
                  a = this.binaryUnion(e, o, n);
                return this.unionSafe(s, a);
              }
            }),
            (Ai.prototype.repeatedUnion = function(t) {
              for (var e = null, r = t.iterator(); r.hasNext(); ) {
                var n = r.next();
                e = null === e ? n.copy() : e.union(n);
              }
              return e;
            }),
            (Ai.prototype.unionSafe = function(t, e) {
              return null === t && null === e
                ? null
                : null === t
                ? e.copy()
                : null === e
                ? t.copy()
                : this.unionOptimized(t, e);
            }),
            (Ai.prototype.unionActual = function(t, e) {
              return Ai.restrictToPolygons(t.union(e));
            }),
            (Ai.prototype.unionTree = function(t) {
              var e = this.reduceToGeometries(t);
              return this.binaryUnion(e);
            }),
            (Ai.prototype.unionUsingEnvelopeIntersection = function(t, e, r) {
              var n = new It(),
                i = this.extractByEnvelope(r, t, n),
                o = this.extractByEnvelope(r, e, n),
                s = this.unionActual(i, o);
              return n.add(s), Ti.combine(n);
            }),
            (Ai.prototype.bufferUnion = function() {
              if (1 === arguments.length) {
                var t = arguments[0];
                return t
                  .get(0)
                  .getFactory()
                  .buildGeometry(t)
                  .buffer(0);
              }
              if (2 === arguments.length) {
                var e = arguments[0],
                  r = arguments[1];
                return e
                  .getFactory()
                  .createGeometryCollection([e, r])
                  .buffer(0);
              }
            }),
            (Ai.prototype.interfaces_ = function() {
              return [];
            }),
            (Ai.prototype.getClass = function() {
              return Ai;
            }),
            (Ai.restrictToPolygons = function(t) {
              if (O(t, Zt)) return t;
              var e = In.getPolygons(t);
              return 1 === e.size()
                ? e.get(0)
                : t.getFactory().createMultiPolygon(me.toPolygonArray(e));
            }),
            (Ai.getGeometry = function(t, e) {
              return e >= t.size() ? null : t.get(e);
            }),
            (Ai.union = function(t) {
              return new Ai(t).union();
            }),
            (Ri.STRTREE_NODE_CAPACITY.get = function() {
              return 4;
            }),
            Object.defineProperties(Ai, Ri);
          var Fi = function() {};
          (Fi.prototype.interfaces_ = function() {
            return [];
          }),
            (Fi.prototype.getClass = function() {
              return Fi;
            }),
            (Fi.union = function(t, e) {
              if (t.isEmpty() || e.isEmpty()) {
                if (t.isEmpty() && e.isEmpty())
                  return Ci.createEmptyResult(Ci.UNION, t, e, t.getFactory());
                if (t.isEmpty()) return e.copy();
                if (e.isEmpty()) return t.copy();
              }
              return (
                t.checkNotGeometryCollection(t),
                t.checkNotGeometryCollection(e),
                oi.overlayOp(t, e, Ci.UNION)
              );
            }),
            (t.GeoJSONReader = Ie),
            (t.GeoJSONWriter = we),
            (t.OverlayOp = Ci),
            (t.UnionOp = Fi),
            (t.BufferOp = yn),
            Object.defineProperty(t, "__esModule", { value: !0 });
        })(e);
      },
      4654: () => {},
      7531: () => {},
      8593: t => {
        "use strict";
        t.exports = JSON.parse(
          '{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}'
        );
      },
      9411: t => {
        "use strict";
        t.exports = { i8: "2.3.15" };
      }
    },
    e = {};
  function r(n) {
    var i = e[n];
    if (void 0 !== i) return i.exports;
    var o = (e[n] = { exports: {} });
    return t[n].call(o.exports, o, o.exports, r), o.exports;
  }
  (r.n = t => {
    var e = t && t.__esModule ? () => t.default : () => t;
    return r.d(e, { a: e }), e;
  }),
    (r.d = (t, e) => {
      for (var n in e)
        r.o(e, n) &&
          !r.o(t, n) &&
          Object.defineProperty(t, n, { enumerable: !0, get: e[n] });
    }),
    (r.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e)),
    (r.r = t => {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(t, "__esModule", { value: !0 });
    });
  var n = {};
  (() => {
    "use strict";
    r.r(n),
      r.d(n, {
        ArcGISFeatureQuery: () => su,
        FeatureConvert: () => Zl,
        FeatureEdit: () => nu,
        FeatureQuery: () => ru,
        getGeoJSONFeatureBound: () => Yl,
        getGeoJSONFeatureCenter: () => Wl,
        getGeoJSONFeaturesCenter: () => Xl
      });
    var t = {};
    r.r(t),
      r.d(t, {
        AnyLine: () => ut,
        Arc: () => ht,
        Browser: () => A,
        CAttDataRow: () => pt,
        CAttStruct: () => ct,
        CDisplayStyle: () => zt,
        CDisplayStyleExtend: () => Vt,
        CDynNoteInfo: () => Ut,
        CGDBInfo: () => Wt,
        CItemType: () => Lt,
        CLinAdjustType: () => Et,
        CLinHeadType: () => Mt,
        CLinJointType: () => Pt,
        CLinStyleMakeType: () => Ot,
        CLineInfo: () => Gt,
        CPointInfo: () => Bt,
        CRegionInfo: () => kt,
        ChineseToUtf8: () => Y,
        Circle: () => Ht,
        DeepMerge: () => K,
        DynNoteLableType: () => jt,
        DynShowStyle: () => qt,
        EightDirType: () => It,
        Feature: () => re,
        FeatureGeometry: () => te,
        FeatureGraphicBase: () => $t,
        FeatureSet: () => ne,
        FeatureType: () => yt,
        FontShape: () => gt,
        GLine: () => Zt,
        GPoint: () => Qt,
        GRegion: () => Kt,
        ISShowArc: () => wt,
        IS_GECKO: () => T,
        LabelLinInfo: () => Ft,
        LabelLinType: () => mt,
        LabelPntType: () => _t,
        LabelRegInfo: () => Dt,
        LabelRegType: () => vt,
        LabelSpreadType: () => bt,
        LablePntInfo: () => Rt,
        LayerStatusType: () => At,
        LineConstrain: () => St,
        MapType: () => Tt,
        MultiPolygon: () => oe,
        NetAnalyType: () => Nt,
        NetElemType: () => Ct,
        Point2D: () => Yt,
        PolyLine: () => se,
        Polygon: () => ie,
        Rectangle: () => Jt,
        RepeatType: () => xt,
        Tangram: () => Xt,
        VectCls: () => ae,
        VectClsType: () => dt,
        WebGraphicsInfo: () => ee,
        XClsType: () => ft,
        Zondy: () => p,
        applyDefaults: () => E,
        bind: () => V,
        bindAsEventListener: () => W,
        cloneObject: () => q,
        copy: () => _,
        copyAttributes: () => B,
        copyAttributesWithClip: () => k,
        copyExcluce: () => x,
        createCanvasContext2D: () => nt,
        extend: () => g,
        extendDeep: () => v,
        formatEdits: () => ot,
        formatPoints: () => at,
        formatQuery: () => it,
        getBrowser: () => R,
        getElement: () => S,
        getParameterString: () => M,
        getParameters: () => L,
        getTopAnalysisResult: () => X,
        getWFParameterString: () => P,
        indexOf: () => N,
        isArray: () => m,
        isElement: () => I,
        isInTheSameDomain: () => j,
        isSupportCanvas: () => F,
        merge: () => et,
        mixin: () => rt,
        modifyDOMElement: () => C,
        newGuid: () => z,
        notNULL: () => lt,
        removeItem: () => w,
        reset: () => b,
        returnPoint: () => st,
        supportCanvas: () => D,
        toJSON: () => U,
        transformResult: () => G,
        urlAppend: () => O
      });
    var e = {};
    r.r(e),
      r.d(e, {
        ContourNoteParam: () => ve,
        ContourParam: () => Se,
        ContourRegionInfo: () => xe,
        ContourZValue: () => be,
        MeshingParam: () => Ie,
        NetAnalyse: () => we,
        NetAnalysisExtent: () => Ce,
        RuleParse: () => Pe,
        SlopLineParam: () => _e
      });
    var i = {};
    r.r(i), r.d(i, { G3DMapDoc: () => Le, G3DService: () => Oe });
    var o = {};
    r.r(o),
      r.d(o, {
        CatalogService: () => Te,
        ColorInfo: () => Ae,
        GDBInfo: () => Re,
        MapDoc: () => Fe,
        SystomInfo: () => Ue,
        TileLayer: () => De,
        VectorLayer: () => je
      });
    var s = {};
    r.r(s),
      r.d(s, {
        BaseParameter: () => rr,
        EditDocFeature: () => Be,
        EditLayerFeature: () => ke,
        EditServiceBase: () => Ge,
        FeatureService: () => nr,
        GeometryParameter: () => Ki,
        MultiGeoQuery: () => He,
        MultiGeoQueryParameter: () => Ye,
        ObjClsQuery: () => $e,
        ObjClsQueryParameter: () => Je,
        ObjectIdsParameter: () => eo,
        QueryByLayerParameter: () => Qe,
        QueryDocFeature: () => Ze,
        QueryFeatureRule: () => ze,
        QueryFeatureStruct: () => qe,
        QueryLayerFeature: () => Ke,
        QueryParameter: () => We,
        QueryParameterBase: () => Ve,
        QueryServiceBase: () => Xe,
        QueryUnifyParameter: () => er,
        RectangleParameter: () => to,
        SQLParameter: () => ir,
        VFeature: () => ro,
        VPoint: () => $i,
        VPolygon: () => Zi,
        VPolyline: () => Qi
      });
    var a = {};
    r.r(a),
      r.d(a, {
        AnalysisBase: () => no,
        ClassBufferBase: () => io,
        ClassBufferByMultiplyRing: () => oo,
        ClassBufferBySingleRing: () => so,
        ClipBase: () => ao,
        ClipByCircle: () => lo,
        ClipByLayer: () => uo,
        ClipByPolygon: () => ho,
        ContourAnalyse: () => co,
        FeatureBuffBase: () => po,
        FeatureBuffByMultiplyRing: () => fo,
        FeatureBuffBySingleRing: () => yo,
        FunctionWareService: () => Io,
        NetAnalysis: () => go,
        OverlayBase: () => mo,
        OverlayByLayer: () => vo,
        OverlayByPolygon: () => _o,
        ProjectBase: () => xo,
        ProjectByLayer: () => bo,
        ProjectBySRID: () => So
      });
    var l = {};
    r.r(l),
      r.d(l, {
        CProjectBySRSID: () => Co,
        CProjectParam: () => No,
        CalArea: () => Mo,
        CalPolyLineLength: () => Po,
        CalServiceBase: () => Eo,
        CoordinateElpTrans: () => Ro,
        GeometryAnalysisBase: () => wo,
        ProjectDots: () => Oo,
        ProjectRang: () => Lo,
        Smooth: () => To,
        TopAnalysis: () => Ao
      });
    var u = {};
    r.r(u),
      r.d(u, {
        GetDocImageService: () => Do,
        GetLayerImageService: () => jo,
        GetMapImageService: () => Uo,
        GetMapInfoService: () => Go,
        GetTileImageService: () => Bo,
        MapServiceBase: () => Fo
      });
    var h = {};
    r.r(h),
      r.d(h, {
        CAllOtherDataItemInfoSource: () => ko,
        CAnnInfo: () => qo,
        CChartLabelFormat: () => zo,
        CChartTheme: () => Zo,
        CChartThemeInfo: () => $o,
        CChartThemeRepresentInfo: () => Qo,
        CChartType: () => Wo,
        CDotDensityTheme: () => Ko,
        CFourColorTheme: () => ts,
        CGraduatedSymbolTheme: () => es,
        CLinInfo: () => Yo,
        CMultiClassTheme: () => ns,
        CPntInfo: () => Xo,
        CRandomTheme: () => is,
        CRangeTheme: () => ss,
        CRangeThemeInfo: () => os,
        CRegInfo: () => Ho,
        CSimpleTheme: () => as,
        CTheme: () => Vo,
        CThemeInfo: () => Jo,
        CUniqueTheme: () => us,
        CUniqueThemeInfo: () => ls,
        ExpInfo: () => rs,
        FolderInfo: () => cs,
        FolderInfoAttribute: () => hs,
        ItemValue: () => ps,
        ThemeOper: () => ds,
        ThemesInfo: () => fs
      });
    var c = {};
    r.r(c), r.d(c, { Gn: () => t, K0: () => i, pI: () => o, qs: () => s });
    var p = (window.Zondy = window.Zondy || {});
    (p.Event = p.Event || {}),
      (p.Object = p.Object || {}),
      (p.Object.ContourAnalyse = p.Object.ContourAnalyse || {}),
      (p.Object.Theme = p.Object.Theme || {}),
      (p.Theme = p.Theme || {}),
      (p.Service = p.Service || {}),
      (p.Socket = p.Socket || {}),
      (p.Enum = p.Enum || {}),
      (p.Enum.Net = p.Enum.Net || {}),
      (p.Enum.Theme = p.Enum.Theme || {}),
      (p.Enum.Map = p.Enum.Map || {}),
      (p.Catalog = p.Catalog || {}),
      (p.Util = p.Util || {}),
      (p.CRS = p.CRS || {}),
      (p.Map = p.Map || {}),
      (p.xsd = p.xsd || {}),
      (p.XLink = p.XLink || {}),
      (p.extent = p.extent || {}),
      (p.xml = p.xml || {}),
      (p.array = p.array || {}),
      (p.string = p.string || {}),
      (p.LevelRenderer = p.LevelRenderer || {}),
      (p.LevelRenderer.Tool = p.LevelRenderer.Tool || {}),
      (p.LevelRenderer.Animation = p.LevelRenderer.Animation || {}),
      (p.Feature = p.Feature || {}),
      (p.Feature.ShapeParameters = p.Feature.ShapeParameters || {}),
      (p.Geometry = p.Geometry || {}),
      (p.Client = p.Client || {}),
      (p.Source = p.Source || {}),
      (p.GeomInteraction = p.GeomInteraction || {}),
      (p.Format = p.Format || {}),
      (p.Control = p.Control || {}),
      (p.OGC = p.OGC || {}),
      (p.DataStore = p.DataStore || {}),
      (p.DataStore.ElasticSearch = p.DataStore.ElasticSearch || {}),
      (p.DataStore.PostGIS = p.DataStore.PostGIS || {}),
      (p.DataStore.Hbase = p.DataStore.Hbase || {}),
      (p.DataStore.MongoDB = p.DataStore.MongoDB || {}),
      (p.CloudDisk = p.CloudDisk || {}),
      (p.CloudDisk.GisCore = p.CloudDisk.GisCore || {}),
      (p.CloudDisk.Model = p.CloudDisk.Model || {}),
      (p.IGServerX = p.IGServerX || {}),
      (p.IGServerX.Vector = p.IGServerX.Vector || {});
    var f,
      d,
      y,
      g = function(t, e) {
        if (((t = t || {}), e)) {
          for (var r in e) {
            var n = e[r];
            void 0 !== n && (t[r] = n);
          }
          !("function" == typeof window.Event && e instanceof window.Event) &&
            e.hasOwnProperty &&
            e.hasOwnProperty("toString") &&
            (t.toString = e.toString);
        }
        return t;
      },
      m = function(t) {
        return "[object Array]" === Object.prototype.toString.call(t);
      },
      v = function(t, e) {
        var r,
          n = Object.prototype.toString;
        for (r in ((t = t || {}), e))
          e.hasOwnProperty(r) &&
            ("object" == typeof e[r]
              ? (("[object Null]" !== n.call(t[r]) &&
                  "[object Undefined]" !== n.call(t[r])) ||
                  (t[r] = "[object Array]" === n.call(e[r]) ? [] : {}),
                v(t[r], e[r]))
              : (t[r] = e[r]),
            ("" !== e[r] && null !== e[r]) || (t[r] = e[r]));
        return t;
      },
      _ = function(t, e) {
        var r;
        if (((t = t || {}), e))
          for (var n in t) void 0 !== (r = e[n]) && (t[n] = r);
      },
      x = function(t, e, r) {
        var n;
        if (((t = t || {}), e))
          for (var i in e)
            void 0 !== (n = e[i]) &&
              "function" != typeof n &&
              r.indexOf(i) < 0 &&
              (t[i] = n);
      },
      b = function(t) {
        for (var e in (t = t || {}))
          if (t.hasOwnProperty(e)) {
            if ("object" == typeof t[e] && t[e] instanceof Array) {
              for (var r in t[e]) t[e][r].destroy && t[e][r].destroy();
              t[e].length = 0;
            } else
              "object" == typeof t[e] &&
                t[e] instanceof Object &&
                t[e].destroy &&
                t[e].destroy();
            t[e] = null;
          }
      },
      S = function() {
        for (var t = [], e = 0, r = arguments.length; e < r; e++) {
          var n = arguments[e];
          if (
            ("string" == typeof n && (n = document.getElementById(n)),
            1 === arguments.length)
          )
            return n;
          t.push(n);
        }
        return t;
      },
      I = function(t) {
        return !(!t || 1 !== t.nodeType);
      },
      w = function(t, e) {
        for (var r = t.length - 1; r >= 0; r--) t[r] === e && t.splice(r, 1);
        return t;
      },
      N = function(t, e) {
        if (null == t) return -1;
        if ("function" == typeof t.indexOf) return t.indexOf(e);
        for (var r = 0, n = t.length; r < n; r++) if (t[r] === e) return r;
        return -1;
      },
      C = function(t, e, r, n, i, o, s, a) {
        e && (t.id = e),
          r && ((t.style.left = r.x + "px"), (t.style.top = r.y + "px")),
          n && ((t.style.width = n.w + "px"), (t.style.height = n.h + "px")),
          i && (t.style.position = i),
          o && (t.style.border = o),
          s && (t.style.overflow = s),
          parseFloat(a) >= 0 && parseFloat(a) < 1
            ? ((t.style.filter = "alpha(opacity=" + 100 * a + ")"),
              (t.style.opacity = a))
            : 1 === parseFloat(a) &&
              ((t.style.filter = ""), (t.style.opacity = ""));
      },
      E = function(t, e) {
        t = t || {};
        var r = "function" == typeof window.Event && e instanceof window.Event;
        for (var n in e)
          (void 0 === t[n] ||
            (!r &&
              e.hasOwnProperty &&
              e.hasOwnProperty(n) &&
              !t.hasOwnProperty(n))) &&
            (t[n] = e[n]);
        return (
          !r &&
            e &&
            e.hasOwnProperty &&
            e.hasOwnProperty("toString") &&
            !t.hasOwnProperty("toString") &&
            (t.toString = e.toString),
          t
        );
      },
      M = function(t) {
        var e = [];
        for (var r in t) {
          var n = t[r];
          if (null != n && "function" != typeof n) {
            var i;
            if ("object" == typeof n && n.constructor === Array) {
              for (var o, s = [], a = 0, l = n.length; a < l; a++)
                (o = n[a]), s.push(encodeURIComponent(null == o ? "" : o));
              i = s.join(",");
            } else i = encodeURIComponent(n);
            e.push(encodeURIComponent(r) + "=" + i);
          }
        }
        return e.join("&");
      },
      P = function(t) {
        var e = [];
        for (var r in t) {
          var n = t[r];
          if (null != n && "function" != typeof n) {
            var i;
            if ("object" == typeof n && n.constructor === Array) {
              for (var o, s = [], a = 0, l = n.length; a < l; a++)
                (o = n[a]), s.push(encodeURIComponent(null == o ? "" : o));
              i = s.join(",");
            } else i = encodeURIComponent(n);
            e.push(encodeURIComponent(r) + ":" + i);
          }
        }
        return e.join(";");
      },
      O = function(t, e) {
        var r = t;
        if (e) {
          var n = (t + " ").split(/[?&]/);
          r += " " === n.pop() ? e : n.length ? "&" + e : "?" + e;
        }
        return r;
      },
      L = function(t) {
        var e = "";
        if ((t = null == t ? window.location.href : t).indexOf("?") > -1) {
          var r = t.indexOf("?") + 1;
          t.indexOf("#");
          var n = t.indexOf("#") > -1 ? t.indexOf("#") : t.length;
          e = t.substring(r, n);
        }
        for (var i = {}, o = e.split(/[&;]/), s = 0, a = o.length; s < a; ++s) {
          var l = o[s].split("=");
          if (l[0]) {
            var u = l[0];
            try {
              u = decodeURIComponent(u);
            } catch (t) {
              u = unescape(u);
            }
            var h = (l[1] || "").replace(/\+/g, " ");
            try {
              h = decodeURIComponent(h);
            } catch (t) {
              h = unescape(h);
            }
            1 == (h = h.split(",")).length && (h = h[0]), (i[u] = h);
          }
        }
        return i;
      },
      T =
        -1 === (f = navigator.userAgent.toLowerCase()).indexOf("webkit") &&
        -1 !== f.indexOf("gecko"),
      A = (function() {
        var t,
          e = "",
          r = "",
          n = "pc",
          i = navigator.userAgent.toLowerCase();
        return (
          i.indexOf("msie") > -1 ||
          (i.indexOf("trident") > -1 && i.indexOf("rv") > -1)
            ? ((e = "msie"),
              (t = i.match(/msie ([\d.]+)/) || i.match(/rv:([\d.]+)/)))
            : i.indexOf("chrome") > -1
            ? ((e = "chrome"), (t = i.match(/chrome\/([\d.]+)/)))
            : i.indexOf("firefox") > -1
            ? ((e = "firefox"), (t = i.match(/firefox\/([\d.]+)/)))
            : i.indexOf("opera") > -1
            ? ((e = "opera"), (t = i.match(/version\/([\d.]+)/)))
            : i.indexOf("safari") > -1 &&
              ((e = "safari"), (t = i.match(/version\/([\d.]+)/))),
          (r = t ? t[1] : ""),
          i.indexOf("ipad") > -1 ||
          i.indexOf("ipod") > -1 ||
          i.indexOf("iphone") > -1
            ? (n = "apple")
            : i.indexOf("android") > -1 &&
              ((r = (t = i.match(/version\/([\d.]+)/)) ? t[1] : ""),
              (n = "android")),
          { name: e, version: r, device: n }
        );
      })(),
      R = function() {
        return A;
      },
      F =
        ((d = !0),
        (y = R()),
        document.createElement("canvas").getContext
          ? ("firefox" === y.name && parseFloat(y.version) < 5 && (d = !1),
            "safari" === y.name && parseFloat(y.version) < 4 && (d = !1),
            "opera" === y.name && parseFloat(y.version) < 10 && (d = !1),
            "msie" === y.name && parseFloat(y.version) < 9 && (d = !1))
          : (d = !1),
        d),
      D = function() {
        return F;
      },
      j = function(t) {
        if (!t) return !0;
        var e = t.indexOf("//"),
          r = document.location.toString(),
          n = r.indexOf("//");
        if (-1 === e) return !0;
        var i,
          o = (i = t.substring(0, e)),
          s = r.substring(n + 2);
        n = s.indexOf("/");
        var a = s.indexOf(":"),
          l = s.substring(0, n),
          u = document.location.protocol;
        if (
          (-1 !== a || (l += ":" + ("http:" === u.toLowerCase() ? 80 : 443)),
          u.toLowerCase() !== o.toLowerCase())
        )
          return !1;
        var h = (o = t.substring(e + 2)).indexOf(":");
        e = o.indexOf("/");
        var c,
          p = o.substring(0, e);
        return (
          -1 !== h
            ? (c = o.substring(0, h))
            : ((c = o.substring(0, e)),
              (p += ":" + ("http:" === i.toLowerCase() ? 80 : 443))),
          c === document.domain && p === l
        );
      },
      U = function(t) {
        var e = t;
        if (null == e) return null;
        switch (e.constructor) {
          case String:
            return (e = (e = (e = (e = (e = (e =
              '"' + e.replace(/(["\\])/g, "\\$1") + '"').replace(
              /\n/g,
              "\\n"
            )).replace(/\r/g, "\\r")).replace("<", "&lt;")).replace(
              ">",
              "&gt;"
            )).replace(/%/g, "%25")).replace(/&/g, "%26");
          case Array:
            for (var r = [], n = 0, i = e.length; n < i; n++) r.push(U(e[n]));
            return "[" + r.join(",") + "]";
          case Number:
            return isFinite(e) ? String(e) : null;
          case Boolean:
            return String(e);
          case Date:
            return (
              "{'__type':\"System.DateTime\",'Year':" +
              e.getFullYear() +
              ",'Month':" +
              (e.getMonth() + 1) +
              ",'Day':" +
              e.getDate() +
              ",'Hour':" +
              e.getHours() +
              ",'Minute':" +
              e.getMinutes() +
              ",'Second':" +
              e.getSeconds() +
              ",'Millisecond':" +
              e.getMilliseconds() +
              ",'TimezoneOffset':" +
              e.getTimezoneOffset() +
              "}"
            );
          default:
            if ("object" == typeof e) {
              if (e.length) {
                for (r = [], n = 0, i = e.length; n < i; n++) r.push(U(e[n]));
                return "[" + r.join(",") + "]";
              }
              var o = [];
              for (var s in e)
                "function" != typeof e[s] &&
                  "CLASS_NAME" !== s &&
                  o.push("'" + s + "':" + U(e[s]));
              return o.length > 0 ? "{" + o.join(",") + "}" : "{}";
            }
            return e.toString();
        }
      },
      G = function(t) {
        return (
          t.responseText &&
            "string" == typeof t.responseText &&
            (t = JSON.parse(t.responseText)),
          t
        );
      },
      B = function(t, e) {
        if (((t = t || {}), e))
          for (var r in e) {
            var n = e[r];
            void 0 !== n &&
              "CLASS_NAME" !== r &&
              "function" != typeof n &&
              (t[r] = n);
          }
        return t;
      },
      k = function(t, e, r) {
        if (((t = t || {}), e))
          for (var n in e) {
            var i = !1;
            if (r && r.length)
              for (var o = 0, s = r.length; o < s; o++)
                if (n === r[o]) {
                  i = !0;
                  break;
                }
            if (!0 !== i) {
              var a = e[n];
              void 0 !== a &&
                "CLASS_NAME" !== n &&
                "function" != typeof a &&
                (t[n] = a);
            }
          }
        return t;
      },
      q = function(t) {
        if (null === t || "object" != typeof t) return t;
        if (t instanceof Date) return (e = new Date()).setTime(t.getTime()), e;
        if (t instanceof Array) return t.slice(0);
        if (t instanceof Object) {
          var e = {};
          for (var r in t) t.hasOwnProperty(r) && (e[r] = q(t[r]));
          return e;
        }
        throw new Error("Unable to copy obj! Its type isn't supported.");
      },
      z = function() {
        for (var t = "", e = 1; e <= 32; e++)
          (t += Math.floor(16 * Math.random()).toString(16)),
            (8 != e && 12 != e && 16 != e && 20 != e) || (t += "-");
        return t;
      },
      V = function(t, e) {
        var r = Array.prototype.slice.apply(arguments, [2]);
        return function() {
          var n = r.concat(Array.prototype.slice.apply(arguments, [0]));
          return t.apply(e, n);
        };
      },
      W = function(t, e) {
        return function(r) {
          return t.call(e, r || window.event);
        };
      },
      X = function(t) {
        switch (t.value) {
          case 0:
            return "Intersect";
          case 1:
            return "Disjoin";
          case 2:
            return "Include";
          case 3:
            return "Adjacent";
          default:
            return "Unknown";
        }
      },
      Y = function(t) {
        return t.replace(/([\u4E00-\u9FA5]|[\uFE30-\uFFA0])/g, function(t) {
          return H(t);
        });
      },
      H = function(t) {
        var e = escape(t).split("%"),
          r = "";
        "" != e[0] && (r = e[0]);
        for (var n = 1; n < e.length; n++)
          "u" == e[n].substring(0, 1)
            ? (r += $(J(e[n].substring(1, 5))))
            : (r += "%" + e[n]);
        return r;
      },
      J = function(t) {
        for (var e, r = "", n = "", i = 0; i < t.length; i++)
          (r = t.charAt(i)), (e = "0123456789ABCDEF".indexOf(r)), (n += Z(e));
        return n;
      },
      $ = function(t) {
        var e = "",
          r = "",
          n = "";
        if (16 == t.length) {
          (r = "1110" + t.substring(0, 4)),
            (r += "10" + t.substring(4, 10)),
            (r += "10" + t.substring(10, 16));
          for (var i = "0123456789ABCDEF", o = 0; o < 3; o++)
            (e += "%"),
              (n = r.substring(8 * o, 8 * (o + 1))),
              (e += i.charAt(Q(n.substring(0, 4)))),
              (e += i.charAt(Q(n.substring(4, 8))));
          return e;
        }
        return "";
      },
      Q = function(t) {
        var e = 0;
        if (4 == t.length) {
          for (var r = 0; r < 4; r++) e += t.charAt(r) * Math.pow(2, 3 - r);
          return e;
        }
        return -1;
      },
      Z = function(t) {
        for (var e = "", r = 0, n = 0; n < 4; n++)
          t >= (r = Math.pow(2, 3 - n)) ? ((e += "1"), (t -= r)) : (e += "0");
        return e;
      },
      K = function(t, e) {
        if (
          "[object Object]" === Object.prototype.toString.call(t) &&
          "[object Object]" === Object.prototype.toString.call(e)
        )
          for (var r in e) t[r] ? (t[r] = K(t[r], e[r])) : (t[r] = e[r]);
        else
          t =
            "[object Array]" === Object.prototype.toString.call(t) &&
            "[object Array]" === Object.prototype.toString.call(e)
              ? t.concat(e)
              : e;
        return t;
      },
      tt = function(t, e, r, n) {
        e.hasOwnProperty(r) &&
          ("object" != typeof t[r] ||
          {
            "[object Function]": 1,
            "[object RegExp]": 1,
            "[object Date]": 1,
            "[object Error]": 1,
            "[object CanvasGradient]": 1
          }[Object.prototype.toString.call(t[r])]
            ? (!n && r in t) || (t[r] = e[r])
            : et(t[r], e[r], n));
      },
      et = function(t, e, r) {
        for (var n in e) tt(t, e, n, r);
        return t;
      },
      rt = function(...t) {
        class e {
          constructor(e) {
            for (var r = 0; r < t.length; r++) i(this, new t[r](e));
          }
        }
        for (var r = 0; r < t.length; r++) {
          var n = t[r];
          i(e, n), i(e.prototype, n.prototype), i(e.prototype, new n());
        }
        return e;
        function i(t, e) {
          var r = Object.getOwnPropertyNames(e);
          Object.getOwnPropertySymbols &&
            (r = r.concat(Object.getOwnPropertySymbols(e)));
          for (var n = 0; n < r.length; n++) {
            var i = r[n];
            if (
              "constructor" !== i &&
              "prototype" !== i &&
              "name" !== i &&
              "length" !== i
            ) {
              let r = Object.getOwnPropertyDescriptor(e, i);
              window.ActiveXObject
                ? Object.defineProperty(t, i, r || {})
                : Object.defineProperty(t, i, r);
            }
          }
        }
      },
      nt = function(t, e) {
        var r = document.createElement("CANVAS");
        return t && (r.width = t), e && (r.height = e), r.getContext("2d");
      },
      it = function(t, e, r, n) {
        return (
          Object.keys(t).forEach(function(i) {
            let o = t[i],
              s = i;
            if (lt(o) && "function" != typeof o) {
              if (r && r.indexOf(i) > -1) {
                let r = {};
                "geometry" === i &&
                  ("polygon" === o.type && (r.rings = t[i].rings),
                  "multipoint" === o.type && (r.points = t[i].points),
                  "point" === o.type &&
                    t[i].x &&
                    t[i].y &&
                    ((r.y = t[i].y), (r.x = t[i].x)),
                  "polyline" === o.type && (r.paths = t[i].paths),
                  (r.spatialReference = t[i].spatialReference),
                  (o = r),
                  (e +=
                    "&geometryType=esriGeometry" +
                    t[i].type.charAt(0).toUpperCase() +
                    t[i].type.slice(1))),
                  (o = JSON.stringify(o));
              }
              n && n.hasOwnProperty(i) && (s = n[i]), (e += "&" + s + "=" + o);
            }
          }),
          e
        );
      },
      ot = function(t, e, r) {
        return (
          Object.keys(e).forEach(function(n) {
            if (r && r.indexOf(n) > -1) {
              let r = n;
              (r = n.substring(0, r.length - "Features".length) + "s"),
                (t +=
                  r +
                  "=" +
                  encodeURIComponent(
                    e[n] instanceof Object ? JSON.stringify(e[n]) : e[n]
                  ) +
                  "&");
            } else t += n + "=" + e[n] + "&";
          }),
          t
        );
      },
      st = function(t, e, r) {
        return new t({
          longitude: r[0],
          latitude: r[1],
          z: r[2],
          spatialReference: q(e.spatialReference)
        });
      },
      at = function(t) {
        for (let e = 0; e < t.length; e++)
          t[e] instanceof Array
            ? at(t[e])
            : t[e] instanceof Object && (t[e] = t[e].toArray());
        return t;
      },
      lt = function(t) {
        return "" !== t && null != t;
      };
    (p.Util.extend = g),
      (p.Util.isArray = m),
      (p.Util.extendDeep = v),
      (p.Util.copy = _),
      (p.Util.copyExcluce = x),
      (p.Util.reset = b),
      (p.Util.getElement = S),
      (p.Util.isElement = I),
      (p.Util.removeItem = w),
      (p.Util.indexOf = N),
      (p.Util.modifyDOMElement = C),
      (p.Util.applyDefaults = E),
      (p.Util.getParameterString = M),
      (p.Util.getWFParameterString = P),
      (p.Util.urlAppend = O),
      (p.Util.getParameters = L),
      (p.IS_GECKO = T),
      (p.Browser = A),
      (p.Util.getBrowser = R),
      (p.Util.isSupportCanvas = F),
      (p.Util.supportCanvas = D),
      (p.Util.isInTheSameDomain = j),
      (p.Util.toJSON = U),
      (p.Util.transformResult = G),
      (p.Util.copyAttributes = B),
      (p.Util.copyAttributesWithClip = k),
      (p.Util.cloneObject = q),
      (p.Util.newGuid = z),
      (p.Util.bind = V),
      (p.Util.bindAsEventListener = W),
      (p.Util.getTopAnalysisResult = X),
      (p.Util.ChineseToUtf8 = Y),
      (p.Util.DeepMerge = K),
      (p.Util.merge = et),
      (p.Util.mixin = rt),
      (p.Util.createCanvasContext2D = nt),
      (p.Util.formatQuery = it),
      (p.Util.formatEdits = ot),
      (p.Util.returnPoint = st),
      (p.Util.returnPoint = at),
      (p.Util.returnPoint = lt);
    var ut = function(t, e) {
      g(this, void 0 !== e ? e : {}), (this.Arcs = null != t ? t : null);
    };
    p.Object.AnyLine = ut;
    var ht = function(t, e) {
      (this.ArcID = 0),
        g(this, void 0 !== e ? e : {}),
        (this.Dots = null != t ? t : null);
    };
    p.Object.Arc = ht;
    var ct = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.FldNumber = void 0 !== e.FldNumber ? e.FldNumber : 0),
        (this.FldName = void 0 !== e.FldName ? e.FldName : null),
        (this.FldType = void 0 !== e.FldType ? e.FldType : null);
    };
    p.Object.CAttStruct = ct;
    var pt = function(t, e, r) {
      g(this, void 0 !== r ? r : {}),
        (this.FID = void 0 !== e ? e : 0),
        (this.Values = void 0 !== t ? t : null);
    };
    p.Object.CAttDataRow = pt;
    var ft = {
      SFCls: "SFeatureCls",
      OCls: "ObjectCls",
      ACls: "AnnotationCls",
      GnetCls: "GNetCls",
      RDS: "RasterDataset",
      SFClsInfo: "sfcls_new"
    };
    p.Enum.XClsType = ft;
    var dt = { Unknown: 0, SFCls: "SFeatureCls", AnnoCls: "AnnotationCls" };
    p.Enum.VectClsType = dt;
    var yt = { Unknown: 0, Pnt: 1, Lin: 2, Reg: 3 };
    p.Enum.FeatureType = yt;
    var gt = {
      Positive: 0,
      LeftOblique: 1,
      RightOblique: 2,
      LeftTowering: 3,
      RightTowering: 4
    };
    p.Enum.FontShape = gt;
    var mt = { Curved: 0, Forward: 1, Horizontal: 2, Tangent: 3 };
    p.Enum.LabelLinType = mt;
    var vt = { Curved: 0, Forward: 1, Horizontal: 2, Boundray: 3, Outside: 4 };
    p.Enum.LabelRegType = vt;
    var _t = { PntAnyDir: 0, PntEightDir: 1, PntOnFea: 2 };
    p.Enum.LabelPntType = _t;
    var xt = { Auto: 0, NoRep: 1, OnStep: 2 };
    p.Enum.RepeatType = xt;
    var bt = { AutoSpread: 0, Centralization: 1, Decentralization: 2 };
    p.Enum.LabelSpreadType = bt;
    var St = { Left: 0, Right: 1, Above: 2, Below: 3, Both: 4, NoRes: 5 };
    p.Enum.LineConstrain = St;
    var It = {
      East: 0,
      North: 1,
      NorthEast: 2,
      NorthWest: 3,
      South: 4,
      SouthEast: 5,
      SouthWest: 6,
      West: 7,
      NoDir: 8
    };
    p.Enum.EightDirType = It;
    var wt = { Reg: 0, Arc: 1, All: 2 };
    p.Enum.ISShowArc = wt;
    var Nt = {
      UserMode: "UserMode",
      SysModeCommwayPrefer: "SysModeCommwayPrefer",
      SysModeHighWayPrefer: "SysModeHighWayPrefer",
      SysModeMinCost: "SysModeMinCost",
      SysModeMinDis: "SysModeMinDis",
      SysModeMinDis: "SysModeMinDis",
      SysModeSysRecommend: "SysModeSysRecommend"
    };
    p.Enum.Net.NetAnalyType = Nt;
    var Ct = {
      Node: 1,
      Edge: 2,
      CNode: 3,
      Chain: 4,
      Center: 5,
      Source: 13,
      Sink: 13
    };
    p.Enum.Net.NetElemType = Ct;
    var Et = { Adjust: 0, NoAdjust: 1 };
    p.Enum.Theme.CLinAdjustType = Et;
    var Mt = { Round: 0, Square: 1, Butt: 2 };
    p.Enum.Theme.CLinHeadType = Mt;
    var Pt = { Round: 0, Square: 1, Butt: 2 };
    p.Enum.Theme.CLinJointType = Pt;
    var Ot = { Byrule: 0, Bypoint: 1 };
    p.Enum.Theme.CLinStyleMakeType = Ot;
    var Lt = { Unknown: 0, UniqueTheme: 1, RangeTheme: 2 };
    p.Enum.Theme.CItemType = Lt;
    var Tt = { Doc: "mapType", Tile: "tileType" };
    p.Enum.Map.MapType = Tt;
    var At = {
      Show: "show",
      Hide: "hide",
      Include: "include",
      Exclude: "exclude"
    };
    p.Enum.Map.LayerStatusType = At;
    var Rt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.Ang = void 0 !== e.Ang && null !== e.Ang ? e.Ang : null),
        (this.ClientOutLabel =
          void 0 !== e.ClientOutLabel &&
          null !== e.ClientOutLabel &&
          e.ClientOutLabel),
        (this.Distance =
          void 0 !== e.Distance && null !== e.Distance ? e.Distance : 0),
        (this.EightDirLableType =
          void 0 !== e.EightDirLableType && null !== e.EightDirLableType
            ? e.EightDirLableType
            : null),
        (this.PntType =
          void 0 !== e.PntType && null !== e.PntType ? e.PntType : 0);
    };
    p.Object.LablePntInfo = Rt;
    var Ft = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.ClientOutLabel =
          void 0 !== e.ClientOutLabel &&
          null !== e.ClientOutLabel &&
          e.ClientOutLabel),
        (this.DistFromLine =
          void 0 !== e.DistFromLine && null !== e.DistFromLine
            ? e.DistFromLine
            : 0),
        (this.FromLineConstrain =
          void 0 !== e.FromLineConstrain && null !== e.FromLineConstrain
            ? e.FromLineConstrain
            : 0),
        (this.Interval =
          void 0 !== e.Interval && null !== e.Interval ? e.Interval : 0),
        (this.LinType =
          void 0 !== e.LinType && null !== e.LinType ? e.LinType : 0),
        (this.Repeat = void 0 !== e.Repeat && null !== e.Repeat ? e.Repeat : 0),
        (this.SpreadType =
          void 0 !== e.SpreadType && null !== e.SpreadType
            ? e.SpreadType
            : null);
    };
    p.Object.LabelLinInfo = Ft;
    var Dt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.ClientOutLabel =
          void 0 !== e.ClientOutLabel &&
          null !== e.ClientOutLabel &&
          e.ClientOutLabel),
        (this.LabelMiniRegion =
          void 0 !== e.LabelMiniRegion && null !== e.LabelMiniRegion
            ? e.LabelMiniRegion
            : 0),
        (this.MayPlaceOutside =
          void 0 !== e.MayPlaceOutside && null !== e.MayPlaceOutside
            ? e.MayPlaceOutside
            : 0),
        (this.MiniRegionArea =
          void 0 !== e.MiniRegionArea && null !== e.MiniRegionArea
            ? e.MiniRegionArea
            : 0),
        (this.Offset = void 0 !== e.Offset && null !== e.Offset ? e.Offset : 0),
        (this.RegType =
          void 0 !== e.RegType && null !== e.RegType ? e.RegType : 0);
    };
    p.Object.LabelRegInfo = Dt;
    var jt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.PntInfo =
          void 0 !== e.PntInfo && null !== e.PntInfo ? e.PntInfo : null),
        (this.LinInfo =
          void 0 !== e.LinInfo && null !== e.LinInfo ? e.LinInfo : null),
        (this.RegInfo =
          void 0 !== e.RegInfo && null !== e.RegInfo ? e.RegInfo : null);
    };
    p.Object.DynNoteLableType = jt;
    var Ut = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.Angle = void 0 !== e.Angle ? e.Angle : 0),
        (this.Backclr = void 0 !== e.Backclr ? e.Backclr : 0),
        (this.Backexp = void 0 !== e.Backexp ? e.Backexp : 0),
        (this.Bold = void 0 !== e.Bold ? e.Bold : 0),
        (this.FieldName = void 0 !== e.FieldName ? e.FieldName : null),
        (this.FontAngle = void 0 !== e.FontAngle ? e.FontAngle : 0),
        (this.FontColor = void 0 !== e.FontColor ? e.FontColor : 0),
        (this.FontSize = void 0 !== e.FontSize ? e.FontSize : 0),
        (this.FontStyle = void 0 !== e.FontStyle ? e.FontStyle : 0),
        (this.Ifnt = void 0 !== e.Ifnt ? e.Ifnt : 0),
        (this.Ifnx = void 0 !== e.Ifnx ? e.Ifnx : gt.Positive),
        (this.IsFilled = void 0 !== e.IsFilled && e.IsFilled),
        (this.IsHzpl = void 0 !== e.IsHzpl && e.IsHzpl),
        (this.IsOvprnt = void 0 !== e.IsOvprnt && e.IsOvprnt),
        (this.LabelLevel = void 0 !== e.LabelLevel ? e.LabelLevel : 0),
        (this.LableType = void 0 !== e.LableType ? e.LableType : null),
        (this.Offsetx = void 0 !== e.Offsetx ? e.Offsetx : 0),
        (this.Offsety = void 0 !== e.Offsety ? e.Offsety : 0),
        (this.Space = void 0 !== e.Space ? e.Space : 0),
        (this.StrikeThrough = void 0 !== e.StrikeThrough ? e.StrikeThrough : 0),
        (this.UnderLine = void 0 !== e.UnderLine ? e.UnderLine : 0);
    };
    p.Object.CDynNoteInfo = Ut;
    var Gt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.Color = void 0 !== e.Color && null !== e.Color ? e.Color : 1),
        (this.LinStyleID =
          void 0 !== e.LinStyleID && null !== e.LinStyleID ? e.LinStyleID : 1),
        (this.LinStyleID2 =
          void 0 !== e.LinStyleID2 && null !== e.LinStyleID2
            ? e.LinStyleID2
            : 0),
        (this.LinWidth =
          void 0 !== e.LinWidth && null !== e.LinWidth ? e.LinWidth : 1),
        (this.Xscale = void 0 !== e.Xscale && null !== e.Xscale ? e.Xscale : 1),
        (this.Yscale = void 0 !== e.Yscale && null !== e.Yscale ? e.Yscale : 1);
    };
    p.Object.CLineInfo = Gt;
    var Bt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.Angle = void 0 !== e.Angle && null !== e.Angle ? e.Angle : 1),
        (this.Color = void 0 !== e.Color && null !== e.Color ? e.Color : 1),
        (this.SymHeight =
          void 0 !== e.SymHeight && null !== e.SymHeight ? e.SymHeight : 1),
        (this.SymID = void 0 !== e.SymID && null !== e.SymID ? e.SymID : 1),
        (this.SymWidth =
          void 0 !== e.SymWidth && null !== e.SymWidth ? e.SymWidth : 1);
    };
    p.Object.CPointInfo = Bt;
    var kt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.EndColor =
          void 0 !== e.EndColor && null !== e.EndColor ? e.EndColor : 1),
        (this.FillColor =
          void 0 !== e.FillColor && null !== e.FillColor ? e.FillColor : 1),
        (this.FillMode =
          void 0 !== e.FillMode && null !== e.FillMode ? e.FillMode : 0),
        (this.OutPenWidth =
          void 0 !== e.OutPenWidth && null !== e.OutPenWidth
            ? e.OutPenWidth
            : 1),
        (this.PatAngle =
          void 0 !== e.PatAngle && null !== e.PatAngle ? e.PatAngle : 1),
        (this.PatColor =
          void 0 !== e.PatColor && null !== e.PatColor ? e.PatColor : 1),
        (this.PatHeight =
          void 0 !== e.PatHeight && null !== e.PatHeight ? e.PatHeight : 1),
        (this.PatID = void 0 !== e.PatID && null !== e.PatID ? e.PatID : 1),
        (this.PatWidth =
          void 0 !== e.PatWidth && null !== e.PatWidth ? e.PatWidth : 1);
    };
    p.Object.CRegionInfo = kt;
    var qt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.Alpha = void 0 !== e.Alpha ? e.Alpha : 0),
        (this.BugSpare = void 0 !== e.BugSpare && e.BugSpare),
        (this.CustomRender = void 0 !== e.CustomRender && e.CustomRender),
        (this.CustomRenderPath =
          void 0 !== e.CustomRenderPath ? e.CustomRenderPath : null),
        (this.DirectionLineClr =
          void 0 !== e.DirectionLineClr ? e.DirectionLineClr : 0),
        (this.DynNoteFlag = void 0 !== e.DynNoteFlag && e.DynNoteFlag),
        (this.DynNoteInfo = void 0 !== e.DynNoteInfo ? e.DynNoteInfo : null),
        (this.IsShowArc = void 0 !== e.IsShowArc ? e.IsShowArc : 0),
        (this.ISShowLineDirection =
          void 0 !== e.ISShowLineDirection && e.ISShowLineDirection),
        (this.LineInfo = void 0 !== e.LineInfo ? e.LineInfo : null),
        (this.MaxScale = void 0 !== e.MaxScale ? e.MaxScale : 0),
        (this.MinScale = void 0 !== e.MinScale ? e.MinScale : 0),
        (this.ShowCoordPnt = void 0 !== e.ShowCoordPnt && e.ShowCoordPnt),
        (this.SpareLineInfo =
          void 0 !== e.SpareLineInfo ? e.SpareLineInfo : null),
        (this.SparePointInfo =
          void 0 !== e.SparePointInfo ? e.SparePointInfo : null),
        (this.SpareRegInfo = void 0 !== e.SpareRegInfo ? e.SpareRegInfo : null),
        (this.SymbleScale = void 0 !== e.SymbleScale ? e.SymbleScale : 0);
    };
    p.Object.DynShowStyle = qt;
    var zt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.AnnSizeFixed = void 0 !== e.AnnSizeFixed && e.AnnSizeFixed),
        (this.DriverQuality = void 0 !== e.DriverQuality ? e.DriverQuality : 0),
        (this.DynProjFlag = void 0 !== e.DynProjFlag && e.DynProjFlag),
        (this.FollowScale = void 0 !== e.FollowScale && e.FollowScale),
        (this.LinPenWidFixed = void 0 !== e.LinPenWidFixed && e.LinPenWidFixed),
        (this.LinSizeFixed = void 0 !== e.LinSizeFixed && e.LinSizeFixed),
        (this.PntPenWidFixed = void 0 !== e.PntPenWidFixed && e.PntPenWidFixed),
        (this.PntSizeFixed = void 0 !== e.PntSizeFixed && e.PntSizeFixed),
        (this.RegPenWidFixed = void 0 !== e.RegPenWidFixed && e.RegPenWidFixed),
        (this.RegSizeFixed = void 0 !== e.RegSizeFixed && e.RegSizeFixed),
        (this.ShowCoordPnt = void 0 !== e.ShowCoordPnt && e.ShowCoordPnt),
        (this.ShowElemRect = void 0 !== e.ShowElemRect && e.ShowElemRect),
        (this.ShowStyle = void 0 !== e.ShowStyle ? e.ShowStyle : null),
        (this.SymbleShow = void 0 !== e.SymbleShow && e.SymbleShow);
    };
    p.Object.CDisplayStyle = zt;
    var Vt = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.Index = void 0 !== e.Index ? e.Index : 0),
        (this.SymbleShow = void 0 !== e.SymbleShow && e.SymbleShow),
        (this.LinPenWidFixed = void 0 !== e.LinPenWidFixed && e.LinPenWidFixed),
        (this.LinSizeFixed = void 0 !== e.LinSizeFixed && e.LinSizeFixed),
        (this.PntPenWidFixed = void 0 !== e.PntPenWidFixed && e.PntPenWidFixed),
        (this.PntSizeFixed = void 0 !== e.PntSizeFixed && e.PntSizeFixed),
        (this.RegPenWidFixed = void 0 !== e.RegPenWidFixed && e.RegPenWidFixed),
        (this.RegSizeFixed = void 0 !== e.RegSizeFixed && e.RegSizeFixed),
        (this.AnnSizeFixed = void 0 !== e.AnnSizeFixed && e.AnnSizeFixed),
        (this.FollowScale = void 0 !== e.FollowScale && e.FollowScale),
        (this.ShowCoordPnt = void 0 !== e.ShowCoordPnt && e.ShowCoordPnt),
        (this.ShowElemRect = void 0 !== e.ShowElemRect && e.ShowElemRect),
        (this.DriverQuality = void 0 !== e.DriverQuality ? e.DriverQuality : 0),
        (this.DynProjFlag = void 0 !== e.DynProjFlag && e.DynProjFlag);
    };
    p.Object.CDisplayStyleExtend = Vt;
    var Wt = function(t) {
      var e = t || {};
      (this.GDBSvrName = void 0 !== e.ServerName ? e.ServerName : null),
        (this.GDBName = void 0 !== e.GDBName ? e.GDBName : null),
        (this.User = void 0 !== e.User ? e.User : null),
        (this.Password = void 0 !== e.Password ? e.Password : null);
    };
    p.Object.CGDBInfo = Wt;
    class Xt {
      constructor(t) {
        g(this, t || {});
      }
      setByOL(t) {
        return null;
      }
      toString() {
        return "";
      }
      getGeometryType() {}
      Trim(t, e) {
        var r;
        return (
          (r = t.replace(/(^\s+)|(\s+$)/g, "")),
          "g" === e.toLowerCase() && (r = r.replace(/\s/g, "")),
          r
        );
      }
    }
    p.Object.Tangram = Xt;
    class Yt extends Xt {
      constructor(t, e, r) {
        var n = r || {};
        super(n),
          (this.x = void 0 !== t ? t : null),
          (this.y = void 0 !== e ? e : null),
          (this.nearDis = void 0 !== n.nearDis ? parseFloat(n.nearDis) : null),
          (this.CLASS_NAME = "Zondy.Object.Point2D");
      }
      getGeometryType() {
        return "point";
      }
      setByOL(t) {
        if (void 0 !== t) {
          var e = t.getCoordinates();
          (this.x = e[0]), (this.y = e[1]);
        }
      }
      toString() {
        if (null === this.x || null === this.y) return "";
        var t = this.x + "," + this.y;
        return void 0 !== this.nearDis && (t += ";" + this.nearDis), t;
      }
    }
    Zondy.Object.Point2D = Yt;
    class Ht extends Xt {
      constructor(t, e, r) {
        super(r || {}),
          (this.point = null != t ? t : null),
          (this.radious = null != e ? e : null);
      }
      setByOL(t) {
        if (null != t) {
          var e = t.getCenter(),
            r = t.getRadius();
          (this.point = new p.Object.Point2D(e[0], e[1])), (this.radious = r);
        }
      }
      toString() {
        return null === this.point ||
          0 === this.point.length ||
          null === this.radious
          ? ""
          : this.point.x + "," + this.point.y + "," + this.radious;
      }
      getGeometryType() {
        return "Circle";
      }
    }
    p.Object.Circle = Ht;
    class Jt extends Xt {
      constructor(t, e, r, n, i) {
        super(i || {}),
          (this.xmin = t),
          (this.xmax = r),
          (this.ymin = e),
          (this.ymax = n);
      }
      setByOL(t) {
        null != t &&
          ((this.xmin = t[0]),
          (this.ymin = t[1]),
          (this.xmax = t[2]),
          (this.ymax = t[3]));
      }
      toString() {
        return this.xmin + "," + this.ymin + "," + this.xmax + "," + this.ymax;
      }
      getGeometryType() {
        return "rect";
      }
      convertToBound() {
        return [this.xmin, this.ymin, this.xmax, this.ymax];
      }
      intersectsBounds(t, e) {
        "boolean" == typeof e && (e = { inclusive: e }),
          null === (e = e || {}).inclusive && (e.inclusive = !0);
        var r = this,
          n = !1,
          i =
            r.xmin === t.xmax ||
            r.xmax === t.xmin ||
            r.ymax === t.ymin ||
            r.ymin === t.ymax;
        if (e.inclusive || !i) {
          var o =
              (t.ymin >= r.ymin && t.ymin <= r.ymax) ||
              (r.ymin >= t.ymin && r.ymin <= t.ymax),
            s =
              (t.ymax >= r.ymin && t.ymax <= r.ymax) ||
              (r.ymax > t.ymin && r.ymax < t.ymax),
            a =
              (t.xmin >= r.xmin && t.xmin <= r.xmax) ||
              (r.xmin >= t.xmin && r.xmin <= t.xmax),
            l =
              (t.xmax >= r.xmin && t.xmax <= r.xmax) ||
              (r.xmax >= t.xmin && r.xmax <= t.xmax);
          n = (o || s) && (a || l);
        }
        return n;
      }
    }
    Zondy.Object.Rectangle = Jt;
    class $t {
      constructor(t) {
        var e = void 0 !== t ? t : {};
        g(this, e), (this.GID = void 0 !== e.GID && null !== e.GID ? e.GID : 0);
      }
      setGID(t) {
        null != t && (this.GID = t);
      }
    }
    p.Object.FeatureGraphicBase = $t;
    class Qt extends $t {
      constructor(t, e, r) {
        super(r || {}), null != t && null != e && (this.Dot = new Yt(t, e));
      }
      setDot(t) {
        this.Dot = null != t ? t : null;
      }
    }
    p.Object.GPoint = Qt;
    class Zt extends $t {
      constructor(t, e) {
        super(e || {}), (this.Line = null != t ? t : null);
      }
      setLine(t) {
        this.Line = null != t ? t : null;
      }
    }
    p.Object.GLine = Zt;
    class Kt extends $t {
      constructor(t, e) {
        super(e || {}), (this.Rings = null != t && Array.isArray(t) ? t : null);
      }
      setRings(t) {
        this.Rings = null != t ? t : null;
      }
    }
    p.Object.GRegion = Kt;
    var te = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.PntGeom =
          void 0 !== e.PntGeom && null !== e.PntGeom ? e.PntGeom : null),
        (this.LinGeom =
          void 0 !== e.LinGeom && null !== e.LinGeom ? e.LinGeom : null),
        (this.RegGeom =
          void 0 !== e.RegGeom && null !== e.RegGeom ? e.RegGeom : null);
    };
    (te.prototype.setPntGeom = function(t) {
      this.PntGeom = null != t && Array.isArray(t) ? t : null;
    }),
      (te.prototype.setLine = function(t) {
        this.LinGeom = null != t && Array.isArray(t) ? t : null;
      }),
      (te.prototype.setRegGeom = function(t) {
        this.RegGeom = null != t && Array.isArray(t) ? t : null;
      }),
      (p.Object.FeatureGeometry = te);
    var ee = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.InfoType =
          void 0 !== e.InfoType && null !== e.InfoType ? e.InfoType : 0),
        (this.PntInfo =
          void 0 !== e.PntInfo && null !== e.PntInfo ? e.PntInfo : null),
        (this.LinInfo =
          void 0 !== e.LinInfo && null !== e.LinInfo ? e.LinInfo : null),
        (this.RegInfo =
          void 0 !== e.RegInfo && null !== e.RegInfo ? e.RegInfo : null);
    };
    p.Object.WebGraphicsInfo = ee;
    var re = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.AttValue =
          void 0 !== e.AttValue && null !== e.AttValue ? e.AttValue : null),
        (this.FID = void 0 !== e.FID && null !== e.FID ? e.FID : 0),
        (this.bound = void 0 !== e.bound && null !== e.bound ? e.bound : null),
        (this.fGeom = void 0 !== e.fGeom && null !== e.fGeom ? e.fGeom : null),
        (this.ftype = void 0 !== e.ftype && null !== e.ftype ? e.ftype : 0),
        (this.GraphicInfo =
          void 0 !== e.GraphicInfo && null !== e.GraphicInfo
            ? e.GraphicInfo
            : null);
    };
    (re.prototype.getAttValue = function(t) {
      if (null === this.AttValue) return null;
      var e = this.AttValue.length;
      return "number" == typeof t ? (t >= e ? null : this.AttValue[t]) : void 0;
    }),
      (re.prototype.getGraphicInfo = function() {
        return null === this.GraphicInfo ? null : new ee(this.GraphicInfo);
      }),
      (re.prototype.getAttValueArray = function() {
        return this.AttValue;
      }),
      (re.prototype.getRectBound = function() {
        var t = this.bound;
        return null !== t ? new Jt(t) : t;
      }),
      (re.prototype.getGeometry = function() {
        return this.fGeom;
      }),
      (re.prototype.getFID = function() {
        return this.FID;
      }),
      (re.prototype.setAttValues = function(t) {
        this.AttValue = t;
      }),
      (re.prototype.setBound = function(t) {
        var e = null;
        "string" == typeof t && (e = new Jt(t)),
          t instanceof String && (e = new Jt(t)),
          t instanceof Jt && (e = t),
          t instanceof ol.extent && (e = new Jt()).setByOL(t),
          (this.bound = e);
      }),
      (re.prototype.setFID = function(t) {
        this.FID = t;
      }),
      (re.prototype.setFType = function(t) {
        this.ftype = t;
      }),
      (re.prototype.destroy = function() {
        (this.AttValue = null),
          (this.FID = null),
          (this.bound = null),
          (this.fGeom = null),
          (this.ftype = null),
          (this.GraphicInfo = null);
      }),
      (p.Object.Feature = re);
    var ne = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.TotalCount =
          void 0 !== e.TotalCount && null !== e.TotalCount ? e.TotalCount : 0),
        (this.AttStruct =
          void 0 !== e.AttStruct && null !== e.AttStruct ? e.AttStruct : null),
        (this.SFEleArray =
          void 0 !== e.SFEleArray && null !== e.SFEleArray
            ? e.SFEleArray
            : new Array());
    };
    (ne.prototype.clear = function() {
      (this.AttStruct = null), (this.SFEleArray = new Array());
    }),
      (ne.prototype.addFeature = function(t) {
        t instanceof Array
          ? this.SFEleArray.concat(t)
          : this.SFEleArray.push(t);
      }),
      (ne.prototype.getFeaturesLength = function() {
        return this.SFEleArray instanceof Array ? this.SFEleArray.length : 0;
      }),
      (ne.prototype.getFeatureByIndex = function(t) {
        if (t >= this.getFeaturesLength()) return null;
        var e = this.SFEleArray[t];
        return e instanceof re ? e : new re(this.SFEleArray[t]);
      }),
      (ne.prototype.getAttType = function(t) {
        var e;
        return null == this.AttStruct ||
          null == (e = "number" == typeof t ? t : this.getAttIndexByAttName(t))
          ? null
          : this.AttStruct.FldType[e];
      }),
      (ne.prototype.getAttIndexByAttName = function(t) {
        if (null == this.AttStruct) return null;
        if (null == this.AttStruct.FldName) return null;
        for (var e = this.AttStruct.FldName.length, r = 0; r < e; r++)
          if (this.AttStruct.FldName[r] == t) return r;
        return null;
      }),
      (ne.prototype.getAttNameByIndex = function(t) {
        return null == this.AttStruct ||
          null == this.AttStruct.FldName ||
          this.AttStruct.FldName.length <= t
          ? null
          : this.AttStruct.FldName[t];
      }),
      (p.Object.FeatureSet = ne);
    class ie extends Xt {
      constructor(t, e) {
        super(e || {}),
          (this.pointArr = null != t && Array.isArray(t) ? t : new Array());
      }
      setByOL(t) {
        if (null != t)
          for (
            var e = t.getLinearRing(0).getCoordinates(), r = e.length, n = 0;
            n < r;
            n++
          )
            this.pointArr[n] = new Yt(e[n][0], e[n][1]);
      }
      toString() {
        if (null === this.pointArr || 0 === this.pointArr.length) return "";
        for (var t = "", e = 0; e < this.pointArr.length; e++)
          t += this.pointArr[e].x + "," + this.pointArr[e].y + ",";
        return t.substring(0, t.length - 1);
      }
      getGeometryType() {
        return "polygon";
      }
    }
    Zondy.Object.Polygon = ie;
    class oe extends Xt {
      constructor(t, e) {
        super(e || {}),
          (this.polygonArr = null != t && Array.isArray(t) ? t : new Array());
      }
      setByOL(t) {
        if (null != t) {
          this.polygonArr = [];
          for (
            var e = t.getLinearRingCount(), r = t.getLinearRings(), n = 0;
            n < e;
            n++
          ) {
            for (
              var i = r[n].getCoordinates(), o = i.length, s = [], a = 0;
              a < o;
              a++
            )
              s[a] = new Yt(i[a][0], i[a][1]);
            this.polygonArr[n] = new ie(s);
          }
        }
      }
      toString() {
        if (
          void 0 === this.polygonArr ||
          null === this.polygonArr ||
          0 === this.polygonArr.length
        )
          return "";
        for (var t = "", e = 0; e < this.polygonArr.length; e++)
          t += this.polygonArr[e].toString() + ";";
        return t.substring(0, t.length - 1);
      }
      getGeometryType() {
        return "multiPolygon";
      }
    }
    Zondy.Object.MultiPolygon = oe;
    class se extends Xt {
      constructor(t, e) {
        var r = e || {};
        super(r),
          (this.nearDis =
            void 0 !== r.nearDis && null !== r.nearDis
              ? parseFloat(r.nearDis)
              : null),
          (this.pointArr = null != t && Array.isArray(t) ? t : new Array());
      }
      setByOL(t) {
        if (null != t)
          for (var e = t.getCoordinates(), r = e.length, n = 0; n < r; n++)
            this.pointArr[n] = new Yt(e[n][0], e[n][1]);
      }
      toString() {
        if (null === this.pointArr || 0 === this.pointArr.length) return "";
        for (
          var t = this.pointArr[0].x + "," + this.pointArr[0].y, e = 1;
          e < this.pointArr.length;
          e++
        )
          t += "," + this.pointArr[e].x + "," + this.pointArr[e].y;
        return (
          void 0 !== this.nearDis &&
            null !== this.nearDis &&
            (t += ";" + this.nearDis),
          this.Trim(t, "g")
        );
      }
      getGeometryType() {
        return "line";
      }
    }
    Zondy.Object.PolyLine = se;
    var ae = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.clsType = void 0 !== e.clsType ? e.clsType : dt.SFCls),
        (this.clsName = void 0 !== e.clsName ? e.clsName : null),
        (this.geoType = void 0 !== e.geoType ? e.geoType : 1),
        (this.srefName = void 0 !== e.srefName ? encodeURI(e.srefName) : ""),
        (this.dsName = void 0 !== e.dsName ? encodeURI(e.dsName) : ""),
        (this.attStruct = void 0 !== e.attStruct ? e.attStruct : null);
    };
    p.Object.VectCls = ae;
    var le = function(t, e, r, n) {
      if (
        ((this.listeners = {}),
        (this.object = t),
        (this.eventTypes = []),
        (this.extensions = {}),
        (this.extensionCount = {}),
        g(this, n),
        null != r)
      )
        for (var i = 0, o = r.length; i < o; i++) this.addEventType(r[i]);
    };
    (le.prototype.destroy = function() {
      for (var t in this.extensions)
        "boolean" != typeof this.extensions[t] && this.extensions[t].destroy();
      (this.extensions = null),
        (this.listeners = null),
        (this.object = null),
        (this.eventTypes = null);
    }),
      (le.prototype.addEventType = function(t) {
        this.listeners[t] ||
          (this.eventTypes.push(t), (this.listeners[t] = []));
      }),
      (le.prototype.on = function(t) {
        for (var e in t)
          "scope" !== e &&
            t.hasOwnProperty(e) &&
            this.register(e, t.scope, t[e]);
      }),
      (le.prototype.register = function(t, e, r, n) {
        if (
          (t in le &&
            !this.extensions[t] &&
            (this.extensions[t] = new le[t](this)),
          null != r && -1 !== N(this.eventTypes, t))
        ) {
          null == e && (e = this.object);
          var i = this.listeners[t];
          i ||
            ((i = []), (this.listeners[t] = i), (this.extensionCount[t] = 0));
          var o = { obj: e, func: r };
          n
            ? (i.splice(this.extensionCount[t], 0, o),
              "object" == typeof n && n.extension && this.extensionCount[t]++)
            : i.push(o);
        }
      }),
      (le.prototype.registerPriority = function(t, e, r) {
        this.register(t, e, r, !0);
      }),
      (le.prototype.un = function(t) {
        for (var e in t)
          "scope" !== e &&
            t.hasOwnProperty(e) &&
            this.unregister(e, t.scope, t[e]);
      }),
      (le.prototype.unregister = function(t, e, r) {
        null == e && (e = this.object);
        var n = this.listeners[t];
        if (null != n)
          for (var i = 0, o = n.length; i < o; i++)
            if (n[i].obj === e && n[i].func === r) {
              n.splice(i, 1);
              break;
            }
      }),
      (le.prototype.remove = function(t) {
        null != this.listeners[t] && (this.listeners[t] = []);
      }),
      (le.prototype.triggerEvent = function(t, e) {
        var r = this.listeners[t];
        if (r && 0 != r.length) {
          var n;
          null == e && (e = {}),
            (e.object = this.object),
            e.type || (e.type = t);
          for (var i = 0, o = (r = r.slice()).length; i < o; i++) {
            var s = r[i];
            if (null != (n = s.func.apply(s.obj, [e.result])) && 0 == n) break;
          }
          return n;
        }
      });
    var ue = function(t) {
      (this.data = null),
        (this.keepData = !1),
        (this.indent = "    "),
        (this.space = " "),
        (this.newline = "\n"),
        (this.level = 0),
        (this.pretty = !1),
        (this.nativeJSON = !(
          !window.JSON ||
          "function" != typeof JSON.parse ||
          "function" != typeof JSON.stringify
        )),
        g(this, t),
        (this.options = t),
        (this.serialize = {
          object: function(t) {
            if (null == t) return "null";
            if (t.constructor === Date)
              return this.serialize.date.apply(this, [t]);
            if (t.constructor === Array)
              return this.serialize.array.apply(this, [t]);
            var e,
              r,
              n,
              i = ["{"];
            this.level += 1;
            var o = !1;
            for (e in t)
              t.hasOwnProperty(e) &&
                ((r = this.write.apply(this, [e, this.pretty])),
                (n = this.write.apply(this, [t[e], this.pretty])),
                null != r &&
                  null != n &&
                  (o && i.push(","),
                  i.push(
                    this.writeNewline(),
                    this.writeIndent(),
                    r,
                    ":",
                    this.writeSpace(),
                    n
                  ),
                  (o = !0)));
            return (
              (this.level -= 1),
              i.push(this.writeNewline(), this.writeIndent(), "}"),
              i.join("")
            );
          },
          array: function(t) {
            var e,
              r = ["["];
            this.level += 1;
            for (var n = 0, i = t.length; n < i; ++n)
              null != (e = this.write.apply(this, [t[n], this.pretty])) &&
                (n > 0 && r.push(","),
                r.push(this.writeNewline(), this.writeIndent(), e));
            return (
              (this.level -= 1),
              r.push(this.writeNewline(), this.writeIndent(), "]"),
              r.join("")
            );
          },
          string: function(t) {
            var e = {
              "\b": "\\b",
              "\t": "\\t",
              "\n": "\\n",
              "\f": "\\f",
              "\r": "\\r",
              '"': '\\"',
              "\\": "\\\\"
            };
            return /["\\\x00-\x1f]/.test(t)
              ? '"' +
                  t.replace(/([\x00-\x1f\\"])/g, function(t, r) {
                    var n = e[r];
                    return (
                      n ||
                      ((n = r.charCodeAt()),
                      "\\u00" +
                        Math.floor(n / 16).toString(16) +
                        (n % 16).toString(16))
                    );
                  }) +
                  '"'
              : '"' + t + '"';
          },
          number: function(t) {
            return isFinite(t) ? String(t) : "null";
          },
          boolean: function(t) {
            return String(t);
          },
          date: function(t) {
            function e(t) {
              return t < 10 ? "0" + t : t;
            }
            return (
              '"' +
              t.getFullYear() +
              "-" +
              e(t.getMonth() + 1) +
              "-" +
              e(t.getDate()) +
              "T" +
              e(t.getHours()) +
              ":" +
              e(t.getMinutes()) +
              ":" +
              e(t.getSeconds()) +
              '"'
            );
          }
        });
    };
    (ue.prototype.read = function(t, e) {
      var r;
      if (this.nativeJSON)
        try {
          r = JSON.parse(t, e);
        } catch (t) {}
      return this.keepData && (this.data = r), r;
    }),
      (ue.prototype.write = function(t, e) {
        this.pretty = !!e;
        var r = null,
          n = typeof t;
        if (this.serialize[n])
          try {
            r =
              !this.pretty && this.nativeJSON
                ? JSON.stringify(t)
                : this.serialize[n].apply(this, [t]);
          } catch (t) {
            Console.error("Trouble serializing: " + t);
          }
        return r;
      }),
      (ue.prototype.writeIndent = function() {
        var t = [];
        if (this.pretty)
          for (var e = 0; e < this.level; ++e) t.push(this.indent);
        return t.join("");
      }),
      (ue.prototype.writeNewline = function() {
        return this.pretty ? this.newline : "";
      }),
      (ue.prototype.writeSpace = function() {
        return this.pretty ? this.space : "";
      }),
      (Zondy.Service.JSONFormat = ue);
    var he = r(6754),
      ce = r.n(he);
    (window.Promise = ce()), r(5133);
    var pe = window.fetch,
      fe = (Zondy.CORS =
        Zondy.CORS ||
        (window.XMLHttpRequest &&
          "withCredentials" in new window.XMLHttpRequest())),
      de = (Zondy.RequestTimeout = Zondy.RequestTimeout || 45e3),
      ye = (Zondy.FetchRequest = {
        commit: function(t, e, r, n) {
          switch ((t = t ? t.toUpperCase() : t)) {
            default:
              return this._get(e, r, n);
            case "POST":
              return this._post(e, r, n);
            case "PUT":
              return this._put(e, r, n);
            case "DELETE":
              return this._delete(e, r, n);
          }
        },
        _get: function(t, e, r) {
          return (
            (r = r || {}),
            (t = this._processUrl(t, r)),
            (t = Zondy.Util.urlAppend(t, this._getParameterString(e || {}))),
            this.urlIsLong(t)
              ? this._postSimulatie(
                  "GET",
                  t.substring(0, t.indexOf("?") - 1),
                  e,
                  r
                )
              : this._fetch(t, e, r, "GET")
          );
        },
        _delete: function(t, e, r) {
          r = r || {};
          var n = "DELETE";
          return (
            (t = this._processUrl(t, r)),
            (t = Zondy.Util.urlAppend(t, this._getParameterString(e || {}))),
            !this.urlIsLong(t) && fe
              ? this._fetch(t, e, r, n)
              : this._postSimulatie(n, t.substring(0, t.indexOf("?") - 1), e, r)
          );
        },
        _post: function(t, e, r) {
          return (
            (r = r || {}), this._fetch(this._processUrl(t, r), e, r, "POST")
          );
        },
        _put: function(t, e, r) {
          return (
            (r = r || {}), this._fetch(this._processUrl(t, r), e, r, "PUT")
          );
        },
        urlIsLong: function(t) {
          for (var e = 0, r = null, n = 0, i = t.length; n < i; n++)
            (r = t.charCodeAt(n)) < 127
              ? e++
              : 128 <= r && r <= 2047
              ? (e += 2)
              : 2048 <= r && r <= 65535 && (e += 3);
          return !(e < 2e3);
        },
        _postSimulatie: function(t, e, r, n) {
          var i = e.indexOf("?") > -1 ? "&" : "?";
          return (
            (e += i + "_method=" + t),
            "string" != typeof r && (r = JSON.stringify(r)),
            this._post(e, r, n)
          );
        },
        _processUrl: function(t, e) {
          return (
            this._isMVTRequest(t) ||
              (e &&
                e.proxy &&
                ("function" == typeof e.proxy
                  ? (t = e.proxy(t))
                  : ((t = decodeURIComponent(t)),
                    (t = e.proxy + encodeURIComponent(t))))),
            t
          );
        },
        _fetch: function(t, e, r, n) {
          return (
            ((r = r || {}).headers = r.headers || {}),
            r.headers["Content-Type"] ||
              (r.headers["Content-Type"] =
                "application/x-www-form-urlencoded;charset=UTF-8"),
            r.timeout
              ? this._timeout(
                  r.timeout,
                  pe(t, {
                    method: n,
                    headers: r.headers,
                    body: "PUT" === n || "POST" === n ? e : void 0,
                    credentials: r.withCredentials ? "include" : "omit",
                    mode: "cors",
                    timeout: de
                  }).then(function(t) {
                    return t;
                  })
                )
              : pe(t, {
                  method: n,
                  body: "PUT" === n || "POST" === n ? e : void 0,
                  headers: r.headers,
                  credentials: r.withCredentials ? "include" : "omit",
                  mode: "cors",
                  timeout: de
                })
                  .then(function(t) {
                    return t;
                  })
                  .catch(function(t) {
                    return t;
                  })
          );
        },
        _timeout: function(t, e) {
          return new Promise(function(r, n) {
            setTimeout(function() {
              n(new Error("timeout"));
            }, t),
              e.then(r, n);
          });
        },
        _getParameterString: function(t) {
          var e = [];
          for (var r in t) {
            var n = t[r];
            if (null != n && "function" != typeof n) {
              var i;
              if ("object" == typeof n && n.constructor === Array) {
                for (var o, s = [], a = 0, l = n.length; a < l; a++)
                  (o = n[a]), s.push(encodeURIComponent(null == o ? "" : o));
                i = "[" + s.join(",") + "]";
              } else i = encodeURIComponent(n);
              e.push(encodeURIComponent(r) + "=" + i);
            }
          }
          return e.join("&");
        },
        _isMVTRequest: function(t) {
          return t.indexOf(".mvt") > -1 || t.indexOf(".pbf") > -1;
        }
      });
    (Zondy.Service.FetchRequest = ye),
      (Zondy.Service.CORS = fe),
      (Zondy.Service.RequestTimeout = de);
    class ge {
      constructor(t, e) {
        var r = this;
        (this.EVENT_TYPES = ["processCompleted", "processFailed"]),
          (this.events = null),
          (this.eventListeners = null),
          (this.url = null),
          (this.urls = null),
          (this.index = null),
          (this.length = null),
          (this.options = null),
          (this.totalTimes = null),
          (this.POLLING_TIMES = 3),
          (this._processSuccess = null),
          (this._processFailed = null),
          (this.isInTheSameDomain = null),
          m(t)
            ? ((r.urls = t),
              (r.length = t.length),
              (r.totalTimes = r.length),
              1 === r.length
                ? (r.url = t[0])
                : ((r.index = parseInt(Math.random() * r.length)),
                  (r.url = t[r.index])))
            : ((r.totalTimes = 1), (r.url = t)),
          (e = e || {}) && g(this, e),
          (r.isInTheSameDomain = j(r.url)),
          (r.events = new le(r, null, r.EVENT_TYPES, !0)),
          r.eventListeners instanceof Object && r.events.on(r.eventListeners);
      }
      destroy() {
        var t = this;
        m(t.urls) &&
          ((t.urls = null),
          (t.index = null),
          (t.length = null),
          (t.totalTimes = null)),
          (t.url = null),
          (t.options = null),
          (t._processSuccess = null),
          (t._processFailed = null),
          (t.isInTheSameDomain = null),
          (t.EVENT_TYPES = null),
          t.events && (t.events.destroy(), (t.events = null)),
          t.eventListeners && (t.eventListeners = null);
      }
      request(t) {
        var e = this;
        (t.url = t.url || e.url),
          (t.isInTheSameDomain = e.isInTheSameDomain),
          e.calculatePollingTimes(),
          (e._processSuccess = t.success),
          (e._processFailed = t.failure),
          (t.scope = e),
          (t.success = e.getUrlCompleted),
          (t.failure = e.getUrlFailed),
          (e.options = t),
          e._commit(e.options);
      }
      getUrlCompleted(t) {
        this._processSuccess(t);
      }
      getUrlFailed(t) {
        var e = this;
        e.totalTimes > 0
          ? (e.totalTimes--, e.ajaxPolling())
          : e._processFailed(t);
      }
      ajaxPolling() {
        var t = this,
          e = t.options.url,
          r = /^http:\/\/([a-z]{9}|(\d+\.){3}\d+):\d{0,4}/;
        (t.index = parseInt(Math.random() * t.length)),
          (t.url = t.urls[t.index]),
          (e = e.replace(r, r.exec(t.url)[0])),
          (t.options.url = e),
          (t.options.isInTheSameDomain = j(e)),
          t._commit(t.options);
      }
      calculatePollingTimes() {
        var t = this;
        t.times
          ? t.totalTimes > t.POLLING_TIMES
            ? t.times > t.POLLING_TIMES
              ? (t.totalTimes = t.POLLING_TIMES)
              : (t.totalTimes = t.times)
            : t.times < t.totalTimes && (t.totalTimes = t.times)
          : t.totalTimes > t.POLLING_TIMES && (t.totalTimes = t.POLLING_TIMES),
          t.totalTimes--;
      }
      serviceProcessCompleted(t) {
        (t = G(t)), this.events.triggerEvent("processCompleted", { result: t });
      }
      serviceProcessFailed(t) {
        var e = (t = G(t));
        this.events.triggerEvent("processFailed", { error: e });
      }
      _commit(t) {
        ("POST" !== t.method && "PUT" !== t.method) ||
          (t.params && (t.url = O(t.url, M(t.params || {}))),
          (t.params = t.data)),
          ye
            .commit(t.method, t.url, t.params, {
              headers: t.headers,
              withCredentials: t.withCredentials,
              timeout: t.async ? 0 : null,
              proxy: t.proxy
            })
            .then(function(e) {
              let r;
              return (
                (r = e.text ? () => e.text() : () => e.json()),
                200 == e.status
                  ? new Promise(
                      n => {
                        r().then(function(e) {
                          if (e) {
                            var r = null;
                            "string" != typeof e ||
                            ("true" !== e.toLowerCase() &&
                              "false" !== e.toLowerCase())
                              ? "string" == typeof e && (r = new ue().read(e))
                              : ((r = {}),
                                "true" === e.toLowerCase()
                                  ? (r.succeed = !0)
                                  : ((r.succeed = !1), (r.error = !0))),
                              ((!r && isNaN(r)) || r.error) &&
                                (r =
                                  r && r.error
                                    ? { error: r.error }
                                    : { error: !0 }),
                              r.error
                                ? (t.scope ? V(t.failure, t.scope) : t.failure)(
                                    r
                                  )
                                : (isNaN(r) || (r = { value: r }),
                                  "string" == typeof r && (r = { value: r }),
                                  "[object Array]" !==
                                  Object.prototype.toString.call(r)
                                    ? (r.succeed =
                                        void 0 === r.succeed || r.succeed)
                                    : (r = { value: r, succeed: !0 }),
                                  (t.scope ? V(t.success, t.scope) : t.success)(
                                    r
                                  ));
                          }
                        }),
                          n(e.status);
                      },
                      t => {
                        console.log(
                          "【服务】【基础服务】【抽象类Fetch返回异常】",
                          t
                        );
                      }
                    )
                  : new Promise(
                      n => {
                        r().then(function(e) {
                          if (e) {
                            var r = null;
                            "string" != typeof e ||
                            ("true" !== e.toLowerCase() &&
                              "false" !== e.toLowerCase())
                              ? "string" == typeof e && (r = new ue().read(e))
                              : ((r = {}).succeed = !1),
                              ((!r && isNaN(r)) || !r.success) &&
                                (r = { succeed: !1 }),
                              (t.scope ? V(t.failure, t.scope) : t.failure)(r);
                          }
                        }),
                          n(e.status);
                      },
                      t => {
                        console.log(
                          "【服务】【基础服务】【抽象类Fetch返回异常】",
                          t
                        );
                      }
                    )
              );
            })
            .catch(function(e) {
              (t.scope
                ? V(t.failure, t.scope)
                : t.failure)({ error: !0, value: {} });
            })
            .then(function(t, e) {});
      }
    }
    p.Service.CommonServiceBase = ge;
    class me extends ge {
      constructor(t, e) {
        super(t, (e = e || {})), (this.CLASS_NAME = "Zondy.IgsServiceBase");
      }
      destroy() {
        super.destroy();
        var t = this;
        t.events &&
          (t.events.un(t.eventListeners),
          (t.events.listeners = null),
          t.events.destroy(),
          (t.events = null),
          (t.eventListeners = null));
      }
      processAsync(t) {
        var e = this;
        e.request({
          method: t && t.method ? t.method : "GET",
          scope: e,
          success: e.serviceProcessCompleted,
          failure: e.serviceProcessFailed,
          data: t && t.data ? t.data : null,
          headers: t && t.headers ? t.headers : null
        });
      }
      serviceProcessCompleted(t) {
        var e = this;
        (t = G(t)).succeed
          ? e.events && e.events.triggerEvent("processCompleted", { result: t })
          : e.events && e.events.triggerEvent("processFailed", { result: t });
      }
    }
    Zondy.Service.IgsServiceBase = me;
    var ve = function(t) {
      var e = null != t ? t : {};
      (this.IsClipLine = null == e.IsClipLine || e.IsClipLine),
        (this.isXYScaleOut = null != e.isXYScaleOut && e.isXYScaleOut),
        (this.NoteDirection = null != e.NoteDirection ? e.NoteDirection : 1),
        (this.LineWidth = null != e.LineWidth ? e.LineWidth : 0.05),
        (this.MaxAngle = null != e.MaxAngle ? e.MaxAngle : 90),
        (this.MinDist = null != e.MinDist ? e.MinDist : 10),
        (this.IsAbs = null != e.IsAbs && e.IsAbs),
        (this.IsComma = null != e.IsComma && e.IsComma),
        (this.DigitNum = null != e.DigitNum ? e.DigitNum : 0),
        (this.FormatNo = null != e.FormatNo ? e.FormatNo : 0),
        (this.LogFlag = null != e.LogFlag ? e.LogFlag : 0),
        (this.Prefix = null != e.Prefix ? e.Prefix : ""),
        (this.Suffix = null != e.Suffix ? e.Suffix : ""),
        (this.ColorNo = null != e.ColorNo ? e.ColorNo : 0),
        (this.FixSize = null != e.FixSize ? e.FixSize : 0.01),
        (this.FontNo = null != e.FontNo ? e.FontNo : 0);
    };
    p.Object.ContourAnalyse.ContourNoteParam = ve;
    var _e = function(t) {
      var e = void 0 !== t ? t : {};
      (this.XScale = void 0 !== e.XScale ? e.XScale : 2),
        (this.YScale = void 0 !== e.YScale ? e.YScale : 10),
        (this.LineType = void 0 !== e.LineType ? e.LineType : 0),
        (this.SubLineType = void 0 !== e.SubLineType ? e.SubLineType : 0);
    };
    p.Object.ContourAnalyse.SlopLineParam = _e;
    var xe = function(t) {
      var e = null != t ? t : {};
      (this.PatID = null != e.PatID ? e.PatID : 0),
        (this.FillMode = null != e.FillMode ? e.FillMode : 0),
        (this.FillColor = null != e.FillColor ? e.FillColor : 1),
        (this.PatHeight = null != e.PatHeight ? e.PatHeight : 1),
        (this.PatWidth = null != e.PatWidth ? e.PatWidth : 1),
        (this.PatAngle = null != e.PatAngle ? e.PatAngle : 1),
        (this.PatColor = null != e.PatColor ? e.PatColor : 1),
        (this.OutPenWidth = null != e.OutPenWidth ? e.OutPenWidth : 1),
        (this.OverMethod = null != e.OverMethod ? e.OverMethod : 0);
    };
    p.Object.ContourAnalyse.ContourRegionInfo = xe;
    var be = function(t) {
      var e = null != t ? t : {};
      (this.ZValue = null != e.ZValue ? e.ZValue : 1),
        (this.LineInfo = null != e.LineInfo ? e.LineInfo : null),
        (this.RegInfo = null != e.RegInfo ? e.RegInfo : null),
        (this.IsOutputNote = null != e.IsOutputNote && e.IsOutputNote);
    };
    p.Object.ContourAnalyse.ContourZValue = be;
    var Se = function(t) {
      var e = null != t ? t : {};
      (this.IsSmoothLine = void 0 !== e.IsSmoothLine && e.IsSmoothLine),
        (this.SmoothGrade = void 0 !== e.SmoothGrade ? e.SmoothGrade : 1),
        (this.IsMakeReg = void 0 !== e.IsMakeReg && e.IsMakeReg),
        (this.IsMakeNote = void 0 !== e.IsMakeNote && e.IsMakeNote),
        (this.IsMakeSLin = void 0 !== e.IsMakeSLin && e.IsMakeSLin),
        (this.MapWay = void 0 !== e.MapWay ? e.MapWay : 1),
        (this.FrameWidth = void 0 !== e.FrameWidth ? e.FrameWidth : 1),
        (this.FrameHeight = void 0 !== e.FrameHeight ? e.FrameHeight : 1),
        (this.IsDrawColorScl = void 0 !== e.IsDrawColorScl && e.IsDrawColorScl),
        (this.IsSaveEdge = void 0 !== e.IsSaveEdge && e.IsSaveEdge),
        (this.NoteParam =
          void 0 !== e.NoteParam
            ? e.NoteParam
            : new p.Object.ContourAnalyse.ContourNoteParam()),
        (this.SlopLineParam =
          void 0 !== e.SlopLineParam
            ? e.SlopLineParam
            : new p.Object.ContourAnalyse.SlopLineParam()),
        (this.ZValues =
          void 0 !== e.ZValues
            ? e.ZValues
            : new p.Object.ContourAnalyse.ContourZValue());
    };
    p.Object.ContourAnalyse.ContourParam = Se;
    var Ie = function(t) {
      var e = void 0 !== t ? t : {};
      (this.SfClsURL = void 0 !== e.SfClsURL ? e.SfClsURL : null),
        (this.FieldName = void 0 !== e.FieldName ? e.FieldName : null),
        (this.XCellNum = void 0 !== e.XCellNum ? e.XCellNum : 200),
        (this.Bound = void 0 !== e.Bound ? e.Bound : null),
        (this.CalN = void 0 !== e.CalN ? e.CalN : null),
        (this.CalM = void 0 !== e.CalM ? e.CalM : null),
        (this.bIsCalInValidCtrlPnt =
          void 0 !== e.bIsCalInValidCtrlPnt && e.bIsCalInValidCtrlPnt),
        (this.nYCtrlNum = void 0 !== e.nYCtrlNum ? e.nYCtrlNum : null),
        (this.nXCtrlNum = void 0 !== e.nXCtrlNum ? e.nXCtrlNum : null),
        (this.nLayerNum = void 0 !== e.nLayerNum ? e.nLayerNum : null);
    };
    p.Object.ContourAnalyse.MeshingParam = Ie;
    var we = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.netCls = void 0 !== e.netCls ? e.netCls : null),
        (this.flagPosStr = void 0 !== e.flagPosStr ? e.flagPosStr : null),
        (this.barrierPosStr =
          void 0 !== e.barrierPosStr ? e.barrierPosStr : null),
        (this.weight = void 0 !== e.weight ? e.weight : null),
        (this.mode = void 0 !== e.mode ? e.mode : null),
        (this.isTour = void 0 !== e.isTour && e.isTour),
        (this.isTravel = void 0 !== e.isTravel && e.isTravel),
        (this.usedTWgt = void 0 !== e.usedTWgt && e.usedTWgt),
        (this.turnWgt = void 0 !== e.turnWgt ? e.turnWgt : null),
        (this.roadName = void 0 !== e.roadName ? e.roadName : "name");
    };
    p.Object.NetAnalyse = we;
    class Ne {
      constructor(t) {
        g(this, t),
          (this.baseUrl = t && t.baseUrl ? t.baseUrl : null),
          (this.ip = t && t.ip ? t.ip : "localhost"),
          (this.port = t && t.port ? t.port : "6163"),
          (this.partUrl = t && t.partUrl ? t.partUrl : null),
          (this.networkProtocol =
            t && t.networkProtocol
              ? t.networkProtocol
              : location.protocol.split(":")[0] || "http"),
          (this.domain = t && t.domain ? t.domain : "");
      }
      getFullUrl() {
        var t = this,
          e = null;
        if (p.Util.isArray(t.ip))
          for (var r = 0; r < t.ip.length; r++) {
            e = new Array();
            var n;
            n = m(t.port)
              ? void 0 !== t.port[r]
                ? t.port[r]
                : "6163"
              : void 0 !== t.port
              ? t.port
              : "6163";
            var i;
            (i = m(t.partUrl)
              ? void 0 !== t.partUrl[r]
                ? t.partUrl[r]
                : null
              : void 0 !== t.partUrl
              ? t.partUrl
              : null),
              "" === t.domain
                ? (t.domainStr = t.networkProtocol + "://" + t.ip[r] + ":" + n)
                : (t.domainStr = t.domain),
              e.push(
                encodeURI((t.domainStr + "/" + t.baseUrl + "/" + i).trim())
              );
          }
        else
          "" === t.domain
            ? (t.domainStr = t.networkProtocol + "://" + t.ip + ":" + t.port)
            : (t.domainStr = t.domain),
            (e = encodeURI(
              (t.domainStr + "/" + t.baseUrl + "/" + t.partUrl).trim()
            ));
        return e;
      }
    }
    p.Service.ServiceBase = Ne;
    class Ce extends Ne {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.netClsUrl = void 0 !== e.netClsUrl ? e.netClsUrl : null),
          (this.flagPosStr = void 0 !== e.flagPosStr ? e.flagPosStr : null),
          (this.analyTp = void 0 !== e.analyTp ? e.analyTp : "UserMode"),
          (this.weight = void 0 !== e.weight ? e.weight : ",Weight1,Weight1"),
          (this.outFormat = void 0 !== e.outFormat ? e.outFormat : "JSON"),
          (this.elementType = void 0 !== e.elementType ? e.elementType : 2),
          (this.nearDis = void 0 !== e.nearDis ? e.nearDis : 0.001),
          (this.barrierPosStr =
            void 0 !== e.barrierPosStr ? e.barrierPosStr : null),
          (this.roadName = void 0 !== e.roadName ? e.roadName : "name"),
          (this.baseUrl = "igs/rest/netAnaly");
      }
      getNetInfo(t, e, r, n) {
        (null != t && null != t) || (t = "weight"),
          (this.partUrl = "netClsInfo?netCls=" + this.netClsUrl + "&type=" + t);
        var i = this.getFullUrl();
        new me(i, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      addNetFlag(t, e, r, n, i) {
        var o = {};
        null != n && "POST" == n.toUpperCase()
          ? ((o.dotVal = t),
            (this.partUrl =
              "netClsFlag?netCls=" +
              this.netClsUrl +
              "&type=" +
              this.elementType +
              "&nearDis=" +
              this.nearDis))
          : (this.partUrl =
              "netClsFlag?netCls=" +
              this.netClsUrl +
              "&type=" +
              this.elementType +
              "&value=" +
              t +
              "&nearDis=" +
              this.nearDis);
        var s = this.getFullUrl(),
          a = new me(s, {
            eventListeners: {
              scope: this,
              processCompleted: e,
              processFailed: r
            }
          });
        null != n && "POST" == n.toUpperCase()
          ? a.processAsync({
              method: "POST",
              data: JSON.stringify(o),
              headers: { "Content-Type": "text/plain;charset=UTF-8" }
            })
          : a.processAsync();
      }
      netAnalyse(t, e, r, n) {
        this.partUrl = "netAnalyse";
        var i = this.getFullUrl();
        new me(i, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(t),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
      comNetAnalyse(t, e, r, n) {
        this.partUrl = "comNetAnalyse";
        var i = this.getFullUrl();
        new me(i, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(t),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
      pluNetAnalyse(t, e, r, n) {
        this.partUrl = "pluNetAnalyse";
        var i = this.getFullUrl();
        new me(i, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(t),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
    }
    p.Service.NetAnalysisExtent = Ce;
    const Ee = [
        { type: "mapboxgl", rule: "{z}/{y}/{x}" },
        { type: "cesium", rule: "{z}/{y}/{x}" }
      ],
      Me = [
        {
          type: "DynamicTile",
          id: 2,
          title: "动态裁图",
          description: "动态裁图为IGSMap2D的额外特性，为服务的功能",
          url: {
            GetCapabilities: "",
            GetMap:
              "http://{ip}:{port}/igs/rest/mrms/tile/{serverName}/{level}/{row}/{col}",
            GetFeatureInfo: ""
          },
          baseUrl: {
            GetCapabilities: "",
            GetMap: "http://{ip}:{port}/igs/rest/mrms/tile/{serverName}",
            GetFeatureInfo: ""
          }
        },
        {
          type: "IGSMap2D",
          id: 3,
          title: "二维文档服务",
          description: "IGServer自定义的二维文档REST服务",
          url: {
            GetCapabilities: "",
            GetMap:
              "http://{ip}:{port}/igs/rest/mrms/docs/{serverName}?bbox={bbox}&w={w}&h={h}&f={f}",
            GetFeatureInfo: ""
          },
          baseUrl: {
            GetCapabilities: "",
            GetMap:
              "http://{ip}:{port}/igs/rest/mrms/docs/{serverName}?bbox={bbox}",
            GetFeatureInfo: ""
          }
        },
        {
          type: "IGSTile",
          id: 5,
          title: "瓦片服务",
          description: "IGServer自定义的瓦片REST服务",
          url: {
            GetCapabilities:
              "http://{ip}:{port}/igs/rest/mrcs/tiles/{serverName}?f=json&v=2.0",
            GetMap:
              "http://{ip}:{port}/igs/rest/mrms/tile/{serverName}/{level}/{row}/{col}",
            GetFeatureInfo: ""
          },
          baseUrl: {
            GetCapabilities:
              "http://{ip}:{port}/igs/rest/mrcs/tiles/{serverName}?f=json&v=2.0",
            GetMap: "http://{ip}:{port}/igs/rest/mrms/tile/{serverName}",
            GetFeatureInfo: ""
          }
        },
        {
          type: "WMS",
          id: 8,
          title: "WMS",
          description: "OGC-WMS服务",
          url: {
            GetCapabilities:
              "http://{ip}:{port}/igs/rest/ogc/doc/{serverName}/WMSServer",
            GetMap:
              "http://{ip}:{port}/igs/rest/ogc/doc/{serverName}/WMSServer",
            GetFeatureInfo: ""
          },
          baseUrl: {
            GetCapabilities:
              "http://{ip}:{port}/igs/rest/ogc/doc/{serverName}/WMSServer",
            GetMap: "http://{ip}:{port}/igs/rest/ogc/{serverName}/WMSServer",
            GetFeatureInfo: ""
          }
        },
        {
          type: "WMTS",
          id: 10,
          title: "WMTS",
          description: "OGC-WMTS服务",
          url: {
            GetCapabilities:
              "http://{ip}:{port}/igs/rest/ogc/{serverName}/WMTSServer/1.0.0/WMTSCapabilities.xml",
            GetMap:
              "http://{ip}:{port}/igs/rest/ogc/{serverName}/WMTSServer?service=WMTS&request=GetTile&version=1.0.0&style=default&format=image/png&layer={serverName}&tilematrix={tilematrix}&tilerow={tilerow}&tilecol={tilecol}",
            GetFeatureInfo: ""
          },
          baseUrl: {
            GetCapabilities:
              "http://{ip}:{port}/igs/rest/ogc/{serverName}/WMTSServer/1.0.0/WMTSCapabilities.xml",
            GetMap: "http://{ip}:{port}/igs/rest/ogc/{serverName}/WMTSServerr",
            GetFeatureInfo: ""
          }
        }
      ];
    class Pe {
      get(t, e, r, n, i = "baseUrl", o = "GetMap", s = "mapboxgl") {
        let a;
        if (
          ("number" == typeof t
            ? (a = Me.find(e => e.id === t))
            : "string" == typeof t && (a = Me.find(e => e.title == t)),
          !a)
        )
          return;
        let l,
          u = a[i][o];
        for (
          u = u.replace("{ip}", e), u = u.replace("{port}", r);
          u.indexOf("{serverName}") >= 0;

        )
          u = u.replace("{serverName}", n);
        switch (s) {
          case "mapboxgl":
            (l = Ee.filter(t => "mapboxgl" === t.type)),
              (u = u.replace("{level}/{row}/{col}", l[0].rule)),
              (u = u.replace(
                "tilematrix={tilematrix}&tilerow={tilerow}&tilecol={tilecol}",
                "tilematrix={z}&tilerow={y}&tilecol={x}"
              )),
              (u = u.replace("w={w}&h={h}&f={f}", "w=512&h=512&f=png"));
          case "cesium":
            (l = Ee.filter(t => "cesium" === t.type)),
              (u = u.replace("{level}/{row}/{col}", l[0].rule));
        }
        return u;
      }
      GetCapabilities(t, e, r, n, i = "baseUrl") {
        return this.get(t, e, r, n, i, "GetCapabilities");
      }
      GetMap(t, e, r, n, i = "baseUrl", o = "mapboxgl") {
        return this.get(t, e, r, n, i, "GetMap", o);
      }
      GetFeatureInfo(t, e, r, n, i = "baseUrl") {
        return this.get(t, e, r, n, i, "GetFeatureInfo");
      }
    }
    class Oe extends Ne {
      constructor(t) {
        var e = t || {};
        (e.baseUrl = "igs/rest/g3d"), super(e);
      }
    }
    p.Catalog.G3DService = Oe;
    class Le extends Oe {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.docName = e.docName || null),
          (this.gdbp = e.gdbp || null),
          (this.proj = e.proj || null),
          (this.f = e.f || "json"),
          (this.guid = void 0 !== e.guid ? e.guid : z()),
          (this.encryptPassword = e.encryptPassword || null),
          (this.layerindex = e.layerindex || 0),
          (this.geometryType = e.geometryType || null),
          (this.geometry = e.geometry || null),
          (this.where = e.where || null),
          (this.structs = e.structs || {
            IncludeAttribute: !0,
            IncludeGeometry: !1,
            IncludeWebGraphic: !1
          }),
          (this.page = e.page || 0),
          (this.pageCount = e.pageCount || 20),
          (this.objectIds = e.objectIds || null),
          (this.orderField = e.orderField || null),
          (this.rtnLabel = void 0 !== e.rtnLabel && e.rtnLabel),
          (this.isAsc = void 0 !== e.isAsc && e.isAsc),
          (this.format = e.format || "json"),
          (this.systemLib = e.systemLib || null),
          (this.layerRenderIndex = e.layerRenderIndex || 0);
      }
      GetDocList(t, e) {
        var r = this;
        r.partUrl = "GetDocList";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      GetDocInfo(t, e) {
        var r = this;
        r.partUrl = r.docName + "/GetDocInfo?&f=json";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      GetLayerInfo(t, e) {
        var r = this,
          n = "layerinfo?gdbp=" + this.gdbp;
        r.proj && (n += "&proj=" + r.proj),
          r.f && (n += "&f=" + r.f),
          r.guid && (n += "&guid=" + r.guid),
          r.encryptPassword && (n += "&encryptPassword=" + r.encryptPassword),
          (r.partUrl = n);
        var i = r.getFullUrl();
        new me(i, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      GetFeature(t, e) {
        var r = this,
          n = "getFeature?";
        r.gdbp && "" !== r.gdbp
          ? (n += "gdbp=" + r.gdbp)
          : r.docName &&
            (n += "docName=" + r.docName + "&layerindex=" + r.layerindex),
          r.geometryType && (n += "&geometryType=" + r.geometryType),
          r.geometry && (n += "&geometry=" + r.geometry),
          r.where && (n += "&where=" + r.where),
          r.structs && (n += "&structs=" + JSON.stringify(r.structs)),
          r.page && (n += "&page=" + r.page),
          r.pageCount && (n += "&pageCount=" + r.pageCount),
          r.objectIds && (n += "&objectIds=" + r.objectIds),
          r.orderField && (n += "&orderField=" + r.orderField),
          r.rtnLabel && (n += "&rtnLabel=" + r.rtnLabel),
          r.isAsc && (n += "&isAsc=" + r.isAsc),
          r.guid && (n += "&guid=" + r.guid),
          r.format && (n += "&format=" + r.format),
          r.f && (n += "&f=" + r.f),
          (r.partUrl = n);
        var i = r.getFullUrl();
        new me(i, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      SetSystemLibraryByDoc(t, e) {
        var r = this,
          n =
            r.docName +
            "/setSystemLibrary?systemLib=" +
            r.systemLib +
            "&layerRenderIndex=" +
            r.layerRenderIndex;
        r.f && (n += "&f=" + r.f),
          r.guid && (n += "&guid=" + r.guid),
          (r.partUrl = n);
        var i = r.getFullUrl();
        new me(i, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
    }
    p.Catalog.G3DMapDoc = Le;
    class Te extends Ne {
      constructor(t) {
        var e = t || {};
        (e.baseUrl = "igs/rest/mrcs"), super(e);
      }
    }
    p.Catalog.CatalogService = Te;
    class Ae extends Te {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.SystemLibID = void 0 !== e.SystemLibID ? e.SystemLibID : 0),
          (this.ColorNO = void 0 !== e.ColorNO ? e.ColorNO : 6),
          (this.Red = void 0 !== e.Red ? e.Red : 0),
          (this.Green = void 0 !== e.Green ? e.Green : 0),
          (this.Blue = void 0 !== e.Blue ? e.Blue : 0),
          (this.addNew = void 0 !== e.addNew && e.addNew);
      }
      getColorNO(t, e, r) {
        var n = this;
        null != t &&
          (void 0 !== t.SystemLibID && (n.SystemLibID = t.SystemLibID),
          void 0 !== t.Red && (n.Red = t.Red),
          void 0 !== t.Green && (n.Green = t.Green),
          void 0 !== t.Blue && (n.Blue = t.Blue),
          void 0 !== t.addNew && (n.addNew = t.addNew)),
          (n.partUrl =
            "ColorLib/getColorNO?f=json&libID=" +
            n.SystemLibID +
            "&r=" +
            n.Red +
            "&g=" +
            n.Green +
            "&b=" +
            n.Blue +
            "&addNew=" +
            n.addNew);
        var i = n.getFullUrl();
        new me(i, {
          eventListeners: { scope: n, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      getColorRGB(t, e, r) {
        var n = this;
        null != t &&
          (void 0 !== t.SystemLibID && (n.SystemLibID = t.SystemLibID),
          void 0 !== t.ColorNO && (n.ColorNO = t.ColorNO)),
          (n.partUrl =
            "ColorLib/getColorRGB?f=json&libID=" +
            n.SystemLibID +
            "&colorNO=" +
            n.ColorNO);
        var i = n.getFullUrl();
        new me(i, {
          eventListeners: { scope: n, processCompleted: e, processFailed: r }
        }).processAsync();
      }
    }
    Zondy.Catalog.ColorInfo = Ae;
    class Re extends Te {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.serverName = void 0 !== e.serverName ? e.serverName : null),
          (this.gdbName = void 0 !== e.gdbName ? e.gdbName : null),
          (this.dsName = void 0 !== e.dsName ? e.dsName : null),
          (this.rcsName = void 0 !== e.rcsName ? e.rcsName : null),
          (this.User = void 0 !== e.User ? e.User : null),
          (this.Password = void 0 !== e.Password ? e.Password : null),
          (this.containAll = void 0 === e.containAll || e.containAll);
      }
      getServerList(t, e) {
        var r = this;
        r.partUrl = "datasource?f=json";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getGDBList(t, e) {
        var r = this;
        "mapgislocal" === r.serverName.toLowerCase()
          ? (r.partUrl = "datasource/" + r.serverName + "?f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getDsList(t, e) {
        var r = this;
        "mapgislocal" === r.serverName.toLowerCase()
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/ds?containAll=" +
              r.containAll +
              "&f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/ds?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&containAll=" +
              r.containAll +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getRcsList(t, e) {
        var r = this;
        "mapgislocal" === r.serverName.toLowerCase()
          ? (r.partUrl =
              "datasource/" + r.serverName + "/" + r.gdbName + "/rcs?f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/rcs?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&containAll=" +
              r.containAll +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getProjectList(t, e) {
        var r = this;
        r.partUrl = "datasource/" + r.serverName + "/" + r.gdbName + "?f=json";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getProjectInfo(t, e, r) {
        var n = this;
        n.partUrl =
          "datasource/" + n.serverName + "/" + n.gdbName + "/" + t + "?f=json";
        var i = n.getFullUrl();
        new me(i, {
          eventListeners: { scope: n, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      AttachGDB(t, e, r) {
        var n = this;
        if (null !== n.serverName && null !== n.gdbName && null !== t) {
          (n.partUrl =
            "gdb/attach/" +
            n.gdbName +
            "?gdbSvrName=" +
            n.serverName +
            "&path=" +
            t +
            "&f=json"),
            null !== n.User &&
              null !== n.Password &&
              (n.partUrl += "&gdbUserName=" + n.User + "&gdbPwd=" + n.Password);
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync();
        }
      }
      DetachGDB(t, e) {
        var r = this;
        if (null !== r.serverName && null !== r.gdbName) {
          (r.partUrl =
            "gdb/detach/" + r.gdbName + "?gdbSvrName=" + r.serverName),
            null !== r.User &&
              null !== r.Password &&
              (r.partUrl += "&gdbUserName=" + r.User + "&gdbPwd=" + r.Password);
          var n = r.getFullUrl();
          new me(n, {
            eventListeners: { scope: r, processCompleted: t, processFailed: e }
          }).processAsync();
        }
      }
      CreateGDB(t, e, r) {
        var n = this;
        if (
          null !== n.serverName &&
          null !== n.gdbName &&
          ("mapgislocal" !== n.serverName.toLowerCase() || null !== t)
        ) {
          (n.partUrl =
            "gdb/creat/" +
            n.gdbName +
            "?gdbSvrName=" +
            n.serverName +
            "&path=" +
            t +
            "&f=json"),
            null !== n.User &&
              null !== n.Password &&
              (n.partUrl += "&gdbUserName=" + n.User + "&gdbPwd=" + n.Password);
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync();
        }
      }
      DeleteGDB(t, e) {
        var r = this;
        if (null !== r.serverName && null !== r.gdbName) {
          (r.partUrl =
            "gdb/delete/" + r.gdbName + "?gdbSvrName=" + r.serverName),
            null !== r.User &&
              null !== r.Password &&
              (r.partUrl += "&gdbUserName=" + r.User + "&gdbPwd=" + r.Password);
          var n = r.getFullUrl();
          new me(n, {
            eventListeners: { scope: r, processCompleted: t, processFailed: e }
          }).processAsync();
        }
      }
    }
    Zondy.Catalog.GDBInfo = Re;
    class Fe extends Te {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.docName = void 0 !== e.docName ? e.docName : null),
          (this.mapIndex = void 0 !== e.mapIndex ? e.mapIndex : 0),
          (this.layerID = void 0 !== e.layerID ? e.layerID : 0),
          (this.version = void 0 !== e.version ? e.version : 2),
          (this.include =
            void 0 !== e.include
              ? e.include
              : "{includeDetails:true,includeSubs:false}"),
          (this.returnFullStyle =
            void 0 !== e.returnFullStyle && e.returnFullStyle),
          (this.guid = void 0 !== e.guid ? e.guid : z());
      }
      getMapDocList(t, e) {
        var r = this;
        r.partUrl = "docs?v=" + this.version + "&f=json";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getMapDocInfo(t, e, r, n, i) {
        var o = this;
        if (
          ("boolean" == typeof i && (o.returnFullStyle = i),
          "boolean" == typeof e || "boolean" == typeof r)
        ) {
          var s = {
            includeDetails: "boolean" != typeof e || e,
            includeSubs: "boolean" == typeof r && r
          };
          o.include = U(s);
        }
        o.partUrl =
          "docs/" +
          o.docName +
          "?include=" +
          o.include +
          "&returnFullStyle=" +
          o.returnFullStyle +
          "&guid=" +
          o.guid +
          "&f=json";
        var a = o.getFullUrl();
        new me(a, {
          eventListeners: { scope: o, processCompleted: t, processFailed: n }
        }).processAsync();
      }
      getMapInfo(t, e, r) {
        var n = this;
        "boolean" == typeof e && (n.returnFullStyle = e),
          (n.partUrl =
            "docs/" +
            n.docName +
            "/" +
            n.mapIndex +
            "?returnFullStyle=" +
            n.returnFullStyle +
            "&guid=" +
            n.guid +
            "&f=json");
        var i = n.getFullUrl();
        new me(i, {
          eventListeners: { scope: n, processCompleted: t, processFailed: r }
        }).processAsync();
      }
      getMapDocTree(t, e) {
        var r = this;
        r.partUrl =
          "docs/" + r.docName + "?tree=true&guid=" + r.guid + "&f=json";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getLayerInfo(t, e) {
        var r = this;
        r.partUrl =
          "docs/" +
          r.docName +
          "/" +
          r.mapIndex +
          "/" +
          r.layerID +
          "?returnFullStyle=" +
          r.returnFullStyle +
          "&guid=" +
          r.guid +
          "&f=json";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getLayersInfo(t, e) {
        var r = this;
        r.partUrl = "docs/" + r.docName + "/" + r.mapIndex + "/layers?f=json";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      deleteLayer(t, e) {
        var r = this;
        r.partUrl =
          "docs/" +
          r.docName +
          "/" +
          r.mapIndex +
          "/layers/delete?layerIDs=" +
          r.layerID +
          "&guid=" +
          r.guid +
          "&f=json";
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      addLayer(t, e, r) {
        var n = this;
        n.partUrl =
          "docs/" +
          n.docName +
          "/" +
          n.mapIndex +
          "/layers/add?guid=" +
          n.guid +
          "&f=json";
        var i = n.getFullUrl();
        new me(i, {
          eventListeners: { scope: n, processCompleted: e, processFailed: r }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(t),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
      changeIndex(t, e, r) {
        var n = this;
        n.partUrl =
          "docs/" +
          n.docName +
          "/" +
          n.mapIndex +
          "/layers/index?guid=" +
          n.guid +
          "&f=json";
        var i = n.getFullUrl();
        new me(i, {
          eventListeners: { scope: n, processCompleted: e, processFailed: r }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(t),
          header: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
      getLegendInfo(t, e, r, n) {
        var i = this;
        i.partUrl =
          "legendInfo/" +
          i.docName +
          "?f=json&layerIndexes=" +
          t +
          "&fields=" +
          e;
        var o = i.getFullUrl();
        new me(o, {
          eventListeners: { scope: i, processCompleted: r, processFailed: n }
        }).processAsync();
      }
    }
    p.Catalog.MapDoc = Fe;
    class De extends Te {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.tileName = void 0 !== e.tileName ? e.tileName : null),
          (this.version = void 0 !== e.version ? e.version : "2.0");
      }
      getTileList(t, e) {
        var r = this;
        (r.partUrl = "tiles?f=json"),
          this.version &&
            ("2.0" === r.version
              ? (r.partUrl += "&v=2")
              : (r.partUrl += "&v=" + r.version));
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getTileInfo(t, e) {
        var r = this;
        (r.partUrl = "tiles/" + r.tileName + "?f=json"),
          r.version && (r.partUrl += "&v=" + r.version);
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
    }
    Zondy.Catalog.TileLayer = De;
    class je extends Re {
      constructor(t) {
        super(t || {});
      }
      getSfclsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/sfcls?containAll=" +
              r.containAll +
              "&f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/sfcls?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&containAll=" +
              this.containAll +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getAclsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/acls?containAll=" +
              r.containAll +
              "&f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/acls?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&containAll=" +
              r.containAll +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getOclsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/ocls?containAll=" +
              r.containAll +
              "&f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/ocls?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&containAll=" +
              r.containAll +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getNclsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/ncls?containAll=" +
              r.containAll +
              "&f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/ncls?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&containAll=" +
              r.containAll +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getRdsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/rds?containAll=" +
              r.containAll +
              "&f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/rds?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&containAll=" +
              r.containAll +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getDsSfclsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0 ||
        "mapgislocalplus" === r.serverName.toLowerCase()
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.dsName +
              "/sfcls?f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.dsName +
              "/sfcls?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getDsAclsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.dsName +
              "/acls?f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.dsName +
              "/acls?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getDsOclsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.dsName +
              "/ocls?f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.dsName +
              "/ocls?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getDsNclsList(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.dsName +
              "/ncls?f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.dsName +
              "/ncls?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getRdsListInRcs(t, e) {
        var r = this;
        r.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.rcsName +
              "/rds?f=json")
          : (r.partUrl =
              "datasource/" +
              r.serverName +
              "/" +
              r.gdbName +
              "/" +
              r.rcsName +
              "/rds?user=" +
              r.User +
              "&psw=" +
              r.Password +
              "&f=json");
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getLayerList(t, e, r) {
        var n = this;
        n.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (n.partUrl =
              "datasource/" +
              n.serverName +
              "/" +
              n.gdbName +
              "/" +
              t +
              "?containAll=" +
              n.containAll +
              "&f=json")
          : (n.partUrl =
              "datasource/" +
              n.serverName +
              "/" +
              n.gdbName +
              "/" +
              t +
              "?user=" +
              n.User +
              "&psw=" +
              n.Password +
              "&containAll=" +
              n.containAll +
              "&f=json");
        var i = n.getFullUrl();
        new me(i, {
          eventListeners: { scope: n, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      getLayerListInDS(t, e, r) {
        var n = this;
        n.serverName.toLowerCase().indexOf("mapgislocal") >= 0
          ? (n.partUrl =
              "datasource/" +
              n.serverName +
              "/" +
              n.gdbName +
              "/" +
              n.dsName +
              "/" +
              t +
              "?f=json")
          : (n.partUrl =
              "datasource/" +
              n.serverName +
              "/" +
              n.gdbName +
              "/" +
              n.dsName +
              "/" +
              t +
              "?user=" +
              n.User +
              "&psw=" +
              n.Password +
              "&f=json");
        var i = n.getFullUrl();
        new me(i, {
          eventListeners: { scope: n, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      getLayerInfo(t, e, r, n) {
        var i = this;
        i.partUrl =
          "layerinfo?gdbpUrl=" +
          t +
          "&f=json&encryptPassword=" +
          n +
          "&proj=" +
          this.proj;
        var o = i.getFullUrl();
        new me(o, {
          eventListeners: { scope: i, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      CreateVectCls(t, e, r) {
        var n = this;
        if (
          null !== (t = null !== t ? t : null) &&
          null !== n.serverName &&
          null !== n.gdbName
        ) {
          null !== n.User && null !== n.Password
            ? (n.partUrl = "datasource/" + n.User + ":" + n.Password + "@")
            : (n.partUrl = "datasource/"),
            null === t.clsName && (t.clsName = z()),
            (n.partUrl +=
              n.serverName +
              "/" +
              n.gdbName +
              "/" +
              t.clsType +
              "/" +
              t.clsName +
              "/create?geoType=" +
              t.geoType +
              "&srefName=" +
              t.srefName +
              "&dsName=" +
              t.dsName +
              "&f=json"),
            null === t.attStruct && (t.attStruct = new ct());
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync({
            method: "POST",
            data: JSON.stringify(t.attStruct),
            headers: { "Content-Type": "text/plain;charset=UTF-8" }
          });
        }
      }
      deleteXCls(t, e, r, n) {
        var i = this;
        if (
          null !== i.serverName &&
          null !== i.gdbName &&
          null !== t &&
          null !== e
        ) {
          i.partUrl =
            "datasource/" +
            i.serverName +
            "/" +
            i.gdbName +
            "/" +
            t +
            "/" +
            e +
            "/delete?f=json";
          var o = i.getFullUrl();
          new me(o, {
            eventListeners: { scope: i, processCompleted: r, processFailed: n }
          }).processAsync();
        }
      }
    }
    Zondy.Catalog.VectorLayer = je;
    class Ue extends Te {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.f = e.f || "json"),
          (this.page = e.page || 0),
          (this.pageCount = e.pageCount || 20),
          (this.systemLib = e.systemLib || null),
          (this.type = e.type || null);
      }
      GetSystemLibrary(t, e) {
        var r = this;
        r.partUrl = "systemlibraries?f=" + r.f;
        var n = r.getFullUrl();
        new me(n, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      GetSymbol(t, e) {
        var r = this,
          n = "symbols?&systemLib=" + r.systemLib + "&type=" + r.type;
        r.f && (n += "&f=" + r.f),
          r.page && (n += "&page=" + r.page),
          r.size && (n += "&size=" + r.pageCount),
          (r.partUrl = n);
        var i = r.getFullUrl();
        new me(i, {
          eventListeners: { scope: r, processCompleted: t, processFailed: e }
        }).processAsync();
      }
    }
    Zondy.Catalog.SystomInfo = Ue;
    class Ge extends Ne {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.guid = void 0 !== e.guid ? e.guid : z()),
          (this.baseUrl = "igs/rest/mrfs"),
          (this.f = void 0 !== e.f ? e.f : "json");
      }
    }
    p.Service.EditServiceBase = Ge;
    class Be extends Ge {
      constructor(t, e, r) {
        super(r || {}),
          (this.docName = void 0 !== t ? t : null),
          (this.mapIndex = 0),
          (this.layerIndex = void 0 !== e ? e : 0);
      }
      add(t, e, r) {
        var n = this;
        if (void 0 !== t) {
          n.partUrl =
            "docs/" +
            n.docName +
            "/" +
            n.mapIndex +
            "/" +
            n.layerIndex +
            "/addFeatures?f=" +
            n.f +
            "&guid=" +
            n.guid;
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync({
            method: "POST",
            data: JSON.stringify(t),
            headers: { "Content-Type": "text/plain;charset=UTF-8" }
          });
        }
      }
      update(t, e, r) {
        var n = this;
        if (void 0 !== t) {
          n.partUrl =
            "docs/" +
            n.docName +
            "/" +
            n.mapIndex +
            "/" +
            n.layerIndex +
            "/updateFeatures?f=" +
            n.f +
            "&guid=" +
            n.guid;
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync({
            method: "POST",
            data: JSON.stringify(t),
            headers: { "Content-Type": "text/plain;charset=UTF-8" }
          });
        }
      }
      deletes(t, e, r) {
        var n = this;
        if (void 0 !== t) {
          n.partUrl =
            "docs/" +
            n.docName +
            "/" +
            n.mapIndex +
            "/" +
            n.layerIndex +
            "/deleteFeatures?f=" +
            n.f +
            "&objectIds=" +
            t +
            "&guid=" +
            n.guid;
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync();
        }
      }
    }
    p.Service.EditDocFeature = Be;
    class ke extends Ge {
      constructor(t, e) {
        super(e || {}), (this.gdbp = void 0 !== t ? t : null);
      }
      add(t, e, r) {
        var n = this;
        if (void 0 !== t) {
          n.partUrl =
            "layer/addFeatures?f=" +
            n.f +
            "&gdbp=" +
            n.gdbp +
            "&guid=" +
            n.guid;
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync({
            method: "POST",
            data: JSON.stringify(t),
            headers: { "Content-Type": "text/plain;charset=UTF-8" }
          });
        }
      }
      update(t, e, r) {
        var n = this;
        if (void 0 !== t) {
          n.partUrl =
            "layer/updateFeatures?f=" +
            n.f +
            "&gdbp=" +
            n.gdbp +
            "&guid=" +
            n.guid;
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync({
            method: "POST",
            data: JSON.stringify(t),
            headers: { "Content-Type": "text/plain;charset=UTF-8" }
          });
        }
      }
      deletes(t, e, r) {
        var n = this;
        if (void 0 !== t) {
          n.partUrl =
            "layer/deleteFeatures?f=" +
            n.f +
            "&objectIds=" +
            t +
            "&gdbp=" +
            n.gdbp +
            "&guid=" +
            n.guid;
          var i = n.getFullUrl();
          new me(i, {
            eventListeners: { scope: n, processCompleted: e, processFailed: r }
          }).processAsync();
        }
      }
    }
    p.Service.EditLayerFeature = ke;
    var qe = function(t) {
      var e = t || {};
      g(this, e),
        (this.IncludeAttribute =
          void 0 === e.IncludeAttribute ||
          "boolean" != typeof e.IncludeAttribute ||
          e.IncludeAttribute),
        (this.IncludeGeometry =
          void 0 !== e.IncludeGeometry &&
          "boolean" == typeof e.IncludeGeometry &&
          e.IncludeGeometry),
        (this.IncludeWebGraphic =
          void 0 !== e.IncludeWebGraphic &&
          "boolean" == typeof e.IncludeWebGraphic &&
          e.IncludeWebGraphic);
    };
    (qe.prototype.toJSON = function() {
      return U(this);
    }),
      (p.Service.QueryFeatureStruct = qe);
    var ze = function(t) {
      var e = t || {};
      g(this, e),
        (this.CompareRectOnly =
          void 0 !== e.CompareRectOnly &&
          "boolean" == typeof e.CompareRectOnly &&
          e.CompareRectOnly),
        (this.EnableDisplayCondition =
          void 0 !== e.EnableDisplayCondition &&
          "boolean" == typeof e.EnableDisplayCondition &&
          e.EnableDisplayCondition),
        (this.MustInside =
          void 0 !== e.MustInside &&
          "boolean" == typeof e.MustInside &&
          e.MustInside),
        (this.Intersect =
          void 0 !== e.Intersect &&
          "boolean" == typeof e.Intersect &&
          e.Intersect);
    };
    (ze.prototype.toJSON = function() {
      return U(this);
    }),
      (p.Service.QueryFeatureRule = ze);
    class Ve {
      constructor(t) {
        var e = t || {};
        g(this, e),
          (this.geometry = void 0 !== e.geometry ? e.geometry : null),
          (this.where = void 0 !== e.where ? e.where : null),
          (this.rule = void 0 !== e.rule ? e.rule : new ze()),
          (this.objectIds = void 0 !== e.objectIds ? e.objectIds : null),
          (this.pageIndex = void 0 !== e.pageIndex ? e.pageIndex : 0),
          (this.recordNumber = void 0 !== e.recordNumber ? e.recordNumber : 20),
          (this.resultFormat =
            void 0 !== e.resultFormat ? e.resultFormat : "json"),
          (this.struct = void 0 !== e.struct ? e.struct : new qe()),
          (this.orderField = void 0 !== e.orderField ? e.orderField : null),
          (this.rtnLabel = void 0 !== e.rtnLabel && e.rtnLabel),
          (this.fields = e.fields || ""),
          (this.coordPrecision =
            e.coordPrecision || 0 === e.coordPrecision ? e.coordPrecision : 2),
          (this.isAsc = void 0 !== e.isAsc && e.isAsc),
          (this.cursorType =
            void 0 !== e.cursorType ? e.cursorType : "forward"),
          (this.proj = e.proj || null),
          (this.guid = e.guid || "__readonly_user__");
      }
    }
    p.Service.QueryParameterBase = Ve;
    class We extends Ve {
      constructor(t) {
        super(t || {});
      }
      getParameterURL() {
        var t = "page=" + this.pageIndex.toString();
        return (
          (t += "&pageCount=" + this.recordNumber.toString()),
          (t += "&f=" + this.resultFormat),
          this.geometry &&
            ((t += "&geometry=" + this.geometry.toString()),
            (t += "&geometryType=" + this.geometry.getGeometryType())),
          this.struct && (t += "&structs=" + U(this.struct)),
          this.where && (t += "&where=" + this.where),
          this.rule && (t += "&rule=" + U(this.rule)),
          this.objectIds && (t += "&objectIds=" + this.objectIds),
          this.orderField && (t += "&orderField=" + this.orderField),
          void 0 !== this.rtnLabel && (t += "&rtnLabel=" + this.rtnLabel),
          this.fields && (t += "&fields=" + this.fields),
          void 0 !== this.coordPrecision &&
            (t += "&coordPrecision=" + this.coordPrecision),
          this.isAsc && (t += "&isAsc=" + this.isAsc),
          this.proj && (t += "&srsIds=" + this.proj),
          this.guid && (t += "&guid=" + this.guid),
          t + "&cursorType=" + this.cursorType
        );
      }
      getParameterObject() {
        var t = {};
        return (
          (t.f = this.resultFormat),
          null !== this.struct && (t.structs = this.struct.toJSON()),
          null !== this.objectIds
            ? ((t.objectIds = this.objectIds), t)
            : ((t.page = this.pageIndex.toString()),
              (t.pageCount = this.recordNumber.toString()),
              null !== this.geometry &&
                ((t.geometry = this.geometry.toString()),
                (t.geometryType = this.geometry.getGeometryType())),
              null !== this.where && (t.where = this.where),
              null !== this.rule && (t.rule = this.rule.toJSON()),
              null !== this.orderField && (t.orderField = this.orderField),
              null !== this.isAsc && (t.isAsc = this.isAsc),
              (t.cursorType = this.cursorType),
              t)
        );
      }
    }
    p.Service.QueryParameter = We;
    class Xe extends Ne {
      constructor(t) {
        var e = t || {};
        (e.baseUrl = "igs/rest/mrfs"),
          super(e),
          (this.resultCallBack =
            void 0 !== e.resultCallBack ? e.resultCallBack : null),
          (this.queryParam = void 0 !== e.queryParam ? e.queryParam : null),
          (this.requestType = void 0 !== e.requestType ? e.requestType : "GET");
      }
      processResult(t) {
        var e = new ne();
        x(e, t, "succeed"), this.resultCallBack(e);
      }
      processGeoJsonResult(t) {
        var e = {};
        x(e, t, "succeed"), this.resultCallBack(e);
      }
      restQuery(t, e, r, n, i, o) {
        var s = this;
        s.resultCallBack = r;
        var a = new me(t, {
          eventListeners: {
            scope: s,
            processCompleted:
              "geojson" !== o ? s.processResult : s.processGeoJsonResult,
            processFailed: i
          }
        });
        "GET" === n
          ? a.processAsync()
          : a.processAsync({
              method: "POST",
              data: JSON.stringify(e),
              headers: { "Content-Type": "text/plain;charset=UTF-8" }
            });
      }
      query(t, e, r) {
        if (null !== this.queryParam) {
          var n = "";
          if (this.queryParam instanceof We) {
            n = this.getFullUrl();
            var i = "",
              o = null;
            "GET" ===
            (i =
              r || (this.requestType ? this.requestType : "GET")).toUpperCase()
              ? (n += encodeURI("?" + this.queryParam.getParameterURL()))
              : (o = this.queryParam.getParameterObject()),
              this.restQuery(
                n,
                o,
                t,
                i,
                e,
                this.queryParam.resultFormat.toLowerCase()
              );
          }
        }
      }
    }
    p.Service.QueryServiceBase = Xe;
    var Ye = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.geometry = void 0 !== e.geometry ? e.geometry : null),
        (this.geometryType = void 0 !== e.geometryType ? e.geometryType : null),
        (this.resultFormat =
          void 0 !== e.resultFormat ? e.resultFormat : "json"),
        (this.nearDis = void 0 !== e.nearDis ? e.nearDis : 1e-4);
    };
    (Ye.prototype.getParameterURL = function() {
      var t = "";
      return (
        (t += "?f=" + this.resultFormat),
        (t += "&geometryType=" + this.geometryType) + "&nearDis=" + this.nearDis
      );
    }),
      (p.Service.MultiGeoQueryParameter = Ye);
    class He extends Xe {
      constructor(t, e, r, n) {
        super(n || {}),
          (this.queryParam = t),
          (this.mapName = e),
          (this.mapIndex = 0),
          (this.layerIndex = r),
          (this.baseUrl = "igs/rest/extend/MultiGeo"),
          (this.partUrl =
            "docs/" +
            this.mapName +
            "/" +
            this.mapIndex.toString() +
            "/" +
            this.layerIndex +
            "/Geoquery"),
          (this.partUrl += t.getParameterURL());
      }
      query(t, e) {
        if (null !== this.queryParam && this.queryParam instanceof Ye) {
          var r = null;
          "point" === this.queryParam.geometryType
            ? (r = { pointArr: this.queryParam.geometry })
            : "line" === this.queryParam.geometryType
            ? (r = { lineArr: this.queryParam.geometry })
            : "polygon" === this.queryParam.geometryType &&
              (r = { PolygonObjs: this.queryParam.geometry });
          var n = this.getFullUrl();
          new me(n, {
            eventListeners: {
              scope: this,
              processCompleted: t,
              processFailed: e
            }
          }).processAsync({
            method: "POST",
            data: JSON.stringify(r),
            headers: { "Content-Type": "text/plain;charset=UTF-8" }
          });
        }
      }
    }
    p.Service.MultiGeoQuery = He;
    var Je = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.objectIds = void 0 !== e.objectIds ? e.objectIds : null),
        (this.where = void 0 !== e.where ? e.where : null),
        (this.resultFormat =
          void 0 !== e.resultFormat ? e.resultFormat : "json");
    };
    (Je.prototype.getParameterURL = function() {
      var t = "";
      return (
        (t += "&f=" + this.resultFormat),
        null !== this.objectIds
          ? (t += "&objectIds=" + this.objectIds)
          : null !== this.where && (t += "&where=" + this.where),
        t
      );
    }),
      (p.Service.ObjClsQueryParameter = Je);
    class $e extends Xe {
      constructor(t, e, r) {
        super(r || {}),
          (this.queryParam = t),
          (this.gdbp = e),
          (this.baseUrl = "igs/rest/extend/dxlcz"),
          (this.partUrl = "objlayer/query?gdbp=" + e),
          (this.partUrl += t.getParameterURL());
      }
      query(t, e) {
        if (null !== this.queryParam && this.queryParam instanceof Je) {
          var r = this.getFullUrl();
          new me(r, {
            eventListeners: {
              scope: this,
              processCompleted: t,
              processFailed: e
            }
          }).processAsync();
        }
      }
    }
    p.Service.ObjClsQuery = $e;
    class Qe extends We {
      constructor(t, e) {
        super(e || {}), (this.gdbp = void 0 !== t ? t : null);
      }
      getParameterURL() {
        return super.getParameterURL() + "&gdbp=" + this.gdbp;
      }
      getParameterObject() {
        var t = super.getParameterObject(this);
        return (t.gdbp = this.gdbp), t;
      }
    }
    p.Service.QueryByLayerParameter = Qe;
    class Ze extends Xe {
      constructor(t, e, r, n) {
        super(n || {}),
          (this.queryParam = t),
          (this.docName = e),
          (this.layerIndex = null == r ? -1 : r),
          (this.mapIndex = 0),
          (this.partUrl =
            "docs/" +
            this.docName +
            "/" +
            this.mapIndex.toString() +
            "/" +
            this.layerIndex.toString() +
            "/query");
      }
    }
    p.Service.QueryDocFeature = Ze;
    class Ke extends Xe {
      constructor(t, e) {
        super(e || {}), (this.queryParam = t), (this.partUrl = "layer/query");
      }
    }
    function tr(t, e) {
      for (let r of Reflect.ownKeys(e))
        if ("constructor" !== r && "prototype" !== r && "name" !== r) {
          let n = Object.getOwnPropertyDescriptor(e, r);
          Object.defineProperty(t, r, n);
        }
    }
    p.Service.QueryLayerFeature = Ke;
    class er extends (function(...t) {
      class e {
        constructor() {
          for (let e of t) e && tr(this, new e());
        }
      }
      for (let r of t) r && tr(e, r), r && tr(e.prototype, r.prototype);
      return e;
    })(Qe, We, Ze) {
      constructor() {
        super();
      }
    }
    class rr {
      static formatParam(t) {
        let e = [
          "IncludeAttribute",
          "IncludeGeometry",
          "IncludeWebGraphic",
          "isAsc",
          "compareRectOnly",
          "enableDisplayCondition"
        ];
        for (let r = 0; r < e.length; r++)
          "string" == typeof t[e[r]] && (t[e[r]] = "true" === t[e[r]]);
        return t;
      }
      constructor() {
        (this.layers = []),
          (this.pageIndex = 0),
          (this.pagination = 100),
          (this.resultFormat = "json"),
          (this.IncludeAttribute = !0),
          (this.IncludeGeometry = !0),
          (this.IncludeWebGraphic = !1),
          (this.orderBy = void 0),
          (this.isAsc = void 0),
          (this.proj = void 0),
          (this.fields = void 0),
          (this.coordPrecision = void 0),
          (this.cursorType = "backward");
      }
    }
    (rr.prototype.formatParameter = function(t, e) {
      let r,
        n = this;
      return (
        (n._crs = e),
        "typename" === t
          ? ((r = {
              layers: t,
              pagination: "maxfeatures",
              rectangle: "bbox",
              where: "filter",
              geometry: "filter",
              objectIds: "featureId"
            }),
            this.where && this.geometry && delete r.geometry,
            Object.keys(r).forEach(function(t) {
              n.hasOwnProperty(t) &&
                n[t] &&
                (n[t] instanceof Array
                  ? (r[r[t]] = n[t].join(","))
                  : (r[r[t]] =
                      "where" === t || "geometry" === t
                        ? initFilter(n[t], n.geometry, n)
                        : n[t])),
                delete r[t];
            }),
            r)
          : ((r = {
              layers: t,
              pageIndex: "Page",
              pagination: "pageCount",
              resultFormat: "f",
              includeAttribute: "IncludeAttribute",
              includeGeometry: "IncludeGeometry",
              includeWebGraphic: "IncludeWebGraphic",
              orderBy: "orderField"
            }),
            Object.keys(r).forEach(function(t) {
              n.hasOwnProperty(t) && ((n[r[t]] = n[t]), delete n[t]);
            }),
            this)
      );
    }),
      (p.Service.BaseParameter = rr);
    class nr {
      static get(t, e, r) {
        let n = new XMLHttpRequest();
        n.open("GET", t, !0),
          (n.onreadystatechange = function() {
            (4 == n.readyState && 200 == n.status) || 304 == n.status
              ? e.call(this, n.responseText)
              : 4 === n.readyState &&
                200 !== n.status &&
                304 !== n.status &&
                r.call(this, n.responseText);
          }),
          n.send();
      }
      constructor(t) {
        this.url = t.url;
        let e = this.url.split("http://");
        this._ip = e[1].split(":")[0];
        let r = e[1].split(":")[1].split("/");
        (this._port = r[0]),
          this.url.indexOf("igs/rest/mrfs/docs") > -1 &&
            (this._mapId = r[r.length - 1]);
      }
    }
    (nr.prototype.query = function(t, e, r) {
      t = rr.formatParam(t);
      let n,
        i,
        o,
        s,
        a,
        l,
        u,
        h = Object.assign({}, t);
      if (
        ((a = h.layers),
        "string" == typeof a && (a = a.split(",")),
        (l = [
          "layers",
          "pagination",
          "orderBy",
          "spatialRelationType",
          "EnableDisplayCondition",
          "MustInside",
          "CompareRectOnly",
          "Intersect",
          "IncludeGeometry",
          "IncludeAttribute",
          "IncludeWebGraphic"
        ]),
        Object.keys(h).forEach(function(t) {
          switch (t) {
            case "pagination":
              h.recordNumber = h.pagination;
              break;
            case "orderBy":
              h.orderField = h.orderBy;
              break;
            case "spatialRelationType":
              (h.MustInside = "MustInside" === h.spatialRelationType),
                (h.Intersect = "Intersect" === h.spatialRelationType);
              break;
            case "objectIds":
              h.objectIds = h.objectIds.join(",");
          }
        }),
        (h.hasOwnProperty("geometry") && h.geometry) ||
          (h.hasOwnProperty("rectangle") && h.rectangle.length > 0))
      )
        if (
          ((n = new ze({
            EnableDisplayCondition: h.enableDisplayCondition,
            MustInside: h.MustInside,
            CompareRectOnly: h.compareRectOnly,
            Intersect: h.Intersect
          })),
          !h.hasOwnProperty("geometry") && h.rectangle.length > 0)
        )
          (s = new Jt(
            h.rectangle[0],
            h.rectangle[1],
            h.rectangle[2],
            h.rectangle[3]
          )),
            delete h.rectangle;
        else if ("Point" === h.geometry.type)
          (s = new Yt(h.geometry.coordinates[0], h.geometry.coordinates[1], {
            nearDis: "0.001"
          })),
            delete h.geometry;
        else if (
          "LineString" === h.geometry.type ||
          "Polygon" === h.geometry.type
        ) {
          let t = [];
          for (let e = 0; e < h.geometry.coordinates.length; e++)
            t.push(
              new Yt(h.geometry.coordinates[e][0], h.geometry.coordinates[e][1])
            );
          switch (h.geometry.type) {
            case "LineString":
              s = new se(t);
              break;
            case "Polygon":
              s = new ie(t);
          }
          delete h.geometry;
        } else if ("MultiPolygon" === h.geometry.type) {
          let t = [];
          for (let e = 0; e < h.geometry.coordinates.length; e++) {
            let r = [],
              n = h.geometry.coordinates[e];
            for (let t = 0; t < n.length; t++) r.push(new Yt(n[t][0], n[t][1]));
            t.push(new ie(r));
          }
          (s = new oe(t)), delete h.geometry;
        }
      o = new qe({
        IncludeGeometry: h.IncludeGeometry,
        IncludeAttribute: h.IncludeAttribute,
        IncludeWebGraphic: h.IncludeWebGraphic
      });
      let c = new RegExp("^[0-9]+$");
      if (a.length <= 0) throw new Error("请填写您要查询的图层");
      if (c.test(a[0]))
        (i = new We()),
          (u = new Ze(i, this._mapId, a.join(","), {
            ip: this._ip,
            port: this._port
          }));
      else {
        if (!("string" == typeof a[0] && a[0].indexOf("gdbp") > -1))
          throw new Error("请填写正确的图层Id或gdbp地址");
        (i = new Qe(a)), (u = new Ke(i, { ip: this._ip, port: this._port }));
      }
      s && ((i.geometry = s), (i.rule = n)), (i.struct = o);
      let p = Object.assign({}, h);
      for (let t = 0; t < l.length; t++)
        p.hasOwnProperty(l[t]) && delete p[l[t]];
      g(i, p),
        u.query(
          function(t) {
            e && e(t);
          },
          function(t) {
            r && r(t);
          }
        );
    }),
      (nr.prototype.add = function(t, e, r, n) {
        let i,
          o = this;
        this.getFieldAtt(e, function(s) {
          let a = o.getFeatureSet(s, t);
          (i = o.getFeatureService(e)), i.add(a, r, n);
        });
      }),
      (nr.prototype.update = function(t, e, r, n) {
        let i,
          o = this;
        this.getFieldAtt(e, function(s) {
          let a = o.getFeatureSet(s, t);
          (i = o.getFeatureService(e)), i.update(a, r, n);
        });
      }),
      (nr.prototype.delete = function(t, e, r, n) {
        (t = t.join(",")), this.getFeatureService(e).deletes(t, r, n);
      }),
      (nr.prototype.getFeatureSet = function(t, e) {
        let r = [],
          n = t.FieldAtt.FldType;
        for (let t = 0; t < n.length; t++)
          r.push(n[t].substr(3, n[t].length).toLowerCase());
        t.FieldAtt.FldType = r;
        let i = new ne({ AttStruct: new ct(t.FieldAtt) });
        for (let r = 0; r < e.length; r++) {
          let n,
            o,
            s,
            a = e[r].hasOwnProperty("geometry") && e[r].geometry,
            l = [];
          for (let n = 0; n < t.FieldAtt.FldName.length; n++)
            e[r].attributes.hasOwnProperty(t.FieldAtt.FldName[n])
              ? l.push(e[r].attributes[t.FieldAtt.FldName[n]])
              : l.push(null);
          let u,
            h = new re({ AttValue: l });
          if (a) {
            let t,
              i,
              a,
              l,
              c,
              p,
              f,
              d,
              y = e[r].geometryType;
            switch (((n = e[r].geometry), y)) {
              case "Point":
                o = [];
                for (let t = 0; t < n.length; t++)
                  (c = new Qt(n[t].coordinates[0], n[t].coordinates[1])),
                    o.push(c);
                (t = new te({ PntGeom: o })),
                  (u = 1),
                  e[r].style &&
                    ((a = new Bt(e[r].style)),
                    (i = new ee({ InfoType: 1, PntInfo: a })));
                break;
              case "LineString":
                o = [];
                for (let t = 0; t < n.length; t++) {
                  p = [];
                  for (let e = 0; e < n[t].coordinates.length; e++)
                    p.push(
                      new Yt(n[t].coordinates[e].x, n[t].coordinates[e].y)
                    );
                  (f = new Arc(p)),
                    (l = new ut([f])),
                    (s = new Zt(l)),
                    o.push(s);
                }
                (t = new te({ LinGeom: o })),
                  (u = 2),
                  e[r].style &&
                    ((a = new Gt(e[r].style)),
                    (i = new ee({ InfoType: 2, LinInfo: a })));
                break;
              case "Polygon":
                o = [];
                for (let t = 0; t < n.length; t++) {
                  l = [];
                  let e = [];
                  for (let r = 0; r < n[t].exterior.length; r++)
                    e.push(new Yt(n[t].exterior[r].x, n[t].exterior[r].y));
                  l.push(new ut([new Arc(e)]));
                  for (let e = 0; e < n[t].interior.length; e++) {
                    let r = [];
                    for (let i = 0; i < n[t].interior[e].length; i++)
                      r.push(
                        new Yt(n[t].interior[e][i].x, n[t].interior[e][i].y)
                      );
                    l.push(new ut([new Arc(r)]));
                  }
                  (d = new Kt(l)), o.push(d);
                }
                (t = new te({ RegGeom: o })),
                  (u = 3),
                  e[r].style &&
                    ((a = new kt(e[r].style)),
                    (i = new ee({ InfoType: 3, RegInfo: a })));
            }
            (h.fGeom = t), (h.GraphicInfo = i), (h.ftype = u);
          }
          e[r].FID && h.setFID(e[r].FID), i.addFeature(h);
        }
        return i;
      }),
      (nr.prototype.getFeatureService = function(t) {
        let e;
        return (
          (e =
            t.indexOf("gdbp") >= 0
              ? new ke(t)
              : new Be(this._mapId, t, { ip: this._ip, port: this._port })),
          e
        );
      }),
      (nr.prototype.getFieldAtt = function(t, e) {
        let r = this;
        t.indexOf("gdbp") >= 0
          ? this.getGDBPInfo(t, e)
          : this.getLayerInfo(t, function(t) {
              r.getGDBPInfo(t, e);
            });
      }),
      (nr.prototype.getGDBPInfo = function(t, e) {
        nr.get(
          "http://" +
            this._ip +
            ":" +
            this._port +
            "/igs/rest/mrcs/layerinfo?gdbpUrl=" +
            t,
          function(t) {
            (t = JSON.parse(t)), e(t);
          }
        );
      }),
      (nr.prototype.getLayerInfo = function(t, e) {
        nr.get(
          "http://" +
            this._ip +
            ":" +
            this._port +
            "/igs/rest/mrcs/docs/" +
            this._mapId +
            "/0/" +
            t +
            "?f=json",
          function(t) {
            let r = (t = JSON.parse(t)).URL;
            e(r);
          }
        );
      }),
      (p.Service.FeatureService = nr);
    class ir extends rr {
      constructor(t) {
        super(), (this.where = void 0), g(this, t);
      }
    }
    p.Service.SQLParameter = ir;
    class or {
      constructor() {
        this.coordinates = [];
      }
    }
    function sr(t, e, r) {
      void 0 === r && (r = {});
      var n = { type: "Feature" };
      return (
        (0 === r.id || r.id) && (n.id = r.id),
        r.bbox && (n.bbox = r.bbox),
        (n.properties = e || {}),
        (n.geometry = t),
        n
      );
    }
    function ar(t, e, r) {
      if ((void 0 === r && (r = {}), !t))
        throw new Error("coordinates is required");
      if (!Array.isArray(t)) throw new Error("coordinates must be an Array");
      if (t.length < 2)
        throw new Error("coordinates must be at least 2 numbers long");
      if (!fr(t[0]) || !fr(t[1]))
        throw new Error("coordinates must contain numbers");
      return sr({ type: "Point", coordinates: t }, e, r);
    }
    function lr(t, e, r) {
      void 0 === r && (r = {});
      for (var n = 0, i = t; n < i.length; n++) {
        var o = i[n];
        if (o.length < 4)
          throw new Error(
            "Each LinearRing of a Polygon must have 4 or more Positions."
          );
        for (var s = 0; s < o[o.length - 1].length; s++)
          if (o[o.length - 1][s] !== o[0][s])
            throw new Error("First and last Position are not equivalent.");
      }
      return sr({ type: "Polygon", coordinates: t }, e, r);
    }
    function ur(t, e, r) {
      if ((void 0 === r && (r = {}), t.length < 2))
        throw new Error(
          "coordinates must be an array of two or more positions"
        );
      return sr({ type: "LineString", coordinates: t }, e, r);
    }
    function hr(t, e) {
      void 0 === e && (e = {});
      var r = { type: "FeatureCollection" };
      return (
        e.id && (r.id = e.id), e.bbox && (r.bbox = e.bbox), (r.features = t), r
      );
    }
    function cr(t, e, r) {
      return (
        void 0 === r && (r = {}),
        sr({ type: "MultiLineString", coordinates: t }, e, r)
      );
    }
    function pr(t, e, r) {
      return (
        void 0 === r && (r = {}),
        sr({ type: "MultiPoint", coordinates: t }, e, r)
      );
    }
    function fr(t) {
      return !isNaN(t) && null !== t && !Array.isArray(t);
    }
    function dr(t, e, r) {
      if (null !== t)
        for (
          var n,
            i,
            o,
            s,
            a,
            l,
            u,
            h,
            c = 0,
            p = 0,
            f = t.type,
            d = "FeatureCollection" === f,
            y = "Feature" === f,
            g = d ? t.features.length : 1,
            m = 0;
          m < g;
          m++
        ) {
          a = (h =
            !!(u = d ? t.features[m].geometry : y ? t.geometry : t) &&
            "GeometryCollection" === u.type)
            ? u.geometries.length
            : 1;
          for (var v = 0; v < a; v++) {
            var _ = 0,
              x = 0;
            if (null !== (s = h ? u.geometries[v] : u)) {
              l = s.coordinates;
              var b = s.type;
              switch (
                ((c = !r || ("Polygon" !== b && "MultiPolygon" !== b) ? 0 : 1),
                b)
              ) {
                case null:
                  break;
                case "Point":
                  if (!1 === e(l, p, m, _, x)) return !1;
                  p++, _++;
                  break;
                case "LineString":
                case "MultiPoint":
                  for (n = 0; n < l.length; n++) {
                    if (!1 === e(l[n], p, m, _, x)) return !1;
                    p++, "MultiPoint" === b && _++;
                  }
                  "LineString" === b && _++;
                  break;
                case "Polygon":
                case "MultiLineString":
                  for (n = 0; n < l.length; n++) {
                    for (i = 0; i < l[n].length - c; i++) {
                      if (!1 === e(l[n][i], p, m, _, x)) return !1;
                      p++;
                    }
                    "MultiLineString" === b && _++, "Polygon" === b && x++;
                  }
                  "Polygon" === b && _++;
                  break;
                case "MultiPolygon":
                  for (n = 0; n < l.length; n++) {
                    for (x = 0, i = 0; i < l[n].length; i++) {
                      for (o = 0; o < l[n][i].length - c; o++) {
                        if (!1 === e(l[n][i][o], p, m, _, x)) return !1;
                        p++;
                      }
                      x++;
                    }
                    _++;
                  }
                  break;
                case "GeometryCollection":
                  for (n = 0; n < s.geometries.length; n++)
                    if (!1 === dr(s.geometries[n], e, r)) return !1;
                  break;
                default:
                  throw new Error("Unknown Geometry Type");
              }
            }
          }
        }
    }
    function yr(t, e) {
      if ("Feature" === t.type) e(t, 0);
      else if ("FeatureCollection" === t.type)
        for (
          var r = 0;
          r < t.features.length && !1 !== e(t.features[r], r);
          r++
        );
    }
    function gr(t, e) {
      !(function(t, e) {
        var r,
          n,
          i,
          o,
          s,
          a,
          l,
          u,
          h,
          c,
          p = 0,
          f = "FeatureCollection" === t.type,
          d = "Feature" === t.type,
          y = f ? t.features.length : 1;
        for (r = 0; r < y; r++) {
          for (
            a = f ? t.features[r].geometry : d ? t.geometry : t,
              u = f ? t.features[r].properties : d ? t.properties : {},
              h = f ? t.features[r].bbox : d ? t.bbox : void 0,
              c = f ? t.features[r].id : d ? t.id : void 0,
              s = (l = !!a && "GeometryCollection" === a.type)
                ? a.geometries.length
                : 1,
              i = 0;
            i < s;
            i++
          )
            if (null !== (o = l ? a.geometries[i] : a))
              switch (o.type) {
                case "Point":
                case "LineString":
                case "MultiPoint":
                case "Polygon":
                case "MultiLineString":
                case "MultiPolygon":
                  if (!1 === e(o, p, u, h, c)) return !1;
                  break;
                case "GeometryCollection":
                  for (n = 0; n < o.geometries.length; n++)
                    if (!1 === e(o.geometries[n], p, u, h, c)) return !1;
                  break;
                default:
                  throw new Error("Unknown Geometry Type");
              }
            else if (!1 === e(null, p, u, h, c)) return !1;
          p++;
        }
      })(t, function(t, r, n, i, o) {
        var s,
          a = null === t ? null : t.type;
        switch (a) {
          case null:
          case "Point":
          case "LineString":
          case "Polygon":
            return !1 !== e(sr(t, n, { bbox: i, id: o }), r, 0) && void 0;
        }
        switch (a) {
          case "MultiPoint":
            s = "Point";
            break;
          case "MultiLineString":
            s = "LineString";
            break;
          case "MultiPolygon":
            s = "Polygon";
        }
        for (var l = 0; l < t.coordinates.length; l++) {
          var u = t.coordinates[l];
          if (!1 === e(sr({ type: s, coordinates: u }, n), r, l)) return !1;
        }
      });
    }
    function mr(t) {
      var e = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
      return (
        dr(t, function(t) {
          e[0] > t[0] && (e[0] = t[0]),
            e[1] > t[1] && (e[1] = t[1]),
            e[2] < t[0] && (e[2] = t[0]),
            e[3] < t[1] && (e[3] = t[1]);
        }),
        e
      );
    }
    mr.default = mr;
    const vr = mr;
    function _r(t) {
      if (!t) throw new Error("coord is required");
      if (!Array.isArray(t)) {
        if (
          "Feature" === t.type &&
          null !== t.geometry &&
          "Point" === t.geometry.type
        )
          return t.geometry.coordinates;
        if ("Point" === t.type) return t.coordinates;
      }
      if (
        Array.isArray(t) &&
        t.length >= 2 &&
        !Array.isArray(t[0]) &&
        !Array.isArray(t[1])
      )
        return t;
      throw new Error("coord must be GeoJSON Point or an Array of numbers");
    }
    function xr(t) {
      if (Array.isArray(t)) return t;
      if ("Feature" === t.type) {
        if (null !== t.geometry) return t.geometry.coordinates;
      } else if (t.coordinates) return t.coordinates;
      throw new Error(
        "coords must be GeoJSON Feature, Geometry Object or an Array"
      );
    }
    function br(t) {
      return "Feature" === t.type ? t.geometry : t;
    }
    function Sr(t, e, r) {
      if ((void 0 === r && (r = {}), !t)) throw new Error("point is required");
      if (!e) throw new Error("polygon is required");
      var n = _r(t),
        i = br(e),
        o = i.type,
        s = e.bbox,
        a = i.coordinates;
      if (
        s &&
        !1 ===
          (function(t, e) {
            return e[0] <= t[0] && e[1] <= t[1] && e[2] >= t[0] && e[3] >= t[1];
          })(n, s)
      )
        return !1;
      "Polygon" === o && (a = [a]);
      for (var l = !1, u = 0; u < a.length && !l; u++)
        if (Ir(n, a[u][0], r.ignoreBoundary)) {
          for (var h = !1, c = 1; c < a[u].length && !h; )
            Ir(n, a[u][c], !r.ignoreBoundary) && (h = !0), c++;
          h || (l = !0);
        }
      return l;
    }
    function Ir(t, e, r) {
      var n = !1;
      e[0][0] === e[e.length - 1][0] &&
        e[0][1] === e[e.length - 1][1] &&
        (e = e.slice(0, e.length - 1));
      for (var i = 0, o = e.length - 1; i < e.length; o = i++) {
        var s = e[i][0],
          a = e[i][1],
          l = e[o][0],
          u = e[o][1];
        if (
          t[1] * (s - l) + a * (l - t[0]) + u * (t[0] - s) == 0 &&
          (s - t[0]) * (l - t[0]) <= 0 &&
          (a - t[1]) * (u - t[1]) <= 0
        )
          return !r;
        a > t[1] != u > t[1] &&
          t[0] < ((l - s) * (t[1] - a)) / (u - a) + s &&
          (n = !n);
      }
      return n;
    }
    r(233), r(5592), Object.prototype.hasOwnProperty;
    var wr = new ArrayBuffer(16);
    new Float64Array(wr),
      new Uint32Array(wr),
      r(6363),
      (function() {
        function t(t) {
          (this.points = t.points || []),
            (this.duration = t.duration || 1e4),
            (this.sharpness = t.sharpness || 0.85),
            (this.centers = []),
            (this.controls = []),
            (this.stepLength = t.stepLength || 60),
            (this.length = this.points.length),
            (this.delay = 0);
          for (var e = 0; e < this.length; e++)
            this.points[e].z = this.points[e].z || 0;
          for (e = 0; e < this.length - 1; e++) {
            var r = this.points[e],
              n = this.points[e + 1];
            this.centers.push({
              x: (r.x + n.x) / 2,
              y: (r.y + n.y) / 2,
              z: (r.z + n.z) / 2
            });
          }
          for (
            this.controls.push([this.points[0], this.points[0]]), e = 0;
            e < this.centers.length - 1;
            e++
          ) {
            var i =
                this.points[e + 1].x -
                (this.centers[e].x + this.centers[e + 1].x) / 2,
              o =
                this.points[e + 1].y -
                (this.centers[e].y + this.centers[e + 1].y) / 2,
              s =
                this.points[e + 1].z -
                (this.centers[e].y + this.centers[e + 1].z) / 2;
            this.controls.push([
              {
                x:
                  (1 - this.sharpness) * this.points[e + 1].x +
                  this.sharpness * (this.centers[e].x + i),
                y:
                  (1 - this.sharpness) * this.points[e + 1].y +
                  this.sharpness * (this.centers[e].y + o),
                z:
                  (1 - this.sharpness) * this.points[e + 1].z +
                  this.sharpness * (this.centers[e].z + s)
              },
              {
                x:
                  (1 - this.sharpness) * this.points[e + 1].x +
                  this.sharpness * (this.centers[e + 1].x + i),
                y:
                  (1 - this.sharpness) * this.points[e + 1].y +
                  this.sharpness * (this.centers[e + 1].y + o),
                z:
                  (1 - this.sharpness) * this.points[e + 1].z +
                  this.sharpness * (this.centers[e + 1].z + s)
              }
            ]);
          }
          return (
            this.controls.push([
              this.points[this.length - 1],
              this.points[this.length - 1]
            ]),
            (this.steps = this.cacheSteps(this.stepLength)),
            this
          );
        }
        (t.prototype.cacheSteps = function(t) {
          var e = [],
            r = this.pos(0);
          e.push(0);
          for (var n = 0; n < this.duration; n += 10) {
            var i = this.pos(n);
            Math.sqrt(
              (i.x - r.x) * (i.x - r.x) +
                (i.y - r.y) * (i.y - r.y) +
                (i.z - r.z) * (i.z - r.z)
            ) > t && (e.push(n), (r = i));
          }
          return e;
        }),
          (t.prototype.vector = function(t) {
            var e = this.pos(t + 10),
              r = this.pos(t - 10);
            return {
              angle: (180 * Math.atan2(e.y - r.y, e.x - r.x)) / 3.14,
              speed: Math.sqrt(
                (r.x - e.x) * (r.x - e.x) +
                  (r.y - e.y) * (r.y - e.y) +
                  (r.z - e.z) * (r.z - e.z)
              )
            };
          }),
          (t.prototype.pos = function(t) {
            var e = t - this.delay;
            e < 0 && (e = 0), e > this.duration && (e = this.duration - 1);
            var r = e / this.duration;
            if (r >= 1) return this.points[this.length - 1];
            var n = Math.floor((this.points.length - 1) * r);
            return (function(t, e, r, n, i) {
              var o = (function(t) {
                var e = t * t;
                return [
                  e * t,
                  3 * e * (1 - t),
                  3 * t * (1 - t) * (1 - t),
                  (1 - t) * (1 - t) * (1 - t)
                ];
              })(t);
              return {
                x: i.x * o[0] + n.x * o[1] + r.x * o[2] + e.x * o[3],
                y: i.y * o[0] + n.y * o[1] + r.y * o[2] + e.y * o[3],
                z: i.z * o[0] + n.z * o[1] + r.z * o[2] + e.z * o[3]
              };
            })(
              (this.length - 1) * r - n,
              this.points[n],
              this.controls[n][1],
              this.controls[n + 1][0],
              this.points[n + 1]
            );
          });
      })();
    const Nr = function(t, e) {
      void 0 === e && (e = {});
      var r = vr(t);
      return ar([(r[0] + r[2]) / 2, (r[1] + r[3]) / 2], e.properties, e);
    };
    r(3444);
    const Cr = function(t) {
      if (!t) throw new Error("geojson is required");
      var e = [];
      return (
        gr(t, function(t) {
          !(function(t, e) {
            var r = [],
              n = t.geometry;
            if (null !== n) {
              switch (n.type) {
                case "Polygon":
                  r = xr(n);
                  break;
                case "LineString":
                  r = [xr(n)];
              }
              r.forEach(function(r) {
                var n = (function(t, e) {
                  var r = [];
                  return (
                    t.reduce(function(t, n) {
                      var i,
                        o,
                        s,
                        a,
                        l,
                        u,
                        h = ur([t, n], e);
                      return (
                        (h.bbox =
                          ((o = n),
                          (s = (i = t)[0]),
                          (a = i[1]),
                          (l = o[0]),
                          (u = o[1]),
                          [
                            s < l ? s : l,
                            a < u ? a : u,
                            s > l ? s : l,
                            a > u ? a : u
                          ])),
                        r.push(h),
                        n
                      );
                    }),
                    r
                  );
                })(r, t.properties);
                n.forEach(function(t) {
                  (t.id = e.length), e.push(t);
                });
              });
            }
          })(t, e);
        }),
        hr(e)
      );
    };
    var Er = r(7406);
    function Mr(t, e) {
      var r = xr(t),
        n = xr(e);
      if (2 !== r.length)
        throw new Error("<intersects> line1 must only contain 2 coordinates");
      if (2 !== n.length)
        throw new Error("<intersects> line2 must only contain 2 coordinates");
      var i = r[0][0],
        o = r[0][1],
        s = r[1][0],
        a = r[1][1],
        l = n[0][0],
        u = n[0][1],
        h = n[1][0],
        c = n[1][1],
        p = (c - u) * (s - i) - (h - l) * (a - o);
      if (0 === p) return null;
      var f = ((h - l) * (o - u) - (c - u) * (i - l)) / p,
        d = ((s - i) * (o - u) - (a - o) * (i - l)) / p;
      return f >= 0 && f <= 1 && d >= 0 && d <= 1
        ? ar([i + f * (s - i), o + f * (a - o)])
        : null;
    }
    const Pr = function(t, e) {
      var r = {},
        n = [];
      if (
        ("LineString" === t.type && (t = sr(t)),
        "LineString" === e.type && (e = sr(e)),
        "Feature" === t.type &&
          "Feature" === e.type &&
          null !== t.geometry &&
          null !== e.geometry &&
          "LineString" === t.geometry.type &&
          "LineString" === e.geometry.type &&
          2 === t.geometry.coordinates.length &&
          2 === e.geometry.coordinates.length)
      ) {
        var i = Mr(t, e);
        return i && n.push(i), hr(n);
      }
      var o = Er();
      return (
        o.load(Cr(e)),
        yr(Cr(t), function(t) {
          yr(o.search(t), function(e) {
            var i = Mr(t, e);
            if (i) {
              var o = xr(i).join(",");
              r[o] || ((r[o] = !0), n.push(i));
            }
          });
        }),
        hr(n)
      );
    };
    function Or(t, e, r, n, i) {
      var o = r[0],
        s = r[1],
        a = t[0],
        l = t[1],
        u = e[0],
        h = e[1],
        c = u - a,
        p = h - l,
        f = (r[0] - a) * p - (r[1] - l) * c;
      if (null !== i) {
        if (Math.abs(f) > i) return !1;
      } else if (0 !== f) return !1;
      return n
        ? "start" === n
          ? Math.abs(c) >= Math.abs(p)
            ? c > 0
              ? a < o && o <= u
              : u <= o && o < a
            : p > 0
            ? l < s && s <= h
            : h <= s && s < l
          : "end" === n
          ? Math.abs(c) >= Math.abs(p)
            ? c > 0
              ? a <= o && o < u
              : u < o && o <= a
            : p > 0
            ? l <= s && s < h
            : h < s && s <= l
          : "both" === n &&
            (Math.abs(c) >= Math.abs(p)
              ? c > 0
                ? a < o && o < u
                : u < o && o < a
              : p > 0
              ? l < s && s < h
              : h < s && s < l)
        : Math.abs(c) >= Math.abs(p)
        ? c > 0
          ? a <= o && o <= u
          : u <= o && o <= a
        : p > 0
        ? l <= s && s <= h
        : h <= s && s <= l;
    }
    const Lr = function(t, e, r) {
      void 0 === r && (r = {});
      for (var n = _r(t), i = xr(e), o = 0; o < i.length - 1; o++) {
        var s = !1;
        if (
          (r.ignoreEndVertices &&
            (0 === o && (s = "start"),
            o === i.length - 2 && (s = "end"),
            0 === o && o + 1 === i.length - 1 && (s = "both")),
          Or(i[o], i[o + 1], n, s, void 0 === r.epsilon ? null : r.epsilon))
        )
          return !0;
      }
      return !1;
    };
    var Tr = Math.PI / 180,
      Ar = 180 / Math.PI,
      Rr = function(t, e) {
        (this.lon = t), (this.lat = e), (this.x = Tr * t), (this.y = Tr * e);
      };
    (Rr.prototype.view = function() {
      return String(this.lon).slice(0, 4) + "," + String(this.lat).slice(0, 4);
    }),
      (Rr.prototype.antipode = function() {
        var t = -1 * this.lat,
          e = this.lon < 0 ? 180 + this.lon : -1 * (180 - this.lon);
        return new Rr(e, t);
      });
    var Fr = function() {
      (this.coords = []), (this.length = 0);
    };
    Fr.prototype.move_to = function(t) {
      this.length++, this.coords.push(t);
    };
    var Dr = function(t) {
      (this.properties = t || {}), (this.geometries = []);
    };
    (Dr.prototype.json = function() {
      if (this.geometries.length <= 0)
        return {
          geometry: { type: "LineString", coordinates: null },
          type: "Feature",
          properties: this.properties
        };
      if (1 === this.geometries.length)
        return {
          geometry: {
            type: "LineString",
            coordinates: this.geometries[0].coords
          },
          type: "Feature",
          properties: this.properties
        };
      for (var t = [], e = 0; e < this.geometries.length; e++)
        t.push(this.geometries[e].coords);
      return {
        geometry: { type: "MultiLineString", coordinates: t },
        type: "Feature",
        properties: this.properties
      };
    }),
      (Dr.prototype.wkt = function() {
        for (
          var t = "",
            e = "LINESTRING(",
            r = function(t) {
              e += t[0] + " " + t[1] + ",";
            },
            n = 0;
          n < this.geometries.length;
          n++
        ) {
          if (0 === this.geometries[n].coords.length)
            return "LINESTRING(empty)";
          this.geometries[n].coords.forEach(r),
            (t += e.substring(0, e.length - 1) + ")");
        }
        return t;
      });
    var jr = function(t, e, r) {
      if (!t || void 0 === t.x || void 0 === t.y)
        throw new Error(
          "GreatCircle constructor expects two args: start and end objects with x and y properties"
        );
      if (!e || void 0 === e.x || void 0 === e.y)
        throw new Error(
          "GreatCircle constructor expects two args: start and end objects with x and y properties"
        );
      (this.start = new Rr(t.x, t.y)),
        (this.end = new Rr(e.x, e.y)),
        (this.properties = r || {});
      var n = this.start.x - this.end.x,
        i = this.start.y - this.end.y,
        o =
          Math.pow(Math.sin(i / 2), 2) +
          Math.cos(this.start.y) *
            Math.cos(this.end.y) *
            Math.pow(Math.sin(n / 2), 2);
      if (((this.g = 2 * Math.asin(Math.sqrt(o))), this.g === Math.PI))
        throw new Error(
          "it appears " +
            t.view() +
            " and " +
            e.view() +
            " are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite"
        );
      if (isNaN(this.g))
        throw new Error(
          "could not calculate great circle between " + t + " and " + e
        );
    };
    function Ur(t, e) {
      void 0 === e && (e = {});
      var r = br(t);
      switch (
        (e.properties || "Feature" !== t.type || (e.properties = t.properties),
        r.type)
      ) {
        case "Polygon":
          return (function(t, e) {
            return (
              void 0 === e && (e = {}),
              Gr(
                br(t).coordinates,
                e.properties
                  ? e.properties
                  : "Feature" === t.type
                  ? t.properties
                  : {}
              )
            );
          })(r, e);
        case "MultiPolygon":
          return (function(t, e) {
            void 0 === e && (e = {});
            var r = br(t).coordinates,
              n = e.properties
                ? e.properties
                : "Feature" === t.type
                ? t.properties
                : {},
              i = [];
            return (
              r.forEach(function(t) {
                i.push(Gr(t, n));
              }),
              hr(i)
            );
          })(r, e);
        default:
          throw new Error("invalid poly");
      }
    }
    function Gr(t, e) {
      return t.length > 1 ? cr(t, e) : ur(t[0], e);
    }
    (jr.prototype.interpolate = function(t) {
      var e = Math.sin((1 - t) * this.g) / Math.sin(this.g),
        r = Math.sin(t * this.g) / Math.sin(this.g),
        n =
          e * Math.cos(this.start.y) * Math.cos(this.start.x) +
          r * Math.cos(this.end.y) * Math.cos(this.end.x),
        i =
          e * Math.cos(this.start.y) * Math.sin(this.start.x) +
          r * Math.cos(this.end.y) * Math.sin(this.end.x),
        o = e * Math.sin(this.start.y) + r * Math.sin(this.end.y),
        s = Ar * Math.atan2(o, Math.sqrt(Math.pow(n, 2) + Math.pow(i, 2)));
      return [Ar * Math.atan2(i, n), s];
    }),
      (jr.prototype.Arc = function(t, e) {
        var r = [];
        if (!t || t <= 2)
          r.push([this.start.lon, this.start.lat]),
            r.push([this.end.lon, this.end.lat]);
        else
          for (var n = 1 / (t - 1), i = 0; i < t; ++i) {
            var o = n * i,
              s = this.interpolate(o);
            r.push(s);
          }
        for (
          var a = !1,
            l = 0,
            u = e && e.offset ? e.offset : 10,
            h = 180 - u,
            c = -180 + u,
            p = 360 - u,
            f = 1;
          f < r.length;
          ++f
        ) {
          var d = r[f - 1][0],
            y = r[f][0],
            g = Math.abs(y - d);
          g > p && ((y > h && d < c) || (d > h && y < c))
            ? (a = !0)
            : g > l && (l = g);
        }
        var m = [];
        if (a && l < u) {
          var v = [];
          m.push(v);
          for (var _ = 0; _ < r.length; ++_) {
            var x = parseFloat(r[_][0]);
            if (_ > 0 && Math.abs(x - r[_ - 1][0]) > p) {
              var b = parseFloat(r[_ - 1][0]),
                S = parseFloat(r[_ - 1][1]),
                I = parseFloat(r[_][0]),
                w = parseFloat(r[_][1]);
              if (
                b > -180 &&
                b < c &&
                180 === I &&
                _ + 1 < r.length &&
                r[_ - 1][0] > -180 &&
                r[_ - 1][0] < c
              ) {
                v.push([-180, r[_][1]]), _++, v.push([r[_][0], r[_][1]]);
                continue;
              }
              if (
                b > h &&
                b < 180 &&
                -180 === I &&
                _ + 1 < r.length &&
                r[_ - 1][0] > h &&
                r[_ - 1][0] < 180
              ) {
                v.push([180, r[_][1]]), _++, v.push([r[_][0], r[_][1]]);
                continue;
              }
              if (b < c && I > h) {
                var N = b;
                (b = I), (I = N);
                var C = S;
                (S = w), (w = C);
              }
              if (
                (b > h && I < c && (I += 360), b <= 180 && I >= 180 && b < I)
              ) {
                var E = (180 - b) / (I - b),
                  M = E * w + (1 - E) * S;
                v.push([r[_ - 1][0] > h ? 180 : -180, M]),
                  (v = []).push([r[_ - 1][0] > h ? -180 : 180, M]),
                  m.push(v);
              } else (v = []), m.push(v);
              v.push([x, r[_][1]]);
            } else v.push([r[_][0], r[_][1]]);
          }
        } else {
          var P = [];
          m.push(P);
          for (var O = 0; O < r.length; ++O) P.push([r[O][0], r[O][1]]);
        }
        for (var L = new Dr(this.properties), T = 0; T < m.length; ++T) {
          var A = new Fr();
          L.geometries.push(A);
          for (var R = m[T], F = 0; F < R.length; ++F) A.move_to(R[F]);
        }
        return L;
      }),
      r(3473);
    var Br = [],
      kr = [],
      qr = [],
      zr = [],
      Vr = [],
      Wr = [],
      Xr = [],
      Yr = [],
      Hr = [],
      Jr = [],
      $r = [],
      Qr = [],
      Zr = [],
      Kr = [],
      tn = [],
      en = [],
      rn = [],
      nn = [],
      on = [],
      sn = [],
      an = [],
      ln = [],
      un = [],
      hn = [];
    (Xr[85] = Jr[85] = -1),
      (Yr[85] = $r[85] = 0),
      (Hr[85] = Qr[85] = 1),
      (on[85] = ln[85] = 1),
      (sn[85] = un[85] = 0),
      (an[85] = hn[85] = 1),
      (Br[85] = zr[85] = 0),
      (kr[85] = Vr[85] = -1),
      (qr[85] = tn[85] = 0),
      (en[85] = Zr[85] = 0),
      (rn[85] = Kr[85] = 1),
      (Wr[85] = nn[85] = 1),
      (ln[1] = ln[169] = 0),
      (un[1] = un[169] = -1),
      (hn[1] = hn[169] = 0),
      (Zr[1] = Zr[169] = -1),
      (Kr[1] = Kr[169] = 0),
      (tn[1] = tn[169] = 0),
      (Jr[4] = Jr[166] = 0),
      ($r[4] = $r[166] = -1),
      (Qr[4] = Qr[166] = 1),
      (en[4] = en[166] = 1),
      (rn[4] = rn[166] = 0),
      (nn[4] = nn[166] = 0),
      (Xr[16] = Xr[154] = 0),
      (Yr[16] = Yr[154] = 1),
      (Hr[16] = Hr[154] = 1),
      (zr[16] = zr[154] = 1),
      (Vr[16] = Vr[154] = 0),
      (Wr[16] = Wr[154] = 1),
      (on[64] = on[106] = 0),
      (sn[64] = sn[106] = 1),
      (an[64] = an[106] = 0),
      (Br[64] = Br[106] = -1),
      (kr[64] = kr[106] = 0),
      (qr[64] = qr[106] = 1),
      (on[2] = on[168] = 0),
      (sn[2] = sn[168] = -1),
      (an[2] = an[168] = 1),
      (ln[2] = ln[168] = 0),
      (un[2] = un[168] = -1),
      (hn[2] = hn[168] = 0),
      (Zr[2] = Zr[168] = -1),
      (Kr[2] = Kr[168] = 0),
      (tn[2] = tn[168] = 0),
      (en[2] = en[168] = -1),
      (rn[2] = rn[168] = 0),
      (nn[2] = nn[168] = 1),
      (Xr[8] = Xr[162] = 0),
      (Yr[8] = Yr[162] = -1),
      (Hr[8] = Hr[162] = 0),
      (Jr[8] = Jr[162] = 0),
      ($r[8] = $r[162] = -1),
      (Qr[8] = Qr[162] = 1),
      (Zr[8] = Zr[162] = 1),
      (Kr[8] = Kr[162] = 0),
      (tn[8] = tn[162] = 1),
      (en[8] = en[162] = 1),
      (rn[8] = rn[162] = 0),
      (nn[8] = nn[162] = 0),
      (Xr[32] = Xr[138] = 0),
      (Yr[32] = Yr[138] = 1),
      (Hr[32] = Hr[138] = 1),
      (Jr[32] = Jr[138] = 0),
      ($r[32] = $r[138] = 1),
      (Qr[32] = Qr[138] = 0),
      (Br[32] = Br[138] = 1),
      (kr[32] = kr[138] = 0),
      (qr[32] = qr[138] = 0),
      (zr[32] = zr[138] = 1),
      (Vr[32] = Vr[138] = 0),
      (Wr[32] = Wr[138] = 1),
      (ln[128] = ln[42] = 0),
      (un[128] = un[42] = 1),
      (hn[128] = hn[42] = 1),
      (on[128] = on[42] = 0),
      (sn[128] = sn[42] = 1),
      (an[128] = an[42] = 0),
      (Br[128] = Br[42] = -1),
      (kr[128] = kr[42] = 0),
      (qr[128] = qr[42] = 1),
      (zr[128] = zr[42] = -1),
      (Vr[128] = Vr[42] = 0),
      (Wr[128] = Wr[42] = 0),
      (Jr[5] = Jr[165] = -1),
      ($r[5] = $r[165] = 0),
      (Qr[5] = Qr[165] = 0),
      (ln[5] = ln[165] = 1),
      (un[5] = un[165] = 0),
      (hn[5] = hn[165] = 0),
      (en[20] = en[150] = 0),
      (rn[20] = rn[150] = 1),
      (nn[20] = nn[150] = 1),
      (zr[20] = zr[150] = 0),
      (Vr[20] = Vr[150] = -1),
      (Wr[20] = Wr[150] = 1),
      (Xr[80] = Xr[90] = -1),
      (Yr[80] = Yr[90] = 0),
      (Hr[80] = Hr[90] = 1),
      (on[80] = on[90] = 1),
      (sn[80] = sn[90] = 0),
      (an[80] = an[90] = 1),
      (Zr[65] = Zr[105] = 0),
      (Kr[65] = Kr[105] = 1),
      (tn[65] = tn[105] = 0),
      (Br[65] = Br[105] = 0),
      (kr[65] = kr[105] = -1),
      (qr[65] = qr[105] = 0),
      (Xr[160] = Xr[10] = -1),
      (Yr[160] = Yr[10] = 0),
      (Hr[160] = Hr[10] = 1),
      (Jr[160] = Jr[10] = -1),
      ($r[160] = $r[10] = 0),
      (Qr[160] = Qr[10] = 0),
      (ln[160] = ln[10] = 1),
      (un[160] = un[10] = 0),
      (hn[160] = hn[10] = 0),
      (on[160] = on[10] = 1),
      (sn[160] = sn[10] = 0),
      (an[160] = an[10] = 1),
      (en[130] = en[40] = 0),
      (rn[130] = rn[40] = 1),
      (nn[130] = nn[40] = 1),
      (Zr[130] = Zr[40] = 0),
      (Kr[130] = Kr[40] = 1),
      (tn[130] = tn[40] = 0),
      (Br[130] = Br[40] = 0),
      (kr[130] = kr[40] = -1),
      (qr[130] = qr[40] = 0),
      (zr[130] = zr[40] = 0),
      (Vr[130] = Vr[40] = -1),
      (Wr[130] = Wr[40] = 1),
      (Jr[37] = Jr[133] = 0),
      ($r[37] = $r[133] = 1),
      (Qr[37] = Qr[133] = 1),
      (ln[37] = ln[133] = 0),
      (un[37] = un[133] = 1),
      (hn[37] = hn[133] = 0),
      (Br[37] = Br[133] = -1),
      (kr[37] = kr[133] = 0),
      (qr[37] = qr[133] = 0),
      (zr[37] = zr[133] = 1),
      (Vr[37] = Vr[133] = 0),
      (Wr[37] = Wr[133] = 0),
      (en[148] = en[22] = -1),
      (rn[148] = rn[22] = 0),
      (nn[148] = nn[22] = 0),
      (ln[148] = ln[22] = 0),
      (un[148] = un[22] = -1),
      (hn[148] = hn[22] = 1),
      (on[148] = on[22] = 0),
      (sn[148] = sn[22] = 1),
      (an[148] = an[22] = 1),
      (zr[148] = zr[22] = -1),
      (Vr[148] = Vr[22] = 0),
      (Wr[148] = Wr[22] = 1),
      (Xr[82] = Xr[88] = 0),
      (Yr[82] = Yr[88] = -1),
      (Hr[82] = Hr[88] = 1),
      (en[82] = en[88] = 1),
      (rn[82] = rn[88] = 0),
      (nn[82] = nn[88] = 1),
      (Zr[82] = Zr[88] = -1),
      (Kr[82] = Kr[88] = 0),
      (tn[82] = tn[88] = 1),
      (on[82] = on[88] = 0),
      (sn[82] = sn[88] = -1),
      (an[82] = an[88] = 0),
      (Xr[73] = Xr[97] = 0),
      (Yr[73] = Yr[97] = 1),
      (Hr[73] = Hr[97] = 0),
      (Jr[73] = Jr[97] = 0),
      ($r[73] = $r[97] = -1),
      (Qr[73] = Qr[97] = 0),
      (Zr[73] = Zr[97] = 1),
      (Kr[73] = Kr[97] = 0),
      (tn[73] = tn[97] = 0),
      (Br[73] = Br[97] = 1),
      (kr[73] = kr[97] = 0),
      (qr[73] = qr[97] = 1),
      (Xr[145] = Xr[25] = 0),
      (Yr[145] = Yr[25] = -1),
      (Hr[145] = Hr[25] = 0),
      (Zr[145] = Zr[25] = 1),
      (Kr[145] = Kr[25] = 0),
      (tn[145] = tn[25] = 1),
      (ln[145] = ln[25] = 0),
      (un[145] = un[25] = 1),
      (hn[145] = hn[25] = 1),
      (zr[145] = zr[25] = -1),
      (Vr[145] = Vr[25] = 0),
      (Wr[145] = Wr[25] = 0),
      (Jr[70] = Jr[100] = 0),
      ($r[70] = $r[100] = 1),
      (Qr[70] = Qr[100] = 0),
      (en[70] = en[100] = -1),
      (rn[70] = rn[100] = 0),
      (nn[70] = nn[100] = 1),
      (on[70] = on[100] = 0),
      (sn[70] = sn[100] = -1),
      (an[70] = an[100] = 1),
      (Br[70] = Br[100] = 1),
      (kr[70] = kr[100] = 0),
      (qr[70] = qr[100] = 0),
      (Jr[101] = Jr[69] = 0),
      ($r[101] = $r[69] = 1),
      (Qr[101] = Qr[69] = 0),
      (Br[101] = Br[69] = 1),
      (kr[101] = kr[69] = 0),
      (qr[101] = qr[69] = 0),
      (ln[149] = ln[21] = 0),
      (un[149] = un[21] = 1),
      (hn[149] = hn[21] = 1),
      (zr[149] = zr[21] = -1),
      (Vr[149] = Vr[21] = 0),
      (Wr[149] = Wr[21] = 0),
      (en[86] = en[84] = -1),
      (rn[86] = rn[84] = 0),
      (nn[86] = nn[84] = 1),
      (on[86] = on[84] = 0),
      (sn[86] = sn[84] = -1),
      (an[86] = an[84] = 1),
      (Xr[89] = Xr[81] = 0),
      (Yr[89] = Yr[81] = -1),
      (Hr[89] = Hr[81] = 0),
      (Zr[89] = Zr[81] = 1),
      (Kr[89] = Kr[81] = 0),
      (tn[89] = tn[81] = 1),
      (Xr[96] = Xr[74] = 0),
      (Yr[96] = Yr[74] = 1),
      (Hr[96] = Hr[74] = 0),
      (Jr[96] = Jr[74] = -1),
      ($r[96] = $r[74] = 0),
      (Qr[96] = Qr[74] = 1),
      (on[96] = on[74] = 1),
      (sn[96] = sn[74] = 0),
      (an[96] = an[74] = 0),
      (Br[96] = Br[74] = 1),
      (kr[96] = kr[74] = 0),
      (qr[96] = qr[74] = 1),
      (Xr[24] = Xr[146] = 0),
      (Yr[24] = Yr[146] = -1),
      (Hr[24] = Hr[146] = 1),
      (en[24] = en[146] = 1),
      (rn[24] = rn[146] = 0),
      (nn[24] = nn[146] = 1),
      (Zr[24] = Zr[146] = 0),
      (Kr[24] = Kr[146] = 1),
      (tn[24] = tn[146] = 1),
      (zr[24] = zr[146] = 0),
      (Vr[24] = Vr[146] = -1),
      (Wr[24] = Wr[146] = 0),
      (Jr[6] = Jr[164] = -1),
      ($r[6] = $r[164] = 0),
      (Qr[6] = Qr[164] = 1),
      (en[6] = en[164] = -1),
      (rn[6] = rn[164] = 0),
      (nn[6] = nn[164] = 0),
      (ln[6] = ln[164] = 0),
      (un[6] = un[164] = -1),
      (hn[6] = hn[164] = 1),
      (on[6] = on[164] = 1),
      (sn[6] = sn[164] = 0),
      (an[6] = an[164] = 0),
      (Zr[129] = Zr[41] = 0),
      (Kr[129] = Kr[41] = 1),
      (tn[129] = tn[41] = 1),
      (ln[129] = ln[41] = 0),
      (un[129] = un[41] = 1),
      (hn[129] = hn[41] = 0),
      (Br[129] = Br[41] = -1),
      (kr[129] = kr[41] = 0),
      (qr[129] = qr[41] = 0),
      (zr[129] = zr[41] = 0),
      (Vr[129] = Vr[41] = -1),
      (Wr[129] = Wr[41] = 0),
      (en[66] = en[104] = 0),
      (rn[66] = rn[104] = 1),
      (nn[66] = nn[104] = 0),
      (Zr[66] = Zr[104] = -1),
      (Kr[66] = Kr[104] = 0),
      (tn[66] = tn[104] = 1),
      (on[66] = on[104] = 0),
      (sn[66] = sn[104] = -1),
      (an[66] = an[104] = 0),
      (Br[66] = Br[104] = 0),
      (kr[66] = kr[104] = -1),
      (qr[66] = qr[104] = 1),
      (Xr[144] = Xr[26] = -1),
      (Yr[144] = Yr[26] = 0),
      (Hr[144] = Hr[26] = 0),
      (ln[144] = ln[26] = 1),
      (un[144] = un[26] = 0),
      (hn[144] = hn[26] = 1),
      (on[144] = on[26] = 0),
      (sn[144] = sn[26] = 1),
      (an[144] = an[26] = 1),
      (zr[144] = zr[26] = -1),
      (Vr[144] = Vr[26] = 0),
      (Wr[144] = Wr[26] = 1),
      (Jr[36] = Jr[134] = 0),
      ($r[36] = $r[134] = 1),
      (Qr[36] = Qr[134] = 1),
      (en[36] = en[134] = 0),
      (rn[36] = rn[134] = 1),
      (nn[36] = nn[134] = 0),
      (Br[36] = Br[134] = 0),
      (kr[36] = kr[134] = -1),
      (qr[36] = qr[134] = 1),
      (zr[36] = zr[134] = 1),
      (Vr[36] = Vr[134] = 0),
      (Wr[36] = Wr[134] = 0),
      (Xr[9] = Xr[161] = -1),
      (Yr[9] = Yr[161] = 0),
      (Hr[9] = Hr[161] = 0),
      (Jr[9] = Jr[161] = 0),
      ($r[9] = $r[161] = -1),
      (Qr[9] = Qr[161] = 0),
      (Zr[9] = Zr[161] = 1),
      (Kr[9] = Kr[161] = 0),
      (tn[9] = tn[161] = 0),
      (ln[9] = ln[161] = 1),
      (un[9] = un[161] = 0),
      (hn[9] = hn[161] = 1),
      (Xr[136] = 0),
      (Yr[136] = 1),
      (Hr[136] = 1),
      (Jr[136] = 0),
      ($r[136] = 1),
      (Qr[136] = 0),
      (en[136] = -1),
      (rn[136] = 0),
      (nn[136] = 1),
      (Zr[136] = -1),
      (Kr[136] = 0),
      (tn[136] = 0),
      (ln[136] = 0),
      (un[136] = -1),
      (hn[136] = 0),
      (on[136] = 0),
      (sn[136] = -1),
      (an[136] = 1),
      (Br[136] = 1),
      (kr[136] = 0),
      (qr[136] = 0),
      (zr[136] = 1),
      (Vr[136] = 0),
      (Wr[136] = 1),
      (Xr[34] = 0),
      (Yr[34] = -1),
      (Hr[34] = 0),
      (Jr[34] = 0),
      ($r[34] = -1),
      (Qr[34] = 1),
      (en[34] = 1),
      (rn[34] = 0),
      (nn[34] = 0),
      (Zr[34] = 1),
      (Kr[34] = 0),
      (tn[34] = 1),
      (ln[34] = 0),
      (un[34] = 1),
      (hn[34] = 1),
      (on[34] = 0),
      (sn[34] = 1),
      (an[34] = 0),
      (Br[34] = -1),
      (kr[34] = 0),
      (qr[34] = 1),
      (zr[34] = -1),
      (Vr[34] = 0),
      (Wr[34] = 0),
      (Xr[35] = 0),
      (Yr[35] = 1),
      (Hr[35] = 1),
      (Jr[35] = 0),
      ($r[35] = -1),
      (Qr[35] = 1),
      (en[35] = 1),
      (rn[35] = 0),
      (nn[35] = 0),
      (Zr[35] = -1),
      (Kr[35] = 0),
      (tn[35] = 0),
      (ln[35] = 0),
      (un[35] = -1),
      (hn[35] = 0),
      (on[35] = 0),
      (sn[35] = 1),
      (an[35] = 0),
      (Br[35] = -1),
      (kr[35] = 0),
      (qr[35] = 1),
      (zr[35] = 1),
      (Vr[35] = 0),
      (Wr[35] = 1),
      (Xr[153] = 0),
      (Yr[153] = 1),
      (Hr[153] = 1),
      (Zr[153] = -1),
      (Kr[153] = 0),
      (tn[153] = 0),
      (ln[153] = 0),
      (un[153] = -1),
      (hn[153] = 0),
      (zr[153] = 1),
      (Vr[153] = 0),
      (Wr[153] = 1),
      (Jr[102] = 0),
      ($r[102] = -1),
      (Qr[102] = 1),
      (en[102] = 1),
      (rn[102] = 0),
      (nn[102] = 0),
      (on[102] = 0),
      (sn[102] = 1),
      (an[102] = 0),
      (Br[102] = -1),
      (kr[102] = 0),
      (qr[102] = 1),
      (Xr[155] = 0),
      (Yr[155] = -1),
      (Hr[155] = 0),
      (Zr[155] = 1),
      (Kr[155] = 0),
      (tn[155] = 1),
      (ln[155] = 0),
      (un[155] = 1),
      (hn[155] = 1),
      (zr[155] = -1),
      (Vr[155] = 0),
      (Wr[155] = 0),
      (Jr[103] = 0),
      ($r[103] = 1),
      (Qr[103] = 0),
      (en[103] = -1),
      (rn[103] = 0),
      (nn[103] = 1),
      (on[103] = 0),
      (sn[103] = -1),
      (an[103] = 1),
      (Br[103] = 1),
      (kr[103] = 0),
      (qr[103] = 0),
      (Xr[152] = 0),
      (Yr[152] = 1),
      (Hr[152] = 1),
      (en[152] = -1),
      (rn[152] = 0),
      (nn[152] = 1),
      (Zr[152] = -1),
      (Kr[152] = 0),
      (tn[152] = 0),
      (ln[152] = 0),
      (un[152] = -1),
      (hn[152] = 0),
      (on[152] = 0),
      (sn[152] = -1),
      (an[152] = 1),
      (zr[152] = 1),
      (Vr[152] = 0),
      (Wr[152] = 1),
      (Xr[156] = 0),
      (Yr[156] = -1),
      (Hr[156] = 1),
      (en[156] = 1),
      (rn[156] = 0),
      (nn[156] = 1),
      (Zr[156] = -1),
      (Kr[156] = 0),
      (tn[156] = 0),
      (ln[156] = 0),
      (un[156] = -1),
      (hn[156] = 0),
      (on[156] = 0),
      (sn[156] = 1),
      (an[156] = 1),
      (zr[156] = -1),
      (Vr[156] = 0),
      (Wr[156] = 1),
      (Xr[137] = 0),
      (Yr[137] = 1),
      (Hr[137] = 1),
      (Jr[137] = 0),
      ($r[137] = 1),
      (Qr[137] = 0),
      (Zr[137] = -1),
      (Kr[137] = 0),
      (tn[137] = 0),
      (ln[137] = 0),
      (un[137] = -1),
      (hn[137] = 0),
      (Br[137] = 1),
      (kr[137] = 0),
      (qr[137] = 0),
      (zr[137] = 1),
      (Vr[137] = 0),
      (Wr[137] = 1),
      (Xr[139] = 0),
      (Yr[139] = 1),
      (Hr[139] = 1),
      (Jr[139] = 0),
      ($r[139] = -1),
      (Qr[139] = 0),
      (Zr[139] = 1),
      (Kr[139] = 0),
      (tn[139] = 0),
      (ln[139] = 0),
      (un[139] = 1),
      (hn[139] = 0),
      (Br[139] = -1),
      (kr[139] = 0),
      (qr[139] = 0),
      (zr[139] = 1),
      (Vr[139] = 0),
      (Wr[139] = 1),
      (Xr[98] = 0),
      (Yr[98] = -1),
      (Hr[98] = 0),
      (Jr[98] = 0),
      ($r[98] = -1),
      (Qr[98] = 1),
      (en[98] = 1),
      (rn[98] = 0),
      (nn[98] = 0),
      (Zr[98] = 1),
      (Kr[98] = 0),
      (tn[98] = 1),
      (on[98] = 0),
      (sn[98] = 1),
      (an[98] = 0),
      (Br[98] = -1),
      (kr[98] = 0),
      (qr[98] = 1),
      (Xr[99] = 0),
      (Yr[99] = 1),
      (Hr[99] = 0),
      (Jr[99] = 0),
      ($r[99] = -1),
      (Qr[99] = 1),
      (en[99] = 1),
      (rn[99] = 0),
      (nn[99] = 0),
      (Zr[99] = -1),
      (Kr[99] = 0),
      (tn[99] = 1),
      (on[99] = 0),
      (sn[99] = -1),
      (an[99] = 0),
      (Br[99] = 1),
      (kr[99] = 0),
      (qr[99] = 1),
      (Jr[38] = 0),
      ($r[38] = -1),
      (Qr[38] = 1),
      (en[38] = 1),
      (rn[38] = 0),
      (nn[38] = 0),
      (ln[38] = 0),
      (un[38] = 1),
      (hn[38] = 1),
      (on[38] = 0),
      (sn[38] = 1),
      (an[38] = 0),
      (Br[38] = -1),
      (kr[38] = 0),
      (qr[38] = 1),
      (zr[38] = -1),
      (Vr[38] = 0),
      (Wr[38] = 0),
      (Jr[39] = 0),
      ($r[39] = 1),
      (Qr[39] = 1),
      (en[39] = -1),
      (rn[39] = 0),
      (nn[39] = 0),
      (ln[39] = 0),
      (un[39] = -1),
      (hn[39] = 1),
      (on[39] = 0),
      (sn[39] = 1),
      (an[39] = 0),
      (Br[39] = -1),
      (kr[39] = 0),
      (qr[39] = 1),
      (zr[39] = 1),
      (Vr[39] = 0),
      (Wr[39] = 0);
    var cn = function(t) {
        return [
          [t.bottomleft, 0],
          [0, 0],
          [0, t.leftbottom]
        ];
      },
      pn = function(t) {
        return [
          [1, t.rightbottom],
          [1, 0],
          [t.bottomright, 0]
        ];
      },
      fn = function(t) {
        return [
          [t.topright, 1],
          [1, 1],
          [1, t.righttop]
        ];
      },
      dn = function(t) {
        return [
          [0, t.lefttop],
          [0, 1],
          [t.topleft, 1]
        ];
      },
      yn = function(t) {
        return [
          [t.bottomright, 0],
          [t.bottomleft, 0],
          [0, t.leftbottom],
          [0, t.lefttop]
        ];
      },
      gn = function(t) {
        return [
          [t.bottomright, 0],
          [t.bottomleft, 0],
          [1, t.righttop],
          [1, t.rightbottom]
        ];
      },
      mn = function(t) {
        return [
          [1, t.righttop],
          [1, t.rightbottom],
          [t.topleft, 1],
          [t.topright, 1]
        ];
      },
      vn = function(t) {
        return [
          [0, t.leftbottom],
          [0, t.lefttop],
          [t.topleft, 1],
          [t.topright, 1]
        ];
      },
      _n = [],
      xn = [],
      bn = [],
      Sn = [],
      In = [],
      wn = [],
      Nn = [],
      Cn = [];
    (Sn[1] = In[1] = 18),
      (Sn[169] = In[169] = 18),
      (bn[4] = xn[4] = 12),
      (bn[166] = xn[166] = 12),
      (_n[16] = Cn[16] = 4),
      (_n[154] = Cn[154] = 4),
      (wn[64] = Nn[64] = 22),
      (wn[106] = Nn[106] = 22),
      (bn[2] = wn[2] = 17),
      (Sn[2] = In[2] = 18),
      (bn[168] = wn[168] = 17),
      (Sn[168] = In[168] = 18),
      (_n[8] = Sn[8] = 9),
      (xn[8] = bn[8] = 12),
      (_n[162] = Sn[162] = 9),
      (xn[162] = bn[162] = 12),
      (_n[32] = Cn[32] = 4),
      (xn[32] = Nn[32] = 1),
      (_n[138] = Cn[138] = 4),
      (xn[138] = Nn[138] = 1),
      (In[128] = Cn[128] = 21),
      (wn[128] = Nn[128] = 22),
      (In[42] = Cn[42] = 21),
      (wn[42] = Nn[42] = 22),
      (xn[5] = In[5] = 14),
      (xn[165] = In[165] = 14),
      (bn[20] = Cn[20] = 6),
      (bn[150] = Cn[150] = 6),
      (_n[80] = wn[80] = 11),
      (_n[90] = wn[90] = 11),
      (Sn[65] = Nn[65] = 3),
      (Sn[105] = Nn[105] = 3),
      (_n[160] = wn[160] = 11),
      (xn[160] = In[160] = 14),
      (_n[10] = wn[10] = 11),
      (xn[10] = In[10] = 14),
      (bn[130] = Cn[130] = 6),
      (Sn[130] = Nn[130] = 3),
      (bn[40] = Cn[40] = 6),
      (Sn[40] = Nn[40] = 3),
      (xn[101] = Nn[101] = 1),
      (xn[69] = Nn[69] = 1),
      (In[149] = Cn[149] = 21),
      (In[21] = Cn[21] = 21),
      (bn[86] = wn[86] = 17),
      (bn[84] = wn[84] = 17),
      (_n[89] = Sn[89] = 9),
      (_n[81] = Sn[81] = 9),
      (_n[96] = Nn[96] = 0),
      (xn[96] = wn[96] = 15),
      (_n[74] = Nn[74] = 0),
      (xn[74] = wn[74] = 15),
      (_n[24] = bn[24] = 8),
      (Sn[24] = Cn[24] = 7),
      (_n[146] = bn[146] = 8),
      (Sn[146] = Cn[146] = 7),
      (xn[6] = wn[6] = 15),
      (bn[6] = In[6] = 16),
      (xn[164] = wn[164] = 15),
      (bn[164] = In[164] = 16),
      (Sn[129] = Cn[129] = 7),
      (In[129] = Nn[129] = 20),
      (Sn[41] = Cn[41] = 7),
      (In[41] = Nn[41] = 20),
      (bn[66] = Nn[66] = 2),
      (Sn[66] = wn[66] = 19),
      (bn[104] = Nn[104] = 2),
      (Sn[104] = wn[104] = 19),
      (_n[144] = In[144] = 10),
      (wn[144] = Cn[144] = 23),
      (_n[26] = In[26] = 10),
      (wn[26] = Cn[26] = 23),
      (xn[36] = Cn[36] = 5),
      (bn[36] = Nn[36] = 2),
      (xn[134] = Cn[134] = 5),
      (bn[134] = Nn[134] = 2),
      (_n[9] = In[9] = 10),
      (xn[9] = Sn[9] = 13),
      (_n[161] = In[161] = 10),
      (xn[161] = Sn[161] = 13),
      (xn[37] = Cn[37] = 5),
      (In[37] = Nn[37] = 20),
      (xn[133] = Cn[133] = 5),
      (In[133] = Nn[133] = 20),
      (bn[148] = In[148] = 16),
      (wn[148] = Cn[148] = 23),
      (bn[22] = In[22] = 16),
      (wn[22] = Cn[22] = 23),
      (_n[82] = bn[82] = 8),
      (Sn[82] = wn[82] = 19),
      (_n[88] = bn[88] = 8),
      (Sn[88] = wn[88] = 19),
      (_n[73] = Nn[73] = 0),
      (xn[73] = Sn[73] = 13),
      (_n[97] = Nn[97] = 0),
      (xn[97] = Sn[97] = 13),
      (_n[145] = Sn[145] = 9),
      (In[145] = Cn[145] = 21),
      (_n[25] = Sn[25] = 9),
      (In[25] = Cn[25] = 21),
      (xn[70] = Nn[70] = 1),
      (bn[70] = wn[70] = 17),
      (xn[100] = Nn[100] = 1),
      (bn[100] = wn[100] = 17),
      (_n[34] = Sn[34] = 9),
      (xn[34] = bn[34] = 12),
      (In[34] = Cn[34] = 21),
      (wn[34] = Nn[34] = 22),
      (_n[136] = Cn[136] = 4),
      (xn[136] = Nn[136] = 1),
      (bn[136] = wn[136] = 17),
      (Sn[136] = In[136] = 18),
      (_n[35] = Cn[35] = 4),
      (xn[35] = bn[35] = 12),
      (Sn[35] = In[35] = 18),
      (wn[35] = Nn[35] = 22),
      (_n[153] = Cn[153] = 4),
      (Sn[153] = In[153] = 18),
      (xn[102] = bn[102] = 12),
      (wn[102] = Nn[102] = 22),
      (_n[155] = Sn[155] = 9),
      (In[155] = Cn[155] = 23),
      (xn[103] = Nn[103] = 1),
      (bn[103] = wn[103] = 17),
      (_n[152] = Cn[152] = 4),
      (bn[152] = wn[152] = 17),
      (Sn[152] = In[152] = 18),
      (_n[156] = bn[156] = 8),
      (Sn[156] = In[156] = 18),
      (wn[156] = Cn[156] = 23),
      (_n[137] = Cn[137] = 4),
      (xn[137] = Nn[137] = 1),
      (Sn[137] = In[137] = 18),
      (_n[139] = Cn[139] = 4),
      (xn[139] = Sn[139] = 13),
      (In[139] = Nn[139] = 20),
      (_n[98] = Sn[98] = 9),
      (xn[98] = bn[98] = 12),
      (wn[98] = Nn[98] = 22),
      (_n[99] = Nn[99] = 0),
      (xn[99] = bn[99] = 12),
      (Sn[99] = wn[99] = 19),
      (xn[38] = bn[38] = 12),
      (In[38] = Cn[38] = 21),
      (wn[38] = Nn[38] = 22),
      (xn[39] = Cn[39] = 5),
      (bn[39] = In[39] = 16),
      (wn[39] = Nn[39] = 22);
    var En = [];
    function Mn(t, e, r) {
      var n,
        i = e[0] - t[0],
        o = e[1] - t[1],
        s = r[0] - e[0];
      return ((n = i * (r[1] - e[1]) - s * o) > 0) - (n < 0) || +n;
    }
    function Pn(t, e) {
      return e.geometry.coordinates[0].every(function(e) {
        return Sr(ar(e), t);
      });
    }
    (En[1] = En[169] = cn),
      (En[4] = En[166] = pn),
      (En[16] = En[154] = fn),
      (En[64] = En[106] = dn),
      (En[168] = En[2] = yn),
      (En[162] = En[8] = gn),
      (En[138] = En[32] = mn),
      (En[42] = En[128] = vn),
      (En[5] = En[165] = function(t) {
        return [
          [0, 0],
          [0, t.leftbottom],
          [1, t.rightbottom],
          [1, 0]
        ];
      }),
      (En[20] = En[150] = function(t) {
        return [
          [1, 0],
          [t.bottomright, 0],
          [t.topright, 1],
          [1, 1]
        ];
      }),
      (En[80] = En[90] = function(t) {
        return [
          [1, 1],
          [1, t.righttop],
          [0, t.lefttop],
          [0, 1]
        ];
      }),
      (En[65] = En[105] = function(t) {
        return [
          [t.bottomleft, 0],
          [0, 0],
          [0, 1],
          [t.topleft, 1]
        ];
      }),
      (En[160] = En[10] = function(t) {
        return [
          [1, t.righttop],
          [1, t.rightbottom],
          [0, t.leftbottom],
          [0, t.lefttop]
        ];
      }),
      (En[130] = En[40] = function(t) {
        return [
          [t.topleft, 1],
          [t.topright, 1],
          [t.bottomright, 0],
          [t.bottomleft, 0]
        ];
      }),
      (En[85] = function() {
        return [
          [0, 0],
          [0, 1],
          [1, 1],
          [1, 0]
        ];
      }),
      (En[101] = En[69] = function(t) {
        return [
          [1, t.rightbottom],
          [1, 0],
          [0, 0],
          [0, 1],
          [t.topleft, 1]
        ];
      }),
      (En[149] = En[21] = function(t) {
        return [
          [t.topright, 1],
          [1, 1],
          [1, 0],
          [0, 0],
          [0, t.leftbottom]
        ];
      }),
      (En[86] = En[84] = function(t) {
        return [
          [1, 0],
          [t.bottomright, 0],
          [0, t.lefttop],
          [0, 1],
          [1, 1]
        ];
      }),
      (En[89] = En[81] = function(t) {
        return [
          [1, 1],
          [1, t.righttop],
          [t.bottomleft, 0],
          [0, 0],
          [0, 1]
        ];
      }),
      (En[96] = En[74] = function(t) {
        return [
          [1, t.righttop],
          [1, t.rightbottom],
          [0, t.lefttop],
          [0, 1],
          [t.topleft, 1]
        ];
      }),
      (En[24] = En[146] = function(t) {
        return [
          [1, 1],
          [1, t.righttop],
          [t.bottomright, 0],
          [t.bottomleft, 0],
          [t.topright, 1]
        ];
      }),
      (En[6] = En[164] = function(t) {
        return [
          [1, t.rightbottom],
          [1, 0],
          [t.bottomright, 0],
          [0, t.leftbottom],
          [0, t.lefttop]
        ];
      }),
      (En[129] = En[41] = function(t) {
        return [
          [t.topright, 1],
          [t.bottomleft, 0],
          [0, 0],
          [0, t.leftbottom],
          [t.topleft, 1]
        ];
      }),
      (En[66] = En[104] = function(t) {
        return [
          [t.bottomright, 0],
          [t.bottomleft, 0],
          [0, t.lefttop],
          [0, 1],
          [t.topleft, 1]
        ];
      }),
      (En[144] = En[26] = function(t) {
        return [
          [1, 1],
          [1, t.righttop],
          [0, t.leftbottom],
          [0, t.lefttop],
          [t.topright, 1]
        ];
      }),
      (En[36] = En[134] = function(t) {
        return [
          [1, t.rightbottom],
          [1, 0],
          [t.bottomright, 0],
          [t.topleft, 1],
          [t.topright, 1]
        ];
      }),
      (En[9] = En[161] = function(t) {
        return [
          [1, t.righttop],
          [1, t.rightbottom],
          [t.bottomleft, 0],
          [0, 0],
          [0, t.leftbottom]
        ];
      }),
      (En[37] = En[133] = function(t) {
        return [
          [1, t.rightbottom],
          [1, 0],
          [0, 0],
          [0, t.leftbottom],
          [t.topleft, 1],
          [t.topright, 1]
        ];
      }),
      (En[148] = En[22] = function(t) {
        return [
          [1, 1],
          [1, 0],
          [t.bottomright, 0],
          [0, t.leftbottom],
          [0, t.lefttop],
          [t.topright, 1]
        ];
      }),
      (En[82] = En[88] = function(t) {
        return [
          [1, 1],
          [1, t.righttop],
          [t.bottomright, 0],
          [t.bottomleft, 0],
          [0, t.lefttop],
          [0, 1]
        ];
      }),
      (En[73] = En[97] = function(t) {
        return [
          [1, t.righttop],
          [1, t.rightbottom],
          [t.bottomleft, 0],
          [0, 0],
          [0, 1],
          [t.topleft, 1]
        ];
      }),
      (En[145] = En[25] = function(t) {
        return [
          [1, 1],
          [1, t.righttop],
          [t.bottomleft, 0],
          [0, 0],
          [0, t.leftbottom],
          [t.topright, 1]
        ];
      }),
      (En[70] = En[100] = function(t) {
        return [
          [1, t.rightbottom],
          [1, 0],
          [t.bottomright, 0],
          [0, t.lefttop],
          [0, 1],
          [t.topleft, 1]
        ];
      }),
      (En[34] = function(t) {
        return [vn(t), gn(t)];
      }),
      (En[35] = function(t) {
        return [
          [1, t.righttop],
          [1, t.rightbottom],
          [t.bottomright, 0],
          [t.bottomleft, 0],
          [0, t.leftbottom],
          [0, t.lefttop],
          [t.topleft, 1],
          [t.topright, 1]
        ];
      }),
      (En[136] = function(t) {
        return [mn(t), yn(t)];
      }),
      (En[153] = function(t) {
        return [fn(t), cn(t)];
      }),
      (En[102] = function(t) {
        return [pn(t), dn(t)];
      }),
      (En[155] = function(t) {
        return [
          [1, 1],
          [1, t.righttop],
          [t.bottomleft, 0],
          [0, 0],
          [0, t.leftbottom],
          [t.topright, 1]
        ];
      }),
      (En[103] = function(t) {
        return [
          [1, t.rightbottom],
          [1, 0],
          [t.bottomright, 0],
          [0, t.lefttop],
          [0, 1],
          [t.topleft, 1]
        ];
      }),
      (En[152] = function(t) {
        return [fn(t), yn(t)];
      }),
      (En[156] = function(t) {
        return [
          [1, 1],
          [1, t.righttop],
          [t.bottomright, 0],
          [t.bottomleft, 0],
          [0, t.leftbottom],
          [0, t.lefttop],
          [t.topright, 1]
        ];
      }),
      (En[137] = function(t) {
        return [mn(t), cn(t)];
      }),
      (En[139] = function(t) {
        return [
          [1, t.righttop],
          [1, t.rightbottom],
          [t.bottomleft, 0],
          [0, 0],
          [0, t.leftbottom],
          [t.topleft, 1],
          [t.topright, 1]
        ];
      }),
      (En[98] = function(t) {
        return [gn(t), dn(t)];
      }),
      (En[99] = function(t) {
        return [
          [1, t.righttop],
          [1, t.rightbottom],
          [t.bottomright, 0],
          [t.bottomleft, 0],
          [0, t.lefttop],
          [0, 1],
          [t.topleft, 1]
        ];
      }),
      (En[38] = function(t) {
        return [pn(t), vn(t)];
      }),
      (En[39] = function(t) {
        return [
          [1, t.rightbottom],
          [1, 0],
          [t.bottomright, 0],
          [0, t.leftbottom],
          [0, t.lefttop],
          [t.topleft, 1],
          [t.topright, 1]
        ];
      });
    var On = (function() {
      function t(e) {
        (this.id = t.buildId(e)),
          (this.coordinates = e),
          (this.innerEdges = []),
          (this.outerEdges = []),
          (this.outerEdgesSorted = !1);
      }
      return (
        (t.buildId = function(t) {
          return t.join(",");
        }),
        (t.prototype.removeInnerEdge = function(t) {
          this.innerEdges = this.innerEdges.filter(function(e) {
            return e.from.id !== t.from.id;
          });
        }),
        (t.prototype.removeOuterEdge = function(t) {
          this.outerEdges = this.outerEdges.filter(function(e) {
            return e.to.id !== t.to.id;
          });
        }),
        (t.prototype.addOuterEdge = function(t) {
          this.outerEdges.push(t), (this.outerEdgesSorted = !1);
        }),
        (t.prototype.sortOuterEdges = function() {
          var t = this;
          this.outerEdgesSorted ||
            (this.outerEdges.sort(function(e, r) {
              var n = e.to,
                i = r.to;
              if (
                n.coordinates[0] - t.coordinates[0] >= 0 &&
                i.coordinates[0] - t.coordinates[0] < 0
              )
                return 1;
              if (
                n.coordinates[0] - t.coordinates[0] < 0 &&
                i.coordinates[0] - t.coordinates[0] >= 0
              )
                return -1;
              if (
                n.coordinates[0] - t.coordinates[0] == 0 &&
                i.coordinates[0] - t.coordinates[0] == 0
              )
                return n.coordinates[1] - t.coordinates[1] >= 0 ||
                  i.coordinates[1] - t.coordinates[1] >= 0
                  ? n.coordinates[1] - i.coordinates[1]
                  : i.coordinates[1] - n.coordinates[1];
              var o = Mn(t.coordinates, n.coordinates, i.coordinates);
              return o < 0
                ? 1
                : o > 0
                ? -1
                : Math.pow(n.coordinates[0] - t.coordinates[0], 2) +
                  Math.pow(n.coordinates[1] - t.coordinates[1], 2) -
                  (Math.pow(i.coordinates[0] - t.coordinates[0], 2) +
                    Math.pow(i.coordinates[1] - t.coordinates[1], 2));
            }),
            (this.outerEdgesSorted = !0));
        }),
        (t.prototype.getOuterEdges = function() {
          return this.sortOuterEdges(), this.outerEdges;
        }),
        (t.prototype.getOuterEdge = function(t) {
          return this.sortOuterEdges(), this.outerEdges[t];
        }),
        (t.prototype.addInnerEdge = function(t) {
          this.innerEdges.push(t);
        }),
        t
      );
    })();
    const Ln = On,
      Tn = (function() {
        function t(t, e) {
          (this.from = t),
            (this.to = e),
            (this.next = void 0),
            (this.label = void 0),
            (this.symetric = void 0),
            (this.ring = void 0),
            this.from.addOuterEdge(this),
            this.to.addInnerEdge(this);
        }
        return (
          (t.prototype.getSymetric = function() {
            return (
              this.symetric ||
                ((this.symetric = new t(this.to, this.from)),
                (this.symetric.symetric = this)),
              this.symetric
            );
          }),
          (t.prototype.deleteEdge = function() {
            this.from.removeOuterEdge(this), this.to.removeInnerEdge(this);
          }),
          (t.prototype.isEqual = function(t) {
            return this.from.id === t.from.id && this.to.id === t.to.id;
          }),
          (t.prototype.toString = function() {
            return "Edge { " + this.from.id + " -> " + this.to.id + " }";
          }),
          (t.prototype.toLineString = function() {
            return ur([this.from.coordinates, this.to.coordinates]);
          }),
          (t.prototype.compareTo = function(t) {
            return Mn(
              t.from.coordinates,
              t.to.coordinates,
              this.to.coordinates
            );
          }),
          t
        );
      })();
    var An = (function() {
      function t() {
        (this.edges = []), (this.polygon = void 0), (this.envelope = void 0);
      }
      return (
        (t.prototype.push = function(t) {
          this.edges.push(t), (this.polygon = this.envelope = void 0);
        }),
        (t.prototype.get = function(t) {
          return this.edges[t];
        }),
        Object.defineProperty(t.prototype, "length", {
          get: function() {
            return this.edges.length;
          },
          enumerable: !0,
          configurable: !0
        }),
        (t.prototype.forEach = function(t) {
          this.edges.forEach(t);
        }),
        (t.prototype.map = function(t) {
          return this.edges.map(t);
        }),
        (t.prototype.some = function(t) {
          return this.edges.some(t);
        }),
        (t.prototype.isValid = function() {
          return !0;
        }),
        (t.prototype.isHole = function() {
          var t = this,
            e = this.edges.reduce(function(e, r, n) {
              return (
                r.from.coordinates[1] > t.edges[e].from.coordinates[1] &&
                  (e = n),
                e
              );
            }, 0),
            r = (0 === e ? this.length : e) - 1,
            n = (e + 1) % this.length,
            i = Mn(
              this.edges[r].from.coordinates,
              this.edges[e].from.coordinates,
              this.edges[n].from.coordinates
            );
          return 0 === i
            ? this.edges[r].from.coordinates[0] >
                this.edges[n].from.coordinates[0]
            : i > 0;
        }),
        (t.prototype.toMultiPoint = function() {
          return pr(
            this.edges.map(function(t) {
              return t.from.coordinates;
            })
          );
        }),
        (t.prototype.toPolygon = function() {
          if (this.polygon) return this.polygon;
          var t = this.edges.map(function(t) {
            return t.from.coordinates;
          });
          return (
            t.push(this.edges[0].from.coordinates), (this.polygon = lr([t]))
          );
        }),
        (t.prototype.getEnvelope = function() {
          return this.envelope
            ? this.envelope
            : (this.envelope =
                ((t = this.toPolygon()),
                (function(t, e) {
                  void 0 === e && (e = {});
                  var r = Number(t[0]),
                    n = Number(t[1]),
                    i = Number(t[2]),
                    o = Number(t[3]);
                  if (6 === t.length)
                    throw new Error(
                      "@turf/bbox-polygon does not support BBox with 6 positions"
                    );
                  var s = [r, n];
                  return lr([[s, [i, n], [i, o], [r, o], s]], e.properties, {
                    bbox: t,
                    id: e.id
                  });
                })(vr(t))));
          var t;
        }),
        (t.findEdgeRingContaining = function(t, e) {
          var r,
            n,
            i = t.getEnvelope();
          return (
            e.forEach(function(e) {
              var o,
                s,
                a,
                l,
                u,
                h,
                c = e.getEnvelope();
              if (
                (n && (r = n.getEnvelope()),
                (s = i),
                (a = (o = c).geometry.coordinates[0].map(function(t) {
                  return t[0];
                })),
                (l = o.geometry.coordinates[0].map(function(t) {
                  return t[1];
                })),
                (u = s.geometry.coordinates[0].map(function(t) {
                  return t[0];
                })),
                (h = s.geometry.coordinates[0].map(function(t) {
                  return t[1];
                })),
                (Math.max.apply(null, a) !== Math.max.apply(null, u) ||
                  Math.max.apply(null, l) !== Math.max.apply(null, h) ||
                  Math.min.apply(null, a) !== Math.min.apply(null, u) ||
                  Math.min.apply(null, l) !== Math.min.apply(null, h)) &&
                  Pn(c, i))
              ) {
                for (
                  var p = t.map(function(t) {
                      return t.from.coordinates;
                    }),
                    f = void 0,
                    d = function(t) {
                      e.some(function(e) {
                        return (
                          (r = t),
                          (n = e.from.coordinates),
                          r[0] === n[0] && r[1] === n[1]
                        );
                        var r, n;
                      }) || (f = t);
                    },
                    y = 0,
                    g = p;
                  y < g.length;
                  y++
                )
                  d(g[y]);
                f && e.inside(ar(f)) && ((n && !Pn(r, c)) || (n = e));
              }
            }),
            n
          );
        }),
        (t.prototype.inside = function(t) {
          return Sr(t, this.toPolygon());
        }),
        t
      );
    })();
    const Rn = An;
    function Fn(t, e) {
      for (var r = 0; r < t.coordinates.length - 1; r++)
        if (jn(t.coordinates[r], t.coordinates[r + 1], e.coordinates))
          return !0;
      return !1;
    }
    function Dn(t, e) {
      for (var r = 0, n = e.coordinates; r < n.length; r++)
        if (Sr(n[r], t)) return !0;
      return Pr(e, Ur(t)).features.length > 0;
    }
    function jn(t, e, r) {
      var n = r[0] - t[0],
        i = r[1] - t[1],
        o = e[0] - t[0],
        s = e[1] - t[1];
      return (
        0 == n * s - i * o &&
        (Math.abs(o) >= Math.abs(s)
          ? o > 0
            ? t[0] <= r[0] && r[0] <= e[0]
            : e[0] <= r[0] && r[0] <= t[0]
          : s > 0
          ? t[1] <= r[1] && r[1] <= e[1]
          : e[1] <= r[1] && r[1] <= t[1])
      );
    }
    !(function() {
      function t() {
        (this.edges = []), (this.nodes = {});
      }
      (t.fromGeoJson = function(e) {
        !(function(t) {
          if (!t) throw new Error("No geojson passed");
          if (
            "FeatureCollection" !== t.type &&
            "GeometryCollection" !== t.type &&
            "MultiLineString" !== t.type &&
            "LineString" !== t.type &&
            "Feature" !== t.type
          )
            throw new Error(
              "Invalid input type '" +
                t.type +
                "'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature"
            );
        })(e);
        var r = new t();
        return (
          gr(e, function(t) {
            var e, n, i;
            !(function(t, e, r) {
              if (!t) throw new Error("No feature passed");
              if (!t || "Feature" !== t.type || !t.geometry)
                throw new Error(
                  "Invalid input to " + r + ", Feature with geometry required"
                );
              if (!t.geometry || t.geometry.type !== e)
                throw new Error(
                  "Invalid input to " +
                    r +
                    ": must be a " +
                    e +
                    ", given " +
                    t.geometry.type
                );
            })(t, "LineString", "Graph::fromGeoJson"),
              (e = function(t, e) {
                if (t) {
                  var n = r.getNode(t),
                    i = r.getNode(e);
                  r.addEdge(n, i);
                }
                return e;
              }),
              (i = n),
              dr(
                t,
                function(t, r, n, o, s) {
                  i = 0 === r ? t : e(i, t);
                },
                undefined
              );
          }),
          r
        );
      }),
        (t.prototype.getNode = function(t) {
          var e = Ln.buildId(t),
            r = this.nodes[e];
          return r || (r = this.nodes[e] = new Ln(t)), r;
        }),
        (t.prototype.addEdge = function(t, e) {
          var r = new Tn(t, e),
            n = r.getSymetric();
          this.edges.push(r), this.edges.push(n);
        }),
        (t.prototype.deleteDangles = function() {
          var t = this;
          Object.keys(this.nodes)
            .map(function(e) {
              return t.nodes[e];
            })
            .forEach(function(e) {
              return t._removeIfDangle(e);
            });
        }),
        (t.prototype._removeIfDangle = function(t) {
          var e = this;
          if (t.innerEdges.length <= 1) {
            var r = t.getOuterEdges().map(function(t) {
              return t.to;
            });
            this.removeNode(t),
              r.forEach(function(t) {
                return e._removeIfDangle(t);
              });
          }
        }),
        (t.prototype.deleteCutEdges = function() {
          var t = this;
          this._computeNextCWEdges(),
            this._findLabeledEdgeRings(),
            this.edges.forEach(function(e) {
              e.label === e.symetric.label &&
                (t.removeEdge(e.symetric), t.removeEdge(e));
            });
        }),
        (t.prototype._computeNextCWEdges = function(t) {
          var e = this;
          void 0 === t
            ? Object.keys(this.nodes).forEach(function(t) {
                return e._computeNextCWEdges(e.nodes[t]);
              })
            : t.getOuterEdges().forEach(function(e, r) {
                t.getOuterEdge(
                  (0 === r ? t.getOuterEdges().length : r) - 1
                ).symetric.next = e;
              });
        }),
        (t.prototype._computeNextCCWEdges = function(t, e) {
          for (var r, n, i = t.getOuterEdges(), o = i.length - 1; o >= 0; --o) {
            var s = i[o],
              a = s.symetric,
              l = void 0,
              u = void 0;
            s.label === e && (l = s),
              a.label === e && (u = a),
              l &&
                u &&
                (u && (n = u),
                l && (n && ((n.next = l), (n = void 0)), r || (r = l)));
          }
          n && (n.next = r);
        }),
        (t.prototype._findLabeledEdgeRings = function() {
          var t = [],
            e = 0;
          return (
            this.edges.forEach(function(r) {
              if (!(r.label >= 0)) {
                t.push(r);
                var n = r;
                do {
                  (n.label = e), (n = n.next);
                } while (!r.isEqual(n));
                e++;
              }
            }),
            t
          );
        }),
        (t.prototype.getEdgeRings = function() {
          var t = this;
          this._computeNextCWEdges(),
            this.edges.forEach(function(t) {
              t.label = void 0;
            }),
            this._findLabeledEdgeRings().forEach(function(e) {
              t._findIntersectionNodes(e).forEach(function(r) {
                t._computeNextCCWEdges(r, e.label);
              });
            });
          var e = [];
          return (
            this.edges.forEach(function(r) {
              r.ring || e.push(t._findEdgeRing(r));
            }),
            e
          );
        }),
        (t.prototype._findIntersectionNodes = function(t) {
          var e = [],
            r = t,
            n = function() {
              var n = 0;
              r.from.getOuterEdges().forEach(function(e) {
                e.label === t.label && ++n;
              }),
                n > 1 && e.push(r.from),
                (r = r.next);
            };
          do {
            n();
          } while (!t.isEqual(r));
          return e;
        }),
        (t.prototype._findEdgeRing = function(t) {
          var e = t,
            r = new Rn();
          do {
            r.push(e), (e.ring = r), (e = e.next);
          } while (!t.isEqual(e));
          return r;
        }),
        (t.prototype.removeNode = function(t) {
          var e = this;
          t.getOuterEdges().forEach(function(t) {
            return e.removeEdge(t);
          }),
            t.innerEdges.forEach(function(t) {
              return e.removeEdge(t);
            }),
            delete this.nodes[t.id];
        }),
        (t.prototype.removeEdge = function(t) {
          (this.edges = this.edges.filter(function(e) {
            return !e.isEqual(t);
          })),
            t.deleteEdge();
        });
    })();
    function Un(t, e) {
      var r = br(t),
        n = br(e),
        i = r.type,
        o = n.type,
        s = r.coordinates,
        a = n.coordinates;
      switch (i) {
        case "Point":
          if ("Point" === o) return Bn(s, a);
          throw new Error("feature2 " + o + " geometry not supported");
        case "MultiPoint":
          switch (o) {
            case "Point":
              return (function(t, e) {
                var r,
                  n = !1;
                for (r = 0; r < t.coordinates.length; r++)
                  if (Bn(t.coordinates[r], e.coordinates)) {
                    n = !0;
                    break;
                  }
                return n;
              })(r, n);
            case "MultiPoint":
              return (function(t, e) {
                for (var r = 0, n = e.coordinates; r < n.length; r++) {
                  for (
                    var i = n[r], o = !1, s = 0, a = t.coordinates;
                    s < a.length;
                    s++
                  )
                    if (Bn(i, a[s])) {
                      o = !0;
                      break;
                    }
                  if (!o) return !1;
                }
                return !0;
              })(r, n);
            default:
              throw new Error("feature2 " + o + " geometry not supported");
          }
        case "LineString":
          switch (o) {
            case "Point":
              return Lr(n, r, { ignoreEndVertices: !0 });
            case "LineString":
              return (function(t, e) {
                for (var r = !1, n = 0, i = e.coordinates; n < i.length; n++) {
                  var o = i[n];
                  if (
                    (Lr({ type: "Point", coordinates: o }, t, {
                      ignoreEndVertices: !0
                    }) && (r = !0),
                    !Lr({ type: "Point", coordinates: o }, t, {
                      ignoreEndVertices: !1
                    }))
                  )
                    return !1;
                }
                return r;
              })(r, n);
            case "MultiPoint":
              return (function(t, e) {
                for (var r = !1, n = 0, i = e.coordinates; n < i.length; n++) {
                  var o = i[n];
                  if (
                    (Lr(o, t, { ignoreEndVertices: !0 }) && (r = !0), !Lr(o, t))
                  )
                    return !1;
                }
                return !!r;
              })(r, n);
            default:
              throw new Error("feature2 " + o + " geometry not supported");
          }
        case "Polygon":
          switch (o) {
            case "Point":
              return Sr(n, r, { ignoreBoundary: !0 });
            case "LineString":
              return (function(t, e) {
                var r,
                  n,
                  i = !1,
                  o = 0;
                if (!Gn(vr(t), vr(e))) return !1;
                for (; o < e.coordinates.length - 1; o++)
                  if (
                    Sr(
                      {
                        type: "Point",
                        coordinates:
                          ((r = e.coordinates[o]),
                          (n = e.coordinates[o + 1]),
                          [(r[0] + n[0]) / 2, (r[1] + n[1]) / 2])
                      },
                      t,
                      { ignoreBoundary: !0 }
                    )
                  ) {
                    i = !0;
                    break;
                  }
                return i;
              })(r, n);
            case "Polygon":
              return (function(t, e) {
                if ("Feature" === t.type && null === t.geometry) return !1;
                if ("Feature" === e.type && null === e.geometry) return !1;
                if (!Gn(vr(t), vr(e))) return !1;
                for (var r = 0, n = br(e).coordinates; r < n.length; r++)
                  for (var i = 0, o = n[r]; i < o.length; i++)
                    if (!Sr(o[i], t)) return !1;
                return !0;
              })(r, n);
            case "MultiPoint":
              return (function(t, e) {
                for (var r = 0, n = e.coordinates; r < n.length; r++)
                  if (!Sr(n[r], t, { ignoreBoundary: !0 })) return !1;
                return !0;
              })(r, n);
            default:
              throw new Error("feature2 " + o + " geometry not supported");
          }
        default:
          throw new Error("feature1 " + i + " geometry not supported");
      }
    }
    function Gn(t, e) {
      return !(t[0] > e[0] || t[2] < e[2] || t[1] > e[1] || t[3] < e[3]);
    }
    function Bn(t, e) {
      return t[0] === e[0] && t[1] === e[1];
    }
    function kn(t) {
      for (var e = t, r = []; e.parent; ) r.unshift(e), (e = e.parent);
      return r;
    }
    r(3847), r(7370), r(9922);
    var qn = {
      search: function(t, e, r, n) {
        t.cleanDirty();
        var i = (n = n || {}).heuristic || qn.heuristics.manhattan,
          o = n.closest || !1,
          s = new Wn(function(t) {
            return t.f;
          }),
          a = e;
        for (e.h = i(e, r), s.push(e); s.size() > 0; ) {
          var l = s.pop();
          if (l === r) return kn(l);
          l.closed = !0;
          for (var u = t.neighbors(l), h = 0, c = u.length; h < c; ++h) {
            var p = u[h];
            if (!p.closed && !p.isWall()) {
              var f = l.g + p.getCost(l),
                d = p.visited;
              (!d || f < p.g) &&
                ((p.visited = !0),
                (p.parent = l),
                (p.h = p.h || i(p, r)),
                (p.g = f),
                (p.f = p.g + p.h),
                t.markDirty(p),
                o && (p.h < a.h || (p.h === a.h && p.g < a.g)) && (a = p),
                d ? s.rescoreElement(p) : s.push(p));
            }
          }
        }
        return o ? kn(a) : [];
      },
      heuristics: {
        manhattan: function(t, e) {
          return Math.abs(e.x - t.x) + Math.abs(e.y - t.y);
        },
        diagonal: function(t, e) {
          var r = Math.sqrt(2),
            n = Math.abs(e.x - t.x),
            i = Math.abs(e.y - t.y);
          return 1 * (n + i) + (r - 2) * Math.min(n, i);
        }
      },
      cleanNode: function(t) {
        (t.f = 0),
          (t.g = 0),
          (t.h = 0),
          (t.visited = !1),
          (t.closed = !1),
          (t.parent = null);
      }
    };
    function zn(t, e) {
      (e = e || {}),
        (this.nodes = []),
        (this.diagonal = !!e.diagonal),
        (this.grid = []);
      for (var r = 0; r < t.length; r++) {
        this.grid[r] = [];
        for (var n = 0, i = t[r]; n < i.length; n++) {
          var o = new Vn(r, n, i[n]);
          (this.grid[r][n] = o), this.nodes.push(o);
        }
      }
      this.init();
    }
    function Vn(t, e, r) {
      (this.x = t), (this.y = e), (this.weight = r);
    }
    function Wn(t) {
      (this.content = []), (this.scoreFunction = t);
    }
    function Xn() {
      this._ = null;
    }
    function Yn(t) {
      t.U = t.C = t.L = t.R = t.P = t.N = null;
    }
    function Hn(t, e) {
      var r = e,
        n = e.R,
        i = r.U;
      i ? (i.L === r ? (i.L = n) : (i.R = n)) : (t._ = n),
        (n.U = i),
        (r.U = n),
        (r.R = n.L),
        r.R && (r.R.U = r),
        (n.L = r);
    }
    function Jn(t, e) {
      var r = e,
        n = e.L,
        i = r.U;
      i ? (i.L === r ? (i.L = n) : (i.R = n)) : (t._ = n),
        (n.U = i),
        (r.U = n),
        (r.L = n.R),
        r.L && (r.L.U = r),
        (n.R = r);
    }
    function $n(t) {
      for (; t.L; ) t = t.L;
      return t;
    }
    (zn.prototype.init = function() {
      this.dirtyNodes = [];
      for (var t = 0; t < this.nodes.length; t++) qn.cleanNode(this.nodes[t]);
    }),
      (zn.prototype.cleanDirty = function() {
        for (var t = 0; t < this.dirtyNodes.length; t++)
          qn.cleanNode(this.dirtyNodes[t]);
        this.dirtyNodes = [];
      }),
      (zn.prototype.markDirty = function(t) {
        this.dirtyNodes.push(t);
      }),
      (zn.prototype.neighbors = function(t) {
        var e = [],
          r = t.x,
          n = t.y,
          i = this.grid;
        return (
          i[r - 1] && i[r - 1][n] && e.push(i[r - 1][n]),
          i[r + 1] && i[r + 1][n] && e.push(i[r + 1][n]),
          i[r] && i[r][n - 1] && e.push(i[r][n - 1]),
          i[r] && i[r][n + 1] && e.push(i[r][n + 1]),
          this.diagonal &&
            (i[r - 1] && i[r - 1][n - 1] && e.push(i[r - 1][n - 1]),
            i[r + 1] && i[r + 1][n - 1] && e.push(i[r + 1][n - 1]),
            i[r - 1] && i[r - 1][n + 1] && e.push(i[r - 1][n + 1]),
            i[r + 1] && i[r + 1][n + 1] && e.push(i[r + 1][n + 1])),
          e
        );
      }),
      (zn.prototype.toString = function() {
        for (
          var t, e, r, n, i = [], o = this.grid, s = 0, a = o.length;
          s < a;
          s++
        ) {
          for (t = [], r = 0, n = (e = o[s]).length; r < n; r++)
            t.push(e[r].weight);
          i.push(t.join(" "));
        }
        return i.join("\n");
      }),
      (Vn.prototype.toString = function() {
        return "[" + this.x + " " + this.y + "]";
      }),
      (Vn.prototype.getCost = function(t) {
        return t && t.x !== this.x && t.y !== this.y
          ? 1.41421 * this.weight
          : this.weight;
      }),
      (Vn.prototype.isWall = function() {
        return 0 === this.weight;
      }),
      (Wn.prototype = {
        push: function(t) {
          this.content.push(t), this.sinkDown(this.content.length - 1);
        },
        pop: function() {
          var t = this.content[0],
            e = this.content.pop();
          return (
            this.content.length > 0 &&
              ((this.content[0] = e), this.bubbleUp(0)),
            t
          );
        },
        remove: function(t) {
          var e = this.content.indexOf(t),
            r = this.content.pop();
          e !== this.content.length - 1 &&
            ((this.content[e] = r),
            this.scoreFunction(r) < this.scoreFunction(t)
              ? this.sinkDown(e)
              : this.bubbleUp(e));
        },
        size: function() {
          return this.content.length;
        },
        rescoreElement: function(t) {
          this.sinkDown(this.content.indexOf(t));
        },
        sinkDown: function(t) {
          for (var e = this.content[t]; t > 0; ) {
            var r = ((t + 1) >> 1) - 1,
              n = this.content[r];
            if (!(this.scoreFunction(e) < this.scoreFunction(n))) break;
            (this.content[r] = e), (this.content[t] = n), (t = r);
          }
        },
        bubbleUp: function(t) {
          for (
            var e = this.content.length,
              r = this.content[t],
              n = this.scoreFunction(r);
            ;

          ) {
            var i,
              o = (t + 1) << 1,
              s = o - 1,
              a = null;
            if (s < e) {
              var l = this.content[s];
              (i = this.scoreFunction(l)) < n && (a = s);
            }
            if (o < e) {
              var u = this.content[o];
              this.scoreFunction(u) < (null === a ? n : i) && (a = o);
            }
            if (null === a) break;
            (this.content[t] = this.content[a]), (this.content[a] = r), (t = a);
          }
        }
      }),
      (Xn.prototype = {
        constructor: Xn,
        insert: function(t, e) {
          var r, n, i;
          if (t) {
            if (((e.P = t), (e.N = t.N), t.N && (t.N.P = e), (t.N = e), t.R)) {
              for (t = t.R; t.L; ) t = t.L;
              t.L = e;
            } else t.R = e;
            r = t;
          } else
            this._
              ? ((t = $n(this._)),
                (e.P = null),
                (e.N = t),
                (t.P = t.L = e),
                (r = t))
              : ((e.P = e.N = null), (this._ = e), (r = null));
          for (e.L = e.R = null, e.U = r, e.C = !0, t = e; r && r.C; )
            r === (n = r.U).L
              ? (i = n.R) && i.C
                ? ((r.C = i.C = !1), (n.C = !0), (t = n))
                : (t === r.R && (Hn(this, r), (r = (t = r).U)),
                  (r.C = !1),
                  (n.C = !0),
                  Jn(this, n))
              : (i = n.L) && i.C
              ? ((r.C = i.C = !1), (n.C = !0), (t = n))
              : (t === r.L && (Jn(this, r), (r = (t = r).U)),
                (r.C = !1),
                (n.C = !0),
                Hn(this, n)),
              (r = t.U);
          this._.C = !1;
        },
        remove: function(t) {
          t.N && (t.N.P = t.P), t.P && (t.P.N = t.N), (t.N = t.P = null);
          var e,
            r,
            n,
            i = t.U,
            o = t.L,
            s = t.R;
          if (
            ((r = o ? (s ? $n(s) : o) : s),
            i ? (i.L === t ? (i.L = r) : (i.R = r)) : (this._ = r),
            o && s
              ? ((n = r.C),
                (r.C = t.C),
                (r.L = o),
                (o.U = r),
                r !== s
                  ? ((i = r.U),
                    (r.U = t.U),
                    (t = r.R),
                    (i.L = t),
                    (r.R = s),
                    (s.U = r))
                  : ((r.U = i), (i = r), (t = r.R)))
              : ((n = t.C), (t = r)),
            t && (t.U = i),
            !n)
          )
            if (t && t.C) t.C = !1;
            else {
              do {
                if (t === this._) break;
                if (t === i.L) {
                  if (
                    ((e = i.R).C &&
                      ((e.C = !1), (i.C = !0), Hn(this, i), (e = i.R)),
                    (e.L && e.L.C) || (e.R && e.R.C))
                  ) {
                    (e.R && e.R.C) ||
                      ((e.L.C = !1), (e.C = !0), Jn(this, e), (e = i.R)),
                      (e.C = i.C),
                      (i.C = e.R.C = !1),
                      Hn(this, i),
                      (t = this._);
                    break;
                  }
                } else if (
                  ((e = i.L).C &&
                    ((e.C = !1), (i.C = !0), Jn(this, i), (e = i.L)),
                  (e.L && e.L.C) || (e.R && e.R.C))
                ) {
                  (e.L && e.L.C) ||
                    ((e.R.C = !1), (e.C = !0), Hn(this, e), (e = i.L)),
                    (e.C = i.C),
                    (i.C = e.L.C = !1),
                    Jn(this, i),
                    (t = this._);
                  break;
                }
                (e.C = !0), (t = i), (i = i.U);
              } while (!t.C);
              t && (t.C = !1);
            }
        }
      });
    const Qn = Xn;
    function Zn(t, e, r, n) {
      var i = [null, null],
        o = Si.push(i) - 1;
      return (
        (i.left = t),
        (i.right = e),
        r && ti(i, t, e, r),
        n && ti(i, e, t, n),
        xi[t.index].halfedges.push(o),
        xi[e.index].halfedges.push(o),
        i
      );
    }
    function Kn(t, e, r) {
      var n = [e, r];
      return (n.left = t), n;
    }
    function ti(t, e, r, n) {
      t[0] || t[1]
        ? t.left === r
          ? (t[1] = n)
          : (t[0] = n)
        : ((t[0] = n), (t.left = e), (t.right = r));
    }
    function ei(t, e, r, n, i) {
      var o,
        s = t[0],
        a = t[1],
        l = s[0],
        u = s[1],
        h = 0,
        c = 1,
        p = a[0] - l,
        f = a[1] - u;
      if (((o = e - l), p || !(o > 0))) {
        if (((o /= p), p < 0)) {
          if (o < h) return;
          o < c && (c = o);
        } else if (p > 0) {
          if (o > c) return;
          o > h && (h = o);
        }
        if (((o = n - l), p || !(o < 0))) {
          if (((o /= p), p < 0)) {
            if (o > c) return;
            o > h && (h = o);
          } else if (p > 0) {
            if (o < h) return;
            o < c && (c = o);
          }
          if (((o = r - u), f || !(o > 0))) {
            if (((o /= f), f < 0)) {
              if (o < h) return;
              o < c && (c = o);
            } else if (f > 0) {
              if (o > c) return;
              o > h && (h = o);
            }
            if (((o = i - u), f || !(o < 0))) {
              if (((o /= f), f < 0)) {
                if (o > c) return;
                o > h && (h = o);
              } else if (f > 0) {
                if (o < h) return;
                o < c && (c = o);
              }
              return (
                !(h > 0 || c < 1) ||
                (h > 0 && (t[0] = [l + h * p, u + h * f]),
                c < 1 && (t[1] = [l + c * p, u + c * f]),
                !0)
              );
            }
          }
        }
      }
    }
    function ri(t, e, r, n, i) {
      var o = t[1];
      if (o) return !0;
      var s,
        a,
        l = t[0],
        u = t.left,
        h = t.right,
        c = u[0],
        p = u[1],
        f = h[0],
        d = h[1],
        y = (c + f) / 2,
        g = (p + d) / 2;
      if (d === p) {
        if (y < e || y >= n) return;
        if (c > f) {
          if (l) {
            if (l[1] >= i) return;
          } else l = [y, r];
          o = [y, i];
        } else {
          if (l) {
            if (l[1] < r) return;
          } else l = [y, i];
          o = [y, r];
        }
      } else if (((a = g - (s = (c - f) / (d - p)) * y), s < -1 || s > 1))
        if (c > f) {
          if (l) {
            if (l[1] >= i) return;
          } else l = [(r - a) / s, r];
          o = [(i - a) / s, i];
        } else {
          if (l) {
            if (l[1] < r) return;
          } else l = [(i - a) / s, i];
          o = [(r - a) / s, r];
        }
      else if (p < d) {
        if (l) {
          if (l[0] >= n) return;
        } else l = [e, s * e + a];
        o = [n, s * n + a];
      } else {
        if (l) {
          if (l[0] < e) return;
        } else l = [n, s * n + a];
        o = [e, s * e + a];
      }
      return (t[0] = l), (t[1] = o), !0;
    }
    function ni(t, e) {
      var r = t.site,
        n = e.left,
        i = e.right;
      return (
        r === i && ((i = n), (n = r)),
        i
          ? Math.atan2(i[1] - n[1], i[0] - n[0])
          : (r === n ? ((n = e[1]), (i = e[0])) : ((n = e[0]), (i = e[1])),
            Math.atan2(n[0] - i[0], i[1] - n[1]))
      );
    }
    function ii(t, e) {
      return e[+(e.left !== t.site)];
    }
    function oi(t, e) {
      return e[+(e.left === t.site)];
    }
    var si,
      ai = [];
    function li() {
      Yn(this), (this.x = this.y = this.arc = this.site = this.cy = null);
    }
    function ui(t) {
      var e = t.P,
        r = t.N;
      if (e && r) {
        var n = e.site,
          i = t.site,
          o = r.site;
        if (n !== o) {
          var s = i[0],
            a = i[1],
            l = n[0] - s,
            u = n[1] - a,
            h = o[0] - s,
            c = o[1] - a,
            p = 2 * (l * c - u * h);
          if (!(p >= -wi)) {
            var f = l * l + u * u,
              d = h * h + c * c,
              y = (c * f - u * d) / p,
              g = (l * d - h * f) / p,
              m = ai.pop() || new li();
            (m.arc = t),
              (m.site = i),
              (m.x = y + s),
              (m.y = (m.cy = g + a) + Math.sqrt(y * y + g * g)),
              (t.circle = m);
            for (var v = null, _ = bi._; _; )
              if (m.y < _.y || (m.y === _.y && m.x <= _.x)) {
                if (!_.L) {
                  v = _.P;
                  break;
                }
                _ = _.L;
              } else {
                if (!_.R) {
                  v = _;
                  break;
                }
                _ = _.R;
              }
            bi.insert(v, m), v || (si = m);
          }
        }
      }
    }
    function hi(t) {
      var e = t.circle;
      e &&
        (e.P || (si = e.N), bi.remove(e), ai.push(e), Yn(e), (t.circle = null));
    }
    var ci = [];
    function pi() {
      Yn(this), (this.edge = this.site = this.circle = null);
    }
    function fi(t) {
      var e = ci.pop() || new pi();
      return (e.site = t), e;
    }
    function di(t) {
      hi(t), _i.remove(t), ci.push(t), Yn(t);
    }
    function yi(t) {
      var e = t.circle,
        r = e.x,
        n = e.cy,
        i = [r, n],
        o = t.P,
        s = t.N,
        a = [t];
      di(t);
      for (
        var l = o;
        l.circle &&
        Math.abs(r - l.circle.x) < Ii &&
        Math.abs(n - l.circle.cy) < Ii;

      )
        (o = l.P), a.unshift(l), di(l), (l = o);
      a.unshift(l), hi(l);
      for (
        var u = s;
        u.circle &&
        Math.abs(r - u.circle.x) < Ii &&
        Math.abs(n - u.circle.cy) < Ii;

      )
        (s = u.N), a.push(u), di(u), (u = s);
      a.push(u), hi(u);
      var h,
        c = a.length;
      for (h = 1; h < c; ++h)
        (u = a[h]), (l = a[h - 1]), ti(u.edge, l.site, u.site, i);
      (l = a[0]),
        ((u = a[c - 1]).edge = Zn(l.site, u.site, null, i)),
        ui(l),
        ui(u);
    }
    function gi(t) {
      for (var e, r, n, i, o = t[0], s = t[1], a = _i._; a; )
        if ((n = mi(a, s) - o) > Ii) a = a.L;
        else {
          if (!((i = o - vi(a, s)) > Ii)) {
            n > -Ii
              ? ((e = a.P), (r = a))
              : i > -Ii
              ? ((e = a), (r = a.N))
              : (e = r = a);
            break;
          }
          if (!a.R) {
            e = a;
            break;
          }
          a = a.R;
        }
      !(function(t) {
        xi[t.index] = { site: t, halfedges: [] };
      })(t);
      var l = fi(t);
      if ((_i.insert(e, l), e || r)) {
        if (e === r)
          return (
            hi(e),
            (r = fi(e.site)),
            _i.insert(l, r),
            (l.edge = r.edge = Zn(e.site, l.site)),
            ui(e),
            void ui(r)
          );
        if (r) {
          hi(e), hi(r);
          var u = e.site,
            h = u[0],
            c = u[1],
            p = t[0] - h,
            f = t[1] - c,
            d = r.site,
            y = d[0] - h,
            g = d[1] - c,
            m = 2 * (p * g - f * y),
            v = p * p + f * f,
            _ = y * y + g * g,
            x = [(g * v - f * _) / m + h, (p * _ - y * v) / m + c];
          ti(r.edge, u, d, x),
            (l.edge = Zn(u, t, null, x)),
            (r.edge = Zn(t, d, null, x)),
            ui(e),
            ui(r);
        } else l.edge = Zn(e.site, l.site);
      }
    }
    function mi(t, e) {
      var r = t.site,
        n = r[0],
        i = r[1],
        o = i - e;
      if (!o) return n;
      var s = t.P;
      if (!s) return -1 / 0;
      var a = (r = s.site)[0],
        l = r[1],
        u = l - e;
      if (!u) return a;
      var h = a - n,
        c = 1 / o - 1 / u,
        p = h / u;
      return c
        ? (-p +
            Math.sqrt(
              p * p - 2 * c * ((h * h) / (-2 * u) - l + u / 2 + i - o / 2)
            )) /
            c +
            n
        : (n + a) / 2;
    }
    function vi(t, e) {
      var r = t.N;
      if (r) return mi(r, e);
      var n = t.site;
      return n[1] === e ? n[0] : 1 / 0;
    }
    var _i,
      xi,
      bi,
      Si,
      Ii = 1e-6,
      wi = 1e-12;
    function Ni(t, e) {
      return e[1] - t[1] || e[0] - t[0];
    }
    function Ci(t, e) {
      var r,
        n,
        i,
        o = t.sort(Ni).pop();
      for (Si = [], xi = new Array(t.length), _i = new Qn(), bi = new Qn(); ; )
        if (((i = si), o && (!i || o[1] < i.y || (o[1] === i.y && o[0] < i.x))))
          (o[0] === r && o[1] === n) || (gi(o), (r = o[0]), (n = o[1])),
            (o = t.pop());
        else {
          if (!i) break;
          yi(i.arc);
        }
      if (
        ((function() {
          for (var t, e, r, n, i = 0, o = xi.length; i < o; ++i)
            if ((t = xi[i]) && (n = (e = t.halfedges).length)) {
              var s = new Array(n),
                a = new Array(n);
              for (r = 0; r < n; ++r) (s[r] = r), (a[r] = ni(t, Si[e[r]]));
              for (
                s.sort(function(t, e) {
                  return a[e] - a[t];
                }),
                  r = 0;
                r < n;
                ++r
              )
                a[r] = e[s[r]];
              for (r = 0; r < n; ++r) e[r] = a[r];
            }
        })(),
        e)
      ) {
        var s = +e[0][0],
          a = +e[0][1],
          l = +e[1][0],
          u = +e[1][1];
        !(function(t, e, r, n) {
          for (var i, o = Si.length; o--; )
            (ri((i = Si[o]), t, e, r, n) &&
              ei(i, t, e, r, n) &&
              (Math.abs(i[0][0] - i[1][0]) > Ii ||
                Math.abs(i[0][1] - i[1][1]) > Ii)) ||
              delete Si[o];
        })(s, a, l, u),
          (function(t, e, r, n) {
            var i,
              o,
              s,
              a,
              l,
              u,
              h,
              c,
              p,
              f,
              d,
              y,
              g = xi.length,
              m = !0;
            for (i = 0; i < g; ++i)
              if ((o = xi[i])) {
                for (s = o.site, a = (l = o.halfedges).length; a--; )
                  Si[l[a]] || l.splice(a, 1);
                for (a = 0, u = l.length; a < u; )
                  (d = (f = oi(o, Si[l[a]]))[0]),
                    (y = f[1]),
                    (c = (h = ii(o, Si[l[++a % u]]))[0]),
                    (p = h[1]),
                    (Math.abs(d - c) > Ii || Math.abs(y - p) > Ii) &&
                      (l.splice(
                        a,
                        0,
                        Si.push(
                          Kn(
                            s,
                            f,
                            Math.abs(d - t) < Ii && n - y > Ii
                              ? [t, Math.abs(c - t) < Ii ? p : n]
                              : Math.abs(y - n) < Ii && r - d > Ii
                              ? [Math.abs(p - n) < Ii ? c : r, n]
                              : Math.abs(d - r) < Ii && y - e > Ii
                              ? [r, Math.abs(c - r) < Ii ? p : e]
                              : Math.abs(y - e) < Ii && d - t > Ii
                              ? [Math.abs(p - e) < Ii ? c : t, e]
                              : null
                          )
                        ) - 1
                      ),
                      ++u);
                u && (m = !1);
              }
            if (m) {
              var v,
                _,
                x,
                b = 1 / 0;
              for (i = 0, m = null; i < g; ++i)
                (o = xi[i]) &&
                  (x = (v = (s = o.site)[0] - t) * v + (_ = s[1] - e) * _) <
                    b &&
                  ((b = x), (m = o));
              if (m) {
                var S = [t, e],
                  I = [t, n],
                  w = [r, n],
                  N = [r, e];
                m.halfedges.push(
                  Si.push(Kn((s = m.site), S, I)) - 1,
                  Si.push(Kn(s, I, w)) - 1,
                  Si.push(Kn(s, w, N)) - 1,
                  Si.push(Kn(s, N, S)) - 1
                );
              }
            }
            for (i = 0; i < g; ++i)
              (o = xi[i]) && (o.halfedges.length || delete xi[i]);
          })(s, a, l, u);
      }
      (this.edges = Si), (this.cells = xi), (_i = bi = Si = xi = null);
    }
    function Ei() {
      return new Mi();
    }
    function Mi() {
      this.reset();
    }
    (Ci.prototype = {
      constructor: Ci,
      polygons: function() {
        var t = this.edges;
        return this.cells.map(function(e) {
          var r = e.halfedges.map(function(r) {
            return ii(e, t[r]);
          });
          return (r.data = e.site.data), r;
        });
      },
      triangles: function() {
        var t = [],
          e = this.edges;
        return (
          this.cells.forEach(function(r, n) {
            if ((o = (i = r.halfedges).length))
              for (
                var i,
                  o,
                  s,
                  a,
                  l,
                  u,
                  h = r.site,
                  c = -1,
                  p = e[i[o - 1]],
                  f = p.left === h ? p.right : p.left;
                ++c < o;

              )
                (s = f),
                  (f = (p = e[i[c]]).left === h ? p.right : p.left),
                  s &&
                    f &&
                    n < s.index &&
                    n < f.index &&
                    ((l = s),
                    (u = f),
                    ((a = h)[0] - u[0]) * (l[1] - a[1]) -
                      (a[0] - l[0]) * (u[1] - a[1]) <
                      0) &&
                    t.push([h.data, s.data, f.data]);
          }),
          t
        );
      },
      links: function() {
        return this.edges
          .filter(function(t) {
            return t.right;
          })
          .map(function(t) {
            return { source: t.left.data, target: t.right.data };
          });
      },
      find: function(t, e, r) {
        for (
          var n, i, o = this, s = o._found || 0, a = o.cells.length;
          !(i = o.cells[s]);

        )
          if (++s >= a) return null;
        var l = t - i.site[0],
          u = e - i.site[1],
          h = l * l + u * u;
        do {
          (i = o.cells[(n = s)]),
            (s = null),
            i.halfedges.forEach(function(r) {
              var n = o.edges[r],
                a = n.left;
              if ((a !== i.site && a) || (a = n.right)) {
                var l = t - a[0],
                  u = e - a[1],
                  c = l * l + u * u;
                c < h && ((h = c), (s = a.index));
              }
            });
        } while (null !== s);
        return (o._found = n), null == r || h <= r * r ? i.site : null;
      }
    }),
      r(5091),
      r(3766),
      (Mi.prototype = {
        constructor: Mi,
        reset: function() {
          this.s = this.t = 0;
        },
        add: function(t) {
          Oi(Pi, t, this.t),
            Oi(this, Pi.s, this.s),
            this.s ? (this.t += Pi.t) : (this.s = Pi.t);
        },
        valueOf: function() {
          return this.s;
        }
      });
    var Pi = new Mi();
    function Oi(t, e, r) {
      var n = (t.s = e + r),
        i = n - e,
        o = n - i;
      t.t = e - o + (r - i);
    }
    var Li,
      Ti,
      Ai = Math.PI,
      Ri = Ai / 2,
      Fi = 2 * Ai,
      Di = Ai / 180,
      ji = (Math.abs, Math.atan),
      Ui = Math.atan2,
      Gi = Math.cos,
      Bi = (Math.ceil, Math.exp, Math.floor, Math.log, Math.pow, Math.sin),
      ki = (Math.sign, Math.sqrt);
    Math.tan;
    function qi(t) {
      return t > 1 ? Ri : t < -1 ? -Ri : Math.asin(t);
    }
    function zi(t, e) {
      return [t > Ai ? t - Fi : t < -Ai ? t + Fi : t, e];
    }
    function Vi(t, e) {
      return t < e ? -1 : t > e ? 1 : t >= e ? 0 : NaN;
    }
    Ei(),
      Ei(),
      Ei(),
      (zi.invert = zi),
      1 === (Li = Vi).length &&
        ((Ti = Li),
        (Li = function(t, e) {
          return Vi(Ti(t), e);
        }));
    var Wi = Array.prototype;
    Wi.slice, Wi.map, Math.sqrt(50), Math.sqrt(10), Math.sqrt(2);
    Ei();
    function Xi() {}
    function Yi(t) {
      return function(e, r) {
        var n = Gi(e),
          i = Gi(r),
          o = t(n * i);
        return [o * i * Bi(e), o * Bi(r)];
      };
    }
    function Hi(t) {
      return function(e, r) {
        var n = ki(e * e + r * r),
          i = t(n),
          o = Bi(i),
          s = Gi(i);
        return [Ui(e * o, n * s), qi(n && (r * o) / n)];
      };
    }
    function Ji(t, e) {
      return [t, e];
    }
    Ei(),
      Ei(),
      Ei(),
      Ei(),
      (Xi.prototype = {
        constructor: Xi,
        point: function(t, e) {
          this.stream.point(t, e);
        },
        sphere: function() {
          this.stream.sphere();
        },
        lineStart: function() {
          this.stream.lineStart();
        },
        lineEnd: function() {
          this.stream.lineEnd();
        },
        polygonStart: function() {
          this.stream.polygonStart();
        },
        polygonEnd: function() {
          this.stream.polygonEnd();
        }
      }),
      Gi(30 * Di),
      (Yi(function(t) {
        return ki(2 / (1 + t));
      }).invert = Hi(function(t) {
        return 2 * qi(t / 2);
      })),
      (Yi(function(t) {
        return (t = (e = t) > 1 ? 0 : e < -1 ? Ai : Math.acos(e)) && t / Bi(t);
        var e;
      }).invert = Hi(function(t) {
        return t;
      })),
      (Ji.invert = Ji),
      Hi(ji),
      Hi(qi),
      Hi(function(t) {
        return 2 * ji(t);
      });
    class $i extends or {
      static getPointsCoordinates(t) {
        let e = [];
        for (let r = 0; r < t.length; r++)
          for (let n = 0; n < t[r].geometry.length; n++)
            e.push(t[r].geometry[n].coordinates);
        return e;
      }
      static getPointsCenter(t) {
        let e,
          r = [];
        for (let e = 0; e < t.length; e++) r.push(ar(t[e]));
        return (e = Nr(hr(r))), e;
      }
      constructor(t) {
        super(), (this.type = "Point"), g(this, t);
      }
    }
    Zondy.Service.VPoint = $i;
    class Qi extends or {
      static getPolylinesCoordinates(t) {
        let e = [];
        for (let r = 0; r < t.length; r++)
          for (let n = 0; n < t[r].geometry.length; n++) {
            let i = [],
              o = t[r].geometry[n].coordinates;
            for (let t = 0; t < o.length; t++) i.push([o[t].x, o[t].y]);
            e.push(i);
          }
        return e;
      }
      static getPolylinesCenter(t) {
        let e = [];
        for (let r = 0; r < t.length; r++) e.push(ur(t[r]));
        return Nr(hr(e));
      }
      constructor(t) {
        super(), (this.type = "LineString"), g(this, t);
      }
    }
    class Zi extends or {
      static getPolygonsCoordinates(t) {
        let e = [];
        for (let r = 0; r < t.length; r++)
          for (let n = 0; n < t[r].geometry.length; n++) {
            let i = [],
              o = t[r].geometry[n].exterior,
              s = [],
              a = t[r].geometry[n].interior,
              l = [];
            for (let t = 0; t < o.length; t++) s.push([o[t].x, o[t].y]);
            for (let t = 0; t < a.length; t++) {
              let e = [];
              for (let r = 0; r < a[t].length; r++)
                e.push([a[t][r].x, a[t][r].y]);
              l.push(e);
            }
            i.push(s), (i = i.concat(l)), e.push(i);
          }
        return e;
      }
      static getPolygonsCenter(t) {
        let e = [];
        for (let r = 0; r < t.length; r++) e.push(lr(t[r]));
        return Nr(hr(e));
      }
      constructor(t) {
        if (
          (super(),
          (this.type = "Polygon"),
          (this.exterior = []),
          (this.interior = []),
          g(this, t),
          this.exterior.length > 0 && this.coordinates.push(this.exterior),
          this.interior.length > 0)
        )
          for (let t = 0; t < this.interior.length; t++)
            this.coordinates.push(this.interior[t]);
      }
    }
    Zondy.Service.VPolygon = Zi;
    class Ki extends rr {
      constructor(t) {
        super(),
          (this.geometry = void 0),
          (this.where = void 0),
          (this.compareRectOnly = !1),
          (this.enableDisplayCondition = !1),
          (this.spatialRelationType = "Intersect"),
          g(this, t);
      }
    }
    (Ki.prototype.fromGeoJSON = function(t) {
      if (t) {
        let e = this;
        switch (t.geometry.type) {
          case "Point":
            e.geometry = new $i({ coordinates: t.geometry.coordinates });
            break;
          case "LineString":
            e.geometry = new Qi({ coordinates: t.geometry.coordinates });
            break;
          case "Polygon":
            e.geometry = new Zi({ coordinates: t.geometry.coordinates[0] });
        }
      }
    }),
      (p.Service.GeometryParameter = Ki);
    class to extends rr {
      constructor(t) {
        super(),
          (this.where = void 0),
          (this.rectangle = []),
          (this.compareRectOnly = !1),
          (this.enableDisplayCondition = !1),
          (this.spatialRelationType = "Intersects"),
          g(this, t);
      }
    }
    p.Service.RectangleParameter = to;
    class eo extends rr {
      constructor(t) {
        super(), (this.objectIds = []), g(this, t);
      }
    }
    p.Service.ObjectIdsParameter = eo;
    class ro {
      static fromQueryResult(t) {
        if (
          !t.hasOwnProperty("SFEleArray") ||
          !t.hasOwnProperty("AttStruct") ||
          (t.hasOwnProperty("SFEleArray") && !t.SFEleArray) ||
          (t.hasOwnProperty("AttStruct") && !t.AttStruct)
        )
          return [];
        let e,
          r = t.SFEleArray,
          n = t.AttStruct,
          i = [];
        for (let t = 0; t < r.length; t++) {
          let o,
            s,
            a = {},
            l = [];
          for (let e = 0; e < r[t].AttValue.length; e++)
            "" !== r[t].AttValue[e] && (a[n.FldName[e]] = r[t].AttValue[e]);
          if (r[t].fGeom)
            switch (r[t].ftype) {
              case 1:
                let e = r[t].fGeom.PntGeom;
                for (let t = 0; t < e.length; t++) {
                  let r = new $i({ coordinates: [e[t].Dot.x, e[t].Dot.y] });
                  l.push(r), (o = "Point");
                }
                break;
              case 2:
                let n = r[t].fGeom.LinGeom;
                for (let t = 0; t < n.length; t++) {
                  let e = new Qi({ coordinates: n[t].Line.Arcs[0].Dots });
                  l.push(e), (o = "LineString");
                }
                break;
              case 3:
                let i = r[t].fGeom.RegGeom;
                for (let t = 0; t < i.length; t++) {
                  let e = new Zi();
                  e.exterior = i[t].Rings[0].Arcs[0].Dots;
                  for (let r = 1; r < i[t].Rings.length; r++)
                    e.interior.push(i[t].Rings[r].Arcs[0].Dots);
                  l.push(e), (o = "Polygon");
                }
            }
          if (r[t].GraphicInfo) {
            let e = r[t].GraphicInfo;
            switch (e.InfoType) {
              case 1:
                s = e.PntInfo;
                break;
              case 2:
                s = e.LinInfo;
                break;
              case 3:
                s = e.RegInfo;
            }
          }
          (e = new ro({
            attributes: a,
            FID: r[t].FID,
            geometry: l,
            geometryType: o,
            style: s
          })),
            i.push(e);
        }
        return i;
      }
      static fromGeoJSON(t) {
        let e,
          r = [];
        if (!t.hasOwnProperty("type")) throw new Error("请输入正确的geoJSON");
        if ("Feature" === t.type)
          return (
            (e = new ro({ geometry: ro.geometry, attributes: t.properties })), e
          );
        if ("FeatureCollection" === t.type) {
          let n,
            i,
            o,
            s = t.features;
          for (let t = 0; t < s.length; t++) {
            switch (
              ((n = []), (o = s[t].geometry.coordinates), s[t].geometry.type)
            ) {
              case "Point":
                n.push(s[t].geometry);
                break;
              case "LineString":
                i = [];
                for (let t = 0; t < o.length; t++)
                  i.push({ x: Number(o[t][0]), y: Number(o[t][1]) });
                (s[t].geometry.coordinates = i), n.push(s[t].geometry);
                break;
              case "Polygon":
                let e = new Zi();
                for (let t = 0; t < o[0].length; t++)
                  e.exterior.push({
                    x: Number(o[0][t][0]),
                    y: Number(o[0][t][1])
                  });
                for (let t = 1; t < o.length; t++) {
                  let r = [];
                  for (let e = 0; e < o[t].length; e++)
                    r.push({ x: Number(o[t][e][0]), y: Number(o[t][e][1]) });
                  e.exterior.push(r);
                }
                n.push(e);
            }
            (e = new ro({
              geometry: n,
              attributes: s[t].properties,
              geometryType: s[t].geometry.type
            })),
              r.push(e);
          }
          return r;
        }
        throw new Error("不支持的geoJSON类型");
      }
      static toAntTableData(t) {
        let e = [],
          r = ro.fromQueryResult(t);
        for (let t = 0; t < r.length; t++)
          e.push(
            Object.assign(r[t].attributes, { key: r[t].FID ? r[t].FID : t })
          );
        return e;
      }
      static resultToGeojson(t) {
        let e,
          r = ro.fromQueryResult(t),
          n = [];
        r = JSON.parse(
          JSON.stringify(r)
            .replace(/attributes/g, "properties")
            .replace(/geometryType/g, "type")
        );
        for (let t = 0; t < r.length; t++)
          (e = ro.polygonToGeojson(r[t])), (n = n.concat(e));
        return { type: "feature", features: n };
      }
      static polygonToGeojson(t) {
        let e,
          r = [],
          n = t.geometry,
          i = t.properties;
        for (let t = 0; t < n.length; t++)
          (e = {}),
            "Polygon" === n[t].type &&
              (n[t].coordinates = n[t].coordinates.concat(
                n[t].exterior,
                n[t].interior
              )),
            (e.geometry = n[t]),
            (e.properties = i),
            r.push(e);
        return r;
      }
      constructor(t) {
        (this.geometry = void 0),
          (this.geometryType = void 0),
          (this.attributes = void 0),
          (this.style = void 0),
          (this.FID = void 0),
          g(this, t);
      }
    }
    p.Service.VFeature = ro;
    class no extends Ne {
      constructor(t) {
        var e = t || {};
        (e.baseUrl = "igs/rest/mrfws"),
          super(e),
          (this.flowID = void 0 !== e.flowID ? e.flowID : null);
      }
      execute(t, e, r) {
        var n = {};
        if (
          (x(n, this, ["port", "ip", "baseUrl", "partUrl", "flowID"]),
          e || (e = "get"),
          "get" === e.toLowerCase() &&
            ((this.partUrl = "execute/" + this.flowID + "?isAsy=false&f=json"),
            null !== n))
        ) {
          var i = P(n);
          (null === i && "" === i) || (this.partUrl += "&paraValues=" + i);
        }
        if ("post" === e.toLowerCase()) {
          this.partUrl = "execute/" + this.flowID + "?isAsy=false&f=json";
          var o = new Array();
          if (null !== n)
            for (var s in n)
              if (null !== n[s]) {
                var a = {};
                (a.Key = s), (a.Value = n[s].toString()), o.push(a);
              }
          n = o;
        }
        var l = this.getFullUrl(),
          u = new me(l, {
            eventListeners: {
              scope: this,
              processCompleted: t,
              processFailed: r
            }
          });
        "post" === e.toLowerCase()
          ? u.processAsync({
              method: "POST",
              data: JSON.stringify(n),
              headers: { "Content-Type": "text/plain;charset=UTF-8" }
            })
          : u.processAsync();
      }
    }
    p.Service.AnalysisBase = no;
    class io extends no {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.srcInfo = void 0 !== e.srcInfo ? e.srcInfo : null),
          (this.desInfo = void 0 !== e.desInfo ? e.desInfo : null),
          (this.idstr = void 0 !== e.idstr ? e.idstr : ""),
          (this.angleType = void 0 !== e.angleType ? e.angleType : 0),
          (this.isDissolve = void 0 === e.isDissolve || e.isDissolve),
          (this.isDynPrj = void 0 !== e.isDynPrj && e.isDynPrj);
      }
    }
    p.Service.ClassBufferBase = io;
    class oo extends io {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.flowID = "600232"),
          (this.radiusStr = void 0 !== e.radiusStr ? e.radiusStr : "2,4,8,10");
      }
    }
    p.Service.ClassBufferByMultiplyRing = oo;
    class so extends io {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.leftRad = void 0 !== e.leftRad ? e.leftRad : 0.001),
          (this.rightRad = void 0 !== e.rightRad ? e.rightRad : 0.001),
          (this.isByAtt = void 0 === e.isByAtt || e.isByAtt),
          (this.fldName = void 0 !== e.fldName ? e.fldName : null),
          (this.dynPrjRad = void 0 !== e.dynPrjRad ? e.dynPrjRad : 0),
          (this.flowID = "600231");
      }
    }
    p.Service.ClassBufferBySingleRing = so;
    class ao extends no {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.desInfo = void 0 !== e.desInfo ? e.desInfo : null),
          (this.attOptType = void 0 !== e.attOptType ? e.attOptType : 1),
          (this.infoOptType = void 0 !== e.infoOptType ? e.infoOptType : 1),
          (this.overType = void 0 !== e.overType ? e.overType : 3),
          (this.tolerance = void 0 !== e.tolerance ? e.tolerance : 1e-4),
          (this.isCleanNode = void 0 !== e.isCleanNode && e.isCleanNode),
          (this.isLabelPnt = void 0 !== e.isLabelPnt && e.isLabelPnt),
          (this.isValidReg = void 0 !== e.isValidReg && e.isValidReg);
      }
    }
    p.Service.ClipBase = ao;
    class lo extends ao {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.srcInfo = void 0 !== e.srcInfo ? e.srcInfo : null),
          (this.center = void 0 !== e.center ? e.center : null),
          (this.radius = void 0 !== e.radius ? e.radius : null),
          (this.step = void 0 !== e.step ? e.step : 0.001),
          (this.flowID = "600229");
      }
    }
    p.Service.ClipByCircle = lo;
    class uo extends ao {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.srcInfo1 = void 0 !== e.srcInfo1 ? e.srcInfo1 : null),
          (this.srcInfo2 = void 0 !== e.srcInfo2 ? e.srcInfo2 : null),
          (this.flowID = "600230");
      }
    }
    p.Service.ClipByLayer = uo;
    class ho extends ao {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.srcInfo = void 0 !== e.srcInfo ? e.srcInfo : null),
          (this.strPos = void 0 !== e.strPos ? e.strPos : null),
          (this.flowID = "600228");
      }
    }
    p.Service.ClipByPolygon = ho;
    class co extends no {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.flowID = "600320"),
          (this.linSfclsURL = void 0 !== e.linSfclsURL ? e.linSfclsURL : null),
          (this.regSfclsURL = void 0 !== e.regSfclsURL ? e.regSfclsURL : null),
          (this.annoClsURL = void 0 !== e.annoClsURL ? e.annoClsURL : null),
          (this.meshingParam =
            void 0 !== e.meshingParam ? e.meshingParam : null),
          (this.contourParam =
            void 0 !== e.contourParam ? e.contourParam : null);
      }
    }
    p.Service.ContourAnalyse = co;
    class po extends no {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.sfGeometryXML =
            void 0 !== e.sfGeometryXML ? e.sfGeometryXML : null),
          (this.attStrctXML = void 0 !== e.attStrctXML ? e.attStrctXML : null),
          (this.attRowsXML = void 0 !== e.attRowsXML ? e.attRowsXML : null),
          (this.traceRadius = void 0 !== e.traceRadius ? e.traceRadius : 1e-4),
          (this.resultName = void 0 !== e.resultName ? e.resultName : null),
          (this.inFormat = void 0 !== e.inFormat ? e.inFormat : "json");
      }
    }
    p.Service.FeatureBuffBase = po;
    class fo extends po {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.radiusStr =
            void 0 !== e.radiusStr ? e.radiusStr : "0.003,0.002,0.001"),
          (this.flowID = "600239");
      }
    }
    p.Service.FeatureBuffByMultiplyRing = fo;
    class yo extends po {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.leftRad = void 0 !== e.leftRad ? e.leftRad : 0.001),
          (this.rightRad = void 0 !== e.rightRad ? e.rightRad : 0.001),
          (this.flowID = "600238");
      }
    }
    p.Service.FeatureBuffBySingleRing = yo;
    class go extends no {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.netClsUrl = void 0 !== e.netClsUrl ? e.netClsUrl : null),
          (this.flagPosStr = void 0 !== e.flagPosStr ? e.flagPosStr : null),
          (this.barrierPosStr =
            void 0 !== e.barrierPosStr ? e.barrierPosStr : null),
          (this.analyType = void 0 !== e.analyType ? e.analyType : Nt.UserMode),
          (this.weight = void 0 !== e.weight ? e.weight : ",Weight1,Weight1"),
          (this.elementType =
            void 0 !== e.elementType ? e.elementType : Ct.Edge),
          (this.nearDis = void 0 !== e.nearDis ? e.nearDis : 0.001),
          (this.outFormat = void 0 !== e.outFormat ? e.outFormat : "json"),
          (this.flowID = "600233");
      }
    }
    p.Service.NetAnalysis = go;
    class mo extends no {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.srcInfo1 = void 0 !== e.srcInfo1 ? e.srcInfo1 : null),
          (this.desInfo = void 0 !== e.desInfo ? e.desInfo : null),
          (this.attOptType = void 0 !== e.attOptType ? e.attOptType : 1),
          (this.infoOptType = void 0 !== e.infoOptType ? e.infoOptType : 1),
          (this.overType = void 0 !== e.overType ? e.overType : 3),
          (this.isCleanNode = void 0 !== e.isCleanNode && e.isCleanNode),
          (this.isLabelPnt = void 0 !== e.isLabelPnt && e.isLabelPnt),
          (this.isValidReg = void 0 !== e.isValidReg && e.isValidReg),
          (this.isReCalculate = void 0 === e.isReCalculate || e.isReCalculate),
          (this.radius = void 0 !== e.radius ? e.radius : 0.001);
      }
    }
    p.Service.OverlayBase = mo;
    class vo extends mo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.srcInfo2 = void 0 !== e.srcInfo2 ? e.srcInfo2 : null),
          (this.flowID = "600227");
      }
    }
    p.Service.OverlayByLayer = vo;
    class _o extends mo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.strGRegionXML =
            void 0 !== e.strGRegionXML ? e.strGRegionXML : null),
          (this.inFormat = void 0 !== e.inFormat ? e.inFormat : "json"),
          (this.flowID = "600237");
      }
    }
    p.Service.OverlayByPolygon = _o;
    class xo extends no {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.clsName = void 0 !== e.clsName ? e.clsName : null),
          (this.desClsName = void 0 !== e.desClsName ? e.desClsName : null),
          (this.resultName = void 0 !== e.resultName ? e.resultName : null);
      }
    }
    p.Service.ProjectBase = xo;
    class bo extends xo {
      constructor(t, e) {
        var r = e || {};
        g(r, t), super(r), (this.flowID = "600235");
      }
    }
    p.Service.ProjectByLayer = bo;
    class So extends xo {
      constructor(t, e) {
        var r = e || {};
        g(r, t),
          super(r),
          (this.flowID = "600234"),
          (this.srID = void 0 !== r.srID ? r.srID : 32);
      }
    }
    p.Service.ProjectBySRID = So;
    class Io extends no {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.guid = e.guid ? e.guid : z()),
          (this.f = void 0 !== e.f ? e.f : "json");
      }
      executeWorkFlow(t, e, r, n, i, o) {
        r || (r = !1);
        var s = {};
        null !== o && "POST" === o.toUpperCase()
          ? ((s.paraValues = e),
            (this.partUrl =
              "execute/" +
              t +
              "?f=" +
              this.f +
              "&isAsy=" +
              r +
              "&guid=" +
              this.guid))
          : (this.partUrl =
              "execute/" +
              t +
              "?paraValues=" +
              e +
              "&f=" +
              this.f +
              "&isAsy=" +
              r +
              "&guid=" +
              this.guid);
        var a = this.getFullUrl(),
          l = new me(a, {
            eventListeners: {
              scope: this,
              processCompleted: n,
              processFailed: i
            }
          });
        null !== o && "POST" === o.toUpperCase()
          ? l.processAsync({ method: "POST", data: JSON.stringify(s) })
          : l.processAsync();
      }
      getInstanceMessage(t, e, r) {
        this.partUrl =
          "instanceLogs/" + t + "?f=" + this.f + "&guid=" + this.guid;
        var n = this.getFullUrl();
        new me(n, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      getInstanceOutPutValue(t, e, r, n) {
        this.partUrl =
          "outputvalues/" +
          t +
          "?name=" +
          e +
          "&f=" +
          this.f +
          "&guid=" +
          this.guid;
        var i = this.getFullUrl();
        new me(i, {
          eventListeners: { scope: this, processCompleted: r, processFailed: n }
        }).processAsync();
      }
      getInstanceResult(t, e, r) {
        this.partUrl = "results/" + t + "?f=" + this.f + "&guid=" + this.guid;
        var n = this.getFullUrl();
        new me(n, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      getInstanceStatus(t, e, r) {
        this.partUrl = "status/" + t + "?f=" + this.f + "&guid=" + this.guid;
        var n = this.getFullUrl();
        new me(n, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      getWorkFlowGroups(t, e) {
        this.partUrl = "groups/?f=" + this.f + "&guid=" + this.guid;
        var r = this.getFullUrl();
        new me(r, {
          eventListeners: { scope: this, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getWorkFlowInfoByID(t, e, r) {
        this.partUrl = "workflows/" + t + "?f=" + this.f + "&guid=" + this.guid;
        var n = this.getFullUrl();
        new me(n, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      getWorkFlowInfos(t, e) {
        this.partUrl = "workflows?f=" + this.f + "&guid=" + this.guid;
        var r = this.getFullUrl();
        new me(r, {
          eventListeners: { scope: this, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getWorkFlowInfosByGroup(t, e, r) {
        this.partUrl =
          "workflowsbygroup/" + t + "?f=" + this.f + "&guid=" + this.guid;
        var n = this.getFullUrl();
        new me(n, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      getFolder1(t, e) {
        this.partUrl = "folderInfos?f=" + this.f + "&guid=" + this.guid;
        var r = this.getFullUrl();
        new me(r, {
          eventListeners: { scope: this, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getFolder2(t, e) {
        this.partUrl =
          "folderInfos/workflow?f=" + this.f + "&guid=" + this.guid;
        var r = this.getFullUrl();
        new me(r, {
          eventListeners: { scope: this, processCompleted: t, processFailed: e }
        }).processAsync();
      }
      getFolder3(t, e, r) {
        this.partUrl =
          "folderInfos/workflow/" + t + "?f=" + this.f + "&guid=" + this.guid;
        var n = this.getFullUrl();
        new me(n, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
    }
    p.Service.FunctionWareService = Io;
    class wo extends Ne {
      constructor(t) {
        var e = t || {};
        (e.baseUrl = "igs/rest/mrgs"), super(e);
      }
    }
    p.Service.GeometryAnalysisBase = wo;
    var No = function(t) {
      var e = t || {};
      g(this, e),
        (this.ProjAngleUnit = void 0 !== e.ProjAngleUnit ? e.ProjAngleUnit : 0),
        (this.ProjLat = void 0 !== e.ProjLat ? e.ProjLat : 0),
        (this.ProjLat1 = void 0 !== e.ProjLat1 ? e.ProjLat1 : 0),
        (this.ProjLat2 = void 0 !== e.ProjLat2 ? e.ProjLat2 : 0),
        (this.ProjLon = void 0 !== e.ProjLon ? e.ProjLon : 0),
        (this.ProjRate = void 0 !== e.ProjRate ? e.ProjRate : 0),
        (this.ProjType = void 0 !== e.ProjType ? e.ProjType : 0),
        (this.ProjTypeID = void 0 !== e.ProjTypeID ? e.ProjTypeID : 0),
        (this.ProjUnit = void 0 !== e.ProjUnit ? e.ProjUnit : 0),
        (this.ProjZoneNO = void 0 !== e.ProjZoneNO ? e.ProjZoneNO : 0),
        (this.ProjZoneType = void 0 !== e.ProjZoneType ? e.ProjZoneType : 0),
        (this.SphereID = void 0 !== e.SphereID ? e.SphereID : 0);
    };
    p.Service.CProjectParam = No;
    var Co = function(t, e) {
      (this.DesSrsID = t), (this.GdbInfo = e);
    };
    p.Service.CProjectBySRSID = Co;
    class Eo extends wo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.dots = void 0 !== e.dots ? e.dots : null),
          (this.projectInfo = void 0 !== e.projectInfo ? e.projectInfo : null),
          (this.projectInfoBySRSID =
            void 0 !== e.projectInfoBySRSID ? e.projectInfoBySRSID : null);
      }
      execute(t, e, r) {
        t instanceof No && (this.projectInfo = t),
          t instanceof Co && (this.projectInfoBySrsID = t);
        var n = {};
        (n.Dots = this.dots),
          (n.ProjectInfo = this.projectInfo),
          (n.ProjectInfoBySrsID = this.projectInfoBySrsID);
        var i = this.getFullUrl();
        new me(i, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(n),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
    }
    p.Service.CalServiceBase = Eo;
    class Mo extends Eo {
      constructor(t, e) {
        var r = e || {};
        g(r, { dots: t }),
          super(r),
          (this.partUrl = "geomservice/calArea?f=json");
      }
    }
    p.Service.CalArea = Mo;
    class Po extends Eo {
      constructor(t, e) {
        var r = e || {};
        g(r, { dots: t }),
          super(r),
          (this.partUrl = "geomservice/calLength?f=json");
      }
    }
    p.Service.CalPolyLineLength = Po;
    class Oo extends wo {
      constructor(t, e, r, n) {
        super(n || {}),
          (this.InputDots = t),
          (this.SrcProjParam = e),
          (this.DesProjParm = r);
      }
      execute(t, e) {
        this.partUrl = "geomservice/projectdots?f=json";
        var r = {};
        (r.InputDots = this.InputDots),
          (r.SrcProjParam = this.SrcProjParam),
          (r.DesProjParm = this.DesProjParm);
        var n = this.getFullUrl();
        new me(n, {
          eventListeners: { scope: this, processCompleted: t, processFailed: e }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(r),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
    }
    p.Service.ProjectDots = Oo;
    class Lo extends wo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.gdbsvrName =
            void 0 !== e.gdbsvrName ? e.gdbsvrName : "MapGISLocal"),
          (this.gdbName = void 0 !== e.gdbName ? e.gdbName : null),
          (this.srefID = void 0 !== e.srefID ? e.srefID : 0),
          (this.desfID = void 0 !== e.desfID ? e.desfID : 0),
          (this.userName = void 0 !== e.userName ? e.userName : null),
          (this.password = void 0 !== e.password ? e.password : null);
      }
      execute(t, e, r) {
        var n = "";
        t && (n = t.xmin + "$" + t.ymin + "$" + t.xmax + "$" + t.ymax),
          null === this.userName || null === this.password
            ? (this.partUrl =
                "geomservice/" +
                this.gdbsvrName +
                "/" +
                this.gdbName +
                "/" +
                this.srefID +
                "/" +
                this.desfID +
                "?f=json&rang=" +
                n)
            : (this.partUrl =
                "geomservice/" +
                this.gdbsvrName +
                "/" +
                this.gdbName +
                "/" +
                this.srefID +
                "/" +
                this.desfID +
                "?f=json&rang=" +
                n +
                "&userName=" +
                this.userName +
                "&password=" +
                this.password);
        var i = this.getFullUrl();
        new me(i, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
    }
    p.Service.ProjectRang = Lo;
    class To extends wo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.type = void 0 !== e.type ? e.type : 0),
          (this.step = void 0 !== e.step ? e.step : 1);
      }
      setType(t) {
        this.type = t;
      }
      setStep(t) {
        this.step = t;
      }
      execute(t, e, r) {
        if (2 == this.type) {
          if (t.length < 4)
            return void alert("当前选中的为三次Beizer样条，最少需四个点");
        } else if (t.length < 3)
          return void alert("当前选中的类型最少需三个点");
        this.partUrl =
          "geomservice/smooth?f=json&type=" + this.type + "&step=" + this.step;
        var n = this.getFullUrl();
        new me(n, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(t),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
    }
    p.Service.Smooth = To;
    class Ao extends wo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.pnt = void 0 !== e.pnt ? e.pnt : null),
          (this.line = void 0 !== e.line ? e.line : null),
          (this.reg = void 0 !== e.reg ? e.reg : null),
          (this.nearDis = void 0 !== e.nearDis ? e.nearDis : 0.01),
          (this.relativeObj = void 0 !== e.relativeObj ? e.relativeObj : null),
          (this.p_onSuccess = void 0 !== e.p_onSuccess ? e.p_onSuccess : null);
      }
      setPnt(t) {
        this.pnt = t;
      }
      setLine(t) {
        this.line = t;
      }
      setReg(t) {
        this.reg = t;
      }
      setRelativeObj(t) {
        this.relativeObj = t;
      }
      onGetRltSuccess(t) {
        var e = X(t);
        this.p_onSuccess(e);
      }
      execute(t, e) {
        (n = this).p_onSuccess = t;
        var r = {};
        (r.NearDis = this.nearDis),
          (r.Pnt = this.pnt),
          (r.Line = this.line),
          (r.Reg = this.reg),
          (r.RelativeObj = this.relativeObj),
          (n.partUrl = "geomservice/topanalysis?f=json");
        var n,
          i = n.getFullUrl();
        new me(i, {
          eventListeners: {
            scope: (n = this),
            processCompleted: n.onGetRltSuccess,
            processFailed: e
          }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(r),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
    }
    p.Service.TopAnalysis = Ao;
    class Ro extends wo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.points = void 0 !== e.points ? e.points : ""),
          (this.dx = void 0 !== e.dx ? e.dx : ""),
          (this.dy = void 0 !== e.dy ? e.dy : ""),
          (this.dz = void 0 !== e.dz ? e.dz : ""),
          (this.m = void 0 !== e.m ? e.m : ""),
          (this.wx = void 0 !== e.wx ? e.wx : ""),
          (this.wy = void 0 !== e.wy ? e.wy : ""),
          (this.wz = void 0 !== e.wz ? e.wz : ""),
          (this.srcsrsname = void 0 !== e.srcsrsname ? e.srcsrsname : ""),
          (this.dessrsname = void 0 !== e.dessrsname ? e.dessrsname : "");
      }
      coordinateTrans(t, e, r) {
        var n = {};
        null !== r && "POST" === r.toUpperCase()
          ? ((n.paraValues = ""),
            (this.partUrl =
              "geomservice/transcoordinate?points=" +
              this.points +
              "&dx=" +
              this.dx +
              "&dy=" +
              this.dy +
              "&dz=" +
              this.dz +
              "&m=" +
              this.m +
              "&wx=" +
              this.wx +
              "&wy=" +
              this.wy +
              "&wz=" +
              this.wz +
              "&srcsrsname=" +
              this.srcsrsname +
              "&dessrsname=" +
              this.dessrsname))
          : ((n = this), (this.partUrl = "geomservice/transcoordinate"));
        var i = this.getFullUrl(),
          o = new me(i, {
            eventListeners: {
              scope: this,
              processCompleted: t,
              processFailed: e
            }
          });
        null !== r && "POST" === r.toUpperCase()
          ? o.processAsync({ method: "POST", data: JSON.stringify(n) })
          : o.processAsync();
      }
    }
    p.Service.CoordinateTransform = Ro;
    class Fo extends Ne {
      constructor(t) {
        var e = t || {};
        (e.baseUrl = "igs/rest/mrms"), super(e);
      }
    }
    p.Service.MapServiceBase = Fo;
    class Do extends Fo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.docName = void 0 !== e.docName ? e.docName : null),
          (this.cache = void 0 !== e.cache && e.cache),
          this.cache
            ? ((this.level = void 0 !== e.level ? e.level : 0),
              (this.row = void 0 !== e.row ? e.row : 0),
              (this.col = void 0 !== e.col ? e.col : 0),
              (this.update = void 0 !== e.update && e.update))
            : ((this.layers = void 0 !== e.layers ? e.layers : null),
              (this.style = void 0 !== e.style ? e.style : null),
              (this.picType = void 0 !== e.picType ? e.picType : "gif"),
              (this.bbox = void 0 !== e.bbox ? e.bbox : null),
              (this.filters = void 0 !== e.filters ? e.filters : null),
              (this.picWidth = void 0 !== e.picWidth ? e.picWidth : 512),
              (this.picHeight = void 0 !== e.picHeight ? e.picHeight : 512),
              (this.proj = void 0 !== e.proj ? e.proj : null),
              (this.guid = void 0 !== e.guid ? e.guid : z()));
      }
      GetMapImage() {
        return this.docName
          ? (!0 === this.cache
              ? (this.partUrl =
                  "docs/" +
                  this.docName +
                  "?cache=" +
                  this.cache.toString() +
                  "&level=" +
                  this.level +
                  "&row=" +
                  this.row +
                  "&col=" +
                  this.col +
                  "&update=" +
                  this.update.toString())
              : ((this.partUrl = "docs/" + this.docName + "?"),
                null !== this.bbox && (this.partUrl += "bbox=" + this.bbox),
                null !== this.picWidth &&
                  (this.partUrl += "&w=" + this.picWidth),
                null !== this.picHeight &&
                  (this.partUrl += "&h=" + this.picHeight),
                null !== this.layers &&
                  (this.partUrl += "&layers=" + this.layers),
                null !== this.filters &&
                  (this.partUrl += "&filters=" + encodeURI(this.filters)),
                null !== this.style &&
                  (this.partUrl += "&style=" + JSON.stringify(this.style)),
                null !== this.proj &&
                  (this.partUrl += "&proj=" + JSON.stringify(this.proj)),
                null !== this.picType && (this.partUrl += "&f=" + this.picType),
                null !== this.guid && (this.partUrl += "&guid=" + this.guid)),
            this.getFullUrl())
          : null;
      }
    }
    p.Service.GetDocImageService = Do;
    class jo extends Fo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.gdbps = void 0 !== e.gdbps ? e.gdbps : null),
          (this.picType = void 0 !== e.picType ? e.picType : "gif"),
          (this.style = void 0 !== e.style ? e.style : null),
          (this.bbox = void 0 !== e.bbox ? e.bbox : null),
          (this.filters = void 0 !== e.filters ? e.filters : null),
          (this.picWidth = void 0 !== e.picWidth ? e.picWidth : 512),
          (this.picHeight = void 0 !== e.picHeight ? e.picHeight : 512);
      }
      GetLayerImage() {
        if (
          null !== this.gdbps &&
          null !== this.picWidth &&
          null !== this.picHeight
        ) {
          (this.partUrl = "layers?f=" + this.picType),
            (this.partUrl += "&gdbps="),
            this.gdbps.split(",");
          for (var t = this.gdbps.split(","), e = 0; e < t.length; e++)
            (this.partUrl += t[e]), e < t.length - 1 && (this.partUrl += ",");
          return (
            null !== this.style &&
              (this.partUrl += "&style=" + JSON.stringify(this.style)),
            null !== this.filters &&
              (this.partUrl += "&filters=" + this.filters),
            null !== this.bbox && (this.partUrl += "&bbox=" + this.bbox),
            (this.partUrl += "&w=" + this.picWidth),
            (this.partUrl += "&h=" + this.picHeight),
            this.getFullUrl()
          );
        }
        return null;
      }
    }
    p.Service.GetLayerImageService = jo;
    class Uo extends Fo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.mapName = void 0 !== e.mapName ? e.mapName : null),
          (this.mapType = void 0 !== e.mapType ? e.mapType : Tt.Doc),
          this.mapType === Tt.Tile
            ? ((this.level = void 0 !== e.level ? e.level : 0),
              (this.row = void 0 !== e.row ? e.row : 0),
              (this.col = void 0 !== e.col ? e.col : 0))
            : ((this.picType = void 0 !== e.picType ? e.picType : "gif"),
              (this.picWidth = void 0 !== e.picWidth ? e.picWidth : 512),
              (this.picHeight = void 0 !== e.picHeight ? e.picHeight : 512),
              (this.xmin = void 0 !== e.xmin ? e.xmin : null),
              (this.xmax = void 0 !== e.xmax ? e.xmax : null),
              (this.ymin = void 0 !== e.ymin ? e.ymin : null),
              (this.ymax = void 0 !== e.ymax ? e.ymax : null));
      }
      GetImage() {
        return this.mapName
          ? (this.mapType === Tt.Tile
              ? (this.partUrl =
                  "tile/" +
                  this.mapName +
                  "?lvl=" +
                  this.level +
                  "&row=" +
                  this.row +
                  "&col=" +
                  this.col)
              : ((this.partUrl =
                  "map/" +
                  this.mapName +
                  "?width=" +
                  this.picWidth +
                  "&height=" +
                  this.picHeight +
                  "&f=" +
                  this.picType),
                null !== this.xmin &&
                  null !== this.xmax &&
                  null !== this.ymin &&
                  null !== this.ymax &&
                  (this.partUrl +=
                    "&xmin=" +
                    this.xmin +
                    "&ymin=" +
                    this.ymin +
                    "&xmax=" +
                    this.xmax +
                    "&ymax=" +
                    this.ymax)),
            this.getFullUrl())
          : null;
      }
    }
    p.Service.GetMapImageService = Uo;
    class Go extends Fo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.mapName = void 0 !== e.mapName ? e.mapName : null),
          (this.guid = void 0 !== e.guid ? e.guid : z()),
          (this.token = e.token),
          (this.type = e.type);
      }
      GetMapInfo(t, e) {
        var r = this;
        if (r.mapName) {
          r.partUrl = "info/" + this.mapName;
          var n = [];
          r.guid && n.push("guid=" + r.guid),
            this.token && n.push("token=" + r.token),
            this.type && n.push("type=" + r.type),
            n.length > 0 && (r.partUrl += "?" + n.join("&"));
          var i = r.getFullUrl();
          new me(i, {
            eventListeners: { scope: r, processCompleted: t, processFailed: e }
          }).processAsync();
        }
      }
    }
    p.Service.GetMapInfoService = Go;
    class Bo extends Fo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.hdfName = void 0 !== e.hdfName ? e.hdfName : null),
          (this.level = void 0 !== e.level ? e.level : 0),
          (this.row = void 0 !== e.row ? e.row : 0),
          (this.col = void 0 !== e.col ? e.col : 0);
      }
      GetTileImage() {
        return void 0 !== this.hdfName
          ? ((this.partUrl =
              "tile/" +
              this.hdfName +
              "/" +
              this.level +
              "/" +
              this.row +
              "/" +
              this.col),
            this.getFullUrl())
          : null;
      }
    }
    p.Service.GetTileImageService = Bo;
    var ko = { DefaultThemeInfo: 1, DataItemIntrinsicInfo: 2 };
    p.Object.Theme.CAllOtherDataItemInfoSource = ko;
    var qo = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.LibID = void 0 !== e.LibID ? e.LibID : 0),
        (this.Ovprnt = void 0 !== e.Ovprnt && e.Ovprnt),
        (this.Angle = void 0 !== e.Ovprnt ? e.Ovprnt : 0),
        (this.BackClr = void 0 !== e.BackClr ? e.BackClr : 0),
        (this.BackExp = void 0 !== e.BackExp ? e.BackExp : 0),
        (this.Chnt = void 0 !== e.Chnt ? e.Chnt : 0),
        (this.Color = void 0 !== e.Color ? e.Color : 0),
        (this.FontAngle = void 0 !== e.FontAngle ? e.FontAngle : 0),
        (this.Height = void 0 !== e.Height ? e.Height : 0),
        (this.Ifnt = void 0 !== e.Ifnt ? e.Ifnt : 0),
        (this.Ifnx = void 0 !== e.Ifnx ? e.Ifnx : 0),
        (this.IsFilled = void 0 !== e.IsFilled && e.IsFilled),
        (this.IsHzpl = void 0 === e.IsHzpl || e.IsHzpl),
        (this.OffsetX = void 0 !== e.OffsetX ? e.OffsetX : 0),
        (this.OffsetY = void 0 !== e.OffsetY ? e.OffsetY : 0),
        (this.Space = void 0 !== e.Space ? e.Space : 0),
        (this.Width = void 0 !== e.Width ? e.Width : 0);
    };
    p.Object.Theme.CAnnInfo = qo;
    var zo = { Unknown: 0, Value: 1, Percent: 2 };
    p.Object.Theme.CChartLabelFormat = zo;
    class Vo {
      constructor(t) {
        var e = void 0 !== t ? t : {};
        g(this, e),
          (this.Name = e && e.Name ? e.Name : null),
          (this.IsBaseTheme = !e || !e.IsBaseTheme || e.IsBaseTheme),
          (this.Visible = !e || !e.Visible || e.Visible);
      }
    }
    p.Object.Theme.CTheme = Vo;
    var Wo = {
      Unknown: 0,
      Bar: 1,
      Bar3D: 2,
      Pie: 3,
      Pie3D: 4,
      Line: 5,
      Line3D: 6,
      Point: 7
    };
    p.Object.Theme.CChartType = Wo;
    var Xo = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.LibID = void 0 !== e.LibID ? e.LibID : 0),
        (this.Ovprnt = void 0 !== e.Ovprnt && e.Ovprnt),
        (this.Angle = void 0 !== e.Angle ? e.Angle : 0),
        (this.BackClr = void 0 !== e.BackClr ? e.BackClr : 0),
        (this.BackExp = void 0 !== e.BackExp ? e.BackExp : 0),
        (this.FillFlg = void 0 !== e.FillFlg ? e.FillFlg : 0),
        (this.Height = void 0 !== e.Height ? e.Height : 0),
        (this.Width = void 0 !== e.Width ? e.Width : 0),
        (this.OutClr = void 0 !== e.OutClr ? e.OutClr : [0, 0, 0]),
        (this.SymID = void 0 !== e.SymID ? e.SymID : 0),
        (this.OutPenW = void 0 !== e.OutPenW ? e.OutPenW : [0.05, 0.05, 0.05]);
    };
    p.Object.Theme.CPntInfo = Xo;
    var Yo = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.LibID = void 0 !== e.LibID ? e.LibID : 0),
        (this.Ovprnt = void 0 !== e.Ovprnt && e.Ovprnt),
        (this.AdjustFlg = void 0 !== e.AdjustFlg ? e.AdjustFlg : Et.Adjust),
        (this.HeadType = void 0 !== e.HeadType ? e.HeadType : Mt.Round),
        (this.JointType = void 0 !== e.JointType ? e.JointType : Pt.Round),
        (this.LinStyID = void 0 !== e.LinStyID ? e.LinStyID : 0),
        (this.MakeMethod = void 0 !== e.MakeMethod ? e.MakeMethod : Ot.Byrule),
        (this.OutClr = void 0 !== e.OutClr ? e.OutClr : [46, 4, 3]),
        (this.XScale = void 0 !== e.XScale ? e.XScale : 10),
        (this.YScale = void 0 !== e.YScale ? e.YScale : 10),
        (this.OutPenW = void 0 !== e.OutPenW ? e.OutPenW : [0.05, 0.05, 0.05]);
    };
    p.Object.Theme.CLinInfo = Yo;
    var Ho = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.LibID = void 0 !== e.LibID ? e.LibID : 0),
        (this.Ovprnt = void 0 !== e.Ovprnt && e.Ovprnt),
        (this.Angle = void 0 !== e.Angle ? e.Angle : 0),
        (this.EndClr = void 0 !== e.EndClr ? e.EndClr : 0),
        (this.FillClr = void 0 !== e.FillClr ? e.FillClr : 46),
        (this.FillMode = void 0 !== e.FillMode ? e.FillMode : 0),
        (this.FullPatFlg = void 0 === e.FullPatFlg || e.FullPatFlg),
        (this.PatClr = void 0 !== e.PatClr ? e.PatClr : 3),
        (this.PatHeight = void 0 !== e.PatHeight ? e.PatHeight : 5),
        (this.PatID = void 0 !== e.PatID ? e.PatID : 0),
        (this.PatWidth = void 0 !== e.PatWidth ? e.PatWidth : 5),
        (this.OutPenW = void 0 !== e.OutPenW ? e.OutPenW : 1);
    };
    p.Object.Theme.CRegInfo = Ho;
    class Jo {
      constructor(t) {
        var e = void 0 !== t ? t : {};
        g(this, e),
          (this.Caption = void 0 !== e.Caption ? e.Caption : null),
          (this.IsVisible = void 0 === e.IsVisible || e.IsVisible),
          (this.MaxScale = void 0 !== e.MaxScale ? parseFloat(e.MaxScale) : 0),
          (this.MinScale = void 0 !== e.MinScale ? parseFloat(e.MinScale) : 0),
          (this.RegInfo = void 0 !== e.RegInfo ? e.RegInfo : null),
          (this.LinInfo = void 0 !== e.LinInfo ? e.LinInfo : null),
          (this.PntInfo = void 0 !== e.PntInfo ? e.PntInfo : null);
      }
    }
    p.Object.Theme.CThemeInfo = Jo;
    class $o extends Jo {
      constructor(t, e) {
        super(e || {}), (this.Expression = void 0 !== t ? t : "");
      }
    }
    p.Object.Theme.CChartThemeInfo = $o;
    var Qo = function(t) {
      var e = void 0 !== t ? t : {};
      g(this, e),
        (this.AnnInfoLabel =
          void 0 !== e.AnnInfoLabel ? e.AnnInfoLabel : new qo()),
        (this.DigitLabel = void 0 !== e.DigitLabel ? e.DigitLabel : 0),
        (this.FormatLabel =
          void 0 !== e.FormatLabel ? e.FormatLabel : zo.Unknown),
        (this.IsDrawLabel = void 0 === e.IsDrawLabel || e.IsDrawLabel),
        (this.LineColor = void 0 !== e.LineColor ? e.LineColor : -1),
        (this.MaxLength = void 0 !== e.MaxLength ? e.MaxLength : 30),
        (this.MinRadius = void 0 !== e.MinRadius ? e.MinRadius : 10),
        (this.PieSizeFixFlag =
          void 0 !== e.PieSizeFixFlag ? e.PieSizeFixFlag : 0),
        (this.PieTiltedAngle =
          void 0 !== e.PieTiltedAngle ? e.PieTiltedAngle : 30),
        (this.PlotRadius = void 0 !== e.PlotRadius ? e.PlotRadius : 1),
        (this.ThickPersent = void 0 !== e.ThickPersent ? e.ThickPersent : 10),
        (this.Width = void 0 !== e.Width ? e.Width : 3);
    };
    p.Object.Theme.CChartThemeRepresentInfo = Qo;
    class Zo extends Vo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.ChartType = void 0 !== e.ChartType ? e.ChartType : Wo.Bar),
          (this.ChartThemeInfoArr =
            void 0 !== e.ChartThemeInfoArr ? e.ChartThemeInfoArr : null),
          (this.RepresentInfo =
            void 0 !== e.RepresentInfo ? e.RepresentInfo : null),
          (this.Type = "CChartTheme");
      }
    }
    p.Object.Theme.CChartTheme = Zo;
    class Ko extends Vo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.Expression = void 0 !== e.Expression ? e.Expression : ""),
          (this.Info = void 0 !== e.Info ? e.Info : null),
          (this.Value = void 0 !== e.Value ? e.Value : null),
          (this.Type = "CDotDensityTheme");
      }
    }
    p.Object.Theme.CDotDensityTheme = Ko;
    class ts extends Vo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.ClrInfo = void 0 !== e.ClrInfo ? e.ClrInfo : [25, 57, 89, 121]),
          (this.Type = "CFourColorTheme");
      }
    }
    p.Object.Theme.CFourColorTheme = ts;
    class es extends Vo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.BaseValue = void 0 !== e.BaseValue ? e.BaseValue : 141e-6),
          (this.DispMinus = void 0 !== e.DispMinus && e.DispMinus),
          (this.DispZero = void 0 !== e.DispZero && e.DispZero),
          (this.Expression = void 0 !== e.Expression ? e.Expression : null),
          (this.MinusPntInfo =
            void 0 !== e.MinusPntInfo ? e.MinusPntInfo : null),
          (this.PlusPntInfo = void 0 !== e.PlusPntInfo ? e.PlusPntInfo : null),
          (this.ZeroPntInfo = void 0 !== e.ZeroPntInfo ? e.ZeroPntInfo : null),
          (this.Type = "CGraduatedSymbolTheme");
      }
    }
    p.Object.Theme.CGraduatedSymbolTheme = es;
    var rs = function(t, e, r) {
      g(this, void 0 !== r ? r : {}),
        (this.Expression = void 0 !== t ? t : ""),
        (this.ItemValueArr = void 0 !== e ? e : null);
    };
    p.Object.Theme.ExpInfo = rs;
    class ns extends Vo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.DefaultInfo = void 0 !== e.DefaultInfo ? e.DefaultInfo : null),
          (this.ExpInfoArr = void 0 !== e.ExpInfoArr ? e.ExpInfoArr : null),
          (this.MultiClassThemeInfoArr =
            void 0 !== e.MultiClassThemeInfoArr
              ? e.MultiClassThemeInfoArr
              : null),
          (this.GeoInfoType = void 0 !== e.GeoInfoType ? e.GeoInfoType : null),
          (this.Type = "CMultiClassTheme");
      }
    }
    p.Object.Theme.CMultiClassTheme = ns;
    class is extends Vo {
      constructor(t) {
        super(t || {}), (this.Type = "CRandomTheme");
      }
    }
    p.Object.Theme.CRandomTheme = is;
    class os extends Jo {
      constructor(t, e, r) {
        super(r || {}),
          (this.StartValue = void 0 !== t ? t : ""),
          (this.EndValue = void 0 !== e ? e : "");
      }
    }
    p.Object.Theme.CRangeThemeInfo = os;
    class ss extends Vo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.AllOtherDataItemInfoSource =
            void 0 !== e.AllOtherDataItemInfoSource
              ? e.AllOtherDataItemInfoSource
              : ko.DefaultThemeInfo),
          (this.Expression = void 0 !== e.Expression ? e.Expression : ""),
          (this.DefaultInfo = void 0 !== e.DefaultInfo ? e.DefaultInfo : null),
          (this.RangeThemeInfoArr =
            void 0 !== e.RangeThemeInfoArr ? e.RangeThemeInfoArr : null),
          (this.GeoInfoType = void 0 !== e.GeoInfoType ? e.GeoInfoType : null),
          (this.Type = "CRangeTheme");
      }
    }
    p.Object.Theme.CRangeTheme = ss;
    class as extends Vo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.ThemeInfo = void 0 !== e.ThemeInfo ? e.ThemeInfo : new Jo()),
          (this.Type = "CSimpleTheme");
      }
    }
    p.Object.Theme.CSimpleTheme = as;
    class ls extends Jo {
      constructor(t, e) {
        super(e || {}), (this.Value = void 0 !== t ? t : "");
      }
    }
    p.Object.Theme.CUniqueThemeInfo = ls;
    class us extends Vo {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.DefaultInfo = void 0 !== e.DefaultInfo ? e.DefaultInfo : null),
          (this.Expression = void 0 !== e.Expression ? e.Expression : ""),
          (this.UniqueThemeInfoArr =
            void 0 !== e.UniqueThemeInfoArr ? e.UniqueThemeInfoArr : null),
          (this.GeoInfoType = void 0 !== e.GeoInfoType ? e.GeoInfoType : null),
          (this.Type = "CUniqueTheme");
      }
    }
    p.Object.Theme.CUniqueTheme = us;
    var hs = function(t, e) {
      (this.name = void 0 !== t ? t : null),
        (this.Value = void 0 !== e ? e : null);
    };
    p.Object.Theme.FolderInfoAttribute = hs;
    var cs = function(t, e) {
      (this.name = void 0 !== t ? t : null),
        (this.attribute = void 0 !== e ? e : null);
    };
    p.Object.Theme.FolderInfo = cs;
    var ps = function(t, e, r, n) {
      g(this, void 0 !== n ? n : {}),
        (this.StartValue = void 0 !== t ? t : ""),
        (this.EndValue = void 0 !== e ? e : ""),
        (this.ClassItemType = void 0 !== r ? r : Lt.RangeTheme);
    };
    p.Object.Theme.ItemValue = ps;
    var fs = function(t, e) {
      (this.LayerName = void 0 !== t ? t : null),
        (this.ThemeArr = void 0 !== e ? e : null);
    };
    p.Object.Theme.ThemesInfo = fs;
    class ds extends Ne {
      constructor(t, e) {
        ((e = e || {}).baseUrl = "igs/rest/theme"),
          super(e),
          (this.guid = null !== t ? t : z()),
          (this.p_onSuccess = void 0 !== e.p_onSuccess ? e.p_onSuccess : null);
      }
      onGetThemesInfoSuccess(t) {
        var e = new cs();
        if (
          (v(e, t.result || t),
          null !== e && null !== e.attribute && e.attribute.length > 0)
        ) {
          for (var r = [], n = null, i = 0; i < e.attribute.length; i++)
            if (
              ((r[i] = new fs()),
              null !== e.attribute[i] &&
                ((r[i].LayerName = e.attribute[i].name),
                null !== (n = JSON.parse(e.attribute[i].value)) &&
                  n.length > 0))
            ) {
              r[i].ThemeArr = [];
              for (var o = 0; o < n.length; o++) {
                switch (n[o].name) {
                  case "CMultiClassTheme":
                    r[i].ThemeArr[o] = new ns();
                    break;
                  case "CSimpleTheme":
                    r[i].ThemeArr[o] = new as();
                    break;
                  case "CChartTheme":
                    r[i].ThemeArr[o] = new Zo();
                    break;
                  case "CGraduatedSymbolTheme":
                    r[i].ThemeArr[o] = new es();
                    break;
                  case "CDotDensityTheme":
                    r[i].ThemeArr[o] = new Ko();
                    break;
                  case "CRandomTheme":
                    r[i].ThemeArr[o] = new is();
                    break;
                  case "CFourColorTheme":
                    r[i].ThemeArr[o] = new ts();
                    break;
                  case "CUniqueTheme":
                    r[i].ThemeArr[o] = new us();
                    break;
                  case "CRangeTheme":
                    r[i].ThemeArr[o] = new ss();
                }
                v(r[i].ThemeArr[o], JSON.parse(n[o].value));
              }
            }
          null !== this.p_onSuccess &&
            "function" == typeof this.p_onSuccess &&
            this.p_onSuccess(r);
        }
      }
      getThemesInfo(t, e, r, n) {
        var i = this;
        i.p_onSuccess = r;
        var o = Math.random();
        i.partUrl = t + "/get?idxArr=" + e + "&r=" + o + "&guid=" + i.guid;
        var s = i.getFullUrl();
        new me(s, {
          eventListeners: {
            scope: i,
            processCompleted: i.onGetThemesInfoSuccess,
            processFailed: n
          }
        }).processAsync();
      }
      removeThemesInfo(t, e, r, n) {
        var i = this,
          o = Math.random();
        i.partUrl = t + "/remove?idxArr=" + e + "&r=" + o + "&guid=" + i.guid;
        var s = i.getFullUrl();
        new me(s, {
          eventListeners: { scope: i, processCompleted: r, processFailed: n }
        }).processAsync();
      }
      updateThemesInfo(t, e, r, n, i) {
        var o = this;
        Math.random(),
          (o.partUrl = t + "/update?idxArr=" + e + "&guid=" + this.guid);
        var s = o.getFullUrl(),
          a = new cs();
        if (null !== r && r.length > 0) {
          (a.name = "ThemeInfo"), (a.attribute = []);
          for (var l = 0; l < r.length; l++)
            if (
              ((a.attribute[l] = new hs()),
              (a.attribute[l].name = r[l].LayerName),
              null !== r[l].ThemeArr && r[l].ThemeArr.length > 0)
            ) {
              for (var u = [], h = 0; h < r[l].ThemeArr.length; h++)
                null !== r[l].ThemeArr[h] &&
                  (u[h] = new hs(
                    r[l].ThemeArr[h].Type,
                    JSON.stringify(r[l].ThemeArr[h])
                  ));
              a.attribute[l].value = JSON.stringify(u);
            }
        }
        new me(s, {
          eventListeners: { scope: o, processCompleted: n, processFailed: i }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(a),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
      addThemesInfo(t, e, r, n, i) {
        var o = this;
        Math.random(),
          (o.partUrl = t + "/add?idxArr=" + e + "&guid=" + this.guid);
        var s = o.getFullUrl(),
          a = new cs();
        if (null !== r && r.length > 0) {
          (a.name = "ThemeInfo"), (a.attribute = []);
          for (var l = 0; l < r.length; l++)
            if (
              ((a.attribute[l] = new hs()),
              (a.attribute[l].name = r[l].LayerName),
              null !== r[l].ThemeArr && r[l].ThemeArr.length > 0)
            ) {
              for (var u = [], h = 0; h < r[l].ThemeArr.length; h++)
                null !== r[l].ThemeArr[h] &&
                  (u[h] = new hs(
                    r[l].ThemeArr[h].Type,
                    JSON.stringify(r[l].ThemeArr[h])
                  ));
              a.attribute[l].value = JSON.stringify(u);
            }
        }
        new me(s, {
          eventListeners: { scope: o, processCompleted: n, processFailed: i }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(a),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
    }
    p.Service.ThemeOper = ds;
    var ys = function(t) {
      return t.getAttributeNS("http://www.w3.org/1999/xlink", "href");
    };
    p.XLink.readHref = ys;
    var gs = function(t, e) {
        return t > e ? 1 : t < e ? -1 : 0;
      },
      ms = function(t, e) {
        const r = Array.isArray(e) ? e : [e],
          n = r.length;
        for (let e = 0; e < n; e++) t[t.length] = r[e];
      };
    (p.array.binarySearch = function(t, e, r) {
      let n, i;
      const o = r || gs;
      let s = 0,
        a = t.length,
        l = !1;
      for (; s < a; )
        (n = s + ((a - s) >> 1)),
          (i = +o(t[n], e)),
          i < 0 ? (s = n + 1) : ((a = n), (l = !i));
      return l ? s : ~s;
    }),
      (p.array.numberSafeCompareFunction = gs),
      (p.array.includes = function(t, e) {
        return t.indexOf(e) >= 0;
      }),
      (p.array.linearFindNearest = function(t, e, r) {
        const n = t.length;
        if (t[0] <= e) return 0;
        if (e <= t[n - 1]) return n - 1;
        {
          let i;
          if (r > 0) {
            for (i = 1; i < n; ++i) if (t[i] < e) return i - 1;
          } else if (r < 0) {
            for (i = 1; i < n; ++i) if (t[i] <= e) return i;
          } else
            for (i = 1; i < n; ++i) {
              if (t[i] == e) return i;
              if (t[i] < e) return t[i - 1] - e < e - t[i] ? i - 1 : i;
            }
          return n - 1;
        }
      }),
      (p.array.reverseSubArray = function(t, e, r) {
        for (; e < r; ) {
          const n = t[e];
          (t[e] = t[r]), (t[r] = n), ++e, --r;
        }
      }),
      (p.array.extend = ms),
      (p.array.remove = function(t, e) {
        const r = t.indexOf(e),
          n = r > -1;
        return n && t.splice(r, 1), n;
      }),
      (p.array.find = function(t, e) {
        const r = t.length >>> 0;
        let n;
        for (let i = 0; i < r; i++) if (((n = t[i]), e(n, i, t))) return n;
        return null;
      }),
      (p.array.equals = function(t, e) {
        const r = t.length;
        if (r !== e.length) return !1;
        for (let n = 0; n < r; n++) if (t[n] !== e[n]) return !1;
        return !0;
      }),
      (p.array.stableSort = function(t, e) {
        const r = t.length,
          n = Array(t.length);
        let i;
        for (i = 0; i < r; i++) n[i] = { index: i, value: t[i] };
        for (
          n.sort(function(t, r) {
            return e(t.value, r.value) || t.index - r.index;
          }),
            i = 0;
          i < t.length;
          i++
        )
          t[i] = n[i].value;
      }),
      (p.array.findIndex = function(t, e) {
        let r;
        return t.every(function(n, i) {
          return (r = i), !e(n, i, t);
        })
          ? -1
          : r;
      }),
      (p.array.isSorted = function(t, e, r) {
        const n = e || gs;
        return t.every(function(e, i) {
          if (0 === i) return !0;
          const o = n(t[i - 1], e);
          return !(o > 0 || (r && 0 === o));
        });
      });
    const vs = document.implementation.createDocument("", "", null);
    var _s = function(t, e) {
        return vs.createElementNS(t, e);
      },
      xs = function(t, e) {
        return bs(t, e, []).join("");
      },
      bs = function(t, e, r) {
        if (
          t.nodeType == Node.CDATA_SECTION_NODE ||
          t.nodeType == Node.TEXT_NODE
        )
          e
            ? r.push(String(t.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
            : r.push(t.nodeValue);
        else {
          let n;
          for (n = t.firstChild; n; n = n.nextSibling) bs(n, e, r);
        }
        return r;
      },
      Ss = function(t) {
        return t instanceof Document;
      },
      Is = function(t) {
        return t instanceof Node;
      },
      ws = function(t) {
        return new DOMParser().parseFromString(t, "application/xml");
      },
      Ns = function(t, e) {
        return function(r, n) {
          const i = t.call(void 0 !== e ? e : this, r, n);
          void 0 !== i && n[n.length - 1].push(i);
        };
      },
      Cs = function(t, e, r) {
        return function(n, i) {
          const o = t.call(void 0 !== r ? r : this, n, i);
          if (void 0 !== o) {
            const t = i[i.length - 1],
              r = void 0 !== e ? e : n.localName;
            let s;
            (s = r in t ? t[r] : (t[r] = [])), s.push(o);
          }
        };
      },
      Es = function(t, e, r) {
        return function(n, i) {
          const o = t.call(void 0 !== r ? r : this, n, i);
          void 0 !== o && (i[i.length - 1][void 0 !== e ? e : n.localName] = o);
        };
      },
      Ms = function(t, e) {
        const r = t;
        return function(t, n, i) {
          const o = n[n.length - 1].node;
          let s = r;
          void 0 === s && (s = i);
          const a = void 0 !== e ? e : o.namespaceURI;
          return _s(a, s);
        };
      };
    const Ps = Ms();
    var Os = function(t, e, r) {
        const n = void 0 !== r ? r : {};
        let i, o;
        for (i = 0, o = t.length; i < o; ++i) n[t[i]] = e;
        return n;
      },
      Ls = function(t, e, r, n) {
        let i;
        for (i = e.firstElementChild; i; i = i.nextElementSibling) {
          const e = t[i.namespaceURI];
          if (void 0 !== e) {
            const t = e[i.localName];
            void 0 !== t && t.call(n, i, r);
          }
        }
      },
      Ts = function(t, e, r, n, i) {
        return n.push(t), Ls(e, r, n, i), n.pop();
      },
      As = function(t, e, r, n, i, o) {
        const s = (void 0 !== i ? i : r).length;
        let a, l;
        for (let u = 0; u < s; ++u)
          (a = r[u]),
            void 0 !== a &&
              ((l = e.call(
                void 0 !== o ? o : this,
                a,
                n,
                void 0 !== i ? i[u] : void 0
              )),
              void 0 !== l && t[l.namespaceURI][l.localName].call(o, l, a, n));
      };
    (p.xml.DOCUMENT = vs),
      (p.xml.XML_SCHEMA_INSTANCE_URI =
        "http://www.w3.org/2001/XMLSchema-instance"),
      (p.xml.createElementNS = _s),
      (p.xml.getAllTextContent = xs),
      (p.xml.getAllTextContent_ = bs),
      (p.xml.isDocument = Ss),
      (p.xml.isNode = Is),
      (p.xml.getAttributeNS = function(t, e, r) {
        return t.getAttributeNS(e, r) || "";
      }),
      (p.xml.parse = ws),
      (p.xml.makeArrayExtender = function(t, e) {
        return function(r, n) {
          const i = t.call(void 0 !== e ? e : this, r, n);
          if (void 0 !== i) {
            const t = n[n.length - 1];
            ms(t, i);
          }
        };
      }),
      (p.xml.makeArrayPusher = Ns),
      (p.xml.makeReplacer = function(t, e) {
        return function(r, n) {
          const i = t.call(void 0 !== e ? e : this, r, n);
          void 0 !== i && (n[n.length - 1] = i);
        };
      }),
      (p.xml.makeObjectPropertyPusher = Cs),
      (p.xml.makeObjectPropertySetter = Es),
      (p.xml.makeChildAppender = function(t, e) {
        return function(r, n, i) {
          t.call(void 0 !== e ? e : this, r, n, i),
            i[i.length - 1].node.appendChild(r);
        };
      }),
      (p.xml.makeArraySerializer = function(t, e) {
        let r, n;
        return function(e, i, o) {
          if (void 0 === r) {
            r = {};
            const i = {};
            (i[e.localName] = t),
              (r[e.namespaceURI] = i),
              (n = Ms(e.localName));
          }
          As(r, n, i, o);
        };
      }),
      (p.xml.makeSimpleNodeFactory = Ms),
      (p.xml.OBJECT_PROPERTY_NODE_FACTORY = Ps),
      (p.xml.makeSequence = function(t, e) {
        const r = e.length,
          n = new Array(r);
        for (let i = 0; i < r; ++i) n[i] = t[e[i]];
        return n;
      }),
      (p.xml.makeStructureNS = Os),
      (p.xml.parseNode = Ls),
      (p.xml.pushParseAndPop = Ts),
      (p.xml.serialize = As),
      (p.xml.applyTransform = function(t, e, r, n, i, o, s) {
        return i.push(t), As(e, r, n, i, o, s), i.pop();
      });
    class Rs {
      read(t) {
        if (Ss(t)) return this.readFromDocument(t);
        if (Is(t)) return this.readFromNode(t);
        if ("string" == typeof t) {
          const e = ws(t);
          return this.readFromDocument(e);
        }
        return null;
      }
      readFromDocument(t) {}
      readFromNode(t) {}
    }
    const Fs = Rs;
    p.Format.XML = Rs;
    var Ds = function(t, e, r) {
      const n = void 0 !== r ? t.toFixed(r) : "" + t;
      let i = n.indexOf(".");
      return (
        (i = -1 === i ? n.length : i),
        i > e ? n : new Array(1 + e - i).join("0") + n
      );
    };
    (p.string.padNumber = Ds),
      (p.string.compareVersions = function(t, e) {
        const r = ("" + t).split("."),
          n = ("" + e).split(".");
        for (let t = 0; t < Math.max(r.length, n.length); t++) {
          const e = parseInt(r[t] || "0", 10),
            i = parseInt(n[t] || "0", 10);
          if (e > i) return 1;
          if (i > e) return -1;
        }
        return 0;
      });
    var js = function(t) {
        const e = /^\s*(true|1)|(false|0)\s*$/.exec(t);
        return e ? void 0 !== e[1] || !1 : void 0;
      },
      Us = function(t) {
        const e = xs(t, !1);
        return Gs(e);
      },
      Gs = function(t) {
        const e = /^\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)\s*$/i.exec(t);
        return e ? parseFloat(e[1]) : void 0;
      },
      Bs = function(t) {
        const e = xs(t, !1);
        return ks(e);
      },
      ks = function(t) {
        const e = /^\s*(\d+)\s*$/.exec(t);
        return e ? parseInt(e[1], 10) : void 0;
      },
      qs = function(t) {
        return xs(t, !1).trim();
      },
      zs = function(t, e) {
        t.appendChild(vs.createTextNode(e));
      };
    (p.xsd.readBoolean = function(t) {
      const e = xs(t, !1);
      return js(e);
    }),
      (p.xsd.readBooleanString = js),
      (p.xsd.readDateTime = function(t) {
        const e = xs(t, !1),
          r = Date.parse(e);
        return isNaN(r) ? void 0 : r / 1e3;
      }),
      (p.xsd.readDecimal = Us),
      (p.xsd.readDecimalString = Gs),
      (p.xsd.readNonNegativeInteger = Bs),
      (p.xsd.readNonNegativeIntegerString = ks),
      (p.xsd.readString = qs),
      (p.xsd.writeBooleanTextNode = function(t, e) {
        zs(t, e ? "1" : "0");
      }),
      (p.xsd.writeCDATASection = function(t, e) {
        t.appendChild(vs.createCDATASection(e));
      }),
      (p.xsd.writeDateTimeTextNode = function(t, e) {
        const r = new Date(1e3 * e),
          n =
            r.getUTCFullYear() +
            "-" +
            Ds(r.getUTCMonth() + 1, 2) +
            "-" +
            Ds(r.getUTCDate(), 2) +
            "T" +
            Ds(r.getUTCHours(), 2) +
            ":" +
            Ds(r.getUTCMinutes(), 2) +
            ":" +
            Ds(r.getUTCSeconds(), 2) +
            "Z";
        t.appendChild(vs.createTextNode(n));
      }),
      (p.xsd.writeDecimalTextNode = function(t, e) {
        const r = e.toPrecision();
        t.appendChild(vs.createTextNode(r));
      }),
      (p.xsd.writeNonNegativeIntegerTextNode = function(t, e) {
        const r = e.toString();
        t.appendChild(vs.createTextNode(r));
      }),
      (p.xsd.writeStringTextNode = zs);
    const Vs = [null, "http://www.opengis.net/wms"],
      Ws = Os(Vs, {
        Service: Es(function(t, e) {
          return Ts({}, Ys, t, e);
        }),
        Capability: Es(function(t, e) {
          return Ts({}, Xs, t, e);
        })
      }),
      Xs = Os(Vs, {
        Request: Es(function(t, e) {
          return Ts({}, ea, t, e);
        }),
        Exception: Es(function(t, e) {
          return Ts([], Qs, t, e);
        }),
        Layer: Es(function(t, e) {
          return Ts({}, Zs, t, e);
        })
      });
    const Ys = Os(Vs, {
        Name: Es(qs),
        Title: Es(qs),
        Abstract: Es(qs),
        KeywordList: Es(ca),
        OnlineResource: Es(ys),
        ContactInformation: Es(function(t, e) {
          return Ts({}, Hs, t, e);
        }),
        Fees: Es(qs),
        AccessConstraints: Es(qs),
        LayerLimit: Es(Bs),
        MaxWidth: Es(Bs),
        MaxHeight: Es(Bs)
      }),
      Hs = Os(Vs, {
        ContactPersonPrimary: Es(function(t, e) {
          return Ts({}, Js, t, e);
        }),
        ContactPosition: Es(qs),
        ContactAddress: Es(function(t, e) {
          return Ts({}, $s, t, e);
        }),
        ContactVoiceTelephone: Es(qs),
        ContactFacsimileTelephone: Es(qs),
        ContactElectronicMailAddress: Es(qs)
      }),
      Js = Os(Vs, { ContactPerson: Es(qs), ContactOrganization: Es(qs) }),
      $s = Os(Vs, {
        AddressType: Es(qs),
        Address: Es(qs),
        City: Es(qs),
        StateOrProvince: Es(qs),
        PostCode: Es(qs),
        Country: Es(qs)
      }),
      Qs = Os(Vs, { Format: Ns(qs) }),
      Zs = Os(Vs, {
        Name: Es(qs),
        Title: Es(qs),
        Abstract: Es(qs),
        KeywordList: Es(ca),
        SRS: Cs(qs),
        EX_GeographicBoundingBox: Es(function(t, e) {
          const r = Ts({}, ta, t, e);
          if (!r) return;
          const n = r.westBoundLongitude,
            i = r.southBoundLatitude,
            o = r.eastBoundLongitude,
            s = r.northBoundLatitude;
          return void 0 !== n && void 0 !== i && void 0 !== o && void 0 !== s
            ? [n, i, o, s]
            : void 0;
        }),
        BoundingBox: Cs(function(t, e) {
          const r = [
              Gs(t.getAttribute("minx")),
              Gs(t.getAttribute("miny")),
              Gs(t.getAttribute("maxx")),
              Gs(t.getAttribute("maxy"))
            ],
            n = [Gs(t.getAttribute("resx")), Gs(t.getAttribute("resy"))];
          return { srs: t.getAttribute("SRS"), extent: r, res: n };
        }),
        Dimension: Cs(function(t, e) {
          return {
            name: t.getAttribute("name"),
            units: t.getAttribute("units"),
            unitSymbol: t.getAttribute("unitSymbol"),
            default: t.getAttribute("default"),
            multipleValues: js(t.getAttribute("multipleValues")),
            nearestValue: js(t.getAttribute("nearestValue")),
            current: js(t.getAttribute("current")),
            values: qs(t)
          };
        }),
        Attribution: Es(function(t, e) {
          return Ts({}, Ks, t, e);
        }),
        AuthorityURL: Cs(function(t, e) {
          const r = la(t, e);
          if (r) return (r.name = t.getAttribute("name")), r;
        }),
        Identifier: Cs(qs),
        MetadataURL: Cs(function(t, e) {
          const r = la(t, e);
          if (r) return (r.type = t.getAttribute("type")), r;
        }),
        DataURL: Cs(la),
        FeatureListURL: Cs(la),
        Style: Cs(function(t, e) {
          return Ts({}, oa, t, e);
        }),
        MinScaleDenominator: Es(Us),
        MaxScaleDenominator: Es(Us),
        Layer: Cs(function(t, e) {
          const r = e[e.length - 1],
            n = Ts({}, Zs, t, e);
          if (!n) return;
          let i = js(t.getAttribute("queryable"));
          void 0 === i && (i = r.queryable), (n.queryable = void 0 !== i && i);
          let o = ks(t.getAttribute("cascaded"));
          void 0 === o && (o = r.cascaded), (n.cascaded = o);
          let s = js(t.getAttribute("opaque"));
          void 0 === s && (s = r.opaque), (n.opaque = void 0 !== s && s);
          let a = js(t.getAttribute("noSubsets"));
          void 0 === a && (a = r.noSubsets), (n.noSubsets = void 0 !== a && a);
          let l = Gs(t.getAttribute("fixedWidth"));
          l || (l = r.fixedWidth), (n.fixedWidth = l);
          let u = Gs(t.getAttribute("fixedHeight"));
          return (
            u || (u = r.fixedHeight),
            (n.fixedHeight = u),
            ["Style", "SRS", "AuthorityURL"].forEach(function(t) {
              if (t in r) {
                const e = n[t] || [];
                n[t] = e.concat(r[t]);
              }
            }),
            [
              "EX_GeographicBoundingBox",
              "BoundingBox",
              "Dimension",
              "Attribution",
              "MinScaleDenominator",
              "MaxScaleDenominator"
            ].forEach(function(t) {
              if (!(t in n)) {
                const e = r[t];
                n[t] = e;
              }
            }),
            n
          );
        })
      }),
      Ks = Os(Vs, { Title: Es(qs), OnlineResource: Es(ys), LogoURL: Es(ha) }),
      ta = Os(Vs, {
        westBoundLongitude: Es(Us),
        eastBoundLongitude: Es(Us),
        southBoundLatitude: Es(Us),
        northBoundLatitude: Es(Us)
      }),
      ea = Os(Vs, {
        GetCapabilities: Es(ua),
        GetMap: Es(ua),
        GetFeatureInfo: Es(ua)
      }),
      ra = Os(Vs, {
        Format: Cs(qs),
        DCPType: Cs(function(t, e) {
          return Ts({}, na, t, e);
        })
      }),
      na = Os(Vs, {
        HTTP: Es(function(t, e) {
          return Ts({}, ia, t, e);
        })
      }),
      ia = Os(Vs, { Get: Es(la), Post: Es(la) }),
      oa = Os(Vs, {
        Name: Es(qs),
        Title: Es(qs),
        Abstract: Es(qs),
        LegendURL: Cs(ha),
        StyleSheetURL: Es(la),
        StyleURL: Es(la)
      }),
      sa = Os(Vs, { Format: Es(qs), OnlineResource: Es(ys) }),
      aa = Os(Vs, { Keyword: Ns(qs) });
    function la(t, e) {
      return Ts({}, sa, t, e);
    }
    function ua(t, e) {
      return Ts({}, ra, t, e);
    }
    function ha(t, e) {
      const r = la(t, e);
      if (r) {
        const e = [ks(t.getAttribute("width")), ks(t.getAttribute("height"))];
        return (r.size = e), r;
      }
    }
    function ca(t, e) {
      return Ts([], aa, t, e);
    }
    p.Format.WMSCapabilities = class extends Fs {
      constructor() {
        super(), (this.version = void 0);
      }
      readFromDocument(t) {
        for (let e = t.firstChild; e; e = e.nextSibling)
          if (e.nodeType == Node.ELEMENT_NODE) return this.readFromNode(e);
        return null;
      }
      readFromNode(t) {
        this.version = t.getAttribute("version").trim();
        return Ts({ version: this.version }, Ws, t, []) || null;
      }
    };
    var pa = {
      BOTTOM_LEFT: "bottom-left",
      BOTTOM_RIGHT: "bottom-right",
      TOP_LEFT: "top-left",
      TOP_RIGHT: "top-right"
    };
    p.Enum.Corner = pa;
    var fa = {
      UNKNOWN: 0,
      INTERSECTING: 1,
      ABOVE: 2,
      RIGHT: 4,
      BELOW: 8,
      LEFT: 16
    };
    p.Enum.Relationship = fa;
    var da = function(t) {
        const e = ma();
        for (let r = 0, n = t.length; r < n; ++r) xa(e, t[r]);
        return e;
      },
      ya = function(t, e, r) {
        return t[0] <= e && e <= t[2] && t[1] <= r && r <= t[3];
      },
      ga = function(t, e) {
        const r = t[0],
          n = t[1],
          i = t[2],
          o = t[3],
          s = e[0],
          a = e[1];
        let l = fa.UNKNOWN;
        return (
          s < r ? (l |= fa.LEFT) : s > i && (l |= fa.RIGHT),
          a < n ? (l |= fa.BELOW) : a > o && (l |= fa.ABOVE),
          l === fa.UNKNOWN && (l = fa.INTERSECTING),
          l
        );
      },
      ma = function() {
        return [1 / 0, 1 / 0, -1 / 0, -1 / 0];
      },
      va = function(t, e, r, n, i) {
        return i
          ? ((i[0] = t), (i[1] = e), (i[2] = r), (i[3] = n), i)
          : [t, e, r, n];
      },
      _a = function(t) {
        return va(1 / 0, 1 / 0, -1 / 0, -1 / 0, t);
      },
      xa = function(t, e) {
        e[0] < t[0] && (t[0] = e[0]),
          e[0] > t[2] && (t[2] = e[0]),
          e[1] < t[1] && (t[1] = e[1]),
          e[1] > t[3] && (t[3] = e[1]);
      },
      ba = function(t, e) {
        for (let r = 0, n = e.length; r < n; ++r) xa(t, e[r]);
        return t;
      },
      Sa = function(t, e, r, n, i) {
        for (; r < n; r += i) wa(t, e[r], e[r + 1]);
        return t;
      },
      Ia = function(t, e) {
        for (let r = 0, n = e.length; r < n; ++r) ba(t, e[r]);
        return t;
      },
      wa = function(t, e, r) {
        (t[0] = Math.min(t[0], e)),
          (t[1] = Math.min(t[1], r)),
          (t[2] = Math.max(t[2], e)),
          (t[3] = Math.max(t[3], r));
      },
      Na = function(t) {
        let e = 0;
        return Ra(t) || (e = Ta(t) * Ma(t)), e;
      },
      Ca = function(t) {
        return [t[0], t[1]];
      },
      Ea = function(t) {
        return [t[2], t[1]];
      },
      Ma = function(t) {
        return t[3] - t[1];
      },
      Pa = function(t, e, r) {
        const n = r || ma();
        return (
          Aa(t, e)
            ? (t[0] > e[0] ? (n[0] = t[0]) : (n[0] = e[0]),
              t[1] > e[1] ? (n[1] = t[1]) : (n[1] = e[1]),
              t[2] < e[2] ? (n[2] = t[2]) : (n[2] = e[2]),
              t[3] < e[3] ? (n[3] = t[3]) : (n[3] = e[3]))
            : _a(n),
          n
        );
      },
      Oa = function(t) {
        return [t[0], t[3]];
      },
      La = function(t) {
        return [t[2], t[3]];
      },
      Ta = function(t) {
        return t[2] - t[0];
      },
      Aa = function(t, e) {
        return t[0] <= e[2] && t[2] >= e[0] && t[1] <= e[3] && t[3] >= e[1];
      },
      Ra = function(t) {
        return t[2] < t[0] || t[3] < t[1];
      };
    (p.extent.boundingExtent = da),
      (p.extent.buffer = function(t, e, r) {
        return r
          ? ((r[0] = t[0] - e),
            (r[1] = t[1] - e),
            (r[2] = t[2] + e),
            (r[3] = t[3] + e),
            r)
          : [t[0] - e, t[1] - e, t[2] + e, t[3] + e];
      }),
      (p.extent.clone = function(t, e) {
        return e
          ? ((e[0] = t[0]), (e[1] = t[1]), (e[2] = t[2]), (e[3] = t[3]), e)
          : t.slice();
      }),
      (p.extent.closestSquaredDistanceXY = function(t, e, r) {
        let n, i;
        return (
          (n = e < t[0] ? t[0] - e : t[2] < e ? e - t[2] : 0),
          (i = r < t[1] ? t[1] - r : t[3] < r ? r - t[3] : 0),
          n * n + i * i
        );
      }),
      (p.extent.containsCoordinate = function(t, e) {
        return ya(t, e[0], e[1]);
      }),
      (p.extent.containsExtent = function(t, e) {
        return t[0] <= e[0] && e[2] <= t[2] && t[1] <= e[1] && e[3] <= t[3];
      }),
      (p.extent.containsXY = ya),
      (p.extent.coordinateRelationship = ga),
      (p.extent.createEmpty = ma),
      (p.extent.createOrUpdate = va),
      (p.extent.createOrUpdateEmpty = _a),
      (p.extent.createOrUpdateFromCoordinate = function(t, e) {
        const r = t[0],
          n = t[1];
        return va(r, n, r, n, e);
      }),
      (p.extent.createOrUpdateFromCoordinates = function(t, e) {
        const r = _a(e);
        return ba(r, t);
      }),
      (p.extent.createOrUpdateFromFlatCoordinates = function(t, e, r, n, i) {
        const o = _a(i);
        return Sa(o, t, e, r, n);
      }),
      (p.extent.createOrUpdateFromRings = function(t, e) {
        const r = _a(e);
        return Ia(r, t);
      }),
      (p.extent.equals = function(t, e) {
        return t[0] == e[0] && t[2] == e[2] && t[1] == e[1] && t[3] == e[3];
      }),
      (p.extent.extend = function(t, e) {
        return (
          e[0] < t[0] && (t[0] = e[0]),
          e[2] > t[2] && (t[2] = e[2]),
          e[1] < t[1] && (t[1] = e[1]),
          e[3] > t[3] && (t[3] = e[3]),
          t
        );
      }),
      (p.extent.extendCoordinate = xa),
      (p.extent.extendCoordinates = ba),
      (p.extent.extendFlatCoordinates = Sa),
      (p.extent.extendRings = Ia),
      (p.extent.extendXY = wa),
      (p.extent.forEachCorner = function(t, e, r) {
        let n;
        return (
          (n = e.call(r, Ca(t))),
          n ||
            ((n = e.call(r, Ea(t))),
            n ||
              ((n = e.call(r, La(t))), n || ((n = e.call(r, Oa(t))), n || !1)))
        );
      }),
      (p.extent.getArea = Na),
      (p.extent.getBottomLeft = Ca),
      (p.extent.getBottomRight = Ea),
      (p.extent.getCenter = function(t) {
        return [(t[0] + t[2]) / 2, (t[1] + t[3]) / 2];
      }),
      (p.extent.getCorner = function(t, e) {
        let r;
        return (
          e === pa.BOTTOM_LEFT
            ? (r = Ca(t))
            : e === pa.BOTTOM_RIGHT
            ? (r = Ea(t))
            : e === pa.TOP_LEFT
            ? (r = Oa(t))
            : e === pa.TOP_RIGHT && (r = La(t)),
          r
        );
      }),
      (p.extent.getEnlargedArea = function(t, e) {
        const r = Math.min(t[0], e[0]),
          n = Math.min(t[1], e[1]);
        return (Math.max(t[2], e[2]) - r) * (Math.max(t[3], e[3]) - n);
      }),
      (p.extent.getForViewAndSize = function(t, e, r, n, i) {
        const o = (e * n[0]) / 2,
          s = (e * n[1]) / 2,
          a = Math.cos(r),
          l = Math.sin(r),
          u = o * a,
          h = o * l,
          c = s * a,
          p = s * l,
          f = t[0],
          d = t[1],
          y = f - u + p,
          g = f - u - p,
          m = f + u - p,
          v = f + u + p,
          _ = d - h - c,
          x = d - h + c,
          b = d + h + c,
          S = d + h - c;
        return va(
          Math.min(y, g, m, v),
          Math.min(_, x, b, S),
          Math.max(y, g, m, v),
          Math.max(_, x, b, S),
          i
        );
      }),
      (p.extent.getHeight = Ma),
      (p.extent.getIntersectionArea = function(t, e) {
        const r = Pa(t, e);
        return Na(r);
      }),
      (p.extent.getIntersection = Pa),
      (p.extent.getMargin = function(t) {
        return Ta(t) + Ma(t);
      }),
      (p.extent.getSize = function(t) {
        return [t[2] - t[0], t[3] - t[1]];
      }),
      (p.extent.getTopLeft = Oa),
      (p.extent.getTopRight = La),
      (p.extent.getWidth = Ta),
      (p.extent.intersects = Aa),
      (p.extent.isEmpty = Ra),
      (p.extent.returnOrUpdate = function(t, e) {
        return e
          ? ((e[0] = t[0]), (e[1] = t[1]), (e[2] = t[2]), (e[3] = t[3]), e)
          : t;
      }),
      (p.extent.scaleFromCenter = function(t, e) {
        const r = ((t[2] - t[0]) / 2) * (e - 1),
          n = ((t[3] - t[1]) / 2) * (e - 1);
        (t[0] -= r), (t[2] += r), (t[1] -= n), (t[3] += n);
      }),
      (p.extent.intersectsSegment = function(t, e, r) {
        let n = !1;
        const i = ga(t, e),
          o = ga(t, r);
        if (i === fa.INTERSECTING || o === fa.INTERSECTING) n = !0;
        else {
          const s = t[0],
            a = t[1],
            l = t[2],
            u = t[3],
            h = e[0],
            c = e[1],
            p = r[0],
            f = r[1],
            d = (f - c) / (p - h);
          let y, g;
          o & fa.ABOVE &&
            !(i & fa.ABOVE) &&
            ((y = p - (f - u) / d), (n = y >= s && y <= l)),
            n ||
              !(o & fa.RIGHT) ||
              i & fa.RIGHT ||
              ((g = f - (p - l) * d), (n = g >= a && g <= u)),
            n ||
              !(o & fa.BELOW) ||
              i & fa.BELOW ||
              ((y = p - (f - a) / d), (n = y >= s && y <= l)),
            n ||
              !(o & fa.LEFT) ||
              i & fa.LEFT ||
              ((g = f - (p - s) * d), (n = g >= a && g <= u));
        }
        return n;
      }),
      (p.extent.applyTransform = function(t, e, r) {
        const n = [t[0], t[1], t[0], t[3], t[2], t[1], t[2], t[3]];
        return (
          e(n, n, 2),
          (function(t, e, r) {
            const n = Math.min.apply(null, t),
              i = Math.min.apply(null, e),
              o = Math.max.apply(null, t),
              s = Math.max.apply(null, e);
            return va(n, i, o, s, r);
          })([n[0], n[2], n[4], n[6]], [n[1], n[3], n[5], n[7]], r)
        );
      });
    const Fa = [null, "http://www.opengis.net/ows/1.1"],
      Da = Os(Fa, {
        ServiceIdentification: Es(function(t, e) {
          return Ts({}, Ja, t, e);
        }),
        ServiceProvider: Es(function(t, e) {
          return Ts({}, $a, t, e);
        }),
        OperationsMetadata: Es(function(t, e) {
          return Ts({}, Wa, t, e);
        })
      });
    class ja extends Fs {
      constructor() {
        super();
      }
      readFromDocument(t) {
        for (let e = t.firstChild; e; e = e.nextSibling)
          if (e.nodeType == Node.ELEMENT_NODE) return this.readFromNode(e);
        return null;
      }
      readFromNode(t) {
        return Ts({}, Da, t, []) || null;
      }
    }
    const Ua = Os(Fa, {
        DeliveryPoint: Es(qs),
        City: Es(qs),
        AdministrativeArea: Es(qs),
        PostalCode: Es(qs),
        Country: Es(qs),
        ElectronicMailAddress: Es(qs)
      }),
      Ga = Os(Fa, {
        Value: Cs(function(t, e) {
          return qs(t);
        })
      }),
      Ba = Os(Fa, {
        AllowedValues: Es(function(t, e) {
          return Ts({}, Ga, t, e);
        })
      }),
      ka = Os(Fa, {
        Phone: Es(function(t, e) {
          return Ts({}, Xa, t, e);
        }),
        Address: Es(function(t, e) {
          return Ts({}, Ua, t, e);
        })
      }),
      qa = Os(Fa, {
        HTTP: Es(function(t, e) {
          return Ts({}, za, t, e);
        })
      }),
      za = Os(Fa, {
        Get: Cs(function(t, e) {
          const r = ys(t);
          if (r) return Ts({ href: r }, Ya, t, e);
        }),
        Post: void 0
      }),
      Va = Os(Fa, {
        DCP: Es(function(t, e) {
          return Ts({}, qa, t, e);
        })
      }),
      Wa = Os(Fa, {
        Operation: function(t, e) {
          const r = t.getAttribute("name"),
            n = Ts({}, Va, t, e);
          n && (e[e.length - 1][r] = n);
        }
      }),
      Xa = Os(Fa, { Voice: Es(qs), Facsimile: Es(qs) }),
      Ya = Os(Fa, {
        Constraint: Cs(function(t, e) {
          const r = t.getAttribute("name");
          if (r) return Ts({ name: r }, Ba, t, e);
        })
      }),
      Ha = Os(Fa, {
        IndividualName: Es(qs),
        PositionName: Es(qs),
        ContactInfo: Es(function(t, e) {
          return Ts({}, ka, t, e);
        })
      }),
      Ja = Os(Fa, {
        Abstract: Es(qs),
        AccessConstraints: Es(qs),
        Fees: Es(qs),
        Title: Es(qs),
        ServiceTypeVersion: Es(qs),
        ServiceType: Es(qs)
      }),
      $a = Os(Fa, {
        ProviderName: Es(qs),
        ProviderSite: Es(ys),
        ServiceContact: Es(function(t, e) {
          return Ts({}, Ha, t, e);
        })
      }),
      Qa = ja;
    p.Format.OWS = ja;
    const Za = [null, "http://www.opengis.net/wmts/1.0"],
      Ka = [null, "http://www.opengis.net/ows/1.1"],
      tl = Os(Za, {
        Contents: Es(function(t, e) {
          return Ts({}, el, t, e);
        })
      });
    const el = Os(Za, {
        Layer: Cs(function(t, e) {
          return Ts({}, rl, t, e);
        }),
        TileMatrixSet: Cs(function(t, e) {
          return Ts({}, hl, t, e);
        })
      }),
      rl = Os(
        Za,
        {
          Style: Cs(function(t, e) {
            const r = Ts({}, nl, t, e);
            if (!r) return;
            const n = "true" === t.getAttribute("isDefault");
            return (r.isDefault = n), r;
          }),
          Format: Cs(qs),
          TileMatrixSetLink: Cs(function(t, e) {
            return Ts({}, il, t, e);
          }),
          Dimension: Cs(function(t, e) {
            return Ts({}, ll, t, e);
          }),
          ResourceURL: Cs(function(t, e) {
            const r = t.getAttribute("format"),
              n = t.getAttribute("template"),
              i = t.getAttribute("resourceType"),
              o = {};
            return (
              r && (o.format = r),
              n && (o.template = n),
              i && (o.resourceType = i),
              o
            );
          })
        },
        Os(Ka, {
          Title: Es(qs),
          Abstract: Es(qs),
          BoundingBox: Es(pl),
          WGS84BoundingBox: Es(pl),
          Identifier: Es(qs)
        })
      ),
      nl = Os(
        Za,
        {
          LegendURL: Cs(function(t, e) {
            const r = {};
            return (r.format = t.getAttribute("format")), (r.href = ys(t)), r;
          })
        },
        Os(Ka, { Title: Es(qs), Identifier: Es(qs) })
      ),
      il = Os(Za, {
        TileMatrixSet: Es(qs),
        TileMatrixSetLimits: Es(function(t, e) {
          return Ts([], sl, t, e);
        })
      }),
      sl = Os(Za, {
        TileMatrixLimits: Ns(function(t, e) {
          return Ts({}, al, t, e);
        })
      }),
      al = Os(Za, {
        TileMatrix: Es(qs),
        MinTileRow: Es(Bs),
        MaxTileRow: Es(Bs),
        MinTileCol: Es(Bs),
        MaxTileCol: Es(Bs)
      }),
      ll = Os(
        Za,
        { Default: Es(qs), Value: Cs(qs) },
        Os(Ka, { Identifier: Es(qs) })
      ),
      ul = Os(Ka, { LowerCorner: Ns(fl), UpperCorner: Ns(fl) }),
      hl = Os(
        Za,
        {
          WellKnownScaleSet: Es(qs),
          TileMatrix: Cs(function(t, e) {
            return Ts({}, cl, t, e);
          })
        },
        Os(Ka, { SupportedCRS: Es(qs), Identifier: Es(qs) })
      ),
      cl = Os(
        Za,
        {
          TopLeftCorner: Es(fl),
          ScaleDenominator: Es(Us),
          TileWidth: Es(Bs),
          TileHeight: Es(Bs),
          MatrixWidth: Es(Bs),
          MatrixHeight: Es(Bs)
        },
        Os(Ka, { Identifier: Es(qs) })
      );
    function pl(t, e) {
      const r = Ts([], ul, t, e);
      if (2 == r.length) return da(r);
    }
    function fl(t, e) {
      const r = qs(t).split(/\s+/);
      if (!r || 2 != r.length) return;
      const n = +r[0],
        i = +r[1];
      return isNaN(n) || isNaN(i) ? void 0 : [n, i];
    }
    p.Format.WMTSCapabilities = class extends Fs {
      constructor() {
        super(), (this.owsParser_ = new Qa());
      }
      readFromDocument(t) {
        for (let e = t.firstChild; e; e = e.nextSibling)
          if (e.nodeType == Node.ELEMENT_NODE) return this.readFromNode(e);
        return null;
      }
      readFromNode(t) {
        const e = t.getAttribute("version").trim();
        let r = this.owsParser_.readFromNode(t);
        return r ? ((r.version = e), (r = Ts(r, tl, t, [])), r || null) : null;
      }
    };
    var dl = r(3997),
      yl = r.n(dl);
    p.OGC.OGCWMTSInfo = class extends Ne {
      constructor(t) {
        var e = t || {};
        super(e),
          (e.baseUrl = "igs/rest/ogc"),
          (this.ip = e.ip || "localhost"),
          (this.port = e.port || "6163"),
          (this.baseUrl = e.baseUrl),
          (this.version = e.version || "1.0.0"),
          (this.serverName = e.serverName),
          (this.name = e.name),
          (this.style = e.style || "default"),
          (this.tileMatrixset = e.tileMatrixset),
          (this.tileMatrix = e.tileMatrix),
          (this.tileRow = e.tileRow),
          (this.tileCol = e.tileCol),
          (this.format = e.format || "image/png"),
          (this.infoFormat = e.infoFormat || "text/html"),
          (this.I = e.I),
          (this.J = e.J);
      }
      getWMTSInfo(t, e) {
        var r = this;
        let n = "";
        r.serverName && "" !== r.serverName && (n += r.serverName + "/"),
          (n += "WMTSServer/1.0.0/WMTSCapabilities.xml"),
          (r.partUrl = n);
        var i = r.getFullUrl();
        yl()({ method: "get", url: i })
          .then(t)
          .catch(e);
      }
      getFeatureInfo(t, e) {
        var r = this;
        r.partUrl =
          "WMTSServer?service=WMTS&request=GetFeatureInfo&version=" +
          r.version +
          "&layer=" +
          r.serverName +
          ":" +
          r.name +
          "&style=" +
          r.style +
          "&TileMatrixSet=" +
          r.tileMatrixSet +
          "&TileMatrix=" +
          r.tileMatrix +
          "&TileRow=" +
          r.tileRow +
          "&TileCol=" +
          r.tileCol +
          "&format=" +
          r.format +
          "&InfoFormat=" +
          r.infoFormat +
          "&I=" +
          r.I +
          "&J=" +
          r.J;
        var n = r.getFullUrl();
        yl()({ method: "get", url: n })
          .then(t)
          .catch(e);
      }
    };
    p.OGC.OGCWMSInfo = class extends Ne {
      constructor(t) {
        var e = t || {};
        super(e),
          (e.baseUrl = "igs/rest/ogc"),
          (this.ip = e.ip || "localhost"),
          (this.port = e.port || "6163"),
          (this.baseUrl = e.baseUrl),
          (this.serverType = e.serverType),
          (this.serverName = e.serverName),
          (this.version = e.version || "1.1.1"),
          (this.layersName = e.layersName),
          (this.style = e.style || "default"),
          (this.srs = e.srs),
          (this.bbox = e.bbox),
          (this.width = e.width || "1024"),
          (this.height = e.height || "768"),
          (this.format = e.format || "image/png"),
          (this.infoFormat = e.infoFormat || "text/html"),
          (this.I = e.I),
          (this.J = e.J);
      }
      getWMSInfo(t, e) {
        var r = this;
        r.partUrl =
          r.serverType +
          "/" +
          r.serverName +
          "/WMSServer?service=WMS&REQUEST=GetCapabilities&version=" +
          r.version;
        var n = r.getFullUrl();
        yl()({ method: "get", url: n })
          .then(t)
          .catch(e);
      }
      getFeatureInfo(t, e) {
        var r = this;
        (r.partUrl =
          r.serverType +
          "/" +
          r.serverName +
          "/WMSServer?layers=" +
          r.layersName +
          "&version=" +
          r.version +
          "&service=WMS&request=GetFeatureInfo&styles=" +
          r.style +
          "&format=" +
          r.format +
          "&bbox=" +
          r.bbox +
          "&width=" +
          r.width +
          "&height=" +
          r.height +
          "&query_Layers=" +
          r.layersName +
          "&info_Format=" +
          r.infoFormat),
          "1.1.1" === r.version
            ? (r.partUrl += "&srs=" + r.srs + "&&X=" + r.I + "&Y=" + r.J)
            : "1.3.0" === r.version &&
              (r.partUrl += "&crs=" + r.srs + "&&I=" + r.I + "&J=" + r.J);
        var n = r.getFullUrl();
        yl()({ method: "get", url: n })
          .then(t)
          .catch(e);
      }
    };
    let gl = (window.MapGIS = window.MapGIS || {});
    gl.OGC = gl.OGC || {};
    class ml extends Ne {
      constructor(t) {
        var e = t || {};
        (e.baseUrl = "igs/rest/ogc"), super(e);
      }
      get(t, e, r) {
        new IgsServiceBase(t, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      post(t, e, r, n) {
        new IgsServiceBase(t, {
          eventListeners: { scope: this, processCompleted: r, processFailed: n }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(e),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
    }
    gl.OGC.OGCService = ml;
    var vl = r(8909),
      _l = r(4857),
      xl = r.n(_l);
    gl.OGC.WMS = class extends ml {
      constructor(t) {
        var e = t || {};
        super(e), (this.url = e.url);
      }
      isBaseUrl() {
        let t = !1;
        const e = "WMSServer",
          r = this.url.length,
          n = this.url.indexOf(e) + e.length;
        let i = this.url;
        return (
          n === r
            ? ((i = `${this.url}?request=GetCapabilities&service=WMS`),
              (t = !0))
            : n === r - 1 &&
              ((i = `${this.url}request=GetCapabilities&service=WMS`),
              (t = !0)),
          t
        );
      }
      async makeFullUrl() {
        if (this.isBaseUrl()) {
          let t = await this.getCapabilities(),
            {
              height: e,
              width: r,
              crs: n,
              format: i,
              version: o,
              styles: s
            } = this,
            a = {
              service: "WMS",
              request: "GetMap",
              layers: t.WMT_MS_Capabilities.Capability.Layer.Layer.map(
                t => t.Name
              ).toString(),
              styles: s || "",
              format: i || "image/png",
              transparent: !0,
              version: o || "1.1.1",
              height: e || 256,
              width: r || 256,
              srs: n || "EPSG:4326"
            };
          return `${this.url}?${xl().stringify(a)}`;
        }
      }
      async getCapabilities() {
        const t = "WMSServer",
          e = this.url.length,
          r = this.url.indexOf(t) + t.length;
        let n = this.url;
        r === e
          ? (n = `${this.url}?request=GetCapabilities&service=WMS`)
          : r === e - 1 &&
            (n = `${this.url}request=GetCapabilities&service=WMS`);
        let i = (await yl().get(n)).data,
          o = vl.getTraversalObj(i, {});
        return vl.convertToJson(o, {});
      }
    };
    gl.OGC.WFS = class extends ml {
      constructor(t) {
        var e = t || {};
        super(e),
          (this.url = e.url),
          (this.featureTypes = []),
          (this.layers = []);
      }
      isBaseUrl() {
        let t = !1;
        const e = "WFSServer",
          r = this.url.length,
          n = this.url.indexOf(e) + e.length;
        let i;
        return (
          n === r
            ? ((i = `${this.url}?request=GetCapabilities&service=WFS`),
              (t = !0))
            : n === r - 1 &&
              ((i = `${this.url}request=GetCapabilities&service=WFS`),
              (t = !0)),
          t
        );
      }
      setVersion(t) {
        return (this.version = t), this;
      }
      setCrs(t) {
        return (this.srsname = t), this;
      }
      setName(t) {
        return (this.typename = t), this;
      }
      setOutputFormat(t) {
        this.outputFormat = t;
      }
      async getCapabilities() {
        const t = "WFSServer",
          e = this.url.length,
          r = this.url.indexOf(t) + t.length;
        let n = this.url;
        r === e
          ? (n = `${this.url}?request=GetCapabilities&service=WFS`)
          : r === e - 1 &&
            (n = `${this.url}request=GetCapabilities&service=WFS`);
        let i = (await yl().get(n)).data,
          o = vl.getTraversalObj(i, {}),
          s = vl.convertToJson(o, {}),
          a =
            s["wfs:WFS_Capabilities"]["ows:ServiceIdentification"][
              "ows:ServiceTypeVersion"
            ];
        if ("1.1.0" === a) {
          let t;
          this.featureTypes =
            s["wfs:WFS_Capabilities"].FeatureTypeList.FeatureType;
          let e = "";
          this.featureTypes.forEach((r, n) => {
            0 == n && ((t = r.DefaultSRS), (e = `${r.Name}`));
          }),
            (this.layers = this.featureTypes.map(t => t.Name)),
            this.setName(e)
              .setCrs(t)
              .setVersion(a)
              .setOutputFormat("text/xml; subtype=gml/3.2");
        } else if ("2.0.0" === a) {
          let t =
              s["wfs:WFS_Capabilities"]["wfs:FeatureTypeList"][
                "wfs:FeatureType"
              ],
            e = t["wfs:DefaultCRS"],
            r = t["wfs:Name"];
          this.setName(r)
            .setCrs(e)
            .setVersion(a);
        }
        return s;
      }
      async getFeature() {
        const t = "WFSServer",
          e = this.url.length,
          r = this.url.indexOf(t) + t.length;
        let n = this.url,
          {
            maxFeatures: i = 100,
            version: o = "1.1.0",
            typename: s = "",
            outputFormat: a,
            srsname: l = "EPSG:4326",
            bbox: u
          } = this,
          h = {
            service: "WFS",
            request: "GetFeature",
            version: o,
            typename: s,
            outputFormat: a,
            srsname: l,
            maxFeatures: i
          };
        "1.1.0" === o
          ? (h = u ? Object.assign(h, { bbox: `${u},${l}` }) : h)
          : "2.0.0" === o && (h = Object.assign(h, { Envelope: `${u},${l}` })),
          r === e
            ? (n = `${this.url}?${xl().stringify(h)}`)
            : r === e - 1 && (n = `${this.url}${xl().stringify(h)}`);
        let c,
          p = (await yl().get(n)).data,
          f = vl.getTraversalObj(p, {}),
          d = vl.convertToJson(f, {});
        return "1.1.0" === o && (c = convert), { geojson: void 0, xml: d };
      }
    };
    (Zondy.Enum.EsCatlogType = {
      SpaceTime: "spacetime_db",
      Addredd: "address_db"
    }),
      (Zondy.Enum.EsCatlogName = { SpaceTime: "时空库", Addredd: "地址库" }),
      (Zondy.Enum.EsGeoHashType = { Point: 0, Polygon: 1 });
    class bl extends Ne {
      constructor(t) {
        super(t), this.fixParams(t);
      }
      fixParams(t) {
        (this.params = t),
          delete this.params.url,
          delete this.params.ip,
          delete this.params.port,
          delete this.params.domain,
          delete this.params.baseUrl,
          delete this.params.networkProtocol,
          delete this.params.partUrl;
      }
      getBaseUrl() {
        let t = "";
        const {
          baseUrl: e,
          ip: r,
          port: n,
          domain: i,
          networkProtocol: o
        } = this;
        return (
          e ? (t = e) : i ? (t = i) : o && r && n && (t = `${o}://${r}:${n}`), t
        );
      }
      getFullUrl(t, e) {
        return this.getBaseUrl() + t + "?" + xl().stringify(e);
      }
      get(t, e, r) {
        new me(t, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync();
      }
      post(t, e, r, n) {
        new me(t, {
          eventListeners: { scope: this, processCompleted: r, processFailed: n }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(e),
          headers: { "Content-Type": "text/plain;charset=UTF-8" }
        });
      }
    }
    p.DataStore.ElasticSearch.EsCatlogService = class extends bl {
      constructor(t) {
        let e = t || {};
        super(e),
          (this.serviceUrl = "/datastore/rest/catalog/es/services/"),
          (this.indexName = void 0 !== e.indexName ? e.indexName : null),
          (this.classify = void 0 !== e.classify ? e.classify : null),
          (this.keyWords = void 0 !== e.keyWords ? e.keyWords : null),
          (this.pageSize = void 0 !== e.pageSize ? e.pageSize : 100),
          (this.pageNo = void 0 !== e.pageNo ? e.pageNo : 1);
      }
      query(t, e) {
        let { serviceUrl: r, params: n } = this,
          i = this.getFullUrl(r, n);
        this.get(i, t, e);
      }
    };
    p.DataStore.ElasticSearch.ESGeoCode = class extends bl {
      constructor(t) {
        super(t),
          (this.serviceUrl = "/addressservice/es/location/geocode/"),
          (this.indexName = void 0 !== t.indexName ? t.indexName : null),
          (this.province = void 0 !== t.province ? t.province : null),
          (this.city = void 0 !== t.city ? t.city : null),
          (this.keyWord = void 0 !== t.keyWord ? t.keyWord : ""),
          (this.bbox = void 0 !== t.bbox ? t.bbox : null),
          (this.geometry = void 0 !== t.geometry ? t.geometry : null),
          (this.filter = void 0 !== t.filter ? t.filter : null),
          (this.pageSize = void 0 !== t.pageSize ? t.pageSize : 100),
          (this.pageNo = void 0 !== t.pageNo ? t.pageNo : 1),
          this.fixOption();
      }
      fixOption() {
        this.option = {
          province: this.province,
          city: this.city,
          keyWord: this.keyWord,
          bbox: this.bbox,
          geometry: this.geometry,
          filter: this.filter,
          pageSize: this.pageSize,
          pageNo: this.pageNo
        };
      }
      query(t, e) {
        let { serviceUrl: r, option: n, indexName: i } = this;
        r += i;
        let o = this.getFullUrl(r, n);
        this.get(o, t, e);
      }
    };
    p.DataStore.ElasticSearch.ESGeoDecode = class extends bl {
      constructor(t) {
        super(t),
          (this.serviceUrl = "/addressservice/es/location/geodecode/"),
          (this.indexName = void 0 !== t.indexName ? t.indexName : null),
          (this.province = void 0 !== t.province ? t.province : null),
          (this.city = void 0 !== t.city ? t.city : null),
          (this.bbox = void 0 !== t.bbox ? t.bbox : null),
          (this.geometry = void 0 !== t.geometry ? t.geometry : null),
          (this.filter = void 0 !== t.filter ? t.filter : null),
          (this.lon = void 0 !== t.lon ? t.lon : null),
          (this.lat = void 0 !== t.lat ? t.lat : null),
          (this.dis = void 0 !== t.dis ? t.dis : 0.1),
          (this.pageSize = void 0 !== t.pageSize ? t.pageSize : 100),
          (this.pageNo = void 0 !== t.pageNo ? t.pageNo : 1),
          this.fixOption();
      }
      fixOption() {
        this.option = {
          province: this.province,
          city: this.city,
          bbox: this.bbox,
          geometry: this.geometry,
          filter: this.filter,
          lon: this.lon,
          lat: this.lat,
          dis: this.dis,
          pageSize: this.pageSize,
          pageNo: this.pageNo
        };
      }
      query(t, e) {
        let { serviceUrl: r, option: n, indexName: i } = this;
        r += i;
        let o = this.getFullUrl(r, n);
        this.get(o, t, e);
      }
    };
    p.DataStore.ElasticSearch.ESQueryStats = class extends bl {
      constructor(t) {
        if (
          (super(t),
          (this.serviceUrl = "/datastore/rest/dataset/es/query/"),
          (this.libName = void 0 !== t.libName ? t.libName : null),
          (this.tableName = void 0 !== t.tableName ? t.tableName : null),
          void 0 !== t.geometry || void 0 !== t.extent)
        )
          if (
            ((this.geoFormat = void 0 !== t.geoFormat ? t.geoFormat : "wkt"),
            void 0 !== t.geometry)
          )
            this.geometry = void 0 !== t.geometry ? t.geometry : null;
          else if (void 0 !== t.extent) {
            let e = t.extent;
            this.geometry =
              "polygon((" +
              e.xmin +
              " " +
              e.ymax +
              "," +
              e.xmin +
              " " +
              e.ymin +
              "," +
              e.xmax +
              " " +
              e.ymin +
              "," +
              e.xmax +
              " " +
              e.ymax +
              "," +
              e.xmin +
              " " +
              e.ymax +
              "))";
          }
        if (void 0 !== t.filter) {
          if (((this.filter = {}), void 0 !== t.filter.spatialCondition))
            this.filter.spatialCondition = t.filter.spatialCondition;
          else if (void 0 !== t.filter.extent) {
            let e = t.filter.extent;
            this.filter.spatialCondition =
              "polygon:" +
              e.ymax +
              "," +
              e.xmin +
              ";" +
              e.yamx +
              "," +
              e.xmax +
              ";" +
              e.ymin +
              "," +
              e.xmax +
              ";" +
              e.ymin +
              "," +
              e.xmin;
          }
          void 0 !== t.filter.timeCondition &&
            void 0 !== t.filter.timeCondition.field &&
            void 0 !== t.filter.timeCondition.timeRange &&
            ((this.filter.timeCondition = {}),
            (this.filter.timeCondition.field = t.filter.timeCondition.field),
            (this.filter.timeCondition.timeRange = t.filter.timeCondition.timeRange.join(
              ","
            ))),
            void 0 !== t.filter.otherProperty &&
              "" !== t.filter.otherProperty &&
              (this.filter.otherProperty = t.filter.otherProperty),
            void 0 !== t.filter.fieldTag &&
              (this.filter.fieldTag = t.filter.fieldTag),
            (this.filter = "[" + JSON.stringify(this.filter) + "]");
        }
        if (
          ((this.fields = void 0 !== t.fields ? t.fields : null),
          void 0 !== t.statisticFields && t.statisticFields.length > 0)
        ) {
          let e = [];
          for (let r = 0; r < t.statisticFields.length; r++) {
            let n = {
              field: t.statisticFields[r].field,
              statisticTypes: [t.statisticFields[r].statisticTypes]
            };
            e.push(n);
          }
          this.statisticFields = JSON.stringify(e);
        }
        (this.sref = void 0 !== t.sref ? t.sref : null),
          (this.includeProperites =
            void 0 !== t.includeProperites && t.includeProperites),
          (this.pageSize = void 0 !== t.pageSize ? t.pageSize : 10),
          (this.pageNo = void 0 !== t.pageNo ? t.pageNo : 1),
          this.fixOption();
      }
      fixOption() {
        this.option = {
          geoFormat: this.geoFormat,
          geometry: this.geometry,
          filter: this.filter,
          fields: this.fields,
          statisticFields: this.statisticFields,
          sref: this.sref,
          includeProperites: this.includeProperites,
          pageSize: this.pageSize,
          pageNo: this.pageNo
        };
      }
      query(t, e) {
        let { serviceUrl: r, option: n, libName: i, tableName: o } = this;
        r = r + i + "/" + o;
        let s = this.getFullUrl(r, n);
        this.get(s, t, e);
      }
    };
    p.DataStore.ElasticSearch.EsTableService = class extends bl {
      constructor(t) {
        let e = t || {};
        super(e),
          (this.serviceUrl = "/datastore/rest/dataset/es/schema/"),
          (this.indexName = void 0 !== e.indexName ? e.indexName : null),
          (this.tableNames = void 0 !== e.tableNames ? e.tableNames : null);
      }
      query(t, e) {
        let { serviceUrl: r, params: n, indexName: i } = this;
        r += i;
        let o = this.getFullUrl(r, n);
        this.get(o, t, e);
      }
    };
    p.DataStore.ElasticSearch.EsSpaceTimeQueryByAgg = class extends bl {
      constructor(t) {
        let e = t || {};
        super(e),
          (this.options = t),
          (this.serviceUrl = "/es/stQueryByAgg"),
          (this.indexName = void 0 !== e.indexName ? e.indexName : null),
          (this.typeName = void 0 !== e.typeName ? e.typeName : null),
          (this.aggfield = void 0 !== e.aggfield ? e.aggfield : null),
          (this.spatialCondition =
            void 0 !== e.spatialCondition ? e.spatialCondition : null),
          (this.timefield = void 0 !== e.timefield ? e.timefield : null),
          (this.timeCondition =
            void 0 !== e.timeCondition ? e.timeCondition : null),
          (this.aggGeoFormat =
            void 0 !== e.aggGeoFormat ? e.aggGeoFormat : null),
          (this.percision = void 0 !== e.percision ? e.percision : 8);
      }
      query(t, e) {
        let { serviceUrl: r, options: n } = this,
          i = this.getFullUrl(r, n);
        this.get(i, t, e);
      }
    };
    p.DataStore.PostGIS.PostgisCatlogService = class extends bl {
      constructor(t) {
        super(t),
          (this.serviceUrl = "/datastore/rest/catalog/pg/services/"),
          (this.path = t.path),
          (this.classify = t.classify),
          (this.keyWords = t.keyWords),
          this.fixOption(t);
      }
      fixOption(t) {
        this.option = {
          classify: t.classify,
          keyWords: t.keyWords,
          pageSize: t.pageSize,
          pageNo: t.pageNo
        };
      }
      query(t, e) {
        let { serviceUrl: r, path: n, option: i } = this;
        r += n;
        let o = this.getFullUrl(r, i);
        this.get(o, t, e);
      }
    };
    p.DataStore.PostGIS.PostgisCustomQueryService = class extends bl {
      constructor(t) {
        super(t),
          (this.serviceUrl = "/datastore/rest/dataset/pg/executequery/"),
          (this.path = t.path),
          (this.queryBody = t.queryBody),
          this.fixOption(t);
      }
      fixOption(t) {
        this.option = { queryBody: t.queryBody };
      }
      query(t, e) {
        let { serviceUrl: r, path: n, option: i } = this;
        r += n;
        let o = this.getFullUrl(r, i);
        this.get(o, t, e);
      }
    };
    p.DataStore.PostGIS.PostgisQueryService = class extends bl {
      constructor(t) {
        super(t),
          (this.serviceUrl = "/datastore/rest/dataset/pg/query/"),
          (this.path = t.path),
          (this.geometry = t.geometry),
          (this.geoFormat = t.geoFormat),
          (this.sref = t.sref),
          (this.filter = t.filter),
          (this.fields = t.fields),
          (this.segments = t.segments),
          (this.statisticFields = t.statisticFields),
          (this.includeProperites = t.includeProperites),
          (this.includeGeometry = t.includeGeometry),
          this.fixOption(t);
      }
      fixOption(t) {
        this.option = {
          geometry: t.geometry,
          geoFormat: t.geoFormat,
          sref: t.sref,
          filter: t.filter,
          fields: t.fields,
          segments: t.segments,
          statisticFields: t.statisticFields,
          includeProperites: t.includeProperites,
          propertyNames: t.propertyNames,
          includeGeometry: t.includeGeometry,
          pageSize: t.pageSize,
          pageNo: t.pageNo
        };
      }
      query(t, e) {
        let {
          serviceUrl: r,
          path: n,
          option: i,
          geometry: o,
          geoFormat: s
        } = this;
        r += n;
        let a = this.getFullUrl(r, i);
        this.get(a, t, e);
      }
      queryByWkt(t) {}
      queryByGeojson(t) {}
      queryByCircle(t) {}
      queryByRect(t) {}
    };
    p.DataStore.PostGIS.PostgisTableService = class extends bl {
      constructor(t) {
        super(t),
          (this.serviceUrl = "/datastore/rest/dataset/pg/schema/"),
          (this.path = t.path),
          (this.tableNames = t.tableNames),
          this.fixOption(t);
      }
      fixOption(t) {
        this.option = { tableNames: t.tableNames };
      }
      query(t, e) {
        let { serviceUrl: r, path: n, option: i } = this;
        r += n;
        let o = this.getFullUrl(r, i);
        this.get(o, t, e);
      }
    };
    p.DataStore.PostGIS.PostgisVectorTileService = class extends bl {
      constructor(t) {
        super(t),
          (this.serviceUrl = "/datastore/rest/dataset/pg/vectortile/"),
          (this.path = t.path),
          (this.version = t.version),
          (this.tileMatrix = t.tileMatrix),
          (this.tileRow = t.tileRow),
          (this.tileCol = t.tileCol),
          this.fixOption(t);
      }
      fixOption(t) {
        this.option = {
          version: t.version,
          tileMatrix: t.tileMatrix,
          tileRow: t.tileRow,
          tileCol: t.tileCol
        };
      }
      getWmtsUrl() {
        let { serviceUrl: t, path: e, option: r } = this;
        t += e;
        let n = this.getFullUrl(t, r);
        return (n = decodeURI(n)), n;
      }
      query(t, e) {
        let { serviceUrl: r, path: n, option: i } = this;
        r += n;
        let o = this.getFullUrl(r, i);
        this.get(o, t, e);
      }
    };
    class Sl extends Ne {
      constructor(t) {
        super(t);
        const { headers: e } = t;
        this.fixParams(t), (this.headers = e || void 0);
      }
      setHeaders(t) {
        this.headers = t;
      }
      fixParams(t) {
        (this.params = t),
          delete this.params.url,
          delete this.params.ip,
          delete this.params.port,
          delete this.params.domain,
          delete this.params.baseUrl,
          delete this.params.networkProtocol,
          delete this.params.partUrl;
      }
      getBaseUrl() {
        let t = "";
        const {
          baseUrl: e,
          ip: r,
          port: n,
          domain: i,
          networkProtocol: o
        } = this;
        return (
          e ? (t = e) : i ? (t = i) : o && r && n && (t = `${o}://${r}:${n}`), t
        );
      }
      getFullUrl(t, e) {
        return this.getBaseUrl() + t + "?" + xl().stringify(e);
      }
      get(t, e, r) {
        new me(t, {
          eventListeners: { scope: this, processCompleted: e, processFailed: r }
        }).processAsync({
          method: "GET",
          headers: this.headers || {
            "Content-Type": "text/plain;charset=UTF-8"
          }
        });
      }
      post(t, e, r, n) {
        new me(t, {
          eventListeners: { scope: this, processCompleted: r, processFailed: n }
        }).processAsync({
          method: "POST",
          data: JSON.stringify(e),
          headers: this.headers || {
            "Content-Type": "text/plain;charset=UTF-8"
          }
        });
      }
    }
    p.CloudDisk.UserService = class extends Sl {
      constructor(t) {
        super(t), (this.serviceUrl = "/clouddisk/rest/users/");
      }
      login(t, e, r) {
        let { serviceUrl: n } = this,
          i = `${this.getBaseUrl()}${n}login`;
        this.post(i, t, e, r);
      }
    };
    const Il = "featureclass/statistics";
    p.CloudDisk.GisCore.GeoDatasetService = class extends Sl {
      constructor(t) {
        super(t), (this.serviceUrl = "/giscore/dataconvert/rest/geodataset/");
      }
      schema(t, e, r) {
        let { serviceUrl: n } = this;
        n += "schema";
        let i = this.getFullUrl(n, t);
        this.get(i, e, r);
      }
      featuremetadata(t, e, r) {
        let { serviceUrl: n } = this;
        n += "featureclass/metadata";
        let i = this.getFullUrl(n, t);
        this.get(i, e, r);
      }
      rastermetadata(t, e, r) {
        let { serviceUrl: n } = this;
        n += "raster/metadata";
        let i = this.getFullUrl(n, t);
        this.get(i, e, r);
      }
      statistics(t, e, r) {
        let { serviceUrl: n } = this;
        n += Il;
        let i = this.getFullUrl(n, t);
        this.get(i, e, r);
      }
      query(t, e, r) {
        let { serviceUrl: n } = this;
        n += Il;
        let i = this.getFullUrl(n, t);
        this.get(i, e, r);
      }
    };
    p.CloudDisk.Model.CalculateModelService = class extends Sl {
      constructor(t) {
        super(t), (this.serviceUrl = "/clouddisk/rest/CalculateModel");
      }
      add(t, e, r) {
        let { serviceUrl: n } = this,
          i = `${this.getBaseUrl()}${n}?nodeId=${t.nodeId}`;
        delete t.nodeId, this.post(i, t, e, r);
      }
      catalog(t, e, r) {
        let { serviceUrl: n } = this;
        n += "/catalog";
        let i = this.getFullUrl(n, t);
        this.get(i, e, r);
      }
      catalogtype(t, e, r) {
        const { type: n } = t;
        let { serviceUrl: i } = this,
          o = `${this.getBaseUrl()}${i}/catalog/{type}?`;
        (o = o.replace("{type}", n)),
          delete t.type,
          (o += xl().stringify(t)),
          this.get(o, e, r);
      }
      execute(t, e, r) {
        const { serviceUrl: n } = this,
          { type: i, modelID: o } = t;
        let s = `${this.getBaseUrl()}${n}/execute/{type}/{modelID}?`;
        (s = s.replace("{type}", i)),
          (s = s.replace("{modelID}", o)),
          this.post(s, void 0, e, r);
      }
      node(t, e, r) {
        const { serviceUrl: n } = this;
        let i = `${this.getBaseUrl()}${n}/node`;
        this.post(i, t, e, r);
      }
      nodeid(t, e, r) {
        const { id: n } = t;
        let { serviceUrl: i } = this,
          o = `${baseurl}${i}/node/{id}?`;
        (o = o.replace("{id}", n)), this.get(o, e, r);
      }
      noderoot(t, e, r) {
        t = {};
        let { serviceUrl: n } = this;
        n += "/node/root";
        let i = this.getFullUrl(n, t);
        this.get(i, e, r);
      }
      nodes(t, e, r) {
        t = {};
        let { serviceUrl: n } = this;
        n += "/nodes";
        let i = this.getFullUrl(n, t);
        this.get(i, e, r);
      }
      nodesid(t, e, r) {
        const { nodeId: n } = t;
        let { serviceUrl: i } = this,
          o = `${baseurl}${i}/nodes/{nodeId}?`;
        (o = o.replace("{nodeId}", n)),
          delete t.nodeId,
          (o += xl().stringify(t)),
          this.get(o, e, r);
      }
    };
    var wl = {
      displayFieldName: null,
      geometryType: null,
      hasM: !1,
      hasZ: !1,
      queryGeometry: null,
      spatialReference: null,
      transform: null
    };
    class Nl {
      getPromise(t) {
        let e = this;
        return new Promise(function(r, n) {
          e.get(
            t,
            function(e) {
              (e = JSON.parse(e)),
                t.indexOf("FeatureServer") > -1 &&
                  t.indexOf("query") > -1 &&
                  (e = g(e, wl)),
                r(e);
            },
            function(t) {
              n(JSON.parse(t));
            }
          );
        });
      }
      getPromiseP(t, e) {
        let r = this;
        return new Promise(function(n, i) {
          r.post(
            t,
            e,
            function(t) {
              n(JSON.parse(t));
            },
            function(t) {
              i(JSON.parse(t));
            }
          );
        });
      }
      get(t, e, r, n) {
        n = !1 !== n;
        var i = new XMLHttpRequest();
        i.open("GET", t, n),
          (i.onreadystatechange = function() {
            (4 == i.readyState && 200 == i.status) || 304 == i.status
              ? e.call(this, i.responseText)
              : 4 === i.readyState &&
                200 !== i.status &&
                304 !== i.status &&
                r.call(this, i.responseText);
          }),
          i.send();
      }
      post(t, e, r, n) {
        var i = new XMLHttpRequest();
        i.open("POST", t, !0),
          i.setRequestHeader(
            "Content-Type",
            "application/x-www-form-urlencoded"
          ),
          (i.onreadystatechange = function() {
            4 !== i.readyState || (200 !== i.status && 304 !== i.status)
              ? 4 === i.readyState &&
                200 !== i.status &&
                304 !== i.status &&
                n.call(this, i.responseText)
              : r.call(this, i.responseText);
          }),
          i.send(e);
      }
    }
    p.Service.ArcGisServiceBase = Nl;
    class Cl {
      clone() {
        return q(this);
      }
      static fromJSON(t) {
        let e = new this();
        if (t instanceof Object)
          for (let r in t) e.hasOwnProperty(r) && (e[r] = t[r]);
        return e;
      }
      toJSON() {
        let t = this,
          e = {};
        for (let r in t)
          "function" != typeof t[r] &&
            "CLASS_NAME" !== r &&
            t[r] &&
            (e[r] = t[r]);
        return (e.spatialRel = "esriSpatialRelIntersects"), e;
      }
    }
    p.Service.ArcGisBaseParam = Cl;
    class El extends Cl {
      constructor(t) {
        super(),
          (this.aggregateIds = null),
          (this.cacheHint = null),
          (this.datumTransformation = null),
          (this.distance = null),
          (this.gdbVersion = null),
          (this.geometry = null),
          (this.geometryPrecision = null),
          (this.groupByFieldsForStatistics = null),
          (this.having = null),
          (this.historicMoment = null),
          (this.maxAllowableOffset = null),
          (this.maxRecordCountFactor = 1),
          (this.multipatchOption = null),
          (this.num = null),
          (this.objectIds = null),
          (this.orderByFields = null),
          (this.outFields = null),
          (this.outSpatialReference = null),
          (this.outStatistics = null),
          (this.parameterValues = null),
          (this.pixelSize = null),
          (this.quantizationParameters = null),
          (this.rangeValues = null),
          (this.relationParameter = null),
          (this.returnCentroid = !1),
          (this.returnDistinctValues = !1),
          (this.returnExceededLimitFeatures = !0),
          (this.returnGeometry = !1),
          (this.returnM = null),
          (this.returnQueryGeometry = !0),
          (this.returnZ = null),
          (this.spatialRelationship = "intersects"),
          (this.sqlFormat = null),
          (this.start = null),
          (this.text = null),
          (this.timeExtent = null),
          (this.units = null),
          (this.where = null),
          g(this, t);
      }
    }
    p.Service.ArcGisQuery = El;
    class Ml {
      constructor(t) {
        (this.id = null),
          (this.uid = null),
          (this.indexes = { items: [] }),
          (this.load = null),
          (this.attributionVisible = !0),
          (this.listMode = "show"),
          (this.hasAttributionData = !1),
          (this.createQueryVersion = 1),
          (this.blendMode = "normal"),
          (this.capabilities = null),
          (this.copyright = null),
          (this.loadError = null),
          (this.loadStatus = "not-loaded"),
          (this.loaded = !1),
          (this.loadWarnings = []),
          (this.customParameters = null),
          (this.definitionExpression = null),
          (this.displayField = null),
          (this.dynamicDataSource = null),
          (this.editFieldsInfo = null),
          (this.editingEnabled = !0),
          (this.editingInfo = null),
          (this.effect = null),
          (this.elevationInfo = null),
          (this.featureReduction = null),
          (this.fields = null),
          (this.fieldsIndex = { dateFields: [], fields: [], uid: "" }),
          (this.formTemplate = null),
          (this.gdbVersion = null),
          (this.geometryType = null),
          (this.hasM = null),
          (this.hasZ = null),
          (this.historicMoment = null),
          (this.isTable = !1),
          (this.labelingInfo = null),
          (this.labelsVisible = !0),
          (this.layerId = null),
          (this.legendEnabled = !0),
          (this.maxScale = 0),
          (this.minScale = 0),
          (this.opacity = 1),
          (this.operationalLayerType = "ArcGisFeatureLayer"),
          (this.objectIdField = null),
          (this.outFields = null),
          (this.parent = null),
          (this.path = null),
          (this.parsedUrl = null),
          (this.popupEnabled = !0),
          (this.popupTemplate = null),
          (this.portalItem = null),
          (this.refreshInterval = 0),
          (this.relationships = null),
          (this.renderer = null),
          (this.returnM = null),
          (this.returnZ = null),
          (this.resourceReferences = { paths: [], portalItem: null }),
          (this.screenSizePerspectiveEnabled = !0),
          (this.serviceDefinitionExpression = null),
          (this.source = null),
          (this.scaleRangeId = "0,0"),
          (this.sourceJSON = null),
          (this.spatialReference = {
            imageCoordinateSystem: null,
            isGeographic: !0,
            isWGS84: !0,
            isWebMercator: !1,
            isWrappable: !0,
            latestVcsWkid: null,
            latestWkid: null,
            vcsWkid: null,
            wkid: 4326,
            wkt:
              "GEOGCS['GCS_WGS_1984',DATUM['D_WGS_1984',SPHEROID['WGS_1984',6378137.0,298.257223563]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]]"
          }),
          (this.templates = null),
          (this.sublayerTitleMode = "item-title"),
          (this.timeExtent = null),
          (this.timeInfo = null),
          (this.timeOffset = null),
          (this.title = ""),
          (this.trackIdField = null),
          (this.type = "feature"),
          (this.typeIdField = null),
          (this.types = null),
          (this.url = null),
          (this.useViewTime = !0),
          (this.version = null),
          (this.userIsAdmin = !1),
          (this.visible = !0),
          g(this, t),
          (this._queryService =
            this.url &&
            this.url.indexOf("FeatureServer") + "FeatureServer".length ===
              this.url.length
              ? "queryByMap"
              : "queryByLayer"),
          (this._applyEditsService =
            this.url &&
            this.url.indexOf("FeatureServer") + "FeatureServer".length ===
              this.url.length
              ? "applyEditsByMap"
              : "applyEditsByLayer");
        let e = new Nl();
        (this.queryByMap = function(t) {
          let r = this.url + "/query?f=json";
          return (
            (r = it(t, r, ["geometry", "layerDefs"], null)), e.getPromise(r)
          );
        }),
          (this.queryByLayer = function(t) {
            let r = this.url + "/query?f=json";
            return (r = it(t, r, ["geometry"], null)), e.getPromise(r);
          }),
          (this.applyEditsByLayer = function(t, r) {
            let n = this.url + "/applyEdits",
              i = "";
            if (
              ((r = r || { gdbVersion: [], rollbackOnFailure: !0, f: "json" }),
              t.deleteFeatures)
            ) {
              let e = [];
              for (let r = 0; r < t.deleteFeatures.length; r++)
                e.push(t.deleteFeatures[r].objectId);
              t.deleteFeatures = e.join(",");
            }
            return (
              (i = ot(i, t, [
                "addFeatures",
                "updateFeatures",
                "deleteFeatures"
              ])),
              (i = ot(i, r)),
              (i = i.substring(0, i.length - 1)),
              e.getPromiseP(n, i)
            );
          }),
          (this.applyEditsByMap = function(t, r) {
            r = r || { gdbVersion: [], rollbackOnFailure: !0, f: "json" };
            let n = this.url + "/applyEdits",
              i = "";
            return (
              (i += "edits=" + encodeURIComponent(JSON.stringify(t)) + "&"),
              (i = ot(i, r)),
              (i = i.substring(0, i.length - 1)),
              e.getPromiseP(n, i)
            );
          });
      }
    }
    (Ml.prototype.createQuery = function() {
      return new El();
    }),
      (Ml.prototype.queryFeatures = function(t) {
        return this[this._queryService](t);
      }),
      (Ml.prototype.applyEdits = function(t, e) {
        return this[this._applyEditsService](t, e);
      }),
      (Ml.prototype.queryFeatureCount = function(t) {
        return (t.returnCountOnly = !0), this[this._queryService](t);
      }),
      (Ml.prototype.queryObjectIds = function(t) {
        return (t.returnIdsOnly = !0), this[this._queryService](t);
      }),
      (Ml.prototype.queryExtent = function(t) {
        return (t.returnExtentOnly = !0), this[this._queryService](t);
      }),
      (p.Service.ArcGisFeatureLayer = Ml);
    p.Service.ArcGisFindParameters = class extends Cl {
      constructor(t) {
        super(),
          (this.contains = !0),
          (this.dynamicLayerInfos = null),
          (this.gdbVersion = null),
          (this.geometryPrecision = null),
          (this.layerDefinitions = null),
          (this.layerIds = null),
          (this.maxAllowableOffset = null),
          (this.outSpatialReference = null),
          (this.returnGeometry = !0),
          (this.searchFields = null),
          (this.searchText = null),
          g(this, t);
      }
    };
    class Pl {
      constructor(t) {
        (this.options = { gdbVersion: null, url: null }),
          (t.url = t.url + "/find?f=json"),
          g(this.options, t);
      }
    }
    (Pl.prototype.execute = function(t) {
      let e = this.options.url,
        r = new Nl();
      return (
        (e = it(t, e, null, { layerIds: "layers", outSpatialReference: "sr" })),
        r.getPromise(e)
      );
    }),
      (p.Service.ArcGisFindTask = Pl);
    class Ol extends Cl {
      constructor(t) {
        super(),
          (this.imageCoordinateSystem = null),
          (this.isGeographic = !1),
          (this.isWebMercator = !1),
          (this.isWGS84 = !1),
          (this.isWrappable = !1),
          (this.WebMercator = null),
          (this.WGS84 = null),
          (this.latestVcsWkid = null),
          (this.latestWkid = null),
          (this.vcsWkid = null),
          (this.wkid = void 0),
          (this.wkt = null),
          g(this, t),
          3857 === this.wkid
            ? ((this.isWebMercator = !0), (this.isWrappable = !0))
            : 4326 === this.wkid &&
              ((this.sGeographic = !0),
              (this.isWGS84 = !0),
              (this.isWrappable = !0));
      }
    }
    (Ol.prototype.equals = function(t) {
      return t.wkid === this.wkid || t.wkt === this.wkt;
    }),
      (p.Service.ArcGisSpatialReference = Ol);
    class Ll extends Cl {
      constructor(t) {
        super(),
          (this.cache = {}),
          (this.extent = null),
          (this.hasM = !1),
          (this.hasZ = !1),
          (this.spatialReference = new Ol({
            wkid: 4326,
            wkt:
              'GEOGCS["GCS_WGS_1984",DATUM["D_WGS_1984",SPHEROID["WGS_1984",6378137.0,298.257223563]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]]'
          })),
          (this.type = null),
          g(this, t),
          t &&
            t.hasOwnProperty("spatialReference") &&
            (t.spatialReference = new Ol(t.spatialReference));
      }
    }
    p.Service.ArcGisGeometry = Ll;
    var Tl = r(9551),
      Al = r.n(Tl);
    class Rl extends Ll {
      constructor(t) {
        super(),
          (this.hasM = !1),
          (this.hasZ = !1),
          (this.latitude = 0),
          (this.longitude = 0),
          (this.m = void 0),
          (this.x = 0),
          (this.y = 0),
          (this.z = void 0),
          (this.type = "point");
        let e = this.spatialReference.wkid;
        if ((g(this, t), t))
          if (
            !t.hasOwnProperty("spatialReference") ||
            (t.hasOwnProperty("spatialReference") &&
              t.spatialReference.hasOwnProperty("wkid") &&
              4326 === t.spatialReference.wkid)
          ) {
            let e = this;
            ["longitude", "latitude", "x", "y"].forEach(function(r) {
              t.hasOwnProperty(r) || (e[r] = void 0);
            }),
              t.hasOwnProperty("x") && (this.longitude = this.x),
              t.hasOwnProperty("y") && (this.latitude = this.y),
              !t.hasOwnProperty("x") &&
                t.hasOwnProperty("longitude") &&
                (this.x = this.longitude),
              !t.hasOwnProperty("y") &&
                t.hasOwnProperty("latitude") &&
                (this.y = this.latitude);
          } else
            t.hasOwnProperty("spatialReference") &&
              t.spatialReference.hasOwnProperty("wkid") &&
              3857 === t.spatialReference.wkid &&
              (t.hasOwnProperty("longitude") && t.hasOwnProperty("latitude")
                ? Fl(
                    e,
                    "3857",
                    [this.longitude, this.latitude],
                    "x",
                    "y",
                    this,
                    t
                  )
                : ((t.hasOwnProperty("x") && t.hasOwnProperty("y")) ||
                    (t.hasOwnProperty("x") ||
                      (t.hasOwnProperty("longitude") &&
                        (this.x = this.longitude),
                      t.hasOwnProperty("longitude") ||
                        (this.x = this.longitude = void 0)),
                    t.hasOwnProperty("y") ||
                      (t.hasOwnProperty("latitude") && (this.y = this.latitude),
                      t.hasOwnProperty("latitude") ||
                        (this.y = this.latitude = void 0))),
                  Fl(
                    "3857",
                    e,
                    [this.x, this.y],
                    "longitude",
                    "latitude",
                    this,
                    t
                  )));
        else this.x = this.y = this.latitude = this.longitude = void 0;
        (this.hasM = !!this.m), (this.hasZ = !!this.z);
      }
    }
    function Fl(t, e, r, n, i, o, s) {
      let a = Al()("EPSG:" + t, "EPSG:" + e, [r[0], r[1]]);
      (o[n] = isNaN(a[0]) ? void 0 : a[0]),
        (o[i] = isNaN(a[1]) ? void 0 : a[1]),
        (o.spatialReference = new Ol(s.spatialReference));
    }
    (Rl.prototype.toArray = function() {
      let t = [];
      return t.push(this.x), t.push(this.y), this.z && t.push(this.z), t;
    }),
      (Rl.prototype.copy = function(t) {
        g(this, t);
      }),
      (Rl.prototype.distance = function(t) {
        let e = Math.abs(this.x - t.x),
          r = Math.abs(this.y - t.y),
          n = 0;
        return (
          this.hasZ && t.hasZ && (n = Math.abs(this.z - t.z)),
          Math.sqrt(Math.pow(e, 2) + Math.pow(r, 2) + Math.pow(n, 2))
        );
      }),
      (Rl.prototype.equals = function(t) {
        return (
          this.x === t.x &&
          this.y === t.y &&
          this.z === t.z &&
          this.m === t.m &&
          this.spatialRefere.equals(t.spatialRefere)
        );
      }),
      (Rl.prototype.toGeometryJSON = function() {
        return '{"x":' + this.x + ',"y":' + this.y + "}";
      }),
      (p.Service.ArcGisPoint = Rl);
    class Dl extends Ll {
      constructor(t) {
        super(t),
          (this.center = void 0),
          (this.hasM = !1),
          (this.hasZ = !1),
          (this.height = 0),
          (this.mmax = void 0),
          (this.mmin = void 0),
          (this.type = "extent"),
          (this.width = 0),
          (this.xmax = 0),
          (this.xmin = 0),
          (this.ymax = 0),
          (this.ymin = 0),
          (this.zmax = void 0),
          (this.zmin = void 0),
          (this.extent = this),
          (this.private = [
            "center",
            "hasM",
            "hasZ",
            "height",
            "width",
            "type",
            "extent"
          ]);
        for (let e in this.private)
          if (lt(t[this.private[e]]))
            throw new Error(
              "[accessor] cannot assign to read-only property '" +
                this.private[e] +
                "' of ArcGisExtent"
            );
        g(this, t),
          (this.zmax || this.zmin) && (this.hasZ = !0),
          (this.mmax || this.mmin) && (this.hasM = !0),
          (this._extentPolygon = lr(
            [
              [
                [this.xmin, this.ymin],
                [this.xmin, this.ymax],
                [this.xmax, this.ymax],
                [this.ymax, this.ymin],
                [this.xmin, this.ymin]
              ]
            ],
            { name: "_extentPlygon" }
          )),
          (this.center = jl(this)),
          (this.width = this.xmax - this.xmin),
          (this.height = this.ymax - this.ymin);
      }
    }
    function jl(t) {
      let e = hr([
          ar([t.xmin, t.ymin]),
          ar([t.xmin, t.ymax]),
          ar([t.xmax, t.ymax]),
          ar([t.ymax, t.ymin]),
          ar([t.xmin, t.ymin])
        ]),
        r = Nr(e).geometry.coordinates;
      return new Rl({ longitude: r[0], latitude: r[1] });
    }
    (Dl.prototype.equals = function(t) {
      return (
        this.mmax === t.mmax &&
        this.mmin === t.mmin &&
        this.xmax === t.xmax &&
        this.xmin === t.xmin &&
        this.ymax === t.ymax &&
        this.ymin === t.ymin &&
        this.zmax === t.zmax &&
        this.zmin === t.zmin
      );
    }),
      (Dl.prototype.contains = function(t) {
        if ("point" === t.type) {
          let e = t.toArray();
          return (e = ar([e[0], e[1]])), Un(this._extentPolygon, e);
        }
        return "extent" === t.type && Un(this._extentPolygon, t._extentPolygon);
      }),
      (Dl.prototype.expand = function(t) {
        if (t instanceof Number)
          return (
            (t = Math.abs(t)),
            (this.width = this.width * t),
            (this.height = this.height * t),
            (this.xmin = this.center.x - this.width / 2),
            (this.xmax = this.center.x + this.width / 2),
            (this.ymin = this.center.y - this.height / 2),
            (this.ymax = this.center.y + this.height / 2),
            this
          );
        throw new Error("require is not defined");
      }),
      (Dl.prototype.intersects = function(t) {
        if (!t.type) return !1;
        let e;
        return (
          "polyline" === t.type
            ? (e = cr(t.paths))
            : "point" === t.type
            ? (e = ar(t.toArray()))
            : "multipoint" === t.type
            ? (e = pr(t.points))
            : "extent" === t.type
            ? (e = t._extentPolygon)
            : "polygon" === t.type && (e = lr(t.rings)),
          (r = e),
          (n = this._extentPolygon),
          (i = !0),
          gr(r, function(t) {
            gr(n, function(e) {
              if (!1 === i) return !1;
              i = (function(t, e) {
                switch (t.type) {
                  case "Point":
                    switch (e.type) {
                      case "Point":
                        return (
                          (r = t.coordinates),
                          (n = e.coordinates),
                          !(r[0] === n[0] && r[1] === n[1])
                        );
                      case "LineString":
                        return !Fn(e, t);
                      case "Polygon":
                        return !Sr(t, e);
                    }
                    break;
                  case "LineString":
                    switch (e.type) {
                      case "Point":
                        return !Fn(t, e);
                      case "LineString":
                        return !(Pr(t, e).features.length > 0);
                      case "Polygon":
                        return !Dn(e, t);
                    }
                    break;
                  case "Polygon":
                    switch (e.type) {
                      case "Point":
                        return !Sr(e, t);
                      case "LineString":
                        return !Dn(t, e);
                      case "Polygon":
                        return !(function(t, e) {
                          for (
                            var r = 0, n = t.coordinates[0];
                            r < n.length;
                            r++
                          )
                            if (Sr(n[r], e)) return !0;
                          for (
                            var i = 0, o = e.coordinates[0];
                            i < o.length;
                            i++
                          )
                            if (Sr(o[i], t)) return !0;
                          return Pr(Ur(t), Ur(e)).features.length > 0;
                        })(e, t);
                    }
                }
                var r, n;
                return !1;
              })(t.geometry, e.geometry);
            });
          }),
          !i
        );
        var r, n, i;
      }),
      (Dl.prototype.offset = function(t, e, r) {
        return (
          (this.xmax += t),
          (this.xmin += t),
          (this.ymax += e),
          (this.ymin += e),
          this.hasZ
            ? ((this.zmax += r), (this.zmin += r))
            : ((this.hasZ = !0), (this.zmax = 0), (this.zmin = 0)),
          this
        );
      }),
      (Dl.prototype.centerAt = function(t) {
        if (t instanceof Rl)
          return (
            (this.center = new Rl({ longitude: t.x, latitude: t.y })),
            (this.xmin = this.center.x - this.width / 2),
            (this.xmax = this.center.x + this.width / 2),
            (this.ymin = this.center.y - this.height / 2),
            (this.ymax = this.center.y + this.height / 2),
            this
          );
      }),
      (Dl.prototype.normalize = function() {
        return [this];
      }),
      (Dl.prototype.union = function(t) {
        let e = this.center,
          r = t.center;
        return (
          (r.x - e.x > 0 && r.y - e.y > 0) ||
          (r.x - e.x == 0 && r.y - e.y > 0) ||
          (r.x - e.x == 0 && r.y - e.y == 0) ||
          (r.x - e.x > 0 && r.y - e.y == 0)
            ? ((this.xmax = t.xmax), (this.ymax = t.ymax))
            : (r.x - e.x > 0 && r.y - e.y < 0) ||
              (r.x - e.x == 0 && r.y - e.y < 0)
            ? ((this.xmax = t.xmax), (this.ymin = t.ymin))
            : r.x - e.x < 0 && r.y - e.y < 0
            ? ((this.xmin = t.xmin), (this.ymin = t.ymin))
            : r.x - e.x < 0 &&
              0 === (r.y - e.y || (r.x - e.x < 0 && r.y - e.y < 0)) &&
              ((this.xmin = t.xmin), (this.ymax = t.ymax)),
          (this.center = jl(this)),
          (this.width = this.xmax - this.xmin),
          (this.height = this.ymax - this.ymin),
          this
        );
      }),
      (Dl.prototype.toString = function() {
        return this.xmin + "," + this.ymin + "," + this.xmax + "," + this.ymax;
      }),
      (p.Service.ArcGisExtent = Dl);
    class Ul {
      constructor(t) {
        this.options = { gdbVersion: null, url: null };
        let e = t.url.split("?")[0] + "?f=pjson";
        t.url = t.url + "/identify?f=json";
        let r = new Nl(),
          n = this;
        r.get(
          e,
          function(e) {
            (e = JSON.parse(e)), (n.mapInfo = e), g(n.options, t);
          },
          function(t) {
            console.log(t);
          },
          !1
        );
      }
    }
    (Ul.prototype.execute = function(t) {
      let e = this.options.url,
        r = new Nl(),
        n = {},
        i = t.geometry.type,
        o = i.substr(0, 1).toUpperCase(),
        s = i.substr(1, i.length);
      return (
        (t.geometryType = "esriGeometry" + o + s),
        (t.geometry = encodeURIComponent(t.geometry.toGeometryJSON())),
        n.layers ||
          ((n.layers = t.layerIds
            ? t.layerOption + ":" + String(t.layerIds)
            : "layers=" + t.layerOption),
          delete t.layerOption,
          delete t.layerIds),
        n.imageDisplay ||
          ((n.imageDisplay = t.width + "," + t.height + "," + t.dpi),
          delete t.width,
          delete t.height,
          delete t.dpi),
        (t.hasOwnProperty("mapExtent") && t.mapExtent) ||
          (t.mapExtent = new Dl({
            xmin: this.mapInfo.initialExtent.xmin,
            ymin: this.mapInfo.initialExtent.ymin,
            xmax: this.mapInfo.initialExtent.xmax,
            ymax: this.mapInfo.initialExtent.ymax
          })),
        g(n, t),
        (e = it(n, e, null, { outSpatialReference: "sr" })),
        r.getPromise(e)
      );
    }),
      (p.Service.ArcGisIdentifyTask = Ul);
    p.Service.ArcGisIdentifyParameters = class extends Cl {
      constructor(t) {
        super(),
          (this.dpi = 96),
          (this.dynamicLayerInfos = null),
          (this.gdbVersion = null),
          (this.geometry = null),
          (this.geometryPrecision = null),
          (this.height = 400),
          (this.layerDefinitions = null),
          (this.layerIds = null),
          (this.layerOption = "top"),
          (this.layerTimeOptions = null),
          (this.mapExtent = null),
          (this.maxAllowableOffset = null),
          (this.returnFieldName = !1),
          (this.returnGeometry = !1),
          (this.returnM = !1),
          (this.returnUnformattedValues = !1),
          (this.returnZ = !1),
          (this.spatialReference = null),
          (this.timeExtent = null),
          (this.tolerance = 0),
          (this.width = 400),
          g(this, t),
          this.mapExtent && (this.mapExtent = this.mapExtent.toString());
      }
    };
    class Gl {
      constructor(t) {
        (this.options = { url: null, gdbVersion: null }), g(this.options, t);
      }
    }
    (Gl.prototype.execute = function(t, e) {}),
      (Gl.prototype.executeAttachmentQuery = function() {}),
      (Gl.prototype.executeForCount = function() {}),
      (Gl.prototype.executeForExtent = function() {}),
      (Gl.prototype.executeForIds = function() {}),
      (Gl.prototype.executeRelationshipQuery = function() {}),
      (p.Service.ArcGisQueryTask = Gl);
    class Bl extends Ll {
      constructor(t) {
        super(t),
          (this.centroid = null),
          (this.isSelfIntersecting = !1),
          (this.rings = []),
          (this.type = "polygon"),
          g(this, t),
          this.rings[0] &&
            this.rings[0][0] &&
            this.rings[0][0].length >= 3 &&
            (this.hasZ = !0);
      }
    }
    (Bl.prototype.getPoint = function(t, e) {
      return t >= this.rings.length || e >= this.rings[t].length
        ? null
        : st(Rl, this, this.rings[t][e]);
    }),
      (Bl.prototype.insertPoint = function(t, e, r) {
        return (
          t < this.rings.length &&
            e <= this.rings[t].length &&
            (r instanceof Array
              ? this.rings[t].splice(e, 0, r)
              : r instanceof Rl &&
                this.rings[t].splice(
                  e,
                  0,
                  r.hasZ ? [r.x, r.y, r.z] : [r.x, r.y]
                )),
          this
        );
      }),
      (Bl.prototype.removePoint = function(t, e) {
        if (t >= this.rings.length || e >= this.rings[t].length) return null;
        let r = this.rings[t].splice(e, 1)[0];
        return st(Rl, this, r);
      }),
      (Bl.prototype.setPoint = function(t, e, r) {
        if (t >= this.rings.length || e >= this.rings[t].length) return null;
        if (r instanceof Array) this.rings[t][e] = r;
        else if (r instanceof Rl) {
          let n = [r.x, r.y];
          r.hasZ && n.push(r.z), r.hasM && n.push(r.m), (this.rings[t][e] = n);
        }
        return this;
      }),
      (Bl.prototype.addRing = function(t) {
        return (
          t instanceof Array ? this.rings.push(at(t)) : this.rings.push([]),
          this
        );
      }),
      (Bl.prototype.removeRing = function(t) {
        if (t >= this.rings.length) return null;
        let e,
          r = this.rings.splice(t, 1)[0],
          n = [];
        for (let t = 0; t < r.length; t++) (e = st(Rl, this, r[t])), n.push(e);
        return n;
      }),
      (Bl.prototype.isClockwise = function(t) {
        let e,
          r,
          n = 0,
          i = 1,
          o = !1;
        for (o = !!t[0][2]; i < t.length; )
          (e = r || t[0]),
            (r = t[i]),
            (n += o
              ? (r[0] - e[0]) * (r[1] + e[1]) * (r[2] + e[2])
              : (r[0] - e[0]) * (r[1] + e[1])),
            i++;
        return n > 0;
      }),
      (Bl.prototype.contains = function(t) {
        return (
          t instanceof Rl &&
          Un(lr(this.rings, { name: "_extentPlygon" }), ar(t.toArray()))
        );
      }),
      (Bl.prototype.toGeometryJSON = function() {
        let t = this.rings,
          e = '{"rings":[';
        for (let r = 0; r < t.length; r++) {
          e += "[";
          for (let n = 0; n < t[r].length; n++)
            (e += "["), (e += t[r][n].join(",")), (e += "],");
          (e = e.substr(0, e.length - 1)), (e += "],");
        }
        return (e = e.substr(0, e.length - 1)), (e += "]}"), e;
      }),
      (Bl.prototype.fromExtent = function(t) {
        return new Bl({ rings: t._extentPolygon.geometry.coordinates });
      }),
      (p.Service.ArcGisPolygon = Bl);
    class kl extends Ll {
      constructor(t) {
        super(t), (this.points = []), (this.type = "multipoint"), g(this, t);
      }
    }
    (kl.prototype.addPoint = function(t) {
      t instanceof Array
        ? this.points.push(t)
        : t instanceof Rl && this.points.push([t.x, t.y]);
    }),
      (kl.prototype.getPoint = function(t) {
        return st(Rl, this, this.points[t]);
      }),
      (kl.prototype.removePoint = function(t) {
        let e = this.points.splice(t, 1);
        return st(Rl, this, e);
      }),
      (kl.prototype.setPoint = function(t, e) {
        return t >= this.points.length
          ? null
          : (e instanceof Array
              ? (this.points[t] = [e[0], e[1]])
              : e instanceof Rl && (this.points[t] = [e.x, e.y]),
            this);
      }),
      (kl.prototype.toGeometryJSON = function() {
        return '{"points":[[' + this.points.join("],[") + "]]}";
      }),
      (p.Service.ArcGisMultipoint = kl);
    class ql extends Ll {
      constructor(t) {
        super(t), (this.paths = []), (this.type = "polyline"), g(this, t);
      }
    }
    (ql.prototype.getPoint = function(t, e) {
      return t >= this.paths.length || e >= this.paths[t].length
        ? null
        : st(Rl, this, this.paths[t][e]);
    }),
      (ql.prototype.removePoint = function(t, e) {
        if (t >= this.paths.length || e >= this.paths[t].length) return null;
        let r = this.paths[t].splice(e, 1)[0];
        return st(Rl, this, r);
      }),
      (ql.prototype.setPoint = function(t, e, r) {
        if (t >= this.paths.length || e >= this.paths[t].length) return null;
        if (r instanceof Array) this.paths[t][e] = r;
        else if (r instanceof Rl) {
          let n = [r.x, r.y];
          r.hasZ && n.push(r.z), r.hasM && n.push(r.m), (this.paths[t][e] = n);
        }
        return this;
      }),
      (ql.prototype.addPath = function(t) {
        return (
          t instanceof Array ? this.paths.push(at(t)) : this.paths.push([]),
          this
        );
      }),
      (ql.prototype.removePath = function(t) {
        if (t >= this.path.length) return null;
        let e,
          r = this.paths.splice(t, 1)[0],
          n = [];
        for (let t = 0; t < r.length; t++) (e = st(Rl, this, r[t])), n.push(e);
        return n;
      }),
      (ql.prototype.insertPoint = function(t, e, r) {
        return (
          t < this.paths.length &&
            e <= this.paths[t].length &&
            (r instanceof Array
              ? this.paths[t].splice(e, 0, r)
              : r instanceof Rl &&
                this.paths[t].splice(
                  e,
                  0,
                  r.hasZ ? [r.x, r.y, r.z] : [r.x, r.y]
                )),
          this
        );
      }),
      (ql.prototype.toGeometryJSON = function() {
        let t = this.paths,
          e = '{"paths":[';
        for (let r = 0; r < t.length; r++) {
          e += "[";
          for (let n = 0; n < t[r].length; n++)
            (e += "["), (e += t[r][n].join(",")), (e += "],");
          (e = e.substr(0, e.length - 1)), (e += "],");
        }
        return (e = e.substr(0, e.length - 1)), (e += "]}"), e;
      }),
      (p.Service.ArcGisPolyline = ql);
    class zl extends Cl {
      constructor(t) {
        super(),
          (this.attributes = null),
          (this.geometry = null),
          (this.isAggregate = !1),
          (this.layer = null),
          (this.popupTemplate = null),
          (this.symbol = null),
          (this.visible = !0),
          g(this, t);
      }
    }
    (zl.prototype.getAttribute = function(t) {
      return this.attributes[t];
    }),
      (zl.prototype.getEffectivePopupTemplate = function(t) {}),
      (zl.prototype.getObjectId = function() {
        return this.attributes.objectId;
      }),
      (zl.prototype.setAttribute = function(t, e) {
        return (this.attributes[t] = e);
      }),
      (p.Service.ArcGisGraphic = zl);
    class Vl {
      static calculateBound(t) {
        const e = {
          xmin: t[0][0],
          ymin: t[0][1],
          xmax: t[0][0],
          ymax: t[0][1]
        };
        for (let r = 0; r < t.length; r += 1)
          e.xmin && t[r][0] < e.xmin && (e.xmin = t[r][0]),
            e.ymin && t[r][1] < e.ymin && (e.ymin = t[r][1]),
            e.xmax && t[r][0] > e.xmax && (e.xmax = t[r][0]),
            e.ymax && t[r][1] > e.ymax && (e.ymax = t[r][1]);
        return e;
      }
      static getCenterOfGravityPoint(t) {
        let e = 0,
          r = 0,
          n = 0;
        for (let i = 1; i <= t.length; i += 1) {
          const o = t[i % t.length][1],
            s = t[i % t.length][0],
            a = t[i - 1][1],
            l = t[i - 1][0],
            u = (o * l - s * a) / 2;
          (e += u), (n += (u * (o + a)) / 3), (r += (u * (s + l)) / 3);
        }
        return [r / e, n / e];
      }
      static creatRectangleByViewRectangle(t) {
        return new Jt(t.west, t.south, t.east, t.north);
      }
      static creatRectByMinMax(t, e, r, n) {
        return new Jt(t, e, r, n);
      }
    }
    function Wl(t) {
      const { geometry: e } = t;
      let r = [];
      switch (e.type) {
        case "Point":
          r = e.coordinates;
          break;
        case "LineString":
          const t = Math.floor(e.coordinates.length / 2);
          r = e.coordinates[t];
          break;
        case "Polygon":
          r = Vl.getCenterOfGravityPoint(e.coordinates[0]);
          break;
        case "MultiPolygon":
          const n = e.coordinates,
            i = [];
          for (let t = 0; t < n.length; t += 1) {
            const e = Vl.getCenterOfGravityPoint(n[t][0]);
            e && i.push(e);
          }
          i.push(i[0]),
            (r = i[0]),
            3 === i.length
              ? (r = [(i[0][0] + i[1][0]) / 2, (i[0][1] + i[1][1]) / 2])
              : i.length > 3 && (r = Vl.getCenterOfGravityPoint(i));
      }
      return r;
    }
    function Xl(t) {
      const e = [];
      for (let r = 0; r < t.length; r += 1) {
        const n = Wl(t[r]);
        n.length > 0 && e.push(n);
      }
      e.push(e[0]);
      let r = e[0];
      return (
        3 === e.length
          ? (r = [(e[0][0] + e[1][0]) / 2, (e[0][1] + e[1][1]) / 2])
          : e.length > 3 && (r = Vl.getCenterOfGravityPoint(e)),
        r
      );
    }
    function Yl(t) {
      const e = (t, r) => {
          const n = t[r];
          return "number" == typeof n
            ? [n]
            : Array.isArray(t[0])
            ? t.map(t => e(t, r)).reduce((t, e) => [...t, ...e])
            : [];
        },
        {
          geometry: { coordinates: r }
        } = t,
        n = e(r, 0),
        i = e(r, 1);
      return {
        xmin: Math.min(...n),
        ymin: Math.min(...i),
        xmax: Math.max(...n),
        ymax: Math.max(...i)
      };
    }
    class Hl {
      get type() {
        return "Point";
      }
      coors = [NaN, NaN];
      get coordinates() {
        return this.coors;
      }
      geoCRS;
      get crs() {
        return this.geoCRS;
      }
      constructor(t, e) {
        (this.coors = t), (this.geoCRS = e);
      }
      toFeatureGeometry() {
        const [t, e] = this.coordinates,
          r = new Qt(t, e);
        return new te({ PntGeom: [r] });
      }
      toTangram() {
        const [t, e] = this.coordinates;
        return new Yt(t, e);
      }
    }
    class Jl {
      get type() {
        return "LineString";
      }
      coors = [];
      get coordinates() {
        return this.coors;
      }
      geoCRS;
      get crs() {
        return this.geoCRS;
      }
      constructor(t, e) {
        (this.coors = t), (this.geoCRS = e);
      }
      toFeatureGeometry() {
        const t = this.coordinates.map(([t, e]) => new Yt(t, e)),
          e = new ht(t),
          r = new ut([e]),
          n = new Zt(r);
        return new te({ LinGeom: [n] });
      }
      toTangram() {
        const t = this.coordinates.map(([t, e]) => new Yt(t, e));
        return new se(t);
      }
    }
    class $l {
      get type() {
        return "Polygon";
      }
      coors = [];
      get coordinates() {
        return this.coors;
      }
      geoCRS;
      get crs() {
        return this.geoCRS;
      }
      constructor(t, e) {
        (this.coors = t), (this.geoCRS = e);
      }
      toFeatureGeometry() {
        const t = this.coordinates.map(t => {
            const e = t.map(([t, e]) => new Yt(t, e));
            return new ht(e);
          }),
          e = new ut(t),
          r = new Kt([e]);
        return new te({ RegGeom: [r] });
      }
      toTangram() {
        const t = this.coordinates[0].map(([t, e]) => new Yt(t, e));
        return new ie(t);
      }
    }
    class Ql {
      get type() {
        return "MultiPolygon";
      }
      coors = [];
      get coordinates() {
        return this.coors;
      }
      geoCRS;
      get crs() {
        return this.geoCRS;
      }
      constructor(t, e) {
        (this.coors = t), (this.geoCRS = e);
      }
      toFeatureGeometry() {
        const t = this.coordinates[0].map(t => {
            const e = t.map(([t, e]) => new Yt(t, e));
            return new ht(e);
          }),
          e = new ut(t),
          r = new Kt([e]);
        return new te({ RegGeom: [r] });
      }
      toTangram() {
        const t = this.coordinates[0][0].map(([t, e]) => new Yt(t, e));
        return new ie(t);
      }
    }
    class Zl {
      static featureIGSToFeatureGeoJSON(t) {
        const e = {
          type: "FeatureCollection",
          features: [],
          dataCount: t.TotalCount > -1 ? t.TotalCount : t.SFEleArray.length
        };
        if (!t.SFEleArray) return e;
        const r = t.AttStruct.FldName,
          n = t.AttStruct.FldAlias,
          i = t.AttStruct.FldType;
        for (let o = 0; o < t.SFEleArray.length; o += 1) {
          const s = t.SFEleArray[o],
            { ftype: a, FID: l, bound: u, AttValue: h, fGeom: c } = s,
            p = { fid: l };
          if (h && r)
            for (let t = 0; t < h.length; t += 1) {
              const e = h[t],
                o = n && n[t] && "" !== n[t] ? n[t] : r[t];
              null !== e &&
              i &&
              ["int", "double", "float", "long", "number"].includes(i[t])
                ? (p[o] = Number(e))
                : (p[o] = e);
            }
          let f = [],
            d = "";
          if (1 === a) {
            if (c.PntGeom) {
              const { Dot: t } = c.PntGeom[0];
              t && (f = [t.x, t.y]);
            }
            d = "Point";
          } else if (2 === a) {
            if (c.LinGeom) {
              const { Line: t } = c.LinGeom[0];
              if (t) {
                const { Arcs: e } = t;
                if (e) {
                  const t = e[0].Dots;
                  if (t)
                    for (let e = 0; e < t.length; o += 1) {
                      const r = [t[e].x, t[e].y];
                      f.push(r);
                    }
                }
              }
            }
            d = "LineString";
          } else if (3 === a) {
            if (c.RegGeom) {
              const { Rings: t } = c.RegGeom[0];
              if (t) {
                const { Arcs: e } = t[0];
                if (e)
                  for (let t = 0; t < e.length; t += 1) {
                    const r = [],
                      n = e[t].Dots;
                    if (n) {
                      for (let t = 0; t < n.length; t += 1) {
                        const e = [n[t].x, n[t].y];
                        r.push(e);
                      }
                      f.push(r);
                    }
                  }
              }
            }
            d = "Polygon";
          }
          const y = {
            type: "Feature",
            properties: p,
            geometry: { type: d, coordinates: f },
            bound: { ...u }
          };
          e.features.push(y);
        }
        return e;
      }
      static featureGeoJSONTofeatureIGS(t) {
        const e = [],
          r = [],
          n = [];
        let i = 0;
        const o = [];
        if (t.features.length > 0) {
          const o = t.features[0].properties;
          Object.keys(o).forEach(t => {
            "geoCenter" !== t &&
              (e.push(null),
              r.push(t),
              (i += 1),
              "string" == typeof o[t]
                ? n.push("string")
                : "number" == typeof o[t] && n.push("double"));
          });
        }
        const s = { FldAlias: e, FldName: r, FldNumber: i, FldType: n };
        for (let e = 0; e < t.features.length; e += 1) {
          const r = [],
            n = [],
            i = [];
          let s = 0,
            a = {};
          const { geometry: l } = t.features[e];
          if ("Point" === l.type) {
            (s = 1), (a = Vl.calculateBound([l.coordinates]));
            const t = { x: l.coordinates[0], y: l.coordinates[1] };
            r.push({ Dot: t, GID: 0 });
          } else if ("LineString" === l.type) {
            (s = 2), (a = Vl.calculateBound(l.coordinates));
            const t = [];
            for (let e = 0; e < l.coordinates.length; e += 1)
              t.push({ x: l.coordinates[e][0], y: l.coordinates[e][1] });
            n.push({ GID: 0, Line: { Arcs: [{ ArcID: 0, Dots: t }] } });
          } else if ("Polygon" === l.type) {
            (s = 3), (a = Vl.calculateBound(l.coordinates[0]));
            const t = [];
            for (let e = 0; e < l.coordinates[0].length; e += 1)
              t.push({ x: l.coordinates[0][e][0], y: l.coordinates[0][e][1] });
            i.push({ GID: 0, Rings: [{ Arcs: [{ ArcID: 0, Dots: t }] }] });
          }
          const u = [],
            h = t.features[e].properties;
          Object.keys(h).forEach(t => {
            "geoCenter" !== t && u.push(h[t]);
          });
          const c = {
            AttValue: u,
            FID: e,
            GraphicInfo: {
              AnnInfo: null,
              InfoType: null,
              LinInfo: null,
              PntInfo: null,
              RegInfo: null
            },
            bound: a,
            fGeom: {
              EntityGeom: [],
              LinGeom: n,
              PntGeom: r,
              RegGeom: i,
              StreamGeom: null,
              SurfaceGeom: []
            },
            ftype: s
          };
          o.push(c);
        }
        const a = {
          AttStruct: s,
          SFEleArray: o,
          TotalCount: t.dataCount || t.features.length
        };
        return new ne(a);
      }
      static featureGeoJSONToTangram(t) {
        const { type: e } = t;
        switch (e) {
          case "FeatureCollection":
            return this.toTangram(t);
          case "Feature":
            return this.featureToTangram(t);
          default:
            return;
        }
      }
      static toTangram(t) {
        const { features: e } = t;
        return e.map(t => this.featureToTangram(t));
      }
      static featureToTangram(t) {
        const { geometry: e } = t;
        return this.geometryToTangram(e);
      }
      static geometryToTangram(t) {
        const { type: e, coordinates: r } = t;
        let n;
        switch (e) {
          case "Point":
            n = new Hl(r);
            break;
          case "LineString":
            n = new Jl(r);
            break;
          case "Polygon":
            n = new $l(r);
            break;
          case "MultiPolygon":
            n = new Ql(r);
            break;
          default:
            throw new Error(`未实现类型:${e}`);
        }
        return n.toTangram();
      }
    }
    var Kl = r(9669),
      tu = r.n(Kl);
    class eu {
      static globalDocInfo = {};
      static getTiles({ ip: t, port: e }) {
        const r = `http://${t}:${e}/igs/rest/mrcs/tiles?version=2&f=json`;
        return new Promise((t, e) => {
          tu()
            .get(r)
            .then(
              e => {
                const { data: r } = e;
                t(r || void 0);
              },
              t => {
                e(t);
              }
            );
        }).then(t => t);
      }
      static getDocs({ ip: t, port: e }) {
        const r = `http://${t}:${e}/igs/rest/mrcs/docs?version=2&f=json`;
        return new Promise((t, e) => {
          tu()
            .get(r)
            .then(
              e => {
                const { data: r } = e;
                t(r || void 0);
              },
              t => {
                e(t);
              }
            );
        }).then(t => t);
      }
      static getDocInfo(t) {
        if (!t.serverName) return null;
        if (this.globalDocInfo[t.serverName])
          return this.globalDocInfo[t.serverName];
        let e = t.domain || null;
        e || (e = `${t.protocol || "http"}://${t.ip}:${t.port}`);
        const r = `${e}/igs/rest/mrcs/docs/${t.serverName}?dataService=${
            t.serverName
          }&f=json&tree=true&guid=${t.guid || "__readonly_user__"}`,
          n = this,
          i = new Promise((e, i) => {
            tu()
              .get(r)
              .then(
                r => {
                  const { data: i } = r;
                  if (i) {
                    for (let t = 0; t < i.MapInfos.length; t += 1) {
                      const { CatalogLayer: e } = i.MapInfos[t];
                      e && (i.MapInfos[t].CatalogLayer = n.disposeDocInfo(e));
                    }
                    (n.globalDocInfo[t.serverName] = i), e(i);
                  } else e(void 0);
                },
                t => {
                  i(t);
                }
              );
          });
        return i.then(t => t);
      }
      static get3dDocInfo(t) {
        if (!t.serverName) return null;
        if (this.globalDocInfo[t.serverName])
          return this.globalDocInfo[t.serverName];
        let e = t.domain || null;
        e || (e = `${t.protocol || "http"}://${t.ip}:${t.port}`);
        const r = `${e}/igs/rest/g3d/${t.serverName}/GetDocInfo`,
          n = this;
        return new Promise((e, i) => {
          tu()
            .get(r)
            .then(
              r => {
                const { data: i } = r;
                i ? ((n.globalDocInfo[t.serverName] = i), e(i)) : e(void 0);
              },
              t => {
                i(t);
              }
            );
        }).then(t => t);
      }
      static getMapInfoService({ ip: t, port: e, name: r }) {
        const n = `http://${t}:${e}/igs/rest/mrms/info/${r}?guid=`;
        return new Promise((t, e) => {
          tu()
            .get(n)
            .then(
              e => {
                const { data: r } = e;
                t(r || void 0);
              },
              t => {
                e(t);
              }
            );
        }).then(t => t);
      }
      static disposeDocInfo(t, e) {
        if (!t) return [];
        for (let r = 0; r < t.length; r += 1) {
          const n = e && "" !== e ? `${e}-${r}` : String(r);
          if ("Layer" === t[r].Type) t[r].layerIndex = n;
          else if ("Group" === t[r].Type) {
            const e = t[r].GroupMapLayerInfo;
            e && (t[r].GroupMapLayerInfo = this.disposeDocInfo(e, n));
          }
        }
        return t;
      }
      static getLayerIndexesByNamesOrCodes(t, e = "", r = "", n = [], i = []) {
        if (((n = n || []), (i = i || []), "" !== e || "" !== r))
          for (let o = 0; o < t.length; o += 1) {
            const { URL: s, layerIndex: a, GroupMapLayerInfo: l } = t[o];
            if ("Layer" === t[o].Type)
              if ("" === r) {
                let t = [];
                t = e.includes(",") ? e.split(",") : [e];
                for (let e = 0; e < t.length; e += 1)
                  s &&
                    s.indexOf(t[e]) === s.length - t[e].length &&
                    (i.includes(s) || (i.push(s), a && n.push(a)));
              } else if ("" === e) {
                let t = [];
                t = r.includes(",") ? r.split(",") : [r];
                for (let e = 0; e < t.length; e += 1)
                  s &&
                    s.includes(t[e]) &&
                    (i.includes(s) || (i.push(s), a && n.push(a)));
              } else
                s &&
                  s.indexOf(e) === s.length - e.length &&
                  s.includes(r) &&
                  (i.includes(s) || (i.push(s), a && n.push(a)));
            else
              l &&
                l.length > 0 &&
                (n = this.getLayerIndexesByNamesOrCodes(l, e, r, n, i));
          }
        else
          for (let o = 0; o < t.length; o += 1) {
            const { layerIndex: s, GroupMapLayerInfo: a } = t[o];
            "Layer" === t[o].Type
              ? s && n.push(s)
              : a &&
                a.length > 0 &&
                (n = this.getLayerIndexesByNamesOrCodes(a, e, r, n, i));
          }
        return n;
      }
      static getLayerUrlsByNamesOrCodes(t, e, r, n) {
        if (((n = n || []), "" !== e || "" !== r))
          for (let i = 0; i < t.length; i += 1) {
            const { URL: o, GroupMapLayerInfo: s } = t[i];
            if ("Layer" === t[i].Type)
              if ("" === r) {
                let t = [];
                t = e.includes(",") ? e.split(",") : [e];
                for (let e = 0; e < t.length; e += 1)
                  o &&
                    o.indexOf(t[e]) === o.length - t[e].length &&
                    (n.includes(o) || n.push(o));
              } else if ("" === e) {
                let t = [];
                t = r.includes(",") ? r.split(",") : [r];
                for (let e = 0; e < t.length; e += 1)
                  o && o.includes(t[e]) && (n.includes(o) || n.push(o));
              } else
                o &&
                  o.indexOf(e) === o.length - e.length &&
                  o.includes(r) &&
                  (n.includes(o) || n.push(o));
            else
              s &&
                s.length > 0 &&
                (n = this.getLayerUrlsByNamesOrCodes(s, e, r, n));
          }
        else
          for (let i = 0; i < t.length; i += 1) {
            const { URL: o, GroupMapLayerInfo: s } = t[i];
            "Layer" === t[i].Type
              ? o && n.push(o)
              : s &&
                s.length > 0 &&
                (n = this.getLayerUrlsByNamesOrCodes(s, e, r, n));
          }
        return n;
      }
      static getLayersByIndexes(t, e, r = []) {
        if (!t || "" === t || !e) return [];
        r || (r = []);
        let n = [];
        n = t.includes(",") ? t.split(",") : [t];
        for (let i = 0; i < e.length; i += 1) {
          for (let t = 0; t < n.length; t += 1)
            n[t] === e[i].layerIndex && r.push(e[i]);
          if ("Group" === e[i].Type) {
            const { GroupMapLayerInfo: n } = e[i];
            n && (r = this.getLayersByIndexes(t, n, r));
          }
        }
        return r;
      }
      static getLayerIndexesByNames(t, e, r) {
        if ("" === e) return [];
        let n;
        (r = r || []), (n = e.includes(",") ? e.split(",") : [e]);
        for (let i = 0; i < t.length; i += 1)
          if ("Layer" === t[i].Type)
            for (let e = 0; e < n.length; e += 1) {
              const { URL: o } = t[i];
              o && o.indexOf(n[e]) > 0 && (r.includes(o) || r.push(o));
            }
          else {
            const { GroupMapLayerInfo: n } = t[i];
            n && (r = this.getLayerIndexesByNames(n, e, r));
          }
        return r;
      }
      static getLayersByExtentOrName(t, e, r, n, i) {
        n || (n = []), (i = i || []);
        for (let o = 0; o < t.length; o++)
          if ("Layer" === t[o].Type) {
            const s = t[o].ProjTransRange;
            if (
              s &&
              e &&
              (s.xmax < e[0] || s.xmin > e[2] || s.ymax < e[1] || s.ymin > e[3])
            )
              continue;
            if (r)
              for (let e = 0; e < r.length; e++)
                t[e].URL.indexOf(r[e]) === t[e].URL.length - r[e].length &&
                  i.indexOf(t[e].URL) < 0 &&
                  (n.push(t[e]), i.push(t[e].URL));
            else i.indexOf(t[o].URL) < 0 && (n.push(t[o]), i.push(t[o].URL));
          } else
            t[o].GroupMapLayerInfo &&
              (n = this.getLayersByExtentOrName(
                t[o].GroupMapLayerInfo,
                e,
                r,
                n,
                i
              ));
        return n;
      }
      static getLayerInfo(t) {
        let { domain: e } = t;
        e || (e = `${t.protocol}://${t.ip}:${t.port}`);
        const { layerType: r } = t;
        let n;
        if ("layer" === r) {
          const i = new je({ domain: e }),
            { gdbp: o } = t;
          n = new Promise(t => {
            i.getLayerInfo(o, e => {
              if (e && e.Range) {
                const n = {
                  layerType: r,
                  proName: e.SrName,
                  extent: e.Range,
                  FieldAtt: e.FieldAtt
                };
                t(n);
              } else t(null);
            });
          });
        } else if ("vector" === r) {
          const { serverName: i } = t,
            o = new Fe({ domain: e, docName: i });
          n = new Promise(t => {
            o.getMapInfo(e => {
              if (e && e.range) {
                const n = e.range.split(","),
                  i = {
                    xmin: Number(n[0]),
                    ymin: Number(n[1]),
                    xmax: Number(n[2]),
                    ymax: Number(n[3])
                  },
                  o = { layerType: r, proName: e.projtransName, extent: i };
                t(o);
              } else t(null);
            });
          });
        } else if ("tile" === r) {
          const { serverName: i } = t,
            o = new De({ domain: e, tileName: i });
          n = new Promise(t => {
            o.getTileInfo(e => {
              if (e && e.TileInfo2) {
                const { fullExtent: n } = e.TileInfo2;
                if (n) {
                  const i = {
                      xmin: n.xmin,
                      ymin: n.ymin,
                      xmax: n.xmax,
                      ymax: n.ymax
                    },
                    o = e.TileInfo2.tileInfo.spatialReference.tileSRefInfo.Name,
                    s = e.TileInfo2.tileInfo.cols || e.TileInfo2.tileInfo.rows,
                    { origin: a } = e.TileInfo2.tileInfo;
                  t({
                    layerType: r,
                    proName: o,
                    extent: i,
                    tileSize: s,
                    origin: a
                  });
                }
              } else t(null);
            });
          });
        }
        return n ? n.then(t => t) : null;
      }
    }
    class ru {
      static query(t, e, r) {
        return t
          ? t.isDataStoreQuery
            ? this.dataStoreQuery(t)
            : this.igsQuery(t, e, r)
          : null;
      }
      static async igsQuery(t, e, r) {
        if (!r && t.docName && void 0 !== t.layerIdxs) {
          const e = (
              await eu.getDocInfo({
                serverName: t.docName,
                ip: t.ip,
                port: t.port
              })
            )?.MapInfos[Number(t.mapIndex) || 0].CatalogLayer,
            r = t.layerName || "",
            n = t.code || "";
          e &&
            "" === t.layerIdxs &&
            (t.layerIdxs = eu
              .getLayerIndexesByNamesOrCodes(e, r, n, [], [])
              .join(","));
        }
        return e
          ? ((t.combine = e), this.igsCombineQueryFeature(t))
          : r
          ? this.igsQuery3DFeature(t)
          : this.igsQueryFeature(t);
      }
      static igsQueryFeature(t) {
        let e;
        t.gdbp ? ((e = new Qe(t.gdbp)), (e.proj = t.srsIds)) : (e = new We()),
          (e.resultFormat = t.f || "geojson"),
          (e.geometry = t.geometry || null),
          (e.where = t.where || null),
          (e.pageIndex = t.page || 0),
          (e.recordNumber = t.pageCount || 10),
          (e.rule = new ze({
            CompareRectOnly: void 0 !== t.CompareRectOnly && t.CompareRectOnly,
            EnableDisplayCondition:
              void 0 !== t.EnableDisplayCondition && t.EnableDisplayCondition,
            Intersect: void 0 === t.Intersect || t.Intersect,
            MustInside: void 0 !== t.MustInside && t.MustInside
          })),
          (e.struct = new qe({
            IncludeAttribute:
              void 0 === t.IncludeAttribute || t.IncludeAttribute,
            IncludeGeometry: void 0 === t.IncludeGeometry || t.IncludeGeometry,
            IncludeWebGraphic:
              void 0 !== t.IncludeWebGraphic && t.IncludeWebGraphic
          })),
          (e.objectIds = t.objectIds || null),
          (e.orderField = t.orderField || null),
          (e.rtnLabel = void 0 === t.rtnLabel || t.rtnLabel),
          (e.isAsc = void 0 !== t.isAsc && t.isAsc),
          (e.cursorType = t.cursorType || "forward"),
          (e.guid = t.guid || "__readonly_user__"),
          (e.fields = t.fields || ""),
          (e.coordPrecision =
            t.coordPrecision || 0 === t.coordPrecision ? t.coordPrecision : 2);
        let r,
          n = t.domain || null;
        if ((n || (n = `${t.protocol || "http"}://${t.ip}:${t.port}`), t.gdbp))
          r = new Ke(e, { domain: n });
        else {
          if (!t.docName || !t.layerIdxs) return null;
          const { docName: i } = t,
            o = t.mapIndex || 0,
            s = t.layerIdxs || "0" === t.layerIdxs ? t.layerIdxs : "*",
            a = t.dataService || t.docName;
          (e.partUrl = `docs/${i}/${o}/${s}/query?dataService=${a}`),
            (r = new Ze(e, i, s, { domain: n }));
        }
        return new Promise((t, e) => {
          r.query(
            e => {
              t(e || void 0);
            },
            t => {
              console.log(t), e(t);
            }
          );
        }).then(t => t);
      }
      static igsCombineQueryFeature(t) {
        const e = {};
        (e.f = t.f || "geojson"),
          "geojson" === e.f &&
            ((e.compress = void 0 !== t.compress && t.compress),
            (e.level = t.level || 0 === t.level ? t.level : 8)),
          t.geometry &&
            ((e.geometryType = t.geometry.getGeometryType()),
            (e.geometry = t.geometry.toString())),
          (e.where = t.where || void 0),
          (e.page = t.page || 0),
          (e.pageCount = t.pageCount || 10);
        const r = new ze({
          CompareRectOnly: void 0 !== t.CompareRectOnly && t.CompareRectOnly,
          EnableDisplayCondition:
            void 0 !== t.EnableDisplayCondition && t.EnableDisplayCondition,
          Intersect: void 0 === t.Intersect || t.Intersect,
          MustInside: void 0 !== t.MustInside && t.MustInside
        });
        e.rule = r.toJSON();
        const n = new qe({
          IncludeAttribute: void 0 === t.IncludeAttribute || t.IncludeAttribute,
          IncludeGeometry: void 0 === t.IncludeGeometry || t.IncludeGeometry,
          IncludeWebGraphic:
            void 0 !== t.IncludeWebGraphic && t.IncludeWebGraphic
        });
        (e.structs = n.toJSON()),
          (e.objectIds = t.objectIds || void 0),
          (e.orderField = t.orderField || void 0),
          (e.rtnLabel = void 0 === t.rtnLabel || t.rtnLabel),
          (e.isAsc = void 0 !== t.isAsc && t.isAsc),
          (e.cursorType = t.cursorType || "forward"),
          (e.guid = t.guid || "__readonly_user__"),
          (e.fields = t.fields || ""),
          (e.coordPrecision =
            t.coordPrecision || 0 === t.coordPrecision ? t.coordPrecision : 2),
          (e.combine = void 0 === t.combine || t.combine);
        let i,
          o = t.domain || null;
        if ((o || (o = `${t.protocol || "http"}://${t.ip}:${t.port}`), t.gdbp))
          (e.gdbp = t.gdbp),
            (e.srsIds = t.srsIds),
            (i = `${o}/onemap/layer/query`);
        else {
          if (!t.docName) return null;
          const { docName: e } = t,
            r = t.mapIndex || 0,
            n = t.layerIdxs || "0" === t.layerIdxs ? t.layerIdxs : "*";
          i = `${o}/onemap/docs/${e}/${r}/${n}/query`;
        }
        return new Promise((t, r) => {
          tu()
            .get(i, { params: e })
            .then(
              e => {
                const { data: n } = e;
                n ? t(n) : r("undefined");
              },
              t => {
                r(t);
              }
            );
        }).then(t => t);
      }
      static igsQuery3DFeature(t) {
        let e, r;
        if (
          ((e = t.gdbp ? new Qe(t.gdbp) : new We()),
          (e.resultFormat = t.f || "geojson"),
          t.geometry &&
            ((e.geometryType =
              t.geometryType && "" !== t.geometryType
                ? t.geometryType
                : t.geometry.getGeometryType()),
            (e.geometry = t.geometry.toString())),
          (e.where = t.where || null),
          (e.page = t.page || 0),
          (e.pageCount = t.pageCount || 10),
          (e.rule = new ze({
            CompareRectOnly: void 0 !== t.CompareRectOnly && t.CompareRectOnly,
            EnableDisplayCondition:
              void 0 !== t.EnableDisplayCondition && t.EnableDisplayCondition,
            Intersect: void 0 === t.Intersect || t.Intersect,
            MustInside: void 0 !== t.MustInside && t.MustInside
          })),
          (e.struct = new qe({
            IncludeAttribute:
              void 0 === t.IncludeAttribute || t.IncludeAttribute,
            IncludeGeometry: void 0 === t.IncludeGeometry || t.IncludeGeometry,
            IncludeWebGraphic:
              void 0 !== t.IncludeWebGraphic && t.IncludeWebGraphic
          })),
          (e.objectIds = t.objectIds || null),
          (e.orderField = t.orderField || null),
          (e.rtnLabel = void 0 === t.rtnLabel || t.rtnLabel),
          (e.isAsc = void 0 !== t.isAsc && t.isAsc),
          (e.cursorType = t.cursorType || "forward"),
          (e.guid = t.guid || "__readonly_user__"),
          t.gdbp)
        )
          r = new Le({ ip: t.ip, port: t.port, gdbp: t.gdbp, ...e });
        else {
          if (!t.docName || !t.layerIdxs) return null;
          const { docName: n } = t,
            i = t.layerIdxs || "0" === t.layerIdxs ? t.layerIdxs : "*";
          r = new Le({
            ip: t.ip,
            port: t.port,
            docName: n,
            layerindex: i,
            ...e
          });
        }
        return new Promise(t => {
          r.GetFeature(e => {
            t(e || void 0);
          });
        }).then(t => t);
      }
      static async dataStoreQuery(t) {
        if (t.isEsGeoCode) return this.dataStoreEsGeoCode(t);
        if (!t.gdbp && t.docName) {
          const e = (
            await eu.getDocInfo({
              serverName: t.docName,
              ip: t.ip,
              port: t.port
            })
          )?.MapInfos[Number(t.mapIndex) || 0].CatalogLayer;
          if (!e) return null;
          if (t.layerIdxs) {
            const r = eu.getLayersByIndexes(t.layerIdxs, e, []),
              n = [];
            for (let t = 0; t < r.length; t += 1) {
              const { URL: e } = r[t];
              e && n.push(e);
            }
            t.gdbp = n.join(",");
          } else {
            const r = t.layerName || "",
              n = eu.getLayerIndexesByNames(e, r, []);
            n.length > 0 && (t.gdbp = n.join(","));
          }
        }
        let e = [];
        return t.gdbp
          ? ((e = t.gdbp.includes(",") ? t.gdbp.split(",") : [t.gdbp]),
            Promise.all(e.map(e => this.dataStorePgQueryFeature(e, t))))
          : null;
      }
      static dataStorePgQueryFeature(t, e) {
        const r = {},
          n = t.split("/");
        if (
          ((r.libName = n[n.length - 5]),
          (r.tableName = n[n.length - 1]),
          (r.schemas = n[n.length - 5]),
          (r.pageNo = void 0 !== e.page ? e.page : 1),
          (r.pageSize = e.pageCount || 10),
          (r.includeProperites = !0),
          e.geometry)
        ) {
          r.geoFormat = "wkt";
          const t = e.geometry.getGeometryType(),
            n = [];
          let i;
          if ("rect" === t)
            n.push(`${e.geometry.xmin} ${e.geometry.ymin}`),
              n.push(`${e.geometry.xmin} ${e.geometry.ymax}`),
              n.push(`${e.geometry.xmax} ${e.geometry.ymax}`),
              n.push(`${e.geometry.xmax} ${e.geometry.ymin}`),
              n.push(`${e.geometry.xmin} ${e.geometry.ymin}`);
          else if ("polygon" === t || "polygon" === t) {
            const { pointArr: o } = e.geometry;
            for (let t = 0; t < o.length; t += 1) n.push(`${o[t].x} ${o[t].y}`);
            (i = n.join(",")),
              "polygon" === t
                ? (r.geometry = `POLYGON(( ${i}))`)
                : "line" === t && (r.geometry = `LINESTRING(${i})`);
          } else
            "point" === t &&
              (r.geometry = `POINT(${e.geometry.x} ${e.geometry.y})`);
        }
        e.where && (r.filter = e.where),
          e.fields && (r.fields = e.fields),
          (r.sref = e.sref);
        let i = e.domain || null;
        const o = e.ip,
          s = e.port;
        return (
          i || (i = `${e.protocol || "http"}://${o}:${s}`),
          (r.domain = i),
          new Promise((t, e) => {
            c.DataStore.PGQueryStats(
              o,
              s,
              r,
              r => {
                !r || !r.features || r.features.length <= 0
                  ? e("undefined")
                  : t(r);
              },
              t => {
                e(t);
              }
            );
          }).then(t => t)
        );
      }
      static dataStoreEsGeoCode(t) {
        const e = {};
        (e.libName = t.libName),
          (e.pageNo = void 0 !== t.page ? t.page : 1),
          (e.pageSize = t.pageCount || 10),
          (e.province = t.province),
          (e.city = t.city),
          (e.bbox = t.bbox),
          (e.hotGroup = t.hotGroup);
        let r = t.domain || null;
        const n = t.ip,
          i = t.port;
        r || (r = `${t.protocol || "http"}://${n}:${i}`), (e.domain = r);
        const { decode: o } = t;
        let s;
        return (
          o
            ? ((e.lon = t.lon),
              (e.lat = t.lat),
              (e.dis = t.dis),
              (s = c.DataStore.ESGeoDecode))
            : ((e.keyWord = t.where || ""), (s = c.DataStore.ESGeoCode)),
          new Promise((t, r) => {
            s(
              e,
              e => {
                e && e.t ? t(e.t) : r("undefined");
              },
              t => {
                r(t);
              }
            );
          }).then(t => t)
        );
      }
    }
    class nu {
      update(t) {
        if (!t || !t.gdbp || !t.featureSet) return;
        const e = {};
        (e.gdbp = t.gdbp),
          (e.featureSet = t.featureSet),
          (e.ip = t.ip),
          (e.port = t.port),
          (e.guid = t.guid || "__readonly_user__"),
          (e.updateAttribute = null == t.updateAttribute || t.updateAttribute),
          (e.updateGeometry = null == t.updateGeometry || t.updateGeometry),
          (e.updateGeomInfo = null == t.updateGeomInfo || t.updateGeomInfo);
        const r = new ke(e.gdbp, {
          ip: e.ip,
          port: e.port,
          guid: e.guid,
          updateAttribute: e.updateAttribute,
          updateGeometry: e.updateGeometry
        });
        return new Promise((t, n) => {
          r.update(e.featureSet, e => {
            t(e || void 0);
          });
        }).then(t => t);
      }
    }
    var iu = r(129),
      ou = r.n(iu);
    class su {
      static query(t) {
        if (!t || !t.serverUrl) return;
        const e = this.getQueryParams(t);
        e.returnCountOnly = !1;
        const r = t.page || 0,
          n = t.pageCount || 0;
        (e.resultOffset = r * n || 0),
          (e.resultRecordCount = t.pageCount || 20),
          (e.objectIdsTotal = t.totalCount);
        const i = `${e.serverUrl}/${e.layerIndex}/query`,
          o = new Promise((r, n) => {
            const o = tu().create();
            o.interceptors.request.use(t => {
              let e = t.url;
              if ("get" === t.method && t.params) {
                e += "?";
                const r = Object.keys(t.params);
                for (const n of r)
                  e += `${n}=${encodeURIComponent(t.params[n])}&`;
                (e = e?.substring(0, e.length - 1)), (t.params = {});
              }
              return (t.url = e), t;
            }),
              o
                .get(i, { paramsSerializer: t => ou().stringify(t), params: e })
                .then(e => {
                  const { data: i } = e;
                  if (i)
                    if (i.error) n(i.error.message);
                    else {
                      const e = {
                          type: "FeatureCollection",
                          features: [],
                          dataCount: t.totalCount
                        },
                        { features: n, geometryType: o } = i;
                      for (let t = 0; t < n.length; t += 1) {
                        let r = [],
                          i = "",
                          s = {};
                        if ("esriGeometryPoint" === o)
                          (r = [n[t].geometry.x, n[t].geometry.y]),
                            (i = "Point"),
                            (s = {
                              xmin: n[t].geometry.x,
                              ymin: n[t].geometry.y,
                              xmax: n[t].geometry.x,
                              ymax: n[t].geometry.y
                            });
                        else if ("esriGeometryPolyline" === o) {
                          const e = n[t].geometry.paths[0];
                          let o = e[0][0],
                            a = e[0][0],
                            l = e[0][1],
                            u = e[0][1];
                          for (let t = 0; t < e.length; t += 1) {
                            (o = o < e[t][0] ? o : e[t][0]),
                              (a = a > e[t][0] ? a : e[t][0]),
                              (l = l < e[t][1] ? l : e[t][1]),
                              (u = u > e[t][1] ? u : e[t][1]);
                            const n = [...e[t]];
                            r.push(n);
                          }
                          (i = "LineString"),
                            (s = { xmin: o, ymin: l, xmax: a, ymax: u });
                        } else if ("esriGeometryPolygon" === o) {
                          const e = n[t].geometry.rings[0],
                            o = [];
                          let a = e[0][0],
                            l = e[0][0],
                            u = e[0][1],
                            h = e[0][1];
                          for (let t = 0; t < e.length; t += 1) {
                            (a = a < e[t][0] ? a : e[t][0]),
                              (l = l > e[t][0] ? l : e[t][0]),
                              (u = u < e[t][1] ? u : e[t][1]),
                              (h = h > e[t][1] ? h : e[t][1]);
                            const r = [e[t].x, e[t].y];
                            o.push(r);
                          }
                          r.push(o),
                            (i = "Polygon"),
                            (s = { xmin: a, ymin: u, xmax: l, ymax: h });
                        }
                        const a = { type: i, coordinates: r },
                          l = {
                            type: "Feature",
                            properties: { ...n[t].attributes },
                            geometry: a,
                            bound: s
                          };
                        e.features.push(l);
                      }
                      r(e);
                    }
                  else r(void 0);
                });
          });
        return o.then(t => t);
      }
      static getQueryParams(t) {
        const e = {};
        (e.where = t.where || "1=1"),
          (e.geometryPrecision = t.geometryPrecision || 3),
          (e.outFields = t.outFields || "*"),
          (e.f = t.f || "pjson"),
          (e.text = t.text || ""),
          (e.objectIds = t.objectIds || ""),
          (e.time = t.time || ""),
          (e.spatialRel = t.spatialRel || ""),
          (e.relationParam = t.relationParam || ""),
          (e.maxAllowableOffset = t.maxAllowableOffset || ""),
          (e.orderByFields = t.orderByFields || ""),
          (e.groupByFieldsForStatistics = t.groupByFieldsForStatistics || ""),
          (e.gdbVersion = t.gdbVersion || ""),
          (e.outStatistics = t.outStatistics || ""),
          (e.returnGeometry = !1 !== t.returnGeometry || t.returnGeometry),
          (e.returnIdsOnly = t.returnIdsOnly || !1),
          (e.returnCountOnly = t.returnCountOnly || !1),
          (e.returnZ = t.returnZ || !1),
          (e.returnM = t.returnM || !1),
          (e.returnDistinctValues = t.returnDistinctValues || !1),
          (e.returnExtentOnly = t.returnExtentsOnly || !1),
          (e.layerIndex = t.layerIndex || 0),
          (e.returnTrueCurves = t.returnTrueCurves || !1),
          (e.serverUrl = t.serverUrl),
          (e.totalCount = t.totalCount),
          t.queryByDistance
            ? (e.queryByDistance = t.queryByDistance)
            : t.geometry && t.geometry.nearDis
            ? (e.queryByDistance = t.geometry.nearDis)
            : (e.queryByDistance = "");
        let r = "";
        const { inSR: n } = t;
        t.inSR && (r = t.inSR.split(":")[1]), (e.inSR = n || "");
        const { outSR: i } = t;
        if (((e.outSR = i || ""), t.geometry)) {
          const n = t.geometry.getGeometryType(),
            { geometry: i } = t,
            o = [];
          let s = 0;
          if ("rect" === n)
            (e.geometry = JSON.stringify({
              xmin: i.xmin,
              ymin: i.ymin,
              xmax: i.xmax,
              ymax: i.ymax,
              spatialReference: { EPSG: 4326 }
            })),
              (e.geometryType = "esriGeometryEnvelope"),
              (e.distance = t.geometry.nearDis || "");
          else if ("point" === n)
            (e.geometry = JSON.stringify({
              x: i.x,
              y: i.y,
              spatialReference: { EPSG: r }
            })),
              (e.geometryType = "esriGeometryPoint"),
              (e.distance = t.geometry.nearDis || "");
          else if ("polygon" === n) {
            for (
              e.geometryType = "esriGeometryPolygon",
                e.distance,
                t.geometry.nearDis,
                s = 0;
              s < i.pointArr.length;
              s++
            )
              o.push([i.pointArr[s].x, i.pointArr[s].y]);
            e.geometry = JSON.stringify({
              rings: [o],
              spatialReference: { EPSG: r }
            });
          } else if ("line" === n) {
            for (
              e.geometryType = "esriGeometryPolyline",
                e.distance,
                t.geometry.nearDis,
                s = 0;
              s < i.pointArr.length;
              s++
            )
              o.push([i.pointArr[s].x, i.pointArr[s].y]);
            e.geometry = JSON.stringify({
              paths: [o],
              spatialReference: { EPSG: r }
            });
          }
        }
        return e;
      }
      static getTotal(t) {
        if (!t.serverUrl) return;
        const e = this.getQueryParams(t);
        if (((e.returnDistinctValues = !1), t.totalCount)) return t.totalCount;
        (e.returnIdsOnly = !1),
          (e.returnCountOnly = !0),
          (e.returnGeometry = !1),
          (e.layerIndex = t.layerIndex || "0");
        const r = `${e.serverUrl}/${e.layerIndex}/query`,
          n = new Promise((t, n) => {
            const i = tu().create();
            i.interceptors.request.use(t => {
              let e = t.url;
              if ("get" === t.method && t.params) {
                e += "?";
                const r = Object.keys(t.params);
                for (const n of r)
                  e += `${n}=${encodeURIComponent(t.params[n])}&`;
                (e = e?.substring(0, e.length - 1)), (t.params = {});
              }
              return (t.url = e), t;
            }),
              i.get(r, { params: e }).then(e => {
                const { data: r } = e;
                t(r || void 0);
              });
          });
        return n.then(t => t);
      }
      static getLayerFileds(t) {
        if (!t || !t.serverUrl) return;
        const e = { where: "1=1" };
        (e.outFields = t.outFields || "*"),
          (e.f = "pjson"),
          (e.layerIndex = t.layerIndex || 0),
          (e.serverUrl = t.serverUrl),
          (e.returnGeometry = !0),
          (e.returnIdsOnly = !1),
          (e.returnCountOnly = !1),
          (e.resultOffset = t.page * t.pageCount || 0),
          (e.resultRecordCount = t.pageCount || 1);
        const r = `${e.serverUrl}/${e.layerIndex}/query`,
          n = new Promise((t, n) => {
            tu()
              .create()
              .interceptors.request.use(t => {
                let e = t.url;
                if ("get" === t.method && t.params) {
                  e += "?";
                  const r = Object.keys(t.params);
                  for (const n of r)
                    e += `${n}=${encodeURIComponent(t.params[n])}&`;
                  (e = e?.substring(0, e.length - 1)), (t.params = {});
                }
                return (t.url = e), t;
              }),
              tu()
                .get(r, { params: e })
                .then(r => {
                  const { data: n } = r;
                  if (n) {
                    const { fields: r } = n;
                    if (r) {
                      const i = [],
                        o = [];
                      for (let t = 0; t < r.length; t++) {
                        let e = "";
                        "esriFieldTypeOID" === r[t].type
                          ? (e = "int")
                          : "esriFieldTypeDouble" === r[t].type
                          ? (e = "double")
                          : "esriFieldTypeString" === r[t].type
                          ? (e = "string")
                          : "esriFieldTypeInteger" === r[t].type
                          ? (e = "int")
                          : "esriFieldTypeFloat" === r[t].type
                          ? (e = "float")
                          : "esriFieldTypeDate" === r[t].type
                          ? (e = "date")
                          : "esriFieldTypeSmallInteger" === r[t].type &&
                            (e = "smallInteger"),
                          i.push({ name: r[t].name, type: e });
                      }
                      if (e.outFields && "*" !== e.outFields) {
                        const { features: t } = n;
                        for (let r = 0; r < t.length; r += 1) {
                          const n = t[r].attributes[e.outFields];
                          o.push(n);
                        }
                      }
                      t({ fields: i, value: o });
                    } else t(void 0);
                  } else t(void 0);
                });
          });
        return n.then(t => t);
      }
    }
  })();
  var i = exports;
  for (var o in n) i[o] = n[o];
  n.__esModule && Object.defineProperty(i, "__esModule", { value: !0 });
})();
